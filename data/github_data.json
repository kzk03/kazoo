{
  "prs": [
    {
      "number": 12172,
      "title": "[pylint] Fixes all ``use-maxplit-args``, ``consider-using-enumerate``",
      "body": "Using `` maxsplit=1`` from ``use-maxplit-args`` will make splits slightly faster and is the important one that will improve performances.\r\n\r\nThe other fix are about readability / style.",
      "state": "MERGED",
      "createdAt": "2024-03-31T22:07:00Z",
      "updatedAt": "2024-07-06T16:57:02Z",
      "closedAt": "2024-05-27T19:18:03Z",
      "mergedAt": "2024-05-27T19:18:03Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Zac-HD"
      },
      "baseRefName": "main",
      "headRefName": "more-pylint-fixes",
      "author": {
        "login": "Pierre-Sassoulas"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[pylint] Disable 'possibly-used-before-assignment' following 3.2.0 release",
              "committedDate": "2024-05-21T07:31:35Z",
              "author": {
                "name": "Pierre Sassoulas",
                "email": "pierre.sassoulas@gmail.com",
                "user": {
                  "login": "Pierre-Sassoulas"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-04-01T10:21:41Z",
            "body": ""
          },
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-04-01T10:35:42Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-04-23T09:15:35Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-04-23T09:19:21Z",
            "body": ""
          },
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-04-23T18:36:37Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-04-23T20:13:57Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-04-23T20:15:25Z",
            "body": ""
          },
          {
            "author": {
              "login": "Zac-HD"
            },
            "state": "APPROVED",
            "submittedAt": "2024-05-27T19:17:45Z",
            "body": "Looks good to me, thanks Pierre!\r\n\r\nIf there are any follow-ups, we'll be happy to take them in another PR \ud83d\ude42 "
          },
          {
            "author": {
              "login": "ferdnyc"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-07-06T12:09:23Z",
            "body": ""
          },
          {
            "author": {
              "login": "ferdnyc"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-07-06T12:49:07Z",
            "body": ""
          },
          {
            "author": {
              "login": "Zac-HD"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-07-06T16:57:02Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12171,
      "title": "[automated] Update plugin list",
      "body": "[automated] Update plugin list",
      "state": "MERGED",
      "createdAt": "2024-03-31T00:20:47Z",
      "updatedAt": "2024-04-02T20:15:17Z",
      "closedAt": "2024-04-02T20:15:17Z",
      "mergedAt": "2024-04-02T20:15:17Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "update-plugin-list/patch-12e061e2e",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[automated] Update plugin list",
              "committedDate": "2024-03-31T00:20:45Z",
              "author": {
                "name": "pytest bot",
                "email": "pytestbot@users.noreply.github.com",
                "user": {
                  "login": "pytestbot"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-04-02T19:59:56Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12170,
      "title": "Small performance/readability improvments when iterating dictionnary with ``keys()``",
      "body": "Based on pylint's message ``consider-iterating-dictionary``. I added a pylint\r\nconfiguration (only manual, it's not launched automatically in pre-commit) as ruff is far\r\nfrom implementing everything from pylint. The commit that does that could be removed\r\nbut I'm using it to target interesting issues.\r\n\r\nSurprisingly using a dict or set comprehension instead of a new temp var is\r\nactually consistently slower here, which was not intuitive for me. (This is the \r\nreason I've been sitting on this change for so long).\r\n\r\n```python\r\nfrom timeit import timeit\r\n\r\nfamilies = {1: {\"testcase\": [1, 2, 3, 5, 8]}}\r\nattrs = {1: \"a\", 2: \"b\", 3: \"c\", 4: \"d\", 5: \"e\", 6: \"f\", 7: \"g\", 8: \"h\"}\r\n\r\nclass Old:\r\n    def old(self):\r\n        self.attrs = attrs\r\n        temp_attrs = {}\r\n        for key in self.attrs.keys():\r\n            if key in families[1][\"testcase\"]:\r\n                temp_attrs[key] = self.attrs[key]\r\n        self.attrs = temp_attrs\r\n\r\nclass OldBis:\r\n    def old(self):\r\n        self.attrs = attrs\r\n        temp_attrs = {}\r\n        for key in self.attrs:\r\n            if key in families[1][\"testcase\"]:\r\n                temp_attrs[key] = self.attrs[key]\r\n        self.attrs = temp_attrs\r\n\r\nclass New:\r\n    def new(self):\r\n        self.attrs = attrs\r\n        self.attrs = { # Even worse with k: v for k in self.attrs.items()\r\n            k: self.attrs[k] for k in self.attrs if k in families[1][\"testcase\"]\r\n        }\r\n\r\nif __name__ == \"__main__\":\r\n    n = 1000000\r\n    print(f\"Old: {timeit(Old().old, number=n)}\")\r\n    print(f\"Just removing the keys(): {timeit(OldBis().old, number=n)}\")\r\n    print(f\"List comp, no temp var: {timeit(New().new, number=n)}\")\r\n```\r\nResult:\r\nOld: 0.9493889989680611\r\nJust removing the keys(): 0.9042672360083088\r\nList comp, no temp var: 0.9916125109884888\r\n\r\nIt's also true for the other example with similar benchmarks.",
      "state": "MERGED",
      "createdAt": "2024-03-30T22:45:01Z",
      "updatedAt": "2024-03-31T13:15:07Z",
      "closedAt": "2024-03-31T13:15:03Z",
      "mergedAt": "2024-03-31T13:15:03Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "main",
      "headRefName": "small-performance-improvments",
      "author": {
        "login": "Pierre-Sassoulas"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Small performance/readability improvments when iterating dictionnary with ``keys()``\n\nBased on pylint's message ``consider-iterating-dictionary`` suggestion.\nSurprisingly using a dict or set comprehension instead of a new temp var is\nactually consistently slower here, which was not intuitive for me.\n\n```python\nfrom timeit import timeit\n\nfamilies = {1: {\"testcase\": [1, 2, 3, 5, 8]}}\nattrs = {1: \"a\", 2: \"b\", 3: \"c\", 4: \"d\", 5: \"e\", 6: \"f\", 7: \"g\", 8: \"h\"}\n\nclass Old:\n    def old(self):\n        self.attrs = attrs\n        temp_attrs = {}\n        for key in self.attrs.keys():\n            if key in families[1][\"testcase\"]:\n                temp_attrs[key] = self.attrs[key]\n        self.attrs = temp_attrs\n\nclass OldBis:\n    def old(self):\n        self.attrs = attrs\n        temp_attrs = {}\n        for key in self.attrs:\n            if key in families[1][\"testcase\"]:\n                temp_attrs[key] = self.attrs[key]\n        self.attrs = temp_attrs\n\nclass New:\n    def new(self):\n        self.attrs = attrs\n        self.attrs = { # Even worse with k: v for k in self.attrs.items()\n            k: self.attrs[k] for k in self.attrs if k in families[1][\"testcase\"]\n        }\n\nif __name__ == \"__main__\":\n    n = 1000000\n    print(f\"Old: {timeit(Old().old, number=n)}\")\n    print(f\"Just removing the keys(): {timeit(OldBis().old, number=n)}\")\n    print(f\"List comp, no temp var: {timeit(New().new, number=n)}\")\n```\n\nResult:\nOld: 0.9493889989680611\nJust removing the keys(): 0.9042672360083088\nList comp, no temp var: 0.9916125109884888\n\nIt's also true for the other example with similar benchmark, but the exact\ncode probably does not need to be in the commit message.",
              "committedDate": "2024-03-31T12:43:07Z",
              "author": {
                "name": "Pierre Sassoulas",
                "email": "pierre.sassoulas@gmail.com",
                "user": {
                  "login": "Pierre-Sassoulas"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-31T12:11:30Z",
            "body": "LGTM, thanks!"
          },
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-03-31T12:44:58Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12169,
      "title": "Refine how we detect namespace packages",
      "body": "Previously we used a hand crafted approach to detect namespace packages, however we should rely on ``importlib`` to detect them for us.\r\n\r\nFix #12112\r\n",
      "state": "MERGED",
      "createdAt": "2024-03-30T14:17:58Z",
      "updatedAt": "2024-04-12T13:55:00Z",
      "closedAt": "2024-04-09T16:21:51Z",
      "mergedAt": "2024-04-09T16:21:51Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "12112-ns-packages",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 5
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Change compute_module_name to return Optional\n\nThis is better to enforce callers to check for it instead of ending up with '' and possibly breaking later.",
              "committedDate": "2024-04-07T12:21:57Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-03-30T19:23:58Z",
            "body": "The new approach makes sense to me (as far as I understand the details). I left a couple of questions."
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-03-30T20:08:58Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-03-30T20:09:58Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-03-30T20:10:06Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-03-30T20:10:53Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-03-31T12:36:23Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-03-31T12:44:30Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-03-31T12:48:21Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-04-06T15:23:56Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-04-06T20:16:43Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-04-06T21:43:23Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-04-06T21:43:59Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-04-06T21:51:56Z",
            "body": "Looks good to me!"
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2024-04-08T10:08:12Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12168,
      "title": "Initialize cache directory in isolation",
      "body": "Creating and initializing the cache directory is interruptible; this\r\navoids a pathological case where interrupting a cache write can cause\r\nthe cache directory to never be properly initialized with its supporting\r\nfiles.\r\n\r\nUnify `Cache.mkdir` with `Cache.set` while I'm here so the former also\r\nproperly initializes the cache directory.\r\n\r\nCloses #12167.\r\n\r\n<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "MERGED",
      "createdAt": "2024-03-29T15:54:08Z",
      "updatedAt": "2024-04-08T14:03:48Z",
      "closedAt": "2024-04-06T20:18:19Z",
      "mergedAt": "2024-04-06T20:18:19Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "fix-gitignore-missing",
      "author": {
        "login": "tamird"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 10
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Initialize cache directory in isolation\n\nCreating and initializing the cache directory is interruptible; this\navoids a pathological case where interrupting a cache write can cause\nthe cache directory to never be properly initialized with its supporting\nfiles.\n\nUnify `Cache.mkdir` with `Cache.set` while I'm here so the former also\nproperly initializes the cache directory.\n\nCloses #12167.",
              "committedDate": "2024-04-03T15:26:43Z",
              "author": {
                "name": "Tamir Duberstein",
                "email": "tamird@gmail.com",
                "user": {
                  "login": "tamird"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "CHANGES_REQUESTED",
            "submittedAt": "2024-03-30T18:24:58Z",
            "body": "Thanks a lot @tamird, appreciate the PR!\r\n\r\nLeft a few comments, please take a look.\r\n\r\nAlso, please include a changelog entry in `changelog/12167.trivial.rst`:\r\n\r\n```\r\ncache: ensure supporting files (``CACHEDIR.TAG``, ``.gitignore``, etc) are always created in the cache directory, even in the event of test session being interrupted.\r\n```\r\n"
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-03-30T18:42:02Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-03-30T18:43:59Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-03-30T18:44:25Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-03-30T18:56:44Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-03-30T21:55:57Z",
            "body": ""
          },
          {
            "author": {
              "login": "tamird"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-03-31T07:42:50Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-03-31T12:27:25Z",
            "body": ""
          },
          {
            "author": {
              "login": "tamird"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-04-01T09:56:11Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-04-01T10:17:10Z",
            "body": ""
          },
          {
            "author": {
              "login": "tamird"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-04-01T11:03:40Z",
            "body": ""
          },
          {
            "author": {
              "login": "tamird"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-04-01T11:09:55Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-04-01T11:45:35Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-04-01T11:47:49Z",
            "body": ""
          },
          {
            "author": {
              "login": "tamird"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-04-01T12:07:08Z",
            "body": ""
          },
          {
            "author": {
              "login": "tamird"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-04-01T18:00:18Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-04-01T19:13:42Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-04-01T19:16:45Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-04-01T19:26:11Z",
            "body": ""
          },
          {
            "author": {
              "login": "tamird"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-04-02T05:37:11Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12164,
      "title": "move fixture finalizing to pytest_fixture_teardown hook",
      "body": "solution #12163\r\n",
      "state": "OPEN",
      "createdAt": "2024-03-26T04:20:23Z",
      "updatedAt": "2025-05-13T13:56:14Z",
      "closedAt": null,
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "exceptions_in_finalizers",
      "author": {
        "login": "ShurikMen"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "status: needs information"
          },
          {
            "name": "bot:chronographer:provided"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 10
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[pre-commit.ci] auto fixes from pre-commit.com hooks\n\nfor more information, see https://pre-commit.ci",
              "committedDate": "2024-10-03T09:41:30Z",
              "author": {
                "name": "pre-commit-ci[bot]",
                "email": "66853113+pre-commit-ci[bot]@users.noreply.github.com",
                "user": {
                  "login": "pre-commit-ci[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2024-04-22T12:51:25Z",
            "body": "this looks good to me, how does this interact with pytest-asyncio?"
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "CHANGES_REQUESTED",
            "submittedAt": "2024-05-06T19:57:06Z",
            "body": "Marking \"Request changes\" as per my comment on the issue: https://github.com/pytest-dev/pytest/issues/12163#issuecomment-2096797077\r\n\r\n@ShurikMen  @rplevka please let me know in the issue if you have any specific use case for `pytest_fixture_teardown` instead of extending `pytest_fixture_post_finalizer`"
          }
        ]
      }
    },
    {
      "number": 12162,
      "title": "[pre-commit.ci] pre-commit autoupdate",
      "body": "<!--pre-commit.ci start-->\nupdates:\n- [github.com/astral-sh/ruff-pre-commit: v0.3.3 \u2192 v0.3.4](https://github.com/astral-sh/ruff-pre-commit/compare/v0.3.3...v0.3.4)\n<!--pre-commit.ci end-->",
      "state": "MERGED",
      "createdAt": "2024-03-25T21:55:14Z",
      "updatedAt": "2024-03-25T22:37:37Z",
      "closedAt": "2024-03-25T22:37:36Z",
      "mergedAt": "2024-03-25T22:37:36Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "main",
      "headRefName": "pre-commit-ci-update-config",
      "author": {
        "login": "pre-commit-ci"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[pre-commit.ci] pre-commit autoupdate\n\nupdates:\n- [github.com/astral-sh/ruff-pre-commit: v0.3.3 \u2192 v0.3.4](https://github.com/astral-sh/ruff-pre-commit/compare/v0.3.3...v0.3.4)",
              "committedDate": "2024-03-25T21:55:12Z",
              "author": {
                "name": "pre-commit-ci[bot]",
                "email": "66853113+pre-commit-ci[bot]@users.noreply.github.com",
                "user": {
                  "login": "pre-commit-ci[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-25T22:37:32Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12161,
      "title": "build(deps): Bump pytest-asyncio from 0.23.5 to 0.23.6 in /testing/plugins_integration",
      "body": "Bumps [pytest-asyncio](https://github.com/pytest-dev/pytest-asyncio) from 0.23.5 to 0.23.6.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pytest-dev/pytest-asyncio/releases\">pytest-asyncio's releases</a>.</em></p>\n<blockquote>\n<h2>pytest-asyncio 0.23.6</h2>\n<h1>0.23.6 (2024-03-19)</h1>\n<ul>\n<li>Fix compatibility with pytest 8.2 <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/pull/800\">#800</a></li>\n</ul>\n<h2>Known issues</h2>\n<p>As of v0.23, pytest-asyncio attaches an asyncio event loop to each item of the test suite (i.e. session, packages, modules, classes, functions) and allows tests to be run in those loops when marked accordingly. Pytest-asyncio currently assumes that async fixture scope is correlated with the new event loop scope. This prevents fixtures from being evaluated independently from the event loop scope and breaks some existing test suites (see <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/issues/706\">#706</a>). For example, a test suite may require all fixtures and tests to run in the same event loop, but have async fixtures that are set up and torn down for each module. If you're affected by this issue, please continue using the v0.21 release, until it is resolved.</p>\n<h2>pytest-asyncio 0.23.5.post1</h2>\n<h1>0.23.5 (2024-02-09)</h1>\n<ul>\n<li>Declare compatibility with pytest 8 <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/issues/737\">#737</a></li>\n<li>Fix typing errors with recent versions of mypy <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/issues/769\">#769</a></li>\n<li>Prevent DeprecationWarning about internal use of <code>asyncio.get_event_loop()</code> from affecting test cases <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/issues/757\">#757</a></li>\n</ul>\n<h2>Known issues</h2>\n<p>As of v0.23, pytest-asyncio attaches an asyncio event loop to each item of the test suite (i.e. session, packages, modules, classes, functions) and allows tests to be run in those loops when marked accordingly. Pytest-asyncio currently assumes that async fixture scope is correlated with the new event loop scope. This prevents fixtures from being evaluated independently from the event loop scope and breaks some existing test suites (see <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/issues/706\">#706</a>). For example, a test suite may require all fixtures and tests to run in the same event loop, but have async fixtures that are set up and torn down for each module. If you're affected by this issue, please continue using the v0.21 release, until it is resolved.</p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/c34da04b82153ce052109bad31ccdbc0be7938e1\"><code>c34da04</code></a> [docs] Mentioned pytest 8.2 compatibility fix in changelog.</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/143f745d279afc070cf5cf6144fbf34d960fae72\"><code>143f745</code></a> Fix compatibility with pytest 8.2 FixtureDef.unittest removal</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/13d4b79f7ff0d9d0ea70880b3276f85dea7f1f15\"><code>13d4b79</code></a> Remove unused function <code>_removesuffix</code></li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/cdd2c4906835b6f627d681fbee5d487554884e5f\"><code>cdd2c49</code></a> Use <code>FixtureRequest</code> instead of <code>SubRequest</code></li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/c3429fa4d72239be9b428342f0f1407e0840b9ec\"><code>c3429fa</code></a> Build(deps): Bump packaging from 23.2 to 24.0 in /dependencies/docs</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/5f2338dfc9f9b5ac2c27d3bef490fa3e2cd7c156\"><code>5f2338d</code></a> Build(deps): Bump pypa/gh-action-pypi-publish from 1.8.12 to 1.8.14</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/726c6e0f3c185f10d8a842bcd1d781de32a3b2f5\"><code>726c6e0</code></a> Build(deps): Bump coverage from 7.4.3 to 7.4.4 in /dependencies/default</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/8bd8288709717165b352c7f2f207c8e4ef624a01\"><code>8bd8288</code></a> Build(deps): Bump pytest from 8.0.2 to 8.1.1 in /dependencies/default</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/ef3b3477070d6a270e1bb2c1d438c64dba42724c\"><code>ef3b347</code></a> Build(deps): Bump packaging from 23.2 to 24.0 in /dependencies/default</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/b22d84e1f0d53920352be4c66d1b6c7f7a9ce005\"><code>b22d84e</code></a> [docs] Fixes the example showing how to run all tests in a session-scoped loop.</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pytest-dev/pytest-asyncio/compare/v0.23.5...v0.23.6\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pytest-asyncio&package-manager=pip&previous-version=0.23.5&new-version=0.23.6)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2024-03-25T03:46:08Z",
      "updatedAt": "2024-03-25T06:30:09Z",
      "closedAt": "2024-03-25T06:30:08Z",
      "mergedAt": "2024-03-25T06:30:08Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/pip/testing/plugins_integration/pytest-asyncio-0.23.6",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "python"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump pytest-asyncio in /testing/plugins_integration\n\nBumps [pytest-asyncio](https://github.com/pytest-dev/pytest-asyncio) from 0.23.5 to 0.23.6.\n- [Release notes](https://github.com/pytest-dev/pytest-asyncio/releases)\n- [Commits](https://github.com/pytest-dev/pytest-asyncio/compare/v0.23.5...v0.23.6)\n\n---\nupdated-dependencies:\n- dependency-name: pytest-asyncio\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2024-03-25T03:46:08Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-25T06:30:02Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12160,
      "title": "build(deps): Bump pytest-mock from 3.12.0 to 3.14.0 in /testing/plugins_integration",
      "body": "Bumps [pytest-mock](https://github.com/pytest-dev/pytest-mock) from 3.12.0 to 3.14.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pytest-dev/pytest-mock/releases\">pytest-mock's releases</a>.</em></p>\n<blockquote>\n<h2>v3.14.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/pytest-dev/pytest-mock/pull/415\">#415</a>: <code>MockType</code> and <code>AsyncMockType</code> can be imported from <code>pytest_mock</code> for type annotation purposes.</li>\n<li><a href=\"https://redirect.github.com/pytest-dev/pytest-mock/issues/420\">#420</a>: Fixed a regression which would cause <code>mocker.patch.object</code> to not being properly cleared between tests.</li>\n</ul>\n<h2>v3.13.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/pytest-dev/pytest-mock/pull/417\">#417</a>: <code>spy</code> now has <code>spy_return_list</code>, which is a list containing all the values returned by the spied function.</li>\n<li><code>pytest-mock</code> now requires <code>pytest&gt;=6.2.5</code>.</li>\n<li><a href=\"https://redirect.github.com/pytest-dev/pytest-mock/pull/410\">#410</a>: pytest-mock's <code>setup.py</code> file is removed.\nIf you relied on this file, e.g. to install pytest using <code>setup.py install</code>,\nplease see <a href=\"https://blog.ganssle.io/articles/2021/10/setup-py-deprecated.html#summary\">Why you shouldn't invoke setup.py directly</a> for alternatives.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/pytest-dev/pytest-mock/blob/main/CHANGELOG.rst\">pytest-mock's changelog</a>.</em></p>\n<blockquote>\n<h2>3.14.0 (2024-03-21)</h2>\n<ul>\n<li>\n<p><code>[#415](https://github.com/pytest-dev/pytest-mock/issues/415) &lt;https://github.com/pytest-dev/pytest-mock/pull/415&gt;</code>_: <code>MockType</code> and <code>AsyncMockType</code> can be imported from <code>pytest_mock</code> for type annotation purposes.</p>\n</li>\n<li>\n<p><code>[#420](https://github.com/pytest-dev/pytest-mock/issues/420) &lt;https://github.com/pytest-dev/pytest-mock/issues/420&gt;</code>_: Fixed a regression which would cause <code>mocker.patch.object</code> to not being properly cleared between tests.</p>\n</li>\n</ul>\n<h2>3.13.0 (2024-03-21)</h2>\n<ul>\n<li><code>[#417](https://github.com/pytest-dev/pytest-mock/issues/417) &lt;https://github.com/pytest-dev/pytest-mock/pull/417&gt;</code>_: <code>spy</code> now has <code>spy_return_list</code>, which is a list containing all the values returned by the spied function.</li>\n<li><code>pytest-mock</code> now requires <code>pytest&gt;=6.2.5</code>.</li>\n<li><code>[#410](https://github.com/pytest-dev/pytest-mock/issues/410) &lt;https://github.com/pytest-dev/pytest-mock/pull/410&gt;</code><em>: pytest-mock's <code>setup.py</code> file is removed.\nIf you relied on this file, e.g. to install pytest using <code>setup.py install</code>,\nplease see <code>Why you shouldn't invoke setup.py directly &lt;https://blog.ganssle.io/articles/2021/10/setup-py-deprecated.html#summary&gt;</code></em> for alternatives.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pytest-dev/pytest-mock/commit/8733134b6194395e9cd3c745adcc9a9c09b0279e\"><code>8733134</code></a> Update CHANGELOG for 3.14.0</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-mock/commit/5257e3c0df0a18bca4028daa9e6d2d91870ff576\"><code>5257e3c</code></a> Refactor MockCache to have a narrow interface</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-mock/commit/4faf92ae233afadac3831ab570531e540dc87830\"><code>4faf92a</code></a> Fix regression with mocker.patch not being undone correctly</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-mock/commit/6bd8712a14a1a11d348354318fdbad3fd9bbdb78\"><code>6bd8712</code></a> Drop pre-Python 3.8 support code</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-mock/commit/366966bff1e3ca2e1455d704dd59991da5593877\"><code>366966b</code></a> Export <code>MockType</code>/<code>AsyncMockType</code> for type annotations (<a href=\"https://redirect.github.com/pytest-dev/pytest-mock/issues/415\">#415</a>)</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-mock/commit/852116b0af33db27fe595847c091631dcf059a1c\"><code>852116b</code></a> Merge pull request <a href=\"https://redirect.github.com/pytest-dev/pytest-mock/issues/418\">#418</a> from pytest-dev/release-3.13.0</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-mock/commit/ef9461b8b5bdcdd416841b986cf4e1d336c84266\"><code>ef9461b</code></a> Add instructions on how to start deploy from command-line</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-mock/commit/5b9d2858f507e04cc97a3c206f55d7d5505ae71c\"><code>5b9d285</code></a> Release 3.13.0</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-mock/commit/6d5d6dc2274cea96b6919a4a2a6dc7a3394ef11d\"><code>6d5d6dc</code></a> Implement <code>spy_return_list</code> (<a href=\"https://redirect.github.com/pytest-dev/pytest-mock/issues/417\">#417</a>)</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-mock/commit/dc28a0ec7b66372fbc6e0cf1bbe443ce7ca465cd\"><code>dc28a0e</code></a> [pre-commit.ci] pre-commit autoupdate (<a href=\"https://redirect.github.com/pytest-dev/pytest-mock/issues/416\">#416</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pytest-dev/pytest-mock/compare/v3.12.0...v3.14.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pytest-mock&package-manager=pip&previous-version=3.12.0&new-version=3.14.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2024-03-25T03:46:04Z",
      "updatedAt": "2024-03-25T06:30:46Z",
      "closedAt": "2024-03-25T06:30:46Z",
      "mergedAt": "2024-03-25T06:30:46Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/pip/testing/plugins_integration/pytest-mock-3.14.0",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "python"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump pytest-mock in /testing/plugins_integration\n\nBumps [pytest-mock](https://github.com/pytest-dev/pytest-mock) from 3.12.0 to 3.14.0.\n- [Release notes](https://github.com/pytest-dev/pytest-mock/releases)\n- [Changelog](https://github.com/pytest-dev/pytest-mock/blob/main/CHANGELOG.rst)\n- [Commits](https://github.com/pytest-dev/pytest-mock/compare/v3.12.0...v3.14.0)\n\n---\nupdated-dependencies:\n- dependency-name: pytest-mock\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2024-03-25T03:46:03Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-25T06:30:40Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12159,
      "title": "build(deps): Bump pytest-cov from 4.1.0 to 5.0.0 in /testing/plugins_integration",
      "body": "Bumps [pytest-cov](https://github.com/pytest-dev/pytest-cov) from 4.1.0 to 5.0.0.\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/pytest-dev/pytest-cov/blob/master/CHANGELOG.rst\">pytest-cov's changelog</a>.</em></p>\n<blockquote>\n<h2>5.0.0 (2024-03-24)</h2>\n<ul>\n<li>Removed support for xdist rsync (now deprecated).\nContributed by Matthias Reichenbach in <code>[#623](https://github.com/pytest-dev/pytest-cov/issues/623) &lt;https://github.com/pytest-dev/pytest-cov/pull/623&gt;</code>_.</li>\n<li>Switched docs theme to Furo.</li>\n<li>Various legacy Python cleanup and CI improvements.\nContributed by Christian Clauss and Hugo van Kemenade in\n<code>[#630](https://github.com/pytest-dev/pytest-cov/issues/630) &lt;https://github.com/pytest-dev/pytest-cov/pull/630&gt;</code><em>,\n<code>[#631](https://github.com/pytest-dev/pytest-cov/issues/631) &lt;https://github.com/pytest-dev/pytest-cov/pull/631&gt;</code></em>,\n<code>[#632](https://github.com/pytest-dev/pytest-cov/issues/632) &lt;https://github.com/pytest-dev/pytest-cov/pull/632&gt;</code>_ and\n<code>[#633](https://github.com/pytest-dev/pytest-cov/issues/633) &lt;https://github.com/pytest-dev/pytest-cov/pull/633&gt;</code>_.</li>\n<li>Added a <code>pyproject.toml</code> example in the docs.\nContributed by Dawn James in <code>[#626](https://github.com/pytest-dev/pytest-cov/issues/626) &lt;https://github.com/pytest-dev/pytest-cov/pull/626&gt;</code>_.</li>\n<li>Modernized project's pre-commit hooks to use ruff. Initial POC contributed by\nChristian Clauss in <code>[#584](https://github.com/pytest-dev/pytest-cov/issues/584) &lt;https://github.com/pytest-dev/pytest-cov/pull/584&gt;</code>_.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pytest-dev/pytest-cov/commit/5295ce01c84262cec88f31255e9ac538718f3047\"><code>5295ce0</code></a> Bump version: 4.1.0 \u2192 5.0.0</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-cov/commit/1181b067972bf94569f8011f3b18f271690f9ab1\"><code>1181b06</code></a> Update changelog.</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-cov/commit/9757222e2e044361e70125ebdd96e5eb87395983\"><code>9757222</code></a> Fix a minor grammar error (<a href=\"https://redirect.github.com/pytest-dev/pytest-cov/issues/636\">#636</a>)</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-cov/commit/9f5cd81a0dbe3fe41681efdbef516c08988fe8ff\"><code>9f5cd81</code></a> Cleanup releasing instructions. Closes <a href=\"https://redirect.github.com/pytest-dev/pytest-cov/issues/616\">#616</a>.</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-cov/commit/93b5047ec5050d63c10a6fe16a09b671a7a03df8\"><code>93b5047</code></a> Add test for pyproject.toml loading without explicit --cov-config. Ref <a href=\"https://redirect.github.com/pytest-dev/pytest-cov/issues/508\">#508</a>.</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-cov/commit/ff50860d7c67b920503745d92a3f0944cf41f982\"><code>ff50860</code></a> docs: add config instructions for pyproject.toml.</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-cov/commit/4a5a4b5fa4b1c63ddcab5cbc1813798c9b6f1d36\"><code>4a5a4b5</code></a> Keep GitHub Actions up to date with GitHub's Dependabot</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-cov/commit/1d7f55963d5138f41c452a946f7cca7e0b6ee8b2\"><code>1d7f559</code></a> Fix or remove URLs that are causing docs tests to fail</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-cov/commit/6a5af8e85b8242ac815f33e26adf9068f5f0ebc3\"><code>6a5af8e</code></a> Update changelog.</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-cov/commit/d9fe8dfed15023d3410dd299c5092e755b8981c2\"><code>d9fe8df</code></a> Switch to furo. Closes <a href=\"https://redirect.github.com/pytest-dev/pytest-cov/issues/618\">#618</a>.</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pytest-dev/pytest-cov/compare/v4.1.0...v5.0.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pytest-cov&package-manager=pip&previous-version=4.1.0&new-version=5.0.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2024-03-25T03:46:01Z",
      "updatedAt": "2024-04-02T19:59:21Z",
      "closedAt": "2024-04-02T19:59:20Z",
      "mergedAt": "2024-04-02T19:59:20Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/pip/testing/plugins_integration/pytest-cov-5.0.0",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "python"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump pytest-cov in /testing/plugins_integration\n\nBumps [pytest-cov](https://github.com/pytest-dev/pytest-cov) from 4.1.0 to 5.0.0.\n- [Changelog](https://github.com/pytest-dev/pytest-cov/blob/master/CHANGELOG.rst)\n- [Commits](https://github.com/pytest-dev/pytest-cov/compare/v4.1.0...v5.0.0)\n\n---\nupdated-dependencies:\n- dependency-name: pytest-cov\n  dependency-type: direct:production\n  update-type: version-update:semver-major\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2024-03-25T06:32:55Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-04-02T19:59:12Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12158,
      "title": "build(deps): Bump pytest-twisted from 1.14.0 to 1.14.1 in /testing/plugins_integration",
      "body": "Bumps [pytest-twisted](https://github.com/pytest-dev/pytest-twisted) from 1.14.0 to 1.14.1.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pytest-dev/pytest-twisted/commit/ba5eb8892647b7b0834151f021318bc650cf129c\"><code>ba5eb88</code></a> Merge pull request <a href=\"https://redirect.github.com/pytest-dev/pytest-twisted/issues/174\">#174</a> from pytest-dev/id_token_write</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-twisted/commit/1d27fe1596a2aabd42b14323682a414492940c8f\"><code>1d27fe1</code></a> permissions: id-token: write</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-twisted/commit/5252c2c82a5234669414cf69218a54a744ebdcb3\"><code>5252c2c</code></a> Merge pull request <a href=\"https://redirect.github.com/pytest-dev/pytest-twisted/issues/169\">#169</a> from pytest-dev/release/v1.14.1</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-twisted/commit/59f36877b27fdb2cbf92f0630a1485508482c76c\"><code>59f3687</code></a> Merge branch 'main' into release/v1.14.1</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-twisted/commit/20fdd5d64ce89b7df04e85c4e17a54c5629524b6\"><code>20fdd5d</code></a> Merge pull request <a href=\"https://redirect.github.com/pytest-dev/pytest-twisted/issues/172\">#172</a> from pytest-dev/dependabot-github_actions-main-action...</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-twisted/commit/8b3859b0bbe18c47e9a6729e1ba624c746c9a1b3\"><code>8b3859b</code></a> Merge branch 'main' into dependabot-github_actions-main-actions-checkout-4</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-twisted/commit/e67694eac7a9b49c4326cc04cb522ec0412c91e9\"><code>e67694e</code></a> Merge pull request <a href=\"https://redirect.github.com/pytest-dev/pytest-twisted/issues/173\">#173</a> from pytest-dev/dependabot-github_actions-main-action...</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-twisted/commit/0bfa170f5af56e0112185d15938aa64179418f67\"><code>0bfa170</code></a> Bump actions/setup-python from 2 to 5</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-twisted/commit/677edc2ed6d4100cd02dc2170d3af7b687237d3d\"><code>677edc2</code></a> Bump actions/checkout from 2 to 4</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-twisted/commit/c1ca17401c46bdc82805c635cea22e77e3e2bda1\"><code>c1ca174</code></a> Merge pull request <a href=\"https://redirect.github.com/pytest-dev/pytest-twisted/issues/171\">#171</a> from pytest-dev/add_dependabot</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pytest-dev/pytest-twisted/compare/v1.14.0...v1.14.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pytest-twisted&package-manager=pip&previous-version=1.14.0&new-version=1.14.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2024-03-25T03:45:56Z",
      "updatedAt": "2024-03-25T06:32:29Z",
      "closedAt": "2024-03-25T06:32:29Z",
      "mergedAt": "2024-03-25T06:32:29Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/pip/testing/plugins_integration/pytest-twisted-1.14.1",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "python"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump pytest-twisted in /testing/plugins_integration\n\nBumps [pytest-twisted](https://github.com/pytest-dev/pytest-twisted) from 1.14.0 to 1.14.1.\n- [Release notes](https://github.com/pytest-dev/pytest-twisted/releases)\n- [Commits](https://github.com/pytest-dev/pytest-twisted/compare/v1.14.0...v1.14.1)\n\n---\nupdated-dependencies:\n- dependency-name: pytest-twisted\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2024-03-25T03:45:55Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-25T06:32:24Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12157,
      "title": "docs: fix typo",
      "body": "Added a missing word and fixed a typo.",
      "state": "MERGED",
      "createdAt": "2024-03-24T14:28:33Z",
      "updatedAt": "2024-03-24T14:59:07Z",
      "closedAt": "2024-03-24T14:59:07Z",
      "mergedAt": "2024-03-24T14:59:07Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "main",
      "headRefName": "doc/improvement",
      "author": {
        "login": "tserg"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "improve sentence",
              "committedDate": "2024-03-24T14:26:54Z",
              "author": {
                "name": "tserg",
                "email": "8017125+tserg@users.noreply.github.com",
                "user": {
                  "login": "tserg"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-24T14:58:37Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12156,
      "title": "[automated] Update plugin list",
      "body": "[automated] Update plugin list",
      "state": "MERGED",
      "createdAt": "2024-03-24T00:20:39Z",
      "updatedAt": "2024-03-24T14:15:47Z",
      "closedAt": "2024-03-24T14:15:46Z",
      "mergedAt": "2024-03-24T14:15:46Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "update-plugin-list/patch-c650e3a94",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[automated] Update plugin list",
              "committedDate": "2024-03-24T00:20:37Z",
              "author": {
                "name": "pytest bot",
                "email": "pytestbot@users.noreply.github.com",
                "user": {
                  "login": "pytestbot"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-24T13:41:08Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12154,
      "title": "fixtures: stop using `request.param_index` in fixture cache key",
      "body": "When `param` is not defined, `param_index` is always 0 (see [`_compute_fixture_value`](https://github.com/pytest-dev/pytest/blob/c650e3a94fb7e64001ada05ed9b0855d65693395/src/_pytest/fixtures.py#L606-L614)), so no point in using it besides adding some confusion.",
      "state": "MERGED",
      "createdAt": "2024-03-23T18:21:07Z",
      "updatedAt": "2024-07-09T16:09:38Z",
      "closedAt": "2024-03-24T13:40:52Z",
      "mergedAt": "2024-03-24T13:40:52Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "fixtures-cache-key-idx",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "fixtures: stop using `request.param_index` in fixture cache key\n\nWhen `param` is not defined, `param_index` is always 0 (see\n`_compute_fixture_value`), so no point in using it besides adding some\nconfusion.",
              "committedDate": "2024-03-23T10:07:24Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-23T20:34:25Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12153,
      "title": "Updated docs: Now we can use environment variable PYTEST_VERSION  to detect if a code is run by a pytest run",
      "body": "Add a better way to detect if a code is running from within a pytest run.\r\n\r\n<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "MERGED",
      "createdAt": "2024-03-22T18:31:32Z",
      "updatedAt": "2024-04-28T18:58:32Z",
      "closedAt": "2024-04-28T18:52:29Z",
      "mergedAt": "2024-04-28T18:52:29Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "main",
      "author": {
        "login": "dheerajck"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 15
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Apply suggestions from code review",
              "committedDate": "2024-04-28T17:08:31Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": [
          {
            "requestedReviewer": {
              "login": "RonnyPfannschmidt"
            }
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "DISMISSED",
            "submittedAt": "2024-03-22T19:13:54Z",
            "body": "The import check is actually a more fragile version a it also triggers whenever valid pytest Import was done\n\nI recommend listing the import check as naive and the Hook based one as robust "
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-04-28T17:07:56Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12148,
      "title": "[8.1.x] Add research item in doc",
      "body": "Backport of PR #12147 to 8.1.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2024-03-21T14:22:05Z",
      "updatedAt": "2024-03-21T14:37:50Z",
      "closedAt": "2024-03-21T14:37:49Z",
      "mergedAt": "2024-03-21T14:37:49Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "8.1.x",
      "headRefName": "backport-12147-to-8.1.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[8.1.x] Add research item in doc",
              "committedDate": "2024-03-21T14:22:03Z",
              "author": {
                "name": "Linghao Zhang",
                "email": "starrywhuzhang@gmail.com",
                "user": {
                  "login": "StarryZhang-whu"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-21T14:22:32Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12147,
      "title": "Add research item in doc",
      "body": "<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "MERGED",
      "createdAt": "2024-03-21T13:24:50Z",
      "updatedAt": "2024-03-21T14:21:48Z",
      "closedAt": "2024-03-21T14:21:43Z",
      "mergedAt": "2024-03-21T14:21:43Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "main",
      "author": {
        "login": "StarryZhang-whu"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Add research item in doc",
              "committedDate": "2024-03-21T13:22:32Z",
              "author": {
                "name": "StarryZhang-whu",
                "email": "93083801+StarryZhang-whu@users.noreply.github.com",
                "user": {
                  "login": "StarryZhang-whu"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-21T14:21:38Z",
            "body": "Interesting, thanks!"
          }
        ]
      }
    },
    {
      "number": 12142,
      "title": "[8.1.x] doc: add versionadded to `ExceptionInfo.group_contains`",
      "body": "Backport of PR #12141 to 8.1.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2024-03-19T22:54:48Z",
      "updatedAt": "2024-03-19T23:11:23Z",
      "closedAt": "2024-03-19T23:11:23Z",
      "mergedAt": "2024-03-19T23:11:22Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "8.1.x",
      "headRefName": "backport-12141-to-8.1.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[8.1.x] doc: add versionadded to `ExceptionInfo.group_contains`",
              "committedDate": "2024-03-19T22:54:46Z",
              "author": {
                "name": "Sebastian Meyer",
                "email": "mail@bastimeyer.de",
                "user": {
                  "login": "bastimeyer"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-19T22:55:51Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12141,
      "title": "doc: add versionadded to `ExceptionInfo.group_contains`",
      "body": "<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n\r\n`ExceptionInfo.group_contains()` [was added in 8.0.0](https://docs.pytest.org/en/8.0.x/changelog.html#additional-support-for-exception-groups-and-notes) (via #11424) and currently lacks the `versionadded` data in pytest's docs:\r\n- https://docs.pytest.org/en/8.0.x/reference/reference.html#pytest.ExceptionInfo.group_contains\r\n- https://docs.pytest.org/en/latest/reference/reference.html#pytest.ExceptionInfo.group_contains",
      "state": "MERGED",
      "createdAt": "2024-03-19T21:01:10Z",
      "updatedAt": "2024-03-19T22:54:49Z",
      "closedAt": "2024-03-19T22:54:26Z",
      "mergedAt": "2024-03-19T22:54:26Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "doc/versionadded-exceptioninfo-group-contains",
      "author": {
        "login": "bastimeyer"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "doc: add versionadded to `ExceptionInfo.group_contains`",
              "committedDate": "2024-03-19T20:51:20Z",
              "author": {
                "name": "bastimeyer",
                "email": "mail@bastimeyer.de",
                "user": {
                  "login": "bastimeyer"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-19T22:54:17Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12137,
      "title": "[pre-commit.ci] pre-commit autoupdate",
      "body": "<!--pre-commit.ci start-->\nupdates:\n- [github.com/astral-sh/ruff-pre-commit: v0.3.2 \u2192 v0.3.3](https://github.com/astral-sh/ruff-pre-commit/compare/v0.3.2...v0.3.3)\n<!--pre-commit.ci end-->",
      "state": "MERGED",
      "createdAt": "2024-03-18T22:12:50Z",
      "updatedAt": "2024-03-18T22:51:24Z",
      "closedAt": "2024-03-18T22:51:23Z",
      "mergedAt": "2024-03-18T22:51:23Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "main",
      "headRefName": "pre-commit-ci-update-config",
      "author": {
        "login": "pre-commit-ci"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[pre-commit.ci] pre-commit autoupdate\n\nupdates:\n- [github.com/astral-sh/ruff-pre-commit: v0.3.2 \u2192 v0.3.3](https://github.com/astral-sh/ruff-pre-commit/compare/v0.3.2...v0.3.3)",
              "committedDate": "2024-03-18T22:12:49Z",
              "author": {
                "name": "pre-commit-ci[bot]",
                "email": "66853113+pre-commit-ci[bot]@users.noreply.github.com",
                "user": {
                  "login": "pre-commit-ci[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-18T22:18:12Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12136,
      "title": "Don't reregister subfixture finalizer in parent fixture if value is cached",
      "body": "Fixes #12135\r\n\r\n> When getting the value of a fixture, it will always add its finalizer to parent fixtures, regardless of if it's cached or not. When we have several subfixtures, this leads to unpredictable ordering between them when they're torn down (if triggered by the parent fixture being torn down). It is also an obvious inefficiency, where a long-lived parent fixture could rack up tons of irrelevant fixtures.\r\n\r\nAdds two regression tests: one that checks the ordering failure, and one that checks the number of finalizers.\r\n\r\nThe implementation would be slightly cleaner if parent fixture parametrization was included in the cache key, as discussed in https://github.com/pytest-dev/pytest/issues/4871#issuecomment-2002622725",
      "state": "MERGED",
      "createdAt": "2024-03-18T14:18:30Z",
      "updatedAt": "2024-11-15T13:52:59Z",
      "closedAt": "2024-03-31T12:02:09Z",
      "mergedAt": "2024-03-31T12:02:09Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "parent_fixture_finalization_on_cached",
      "author": {
        "login": "jakkdl"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 5
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Update fixtures.py\n\nfix ambigious phrasing in comment",
              "committedDate": "2024-03-31T10:14:49Z",
              "author": {
                "name": "John Litborn",
                "email": "11260241+jakkdl@users.noreply.github.com",
                "user": {
                  "login": "jakkdl"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "CHANGES_REQUESTED",
            "submittedAt": "2024-03-21T14:41:57Z",
            "body": "Thanks @jakkdl! As mentioned in the issue, this change LGTM. I left some comments mostly on terminology."
          },
          {
            "author": {
              "login": "jakkdl"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-03-26T12:40:47Z",
            "body": ""
          },
          {
            "author": {
              "login": "jakkdl"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-03-26T14:12:04Z",
            "body": ""
          },
          {
            "author": {
              "login": "jakkdl"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-03-26T14:49:58Z",
            "body": ""
          },
          {
            "author": {
              "login": "jakkdl"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-03-26T14:51:15Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-03-27T15:15:52Z",
            "body": ""
          },
          {
            "author": {
              "login": "jakkdl"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-03-31T10:15:40Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-31T12:01:33Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12133,
      "title": "build(deps): Bump hynek/build-and-inspect-python-package from 2.0.1 to 2.0.2",
      "body": "Bumps [hynek/build-and-inspect-python-package](https://github.com/hynek/build-and-inspect-python-package) from 2.0.1 to 2.0.2.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/hynek/build-and-inspect-python-package/releases\">hynek/build-and-inspect-python-package's releases</a>.</em></p>\n<blockquote>\n<h2>v2.0.2</h2>\n<h2>Changes</h2>\n<ul>\n<li>Dependency updates for Metadata-Version 2.3 support (as used, for example, by <a href=\"https://github.com/pypa/hatch/releases/tag/hatchling-v1.22.1\">Hatchling 1.22.1</a>).</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/hynek/build-and-inspect-python-package/blob/main/CHANGELOG.md\">hynek/build-and-inspect-python-package's changelog</a>.</em></p>\n<blockquote>\n<h2><a href=\"https://github.com/hynek/build-and-inspect-python-package/compare/v2.0.1...v2.0.2\">2.0.2</a> \u2013 2024-03-16</h2>\n<h3>Changed</h3>\n<ul>\n<li>Dependency updates for Metadata-Version 2.3 support (as used, for example, by <a href=\"https://github.com/pypa/hatch/releases/tag/hatchling-v1.22.1\">Hatchling 1.22.1</a>).</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/hynek/build-and-inspect-python-package/commit/88842b6fc4006f618405c1dc0c694afca67ecc58\"><code>88842b6</code></a> v2.0.2</li>\n<li><a href=\"https://github.com/hynek/build-and-inspect-python-package/commit/c205ad434732dfe55955e22348d9edffdba1c2c0\"><code>c205ad4</code></a> Add changelog entry</li>\n<li><a href=\"https://github.com/hynek/build-and-inspect-python-package/commit/4d89646ace13a3dda9630b71646e2ab26653d0f4\"><code>4d89646</code></a> Automated dependency upgrades (<a href=\"https://redirect.github.com/hynek/build-and-inspect-python-package/issues/91\">#91</a>)</li>\n<li><a href=\"https://github.com/hynek/build-and-inspect-python-package/commit/a97ce1d2bac758263381629e46c3a3283a436ed9\"><code>a97ce1d</code></a> Automated dependency upgrades (<a href=\"https://redirect.github.com/hynek/build-and-inspect-python-package/issues/90\">#90</a>)</li>\n<li><a href=\"https://github.com/hynek/build-and-inspect-python-package/commit/dd4877e59acf33606959d59b14bcd81c9aee21b8\"><code>dd4877e</code></a> Automated dependency upgrades (<a href=\"https://redirect.github.com/hynek/build-and-inspect-python-package/issues/89\">#89</a>)</li>\n<li><a href=\"https://github.com/hynek/build-and-inspect-python-package/commit/6583e57993532d8af08ca508033f5a7362292c67\"><code>6583e57</code></a> Automated dependency upgrades (<a href=\"https://redirect.github.com/hynek/build-and-inspect-python-package/issues/88\">#88</a>)</li>\n<li><a href=\"https://github.com/hynek/build-and-inspect-python-package/commit/20db83a776feefaf52e2b2ba11475569a64f9bd2\"><code>20db83a</code></a> Automated dependency upgrades (<a href=\"https://redirect.github.com/hynek/build-and-inspect-python-package/issues/85\">#85</a>)</li>\n<li><a href=\"https://github.com/hynek/build-and-inspect-python-package/commit/206b147205adb22d8c2bac65e5c026e3df4e3037\"><code>206b147</code></a> Add missing date</li>\n<li><a href=\"https://github.com/hynek/build-and-inspect-python-package/commit/1e0ed95c9bd14659f6cc39447a9220886a753aa5\"><code>1e0ed95</code></a> Start new cycle</li>\n<li>See full diff in <a href=\"https://github.com/hynek/build-and-inspect-python-package/compare/v2.0.1...v2.0.2\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=hynek/build-and-inspect-python-package&package-manager=github_actions&previous-version=2.0.1&new-version=2.0.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2024-03-18T03:12:49Z",
      "updatedAt": "2024-03-20T09:21:41Z",
      "closedAt": "2024-03-20T09:21:41Z",
      "mergedAt": "2024-03-20T09:21:41Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/github_actions/hynek/build-and-inspect-python-package-2.0.2",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "github_actions"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump hynek/build-and-inspect-python-package\n\nBumps [hynek/build-and-inspect-python-package](https://github.com/hynek/build-and-inspect-python-package) from 2.0.1 to 2.0.2.\n- [Release notes](https://github.com/hynek/build-and-inspect-python-package/releases)\n- [Changelog](https://github.com/hynek/build-and-inspect-python-package/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/hynek/build-and-inspect-python-package/compare/v2.0.1...v2.0.2)\n\n---\nupdated-dependencies:\n- dependency-name: hynek/build-and-inspect-python-package\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2024-03-18T03:12:49Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-20T09:21:28Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12132,
      "title": "build(deps): Bump peter-evans/create-pull-request from 6.0.0 to 6.0.2",
      "body": "Bumps [peter-evans/create-pull-request](https://github.com/peter-evans/create-pull-request) from 6.0.0 to 6.0.2.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/peter-evans/create-pull-request/releases\">peter-evans/create-pull-request's releases</a>.</em></p>\n<blockquote>\n<h2>Create Pull Request v6.0.2</h2>\n<p>\u26a1 Improves performance in some cases where the action rebases changes on to the specified <code>base</code>.</p>\n<h2>What's Changed</h2>\n<ul>\n<li>build(deps-dev): bump eslint-plugin-github from 4.10.1 to 4.10.2 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/peter-evans/create-pull-request/pull/2797\">peter-evans/create-pull-request#2797</a></li>\n<li>build(deps-dev): bump <code>@\u200btypes/node</code> from 18.19.18 to 18.19.21 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/peter-evans/create-pull-request/pull/2798\">peter-evans/create-pull-request#2798</a></li>\n<li>build(deps-dev): bump <code>@\u200btypes/node</code> from 18.19.21 to 18.19.23 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/peter-evans/create-pull-request/pull/2811\">peter-evans/create-pull-request#2811</a></li>\n<li>perf: shallow fetch the actual base when rebasing from working base by <a href=\"https://github.com/peter-evans\"><code>@\u200bpeter-evans</code></a> in <a href=\"https://redirect.github.com/peter-evans/create-pull-request/pull/2816\">peter-evans/create-pull-request#2816</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/webmonarch\"><code>@\u200bwebmonarch</code></a> made their first contribution in <a href=\"https://redirect.github.com/peter-evans/create-pull-request/pull/2816\">peter-evans/create-pull-request#2816</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/peter-evans/create-pull-request/compare/v6.0.1...v6.0.2\">https://github.com/peter-evans/create-pull-request/compare/v6.0.1...v6.0.2</a></p>\n<h2>Create Pull Request v6.0.1</h2>\n<p>\u2699\ufe0f Fixes <a href=\"https://redirect.github.com/peter-evans/create-pull-request/issues/2790\">an issue</a> where updating a pull request leads to the error <code>Cannot read properties of undefined (reading 'number')</code>. This was likely caused by GitHub fixing a long standing bug with an API endpoint, resulting in a breaking change.</p>\n<h2>What's Changed</h2>\n<ul>\n<li>build(deps-dev): bump <code>@\u200btypes/jest</code> from 29.5.11 to 29.5.12 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/peter-evans/create-pull-request/pull/2730\">peter-evans/create-pull-request#2730</a></li>\n<li>build(deps-dev): bump prettier from 3.2.4 to 3.2.5 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/peter-evans/create-pull-request/pull/2731\">peter-evans/create-pull-request#2731</a></li>\n<li>build(deps-dev): bump <code>@\u200btypes/node</code> from 18.19.10 to 18.19.14 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/peter-evans/create-pull-request/pull/2732\">peter-evans/create-pull-request#2732</a></li>\n<li>build(deps): bump peter-evans/slash-command-dispatch from 3 to 4 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/peter-evans/create-pull-request/pull/2748\">peter-evans/create-pull-request#2748</a></li>\n<li>build(deps): bump peter-evans/create-pull-request from 5 to 6 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/peter-evans/create-pull-request/pull/2747\">peter-evans/create-pull-request#2747</a></li>\n<li>build(deps-dev): bump <code>@\u200btypes/node</code> from 18.19.14 to 18.19.15 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/peter-evans/create-pull-request/pull/2759\">peter-evans/create-pull-request#2759</a></li>\n<li>build(deps-dev): bump eslint-plugin-jest from 27.6.3 to 27.9.0 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/peter-evans/create-pull-request/pull/2769\">peter-evans/create-pull-request#2769</a></li>\n<li>build(deps-dev): bump <code>@\u200btypes/node</code> from 18.19.15 to 18.19.17 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/peter-evans/create-pull-request/pull/2768\">peter-evans/create-pull-request#2768</a></li>\n<li>build(deps-dev): bump <code>@\u200btypes/node</code> from 18.19.17 to 18.19.18 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/peter-evans/create-pull-request/pull/2780\">peter-evans/create-pull-request#2780</a></li>\n<li>build(deps-dev): bump eslint from 8.56.0 to 8.57.0 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/peter-evans/create-pull-request/pull/2781\">peter-evans/create-pull-request#2781</a></li>\n<li>fix: list pulls using the correct head format by <a href=\"https://github.com/peter-evans\"><code>@\u200bpeter-evans</code></a> in <a href=\"https://redirect.github.com/peter-evans/create-pull-request/pull/2792\">peter-evans/create-pull-request#2792</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/peter-evans/create-pull-request/compare/v6.0.0...v6.0.1\">https://github.com/peter-evans/create-pull-request/compare/v6.0.0...v6.0.1</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/peter-evans/create-pull-request/commit/70a41aba780001da0a30141984ae2a0c95d8704e\"><code>70a41ab</code></a> perf: shallow fetch the actual base when rebasing from working base (<a href=\"https://redirect.github.com/peter-evans/create-pull-request/issues/2816\">#2816</a>)</li>\n<li><a href=\"https://github.com/peter-evans/create-pull-request/commit/57a101480a00db37082a7c7d3348bf2075d3a6e8\"><code>57a1014</code></a> build(deps-dev): bump <code>@\u200btypes/node</code> from 18.19.21 to 18.19.23 (<a href=\"https://redirect.github.com/peter-evans/create-pull-request/issues/2811\">#2811</a>)</li>\n<li><a href=\"https://github.com/peter-evans/create-pull-request/commit/b3a2c5d525a1eb75e75c781e45a1bf3bfc23bdc6\"><code>b3a2c5d</code></a> build(deps-dev): bump <code>@\u200btypes/node</code> from 18.19.18 to 18.19.21 (<a href=\"https://redirect.github.com/peter-evans/create-pull-request/issues/2798\">#2798</a>)</li>\n<li><a href=\"https://github.com/peter-evans/create-pull-request/commit/02c7da59e880d01b07e68afd0370a3399f08b42a\"><code>02c7da5</code></a> build(deps-dev): bump eslint-plugin-github from 4.10.1 to 4.10.2 (<a href=\"https://redirect.github.com/peter-evans/create-pull-request/issues/2797\">#2797</a>)</li>\n<li><a href=\"https://github.com/peter-evans/create-pull-request/commit/bac6da8071ada152cce76cfbd24b54b7190ad799\"><code>bac6da8</code></a> docs: update description of delete-branch</li>\n<li><a href=\"https://github.com/peter-evans/create-pull-request/commit/a4f52f8033a6168103c2538976c07b467e8163bc\"><code>a4f52f8</code></a> fix: list pulls using the correct head format (<a href=\"https://redirect.github.com/peter-evans/create-pull-request/issues/2792\">#2792</a>)</li>\n<li><a href=\"https://github.com/peter-evans/create-pull-request/commit/853c071bcf61c8762f57e59c1576d97418f495ad\"><code>853c071</code></a> build(deps-dev): bump eslint from 8.56.0 to 8.57.0 (<a href=\"https://redirect.github.com/peter-evans/create-pull-request/issues/2781\">#2781</a>)</li>\n<li><a href=\"https://github.com/peter-evans/create-pull-request/commit/d2c126edc79e6a215930e9a6adc95b7686b84f78\"><code>d2c126e</code></a> build(deps-dev): bump <code>@\u200btypes/node</code> from 18.19.17 to 18.19.18 (<a href=\"https://redirect.github.com/peter-evans/create-pull-request/issues/2780\">#2780</a>)</li>\n<li><a href=\"https://github.com/peter-evans/create-pull-request/commit/43d39c683601267cd565ea6bd727a4e92aa00852\"><code>43d39c6</code></a> build(deps-dev): bump <code>@\u200btypes/node</code> from 18.19.15 to 18.19.17 (<a href=\"https://redirect.github.com/peter-evans/create-pull-request/issues/2768\">#2768</a>)</li>\n<li><a href=\"https://github.com/peter-evans/create-pull-request/commit/5a9d206da2b6452cd63eb84e2e5116ff3213e8cb\"><code>5a9d206</code></a> build(deps-dev): bump eslint-plugin-jest from 27.6.3 to 27.9.0 (<a href=\"https://redirect.github.com/peter-evans/create-pull-request/issues/2769\">#2769</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/peter-evans/create-pull-request/compare/b1ddad2c994a25fbc81a28b3ec0e368bb2021c50...70a41aba780001da0a30141984ae2a0c95d8704e\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=peter-evans/create-pull-request&package-manager=github_actions&previous-version=6.0.0&new-version=6.0.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2024-03-18T03:12:46Z",
      "updatedAt": "2024-03-20T09:20:50Z",
      "closedAt": "2024-03-20T09:20:50Z",
      "mergedAt": "2024-03-20T09:20:50Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/github_actions/peter-evans/create-pull-request-6.0.2",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "github_actions"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump peter-evans/create-pull-request from 6.0.0 to 6.0.2\n\nBumps [peter-evans/create-pull-request](https://github.com/peter-evans/create-pull-request) from 6.0.0 to 6.0.2.\n- [Release notes](https://github.com/peter-evans/create-pull-request/releases)\n- [Commits](https://github.com/peter-evans/create-pull-request/compare/b1ddad2c994a25fbc81a28b3ec0e368bb2021c50...70a41aba780001da0a30141984ae2a0c95d8704e)\n\n---\nupdated-dependencies:\n- dependency-name: peter-evans/create-pull-request\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2024-03-18T03:12:45Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-20T09:20:43Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12131,
      "title": "build(deps): Bump pytest-rerunfailures from 13.0 to 14.0 in /testing/plugins_integration",
      "body": "Bumps [pytest-rerunfailures](https://github.com/pytest-dev/pytest-rerunfailures) from 13.0 to 14.0.\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/pytest-dev/pytest-rerunfailures/blob/master/CHANGES.rst\">pytest-rerunfailures's changelog</a>.</em></p>\n<blockquote>\n<h2>14.0 (2024-03-13)</h2>\n<p>Bug fixes\n+++++++++</p>\n<ul>\n<li>Fix missing teardown for non-function scoped fixtures when using only_rerun or rerun_except queries.\n(<code>[#234](https://github.com/pytest-dev/pytest-rerunfailures/issues/234) &lt;https://github.com/pytest-dev/pytest-rerunfailures/issues/234&gt;</code><em>)\nand (<code>[#241](https://github.com/pytest-dev/pytest-rerunfailures/issues/241) &lt;https://github.com/pytest-dev/pytest-rerunfailures/issues/241&gt;</code></em>)</li>\n</ul>\n<p>Breaking changes\n++++++++++++++++</p>\n<ul>\n<li>\n<p>Drop support for Python 3.7.</p>\n</li>\n<li>\n<p>Drop support for pytest &lt; 7.2.</p>\n</li>\n</ul>\n<p>Features\n++++++++</p>\n<ul>\n<li>Add support for pytest 8.0, 8.1.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pytest-dev/pytest-rerunfailures/commit/5ef1dd008082d0195cf6227141b194d198ba6d35\"><code>5ef1dd0</code></a> Preparing release 14.0</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-rerunfailures/commit/4dfe057f6f59c29fe550416e7666e895b2df17ba\"><code>4dfe057</code></a> Merge pull request <a href=\"https://redirect.github.com/pytest-dev/pytest-rerunfailures/issues/264\">#264</a> from pytest-dev/pytest-8.1</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-rerunfailures/commit/82bcfc87d3b660e58548e6dcf0192464a4c8ca03\"><code>82bcfc8</code></a> Apply suggestions from code review</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-rerunfailures/commit/ab83788e3a2bb549f0cb9cafdbc7a28095d27d17\"><code>ab83788</code></a> Add support for pytest 8.1 + remove support for 7.1.</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-rerunfailures/commit/0ab54f00d68bb4feadae58d2f4e30f6663495571\"><code>0ab54f0</code></a> Fix Missing Fixture Teardown operations (<a href=\"https://redirect.github.com/pytest-dev/pytest-rerunfailures/issues/260\">#260</a>)</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-rerunfailures/commit/9fc333d89f0638ef99d5189b20b5a8f939d907ae\"><code>9fc333d</code></a> Drop support for pytest &lt; 7.1. + Add support for pytest 8.0. (<a href=\"https://redirect.github.com/pytest-dev/pytest-rerunfailures/issues/263\">#263</a>)</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-rerunfailures/commit/3b9ad82537002dd3d61ae3e980a049883db91c36\"><code>3b9ad82</code></a> Merge pull request <a href=\"https://redirect.github.com/pytest-dev/pytest-rerunfailures/issues/251\">#251</a> from Borda/refactor/pyptoject.toml</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-rerunfailures/commit/da8dcdabf7e93dd51ce436c4f070d18afbe7cca2\"><code>da8dcda</code></a> Update MANIFEST.in</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-rerunfailures/commit/ac11d8806ab4e007ae1c2e575a63fe9dd251000c\"><code>ac11d88</code></a> simplify readme</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-rerunfailures/commit/cf5e0de9c0e11085dec4b07f78642f7172fe88a9\"><code>cf5e0de</code></a> dynamic readme</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pytest-dev/pytest-rerunfailures/compare/13.0...14.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pytest-rerunfailures&package-manager=pip&previous-version=13.0&new-version=14.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2024-03-18T03:02:29Z",
      "updatedAt": "2024-03-20T09:20:10Z",
      "closedAt": "2024-03-20T09:20:09Z",
      "mergedAt": "2024-03-20T09:20:09Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/pip/testing/plugins_integration/pytest-rerunfailures-14.0",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "python"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump pytest-rerunfailures in /testing/plugins_integration\n\nBumps [pytest-rerunfailures](https://github.com/pytest-dev/pytest-rerunfailures) from 13.0 to 14.0.\n- [Changelog](https://github.com/pytest-dev/pytest-rerunfailures/blob/master/CHANGES.rst)\n- [Commits](https://github.com/pytest-dev/pytest-rerunfailures/compare/13.0...14.0)\n\n---\nupdated-dependencies:\n- dependency-name: pytest-rerunfailures\n  dependency-type: direct:production\n  update-type: version-update:semver-major\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2024-03-18T03:02:28Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-20T09:20:02Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12130,
      "title": "fixtures: inline some functions to streamline the code",
      "body": "The `getfixturevalue` code is split over several functions, but I find it mostly obscures the flow of the logic. This PR inlines `_getnextfixturedef` and `_compute_fixture_value` into  `_get_active_fixturedef` which is now a single linear function, mostly. I did move some sanity checking code out of the function since it mostly distracts.",
      "state": "MERGED",
      "createdAt": "2024-03-17T19:22:19Z",
      "updatedAt": "2024-05-26T07:16:29Z",
      "closedAt": "2024-04-27T13:01:37Z",
      "mergedAt": "2024-04-27T13:01:36Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "fixtures-inline",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "fixtures: inline `fail_fixturefunc`\n\nDoesn't add much.",
              "committedDate": "2024-04-27T12:48:14Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-04-27T12:48:07Z",
            "body": "LGTM!"
          }
        ]
      }
    },
    {
      "number": 12129,
      "title": "improve(fixtures-per-test): exclude pseudo fixtures from output #11295 ",
      "body": "Closes #11295  by excluding 'pseudo fixtures' from the `--fixtures-per-test` output. \r\n\r\n> pseudo fixtures are neither builtin fixtures nor ones created by the user with the `pytest.fixture` decorator. They are created internally by _pytest_ when `@pytest.mark.parametrize` directly parametrizes a test. It provides a succinct syntax for batch executing a test over multiple argument sets.\r\n\r\nFor example, when `pytest --fixtures-per-test` is run, this test\r\n\r\n```python\r\n# test_file.py\r\nImport pytest\r\n\r\n@pytest.mark.parametrize(\"x\", [1, 2])\r\ndef test_one(monkeypatch, x):\r\n    pass\r\n```\r\nwill no longer produce output such as this:\r\n\r\n```\r\n------------------------- fixtures used by test_one[1] -------------------------\r\n----------------------------------- (test_file.py:5) ------------------------------\r\nmonkeypatch -- src/_pytest/monkeypatch.py:33\r\n    A convenient fixture for monkey-patching.\r\nx -- src/_pytest/python.py:1113\r\n    no docstring available\r\n    \r\n------------------------- fixtures used by test_one[2] -------------------------\r\n----------------------------------- (test_file.py:5) ------------------------------\r\nmonkeypatch -- src/_pytest/monkeypatch.py:33\r\n    A convenient fixture for monkey-patching.\r\nx -- src/_pytest/python.py:1113\r\n    no docstring available\r\n```\r\n\r\nInstead,  it will be:\r\n\r\n```\r\n------------------------- fixtures used by test_one[1] -------------------------\r\n----------------------------------- (test_file.py:5) ------------------------------\r\nmonkeypatch -- src/_pytest/monkeypatch.py:33\r\n    A convenient fixture for monkey-patching.\r\n    \r\n------------------------- fixtures used by test_one[2] -------------------------\r\n----------------------------------- (test_file.py:5) ------------------------------\r\nmonkeypatch -- src/_pytest/monkeypatch.py:33\r\n    A convenient fixture for monkey-patching.\r\n```\r\n\r\n## Justification for changing the output\r\n\r\n### The original output did not match with new users' intuitions and expectations\r\nAs a new user, I found it unintuitive to see the `@pytest.mark.parametrize` variables appear in my `--fixtures-per-test` report.  I am of the opinion that the inclusion of pseudo fixtures in the output confuses new users because they do not conform to the expectations established in the documentation. Namely, that fixtures are\r\n\r\n- richly reusable\r\n- provide setup/teardown features\r\n- created via the `@pytest.fixture` decorator\r\n\r\n### The original output puts attention on internal implementation details\r\nThe purpose of `--fixtures-per-test` is to create a summary of the user's fixture decisions and dependencies. Yet creating a fixture for the user is not the goal of the direct parametrization mark. Instead, _pytest'_s internals just leverage the fixture system to achieve the actual goal:  a succinct batch execution syntax. I believe that including the pseudo fixtures in the output exposes internal implementation details unnecessarily and distracts from the user-side summary.\r\n\r\n## Checklist\r\n\r\n- [X] Include new tests or update existing tests when applicable.\r\n- [ ] I have not found any documentation to update yet.\r\n- [ ] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n- [X] Add text like ``closes #XYZW`` to the PR . . . \r\n- [X] Create a new changelog file . . . \r\n- [X] Add yourself to `AUTHORS` in alphabetical order.\r\n",
      "state": "OPEN",
      "createdAt": "2024-03-17T13:43:36Z",
      "updatedAt": "2024-03-21T12:47:06Z",
      "closedAt": null,
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "exclude-psuedo-fixtures-from-fixtures-per-test-output",
      "author": {
        "login": "WarrenTheRabbit"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Merge branch 'main' into exclude-psuedo-fixtures-from-fixtures-per-test-output",
              "committedDate": "2024-03-19T11:29:10Z",
              "author": {
                "name": "Warren Markham",
                "email": "rabbitsinwarrens@gmail.com",
                "user": {
                  "login": "WarrenTheRabbit"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "WarrenTheRabbit"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-03-19T03:03:08Z",
            "body": ""
          },
          {
            "author": {
              "login": "WarrenTheRabbit"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-03-19T11:03:06Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "CHANGES_REQUESTED",
            "submittedAt": "2024-03-21T12:47:06Z",
            "body": "Thanks for the PR @WarrenTheRabbit. IMO it is indeed better not to show params as fixtures in `--fixtures-per-test` output, for the reasons you stated, and also because they are somewhat already reflected in the test id (the part in `[...]`).\r\n\r\nFor the implementation you've used `_get_direct_parametrize_args` to exclude the params. But at this point we've already gathered this info for the item (test), which can be found in the `callspec` field. So it's better to use that.\r\n\r\nHowever, I'd even go a step further and just exclude \"pseudo\" fixtures directly. This would involve adding an indication on the `FixtureDef` whether it's a \"pseudo\" fixture (we really ought to find a better name for this...). As long as it's only used for \"information\" purposes such as `--fixtures-per-test` and not for the actual business logic of fixtures, I have no objection to adding such an indication. Then, the change could be to just skip over such FixtureDefs."
          }
        ]
      }
    },
    {
      "number": 12126,
      "title": "[automated] Update plugin list",
      "body": "[automated] Update plugin list",
      "state": "MERGED",
      "createdAt": "2024-03-17T00:20:06Z",
      "updatedAt": "2024-03-17T19:22:46Z",
      "closedAt": "2024-03-17T19:22:46Z",
      "mergedAt": "2024-03-17T19:22:46Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "update-plugin-list/patch-70c11582a",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[automated] Update plugin list",
              "committedDate": "2024-03-17T00:20:04Z",
              "author": {
                "name": "pytest bot",
                "email": "pytestbot@users.noreply.github.com",
                "user": {
                  "login": "pytestbot"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-17T19:22:44Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12122,
      "title": "Spelling",
      "body": "<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\nI'm open to adding a changelog item, but as I generally get pushback on some changes in long sets, I'm disinclined to write it proactively as I don't know what it'll say.\r\n\r\nFwiw, here's the tooling output that reported the items that I'm fixing: https://github.com/jsoref/pytest/actions/runs/8286348273#summary-22676128090\r\nAnd here's a report showing those items have been addressed: https://github.com/jsoref/pytest/actions/runs/8286348842#summary-22676129381",
      "state": "MERGED",
      "createdAt": "2024-03-15T17:32:45Z",
      "updatedAt": "2024-05-15T16:56:28Z",
      "closedAt": "2024-05-15T16:49:35Z",
      "mergedAt": "2024-05-15T16:49:35Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "spelling",
      "author": {
        "login": "jsoref"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Revert changes to plugin_list.rst: generated automatically",
              "committedDate": "2024-03-16T13:54:48Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "jsoref"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-03-15T17:44:31Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-16T14:00:27Z",
            "body": "Looks great, thanks!\r\n\r\nUsually we would squash the commits before merging for a mostly automated PR like this one, but perhaps it makes sense to keep those commits because they do add context to each change?"
          }
        ]
      }
    },
    {
      "number": 12121,
      "title": "Add tests to ensure setup&finalization for scoped fixtures only run once.",
      "body": "Split out from #11833, as they are probably useful tests independent of that PR. I feel like I've seen tests somewhere in the test suite that kind of tests for the same thing(s), but I can't find them now, so it's probably good to have explicit tests for this either way.\r\n\r\n<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "MERGED",
      "createdAt": "2024-03-15T11:34:28Z",
      "updatedAt": "2024-03-16T10:44:06Z",
      "closedAt": "2024-03-16T10:21:53Z",
      "mergedAt": "2024-03-16T10:21:53Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "test_scope_fixture_caching",
      "author": {
        "login": "jakkdl"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Add tests to ensure setup&finalization for scoped fixtures only run once.",
              "committedDate": "2024-03-15T11:26:28Z",
              "author": {
                "name": "jakkdl",
                "email": "h6+github@pm.me",
                "user": {
                  "login": "jakkdl"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-16T10:21:44Z",
            "body": "Thanks!"
          }
        ]
      }
    },
    {
      "number": 12119,
      "title": "[8.1.x] doc: fix typos",
      "body": "Backport of PR #12118 to 8.1.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2024-03-14T17:22:25Z",
      "updatedAt": "2024-03-14T20:18:22Z",
      "closedAt": "2024-03-14T20:18:21Z",
      "mergedAt": "2024-03-14T20:18:21Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "8.1.x",
      "headRefName": "backport-12118-to-8.1.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[8.1.x] doc: fix typos",
              "committedDate": "2024-03-14T17:22:24Z",
              "author": {
                "name": "Tobias Stoeckmann",
                "email": "stoeckmann@users.noreply.github.com",
                "user": {
                  "login": "stoeckmann"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-14T19:49:24Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12118,
      "title": "doc: fix typos",
      "body": "Added a missing word and fixed two codespell warnings in documentation.",
      "state": "MERGED",
      "createdAt": "2024-03-14T16:22:30Z",
      "updatedAt": "2024-03-14T17:22:09Z",
      "closedAt": "2024-03-14T16:36:12Z",
      "mergedAt": "2024-03-14T16:36:11Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "main",
      "headRefName": "typos",
      "author": {
        "login": "stoeckmann"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "doc: fix typos\n\nTypos found with codespell",
              "committedDate": "2024-03-14T16:21:12Z",
              "author": {
                "name": "Tobias Stoeckmann",
                "email": "tobias@stoeckmann.org",
                "user": {
                  "login": "stoeckmann"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-14T16:23:37Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12115,
      "title": "[pre-commit.ci] pre-commit autoupdate",
      "body": "<!--pre-commit.ci start-->\nupdates:\n- [github.com/astral-sh/ruff-pre-commit: v0.2.2 \u2192 v0.3.2](https://github.com/astral-sh/ruff-pre-commit/compare/v0.2.2...v0.3.2)\n- [github.com/pre-commit/mirrors-mypy: v1.8.0 \u2192 v1.9.0](https://github.com/pre-commit/mirrors-mypy/compare/v1.8.0...v1.9.0)\n<!--pre-commit.ci end-->",
      "state": "MERGED",
      "createdAt": "2024-03-13T00:39:07Z",
      "updatedAt": "2024-03-13T13:30:19Z",
      "closedAt": "2024-03-13T13:30:18Z",
      "mergedAt": "2024-03-13T13:30:18Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "pre-commit-ci-update-config",
      "author": {
        "login": "pre-commit-ci"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Fixes & improvements",
              "committedDate": "2024-03-13T12:53:06Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-03-13T01:32:50Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-13T13:30:02Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12110,
      "title": "fix overridden/extended fixtures",
      "body": "<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\nThis PR aims to solve this issue #12091. In the issue example shown below,  `fixturedefs` defined [here](https://github.com/pytest-dev/pytest/blob/14437788f07584fcf0578bdb952c720e0b9dd2ab/src/_pytest/fixtures.py#L1535)  was returning a tuple of the two versions of the overridden `main` fixture. The dependency on `param` was in the first element of the tuple, so doing `fixture_defs[-1]` would never find that dependency due to name duplication. The change is quite simple, checks in the tuple all fixturedefs whose `argname` is contained in `fixture_defs[-1].argnames`\r\n\r\n```python\r\nimport pytest\r\n\r\n@pytest.fixture\r\ndef param() -> int:\r\n    return 1\r\n\r\n@pytest.fixture\r\ndef main(param: int) -> int:\r\n    return sum(range(param + 1))\r\n\r\n\r\nclass TestFoo:\r\n    @pytest.fixture\r\n    def main(self, main: int) -> int:\r\n        return main\r\n\r\n    @pytest.mark.parametrize(\"param\", [2])\r\n    def test_foo(self, main: int) -> None:\r\n        assert main == 3\r\n```\r\n\r\n\r\n\r\n\r\n",
      "state": "OPEN",
      "createdAt": "2024-03-11T17:38:55Z",
      "updatedAt": "2024-12-30T08:05:17Z",
      "closedAt": null,
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "fix/overriden-extended-fixtures",
      "author": {
        "login": "andresliszt"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 6
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "fix test",
              "committedDate": "2024-03-18T20:48:37Z",
              "author": {
                "name": "Andres",
                "email": "andres.sandoval@alumnos.usm.cl",
                "user": {
                  "login": "andresliszt"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": [
          {
            "requestedReviewer": {
              "login": "bluetech"
            }
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "CHANGES_REQUESTED",
            "submittedAt": "2024-03-13T13:41:29Z",
            "body": "Thanks for the PR @andresliszt.\r\n\r\nAs currently implemented, this will potentially add *too* many names to the closure (where previously it would potentially miss some). This can happen if we have e.g. 3 levels of overrides (e.g. conftest, module, class), where -1 uses -2 but -2 doesn't use -3, and -3 has some extra dependencies. The current code adds -3's dependencies, but it shouldn't."
          },
          {
            "author": {
              "login": "Tusenka"
            },
            "state": "APPROVED",
            "submittedAt": "2024-12-30T08:05:17Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12109,
      "title": "[8.1.x] doc: add versionadded to `Stash` and `StashKey`",
      "body": "Backport of PR #12108 to 8.1.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2024-03-11T16:36:41Z",
      "updatedAt": "2024-03-11T16:52:33Z",
      "closedAt": "2024-03-11T16:52:32Z",
      "mergedAt": "2024-03-11T16:52:32Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "8.1.x",
      "headRefName": "backport-12108-to-8.1.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[8.1.x] doc: add versionadded to `Stash` and `StashKey`",
              "committedDate": "2024-03-11T16:36:40Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-11T16:36:53Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-11T16:38:50Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12108,
      "title": "doc: add versionadded to `Stash` and `StashKey`",
      "body": "Fixes #12107",
      "state": "MERGED",
      "createdAt": "2024-03-11T16:22:31Z",
      "updatedAt": "2024-03-11T16:36:27Z",
      "closedAt": "2024-03-11T16:36:17Z",
      "mergedAt": "2024-03-11T16:36:17Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "bluetech-patch-1",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "doc: add versionadded to `Stash` and `StashKey`\n\nFixes #12107",
              "committedDate": "2024-03-11T16:22:16Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-11T16:22:53Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12106,
      "title": "build(deps): Bump softprops/action-gh-release from 1 to 2",
      "body": "Bumps [softprops/action-gh-release](https://github.com/softprops/action-gh-release) from 1 to 2.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/softprops/action-gh-release/releases\">softprops/action-gh-release's releases</a>.</em></p>\n<blockquote>\n<h2>v2.0.0</h2>\n<ul>\n<li>update actions.yml declaration to node20 to address warnings</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/softprops/action-gh-release/blob/master/CHANGELOG.md\">softprops/action-gh-release's changelog</a>.</em></p>\n<blockquote>\n<h2>0.1.12</h2>\n<ul>\n<li>fix bug leading to empty strings subsituted for inputs users don't provide breaking api calls <a href=\"https://redirect.github.com/softprops/action-gh-release/pull/144\">#144</a></li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/softprops/action-gh-release/commit/d99959edae48b5ffffd7b00da66dcdb0a33a52ee\"><code>d99959e</code></a> prep release</li>\n<li><a href=\"https://github.com/softprops/action-gh-release/commit/0e39c679e8bac647fe5ad41070fe2295b0393d58\"><code>0e39c67</code></a> make pattern error opt in (<a href=\"https://redirect.github.com/softprops/action-gh-release/issues/417\">#417</a>)</li>\n<li><a href=\"https://github.com/softprops/action-gh-release/commit/20e085ccc73308c2c8e43ab8da4f8d7ecbb94d4e\"><code>20e085c</code></a> kick off 2.0.1 release</li>\n<li><a href=\"https://github.com/softprops/action-gh-release/commit/9f5c4d39bc56b5ed07f92f260dd05d33000058a6\"><code>9f5c4d3</code></a> update changelog</li>\n<li><a href=\"https://github.com/softprops/action-gh-release/commit/0bea76b22707a1871a52b97e07c80657071adb76\"><code>0bea76b</code></a> Add support for make_latest property (<a href=\"https://redirect.github.com/softprops/action-gh-release/issues/304\">#304</a>)</li>\n<li><a href=\"https://github.com/softprops/action-gh-release/commit/762fe13dfbc8921c36ebb81da5626a394a6a5b95\"><code>762fe13</code></a> typo in changelog</li>\n<li><a href=\"https://github.com/softprops/action-gh-release/commit/c0f2569fb90b35a0e2b043535a5778f437ec86ea\"><code>c0f2569</code></a> remove unused script</li>\n<li><a href=\"https://github.com/softprops/action-gh-release/commit/5743e060246b253faba6cb8e051511b63e7639c9\"><code>5743e06</code></a> update changelog</li>\n<li><a href=\"https://github.com/softprops/action-gh-release/commit/fe71fd3b919b0ad8636bb9a2930b15466814fbb7\"><code>fe71fd3</code></a> Don't swallow errors (<a href=\"https://redirect.github.com/softprops/action-gh-release/issues/384\">#384</a>)</li>\n<li><a href=\"https://github.com/softprops/action-gh-release/commit/9150ab13f3b0f0b7df0b9979d0e04968f5844d96\"><code>9150ab1</code></a> rebuild and update changelog</li>\n<li>Additional commits viewable in <a href=\"https://github.com/softprops/action-gh-release/compare/v1...v2\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=softprops/action-gh-release&package-manager=github_actions&previous-version=1&new-version=2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2024-03-11T03:44:12Z",
      "updatedAt": "2024-03-11T14:48:07Z",
      "closedAt": "2024-03-11T14:48:06Z",
      "mergedAt": "2024-03-11T14:48:06Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/github_actions/softprops/action-gh-release-2",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "github_actions"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump softprops/action-gh-release from 1 to 2\n\nBumps [softprops/action-gh-release](https://github.com/softprops/action-gh-release) from 1 to 2.\n- [Release notes](https://github.com/softprops/action-gh-release/releases)\n- [Changelog](https://github.com/softprops/action-gh-release/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/softprops/action-gh-release/compare/v1...v2)\n\n---\nupdated-dependencies:\n- dependency-name: softprops/action-gh-release\n  dependency-type: direct:production\n  update-type: version-update:semver-major\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2024-03-11T03:44:11Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 12105,
      "title": "build(deps): Bump pypa/gh-action-pypi-publish from 1.8.12 to 1.8.14",
      "body": "Bumps [pypa/gh-action-pypi-publish](https://github.com/pypa/gh-action-pypi-publish) from 1.8.12 to 1.8.14.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pypa/gh-action-pypi-publish/releases\">pypa/gh-action-pypi-publish's releases</a>.</em></p>\n<blockquote>\n<h2>v1.8.14</h2>\n<h2>\ud83d\udee0\ufe0f Internal Dependencies</h2>\n<p>Nothing changed feature-wise. The only notable update is that the underlying container runtime now uses Python 3.12 and pip has been updated to v24.0 there.\nThis is should go unnoticed in terms of behavior. It's just a bit of maintenance burden to be done occasionally by <a href=\"https://github.com/webknjaz\"><code>@\u200bwebknjaz</code></a><a href=\"https://github.com/sponsors/webknjaz\">\ud83d\udcb0</a>.\n<em>Enjoy!</em></p>\n<p><strong>\ud83e\ude9e Full Diff</strong>: <a href=\"https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.13...v1.8.14\">https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.13...v1.8.14</a></p>\n<p><strong>\ud83e\uddd4\u200d\u2642\ufe0f Release Manager:</strong> <a href=\"https://github.com/sponsors/webknjaz\"><code>@\u200bwebknjaz \ud83c\uddfa\ud83c\udde6</code></a></p>\n<h2>v1.8.13</h2>\n<h2>\ud83d\udc1b What's Fixed</h2>\n<p>This action is now able to consume and publish distribution packages with <code>Metadata-Version: 2.3</code> embedded.</p>\n<h2>\ud83d\udee0\ufe0f Internal Dependencies</h2>\n<p><a href=\"https://github.com/SigureMo\"><code>@\u200bSigureMo</code></a><a href=\"https://github.com/sponsors/SigureMo\">\ud83d\udcb0</a> sent us a bump of <code>pkginfo</code> version to version 1.10.0 in <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/219\">#219</a>. It's a transitive dependency for us and is not an API-level change but upgrading it has a side effect of letting Twine recognize distribution packages <a href=\"https://packaging.python.org/en/latest/specifications/core-metadata/\">declaring <code>Metadata-Version: 2.3</code></a>. In particular, it is known to affect distributions built with <code>Maturin &gt;= 1.5.0</code>.</p>\n<p>Following that, <a href=\"https://github.com/webknjaz\"><code>@\u200bwebknjaz</code></a><a href=\"https://github.com/sponsors/webknjaz\">\ud83d\udcb0</a> upgraded other transitive and direct dependency pins, including, among others, the following notable bumps:</p>\n<ul>\n<li><code>cryptography == 42.0.5</code></li>\n<li><code>id == 1.3.0</code></li>\n<li><code>readme-renderer == 43.0</code></li>\n<li><code>Twine == 5.0.0</code></li>\n</ul>\n<h2>\ud83d\udcaa New Contributors</h2>\n<p><a href=\"https://github.com/SigureMo\"><code>@\u200bSigureMo</code></a> made their first contribution in <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/219\">pypa/gh-action-pypi-publish#219</a></p>\n<p><strong>\ud83e\ude9e Full Diff</strong>: <a href=\"https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.12...v1.8.13\">https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.12...v1.8.13</a></p>\n<p><strong>\ud83e\uddd4\u200d\u2642\ufe0f Release Manager:</strong> <a href=\"https://github.com/sponsors/webknjaz\"><code>@\u200bwebknjaz \ud83c\uddfa\ud83c\udde6</code></a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/81e9d935c883d0b210363ab89cf05f3894778450\"><code>81e9d93</code></a> Bump <code>pip</code> to v24.0 in runtime prerequisites lock</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/91527c458390474c5819b35ab7abcb3022765f53\"><code>91527c4</code></a> Regenerate lockfiles with pip-tools v7.4.1</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/3a817c6dce8e9186e7899e6157645f4fa1ef3ff7\"><code>3a817c6</code></a> Bump action runtime to CPython 3.12</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/741947b9cadc96c98b60dd2f32f89a5ef7fb113c\"><code>741947b</code></a> Add a config file for <code>pip-tools</code></li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/d7af439579d0985b19d873ba4ab5240de757fb62\"><code>d7af439</code></a> Mass-bump transitive dependencies of runtime</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/e90ddca975a62d08c9029e5f71135ef7928a0116\"><code>e90ddca</code></a> Bump <code>readme-renderer</code> to v43.0</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/dae7fa3e8d90ecdafb12bea86ead2a16d6503035\"><code>dae7fa3</code></a> Bump Twine to v5.0.0</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/0fe04ae7d9a3e6f37a4b756a0000a91d3ffd28a9\"><code>0fe04ae</code></a> Bump <code>id</code> to v1.3.0</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/444e17980bb9fc7eb981c1e8ecd3da06b2e90a9a\"><code>444e179</code></a> Bump cryptography to v42.0.5</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/820be4e5e3485ab854b2a2a39be37d4d3a30d811\"><code>820be4e</code></a> Normalize pip-tools' header comment @ <code>runtime.txt</code></li>\n<li>Additional commits viewable in <a href=\"https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.12...v1.8.14\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pypa/gh-action-pypi-publish&package-manager=github_actions&previous-version=1.8.12&new-version=1.8.14)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2024-03-11T03:44:10Z",
      "updatedAt": "2024-03-11T06:04:20Z",
      "closedAt": "2024-03-11T06:04:20Z",
      "mergedAt": "2024-03-11T06:04:20Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/github_actions/pypa/gh-action-pypi-publish-1.8.14",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "github_actions"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump pypa/gh-action-pypi-publish from 1.8.12 to 1.8.14\n\nBumps [pypa/gh-action-pypi-publish](https://github.com/pypa/gh-action-pypi-publish) from 1.8.12 to 1.8.14.\n- [Release notes](https://github.com/pypa/gh-action-pypi-publish/releases)\n- [Commits](https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.12...v1.8.14)\n\n---\nupdated-dependencies:\n- dependency-name: pypa/gh-action-pypi-publish\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2024-03-11T03:44:09Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-11T06:04:14Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12104,
      "title": "build(deps): Bump pytest-asyncio from 0.23.5 to 0.23.5.post1 in /testing/plugins_integration",
      "body": "Bumps [pytest-asyncio](https://github.com/pytest-dev/pytest-asyncio) from 0.23.5 to 0.23.5.post1.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pytest-dev/pytest-asyncio/releases\">pytest-asyncio's releases</a>.</em></p>\n<blockquote>\n<h2>pytest-asyncio 0.23.5.post1</h2>\n<h1>0.23.5 (2024-02-09)</h1>\n<ul>\n<li>Declare compatibility with pytest 8 <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/issues/737\">#737</a></li>\n<li>Fix typing errors with recent versions of mypy <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/issues/769\">#769</a></li>\n<li>Prevent DeprecationWarning about internal use of <code>asyncio.get_event_loop()</code> from affecting test cases <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/issues/757\">#757</a></li>\n</ul>\n<h2>Known issues</h2>\n<p>As of v0.23, pytest-asyncio attaches an asyncio event loop to each item of the test suite (i.e. session, packages, modules, classes, functions) and allows tests to be run in those loops when marked accordingly. Pytest-asyncio currently assumes that async fixture scope is correlated with the new event loop scope. This prevents fixtures from being evaluated independently from the event loop scope and breaks some existing test suites (see <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/issues/706\">#706</a>). For example, a test suite may require all fixtures and tests to run in the same event loop, but have async fixtures that are set up and torn down for each module. If you're affected by this issue, please continue using the v0.21 release, until it is resolved.</p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/b22d84e1f0d53920352be4c66d1b6c7f7a9ce005\"><code>b22d84e</code></a> [docs] Fixes the example showing how to run all tests in a session-scoped loop.</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/f1de446a37b426f5882b103d5c2fd2f3045b1f01\"><code>f1de446</code></a> Build(deps): Bump hypothesis in /dependencies/default</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/b60649a648912a79ce6f3443ca7ac2c67fe9a5b7\"><code>b60649a</code></a> Build(deps): Bump urllib3 from 2.2.0 to 2.2.1 in /dependencies/docs</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/4baec47b8514b405e97a14a1d6c42fa07af8fb0a\"><code>4baec47</code></a> Build(deps): Bump typing-extensions in /dependencies/default</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/d44e3ac013cb3b6736492d3f920fb8820f3c8bbf\"><code>d44e3ac</code></a> Build(deps): Bump pytest from 8.0.0 to 8.0.2 in /dependencies/default</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/cefa62e7d007b5aa0add7bd58a3e33f246daee71\"><code>cefa62e</code></a> Build(deps): Bump coverage from 7.4.1 to 7.4.3 in /dependencies/default</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/290886063f1da8ec1865cd2cdae721b0ebb89edf\"><code>2908860</code></a> Build(deps): Bump hypothesis in /dependencies/default</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/20bd7d87bec30ee49a2ec1adc8df8857fc0a69ac\"><code>20bd7d8</code></a> Build(deps): Bump pypa/gh-action-pypi-publish from 1.8.11 to 1.8.12</li>\n<li>See full diff in <a href=\"https://github.com/pytest-dev/pytest-asyncio/compare/v0.23.5...v0.23.5.post1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pytest-asyncio&package-manager=pip&previous-version=0.23.5&new-version=0.23.5.post1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "CLOSED",
      "createdAt": "2024-03-11T03:26:51Z",
      "updatedAt": "2024-03-13T13:42:57Z",
      "closedAt": "2024-03-13T13:42:48Z",
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "dependabot/pip/testing/plugins_integration/pytest-asyncio-0.23.5.post1",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "python"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump pytest-asyncio in /testing/plugins_integration\n\nBumps [pytest-asyncio](https://github.com/pytest-dev/pytest-asyncio) from 0.23.5 to 0.23.5.post1.\n- [Release notes](https://github.com/pytest-dev/pytest-asyncio/releases)\n- [Commits](https://github.com/pytest-dev/pytest-asyncio/compare/v0.23.5...v0.23.5.post1)\n\n---\nupdated-dependencies:\n- dependency-name: pytest-asyncio\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2024-03-11T06:06:52Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 12103,
      "title": "build(deps): Bump django from 5.0.2 to 5.0.3 in /testing/plugins_integration",
      "body": "Bumps [django](https://github.com/django/django) from 5.0.2 to 5.0.3.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/django/django/commit/4b64d7285c4aa592c902985b6284ee3afe904595\"><code>4b64d72</code></a> [5.0.x] Bumped version for 5.0.3 release.</li>\n<li><a href=\"https://github.com/django/django/commit/3394fc6132436eca89e997083bae9985fb7e761e\"><code>3394fc6</code></a> [5.0.x] Fixed CVE-2024-27351 -- Prevented potential ReDoS in Truncator.words().</li>\n<li><a href=\"https://github.com/django/django/commit/80761c3b01fbbbe2da1761937edd20251a86fbee\"><code>80761c3</code></a> [5.0.x] Fixed <a href=\"https://redirect.github.com/django/django/issues/35198\">#35198</a> -- Fixed facet filters crash on querysets with no primar...</li>\n<li><a href=\"https://github.com/django/django/commit/24de8113a829bc137610cee35faf18483a337b86\"><code>24de811</code></a> [5.0.x] Fixed typo in docs/ref/contrib/admin/index.txt.</li>\n<li><a href=\"https://github.com/django/django/commit/bf7fedc4466f0c68130d9885f90dc8c17c8894d5\"><code>bf7fedc</code></a> [5.0.x] Removed #django-geo IRC channel in docs.</li>\n<li><a href=\"https://github.com/django/django/commit/a8de04f8db470d1c43f945f28a00fb49b1f2ca80\"><code>a8de04f</code></a> [5.0.x] Refs <a href=\"https://redirect.github.com/django/django/issues/34964\">#34964</a> -- Doc'd that Q expression order is preserved.</li>\n<li><a href=\"https://github.com/django/django/commit/b1f2833bc406529b86f6152354c3798a6f092b2b\"><code>b1f2833</code></a> [5.0.x] Added release date for 5.0.3, 4.2.11, and 3.2.25.</li>\n<li><a href=\"https://github.com/django/django/commit/5d9be66c98fe4e16a0295d0252d1c944980a822e\"><code>5d9be66</code></a> [5.0.x] Removed distracting note from tutorial 4.</li>\n<li><a href=\"https://github.com/django/django/commit/69e5b13c758cec55edbab342da8be509557589f4\"><code>69e5b13</code></a> [5.0.x] Fixed <a href=\"https://redirect.github.com/django/django/issues/35238\">#35238</a> -- Fixed database serialization crash when base managers...</li>\n<li><a href=\"https://github.com/django/django/commit/e72fdc850a7c7703a5e019de127a4256bc136479\"><code>e72fdc8</code></a> [5.0.x] Fixed <a href=\"https://redirect.github.com/django/django/issues/35153\">#35153</a> -- Added note about locale name notation to FORMAT_MODUL...</li>\n<li>Additional commits viewable in <a href=\"https://github.com/django/django/compare/5.0.2...5.0.3\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=django&package-manager=pip&previous-version=5.0.2&new-version=5.0.3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2024-03-11T03:26:48Z",
      "updatedAt": "2024-03-11T06:05:42Z",
      "closedAt": "2024-03-11T06:05:41Z",
      "mergedAt": "2024-03-11T06:05:41Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/pip/testing/plugins_integration/django-5.0.3",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "python"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump django in /testing/plugins_integration\n\nBumps [django](https://github.com/django/django) from 5.0.2 to 5.0.3.\n- [Commits](https://github.com/django/django/compare/5.0.2...5.0.3)\n\n---\nupdated-dependencies:\n- dependency-name: django\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2024-03-11T03:26:47Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-11T06:05:36Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12102,
      "title": "[8.1.x] doc/flaky: remove `box/flaky` plugin suggestion",
      "body": "Backport of PR #12100 to 8.1.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2024-03-10T14:51:23Z",
      "updatedAt": "2024-03-10T15:08:02Z",
      "closedAt": "2024-03-10T15:08:01Z",
      "mergedAt": "2024-03-10T15:08:01Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "8.1.x",
      "headRefName": "backport-12100-to-8.1.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[8.1.x] doc/flaky: remove `box/flaky` plugin suggestion",
              "committedDate": "2024-03-10T14:51:22Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-10T14:54:40Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12101,
      "title": "Remove flaky plugin from the docs",
      "body": "As discussed in https://github.com/box/flaky/issues/198, `flaky` does not seem to be maintained anymore, so no longer recommend it in the documentation.\r\n\r\n<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "CLOSED",
      "createdAt": "2024-03-10T14:39:05Z",
      "updatedAt": "2024-03-10T14:45:22Z",
      "closedAt": "2024-03-10T14:45:19Z",
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "remove-flaky",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Remove flaky plugin from the docs\n\nAs discussed in https://github.com/box/flaky/issues/198, `flaky` does not seem to be maintained anymore, so no longer recommend it in the documentation.",
              "committedDate": "2024-03-10T14:37:49Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 12100,
      "title": "doc/flaky: remove `box/flaky` plugin suggestion",
      "body": "The plugin is abandoned and no longer working with new pytest versions.\r\n\r\nI also reordered a bit to put pytest-rerunfailures first since it seems most maintained and is under pytest-dev.",
      "state": "MERGED",
      "createdAt": "2024-03-10T14:27:33Z",
      "updatedAt": "2024-03-10T14:51:09Z",
      "closedAt": "2024-03-10T14:51:04Z",
      "mergedAt": "2024-03-10T14:51:04Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "bluetech-patch-1",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "doc/flaky: remove `box/flaky` plugin suggestion\n\nThe plugin is abandoned and no longer working with new pytest versions.\r\n\r\nI also reordered a bit to put pytest-rerunfailures first since it seems most maintained and is under pytest-dev.",
              "committedDate": "2024-03-10T14:27:13Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-10T14:45:29Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12098,
      "title": "[automated] Update plugin list",
      "body": "[automated] Update plugin list",
      "state": "MERGED",
      "createdAt": "2024-03-10T00:19:47Z",
      "updatedAt": "2024-03-10T12:57:14Z",
      "closedAt": "2024-03-10T12:57:14Z",
      "mergedAt": "2024-03-10T12:57:13Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "update-plugin-list/patch-b90da34a8",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[automated] Update plugin list",
              "committedDate": "2024-03-10T00:19:45Z",
              "author": {
                "name": "pytest bot",
                "email": "pytestbot@users.noreply.github.com",
                "user": {
                  "login": "pytestbot"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 12096,
      "title": " python: fix instance handling in static and class method tests",
      "body": "and also fixes a regression in pytest 8.0.0 where `setup_method` crashes if the class has static or class method tests.\r\n\r\nIt is allowed to have a test class with static/class methods which request non-static/class method fixtures (including `setup_method` xunit-fixture). I take it as a given that we need to support this somewhat odd scenario (stdlib unittest also supports it).\r\n\r\nThis raises a question -- when a staticmethod test requests a bound fixture, what is that fixture's `self`?\r\n\r\nstdlib unittest says - a fresh instance for the test.\r\n\r\nPreviously, pytest said - some instance that is shared by all static/class methods. This is definitely broken since it breaks test isolation.\r\n\r\nChange pytest to behave like stdlib unittest here.\r\n\r\nIn practice, this means stopping to rely on `self.obj.__self__` to get to the instance from the test function's binding. This doesn't work because staticmethods are not bound to anything.\r\n\r\nInstead, keep the instance explicitly and use that.\r\n\r\nBTW, I think this will allow us to change `Class`'s fixture collection (`parsefactories`) to happen on the class itself instead of a class instance, allowing us to avoid one class instantiation. But needs more work.\r\n\r\nFixes https://github.com/pytest-dev/pytest/issues/12065.",
      "state": "MERGED",
      "createdAt": "2024-03-09T17:38:16Z",
      "updatedAt": "2024-03-10T14:29:09Z",
      "closedAt": "2024-03-10T14:29:06Z",
      "mergedAt": "2024-03-10T14:29:06Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "staticmethod-instance",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "python: fix instance handling in static and class method tests\n\nand also fixes a regression in pytest 8.0.0 where `setup_method` crashes\nif the class has static or class method tests.\n\nIt is allowed to have a test class with static/class methods which\nrequest non-static/class method fixtures (including `setup_method`\nxunit-fixture). I take it as a given that we need to support this\nsomewhat odd scenario (stdlib unittest also supports it).\n\nThis raises a question -- when a staticmethod test requests a bound\nfixture, what is that fixture's `self`?\n\nstdlib unittest says - a fresh instance for the test.\n\nPreviously, pytest said - some instance that is shared by all\nstatic/class methods. This is definitely broken since it breaks test\nisolation.\n\nChange pytest to behave like stdlib unittest here.\n\nIn practice, this means stopping to rely on `self.obj.__self__` to get\nto the instance from the test function's binding. This doesn't work\nbecause staticmethods are not bound to anything.\n\nInstead, keep the instance explicitly and use that.\n\nBTW, I think this will allow us to change `Class`'s fixture collection\n(`parsefactories`) to happen on the class itself instead of a class\ninstance, allowing us to avoid one class instantiation. But needs more\nwork.\n\nFixes #12065.",
              "committedDate": "2024-03-09T17:35:54Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-09T19:03:56Z",
            "body": "Great work!"
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-03-09T20:19:21Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-03-09T20:24:03Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12095,
      "title": "Cherry pick release 8.1.1",
      "body": "Prepare release 8.1.1\r\n\r\n(cherry picked from commit abb0cf4922919e3554bd16e9fc540bc107289ee9)\r\n",
      "state": "MERGED",
      "createdAt": "2024-03-09T11:53:07Z",
      "updatedAt": "2024-03-09T18:51:34Z",
      "closedAt": "2024-03-09T17:39:15Z",
      "mergedAt": "2024-03-09T17:39:15Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "cherry-pick-release",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Merge pull request #12094 from pytest-dev/release-8.1.1\n\nPrepare release 8.1.1\n\n(cherry picked from commit abb0cf4922919e3554bd16e9fc540bc107289ee9)",
              "committedDate": "2024-03-09T11:52:31Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "nicoddemus@gmail.com",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-09T17:39:00Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12094,
      "title": "Prepare release 8.1.1",
      "body": "Created by the [prepare release pr](https://github.com/pytest-dev/pytest/actions/workflows/prepare-release-pr.yml) workflow.\n\nOnce all builds pass and it has been **approved** by one or more maintainers, start the [deploy](https://github.com/pytest-dev/pytest/actions/workflows/deploy.yml) workflow, using these parameters:\n\n* `Use workflow from`: `release-8.1.1`.\n* `Release version`: `8.1.1`.\n\nOr execute on the command line:\n\n```console\ngh workflow run deploy.yml -r release-8.1.1 -f version=8.1.1\n```\n\nAfter the workflow has been approved by a core maintainer, the package will be uploaded to PyPI automatically.\n",
      "state": "MERGED",
      "createdAt": "2024-03-08T23:27:23Z",
      "updatedAt": "2024-03-09T11:51:21Z",
      "closedAt": "2024-03-09T11:51:20Z",
      "mergedAt": "2024-03-09T11:51:20Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "8.1.x",
      "headRefName": "release-8.1.1",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Adjust changelog manually for 8.1.1\n\nMoved all the release notes from 8.1.0 to 8.1.0, adding a note explaining the exceptional case for this release.",
              "committedDate": "2024-03-09T11:31:12Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-09T06:51:06Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12093,
      "title": "[8.1.x] Revert legacy path removals",
      "body": "Backport of PR #12087 to 8.1.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2024-03-08T23:07:08Z",
      "updatedAt": "2024-03-08T23:24:33Z",
      "closedAt": "2024-03-08T23:24:32Z",
      "mergedAt": "2024-03-08T23:24:32Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "8.1.x",
      "headRefName": "backport-12087-to-8.1.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[8.1.x] Revert legacy path removals",
              "committedDate": "2024-03-08T23:07:07Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "nicoddemus@gmail.com",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-08T23:10:44Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12092,
      "title": "fixtures: a few more cleanups",
      "body": "These are a few more cleanup commits to the fixtures code, in the continuing quest to bring out its inner beauty :)",
      "state": "MERGED",
      "createdAt": "2024-03-08T22:17:46Z",
      "updatedAt": "2024-03-09T06:55:41Z",
      "closedAt": "2024-03-09T06:55:38Z",
      "mergedAt": "2024-03-09T06:55:38Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "fixture-cleanup",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "fixtures: simplify a bit of code",
              "committedDate": "2024-03-08T22:02:06Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-09T00:11:22Z",
            "body": "Looks great, nice cleanup!"
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-09T06:32:51Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12089,
      "title": "unittest: make `obj` work more like `Function`/`Class`",
      "body": "Previously, the `obj` of a `TestCaseFunction` (the unittest plugin item type) was the unbound method. This is unlike regular `Class` where the `obj` is a bound method to a fresh instance.\r\n    \r\nThis difference necessitated several special cases in in places outside of the unittest plugin, such as `FixtureDef` and `FixtureRequest`, and made things a bit harder to understand.\r\n    \r\nInstead, match how the python plugin does it, including collecting fixtures from a fresh instance.\r\n    \r\nThe downside is that now this instance for fixture-collection is kept around in memory, but it's the same as `Class` so nothing new. Users should only initialize stuff in `setUp`/`setUpClass` and similar methods, and not in `__init__` which is generally off-limits in `TestCase` subclasses.\r\n    \r\nI am not sure why there was a difference in the first place, though I will say the previous unittest approach is probably the preferable one, but first let's get consistency.\r\n",
      "state": "MERGED",
      "createdAt": "2024-03-08T10:04:34Z",
      "updatedAt": "2024-05-01T22:52:04Z",
      "closedAt": "2024-03-08T18:50:28Z",
      "mergedAt": "2024-03-08T18:50:28Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "unittest-obj",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "unittest: make `obj` work more like `Function`/`Class`\n\nPreviously, the `obj` of a `TestCaseFunction` (the unittest plugin item\ntype) was the unbound method. This is unlike regular `Class` where the\n`obj` is a bound method to a fresh instance.\n\nThis difference necessitated several special cases in in places outside\nof the unittest plugin, such as `FixtureDef` and `FixtureRequest`, and\nmade things a bit harder to understand.\n\nInstead, match how the python plugin does it, including collecting\nfixtures from a fresh instance.\n\nThe downside is that now this instance for fixture-collection is kept\naround in memory, but it's the same as `Class` so nothing new. Users\nshould only initialize stuff in `setUp`/`setUpClass` and similar\nmethods, and not in `__init__` which is generally off-limits in\n`TestCase` subclasses.\n\nI am not sure why there was a difference in the first place, though I\nwill say the previous unittest approach is probably the preferable one,\nbut first let's get consistency.",
              "committedDate": "2024-03-08T12:03:26Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-08T11:11:29Z",
            "body": "Looks great, thanks!\r\n\r\nLeft minor comments."
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-03-08T12:04:27Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-03-08T12:05:04Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-03-08T12:05:43Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12087,
      "title": "Revert legacy path removals",
      "body": "This reverts commits 6c89f9261c6f5bde93bd116ef56b7ac96fc0ef21 and a98f02d4238793300f1be01f75bf0fff5609a241 (as usual, thanks @bluetech for care with the git commit history), bringing back the legacy path arguments to hooks and `Node` constructors.\r\n\r\nWe will need to manually fix the changelog for `8.1.1` at the time of release.\r\n\r\nFix #12069",
      "state": "MERGED",
      "createdAt": "2024-03-07T22:40:48Z",
      "updatedAt": "2024-03-08T23:06:53Z",
      "closedAt": "2024-03-08T23:06:47Z",
      "mergedAt": "2024-03-08T23:06:47Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "revert-path-deprecations",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 5
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Add changelog entry for #12069",
              "committedDate": "2024-03-07T22:50:33Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-08T09:02:25Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-08T18:48:40Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12085,
      "title": "Parse args from file",
      "body": "Fixes #11871 using the proposed solution in https://github.com/pytest-dev/pytest/issues/11871#issuecomment-1978689250\r\n\r\nAdds support for reading ``file_or_dir`` positional arguments from a file\r\nusing the prefix character '@', like e.g.:\r\n\r\n`pytest @tests.txt`\r\n\r\n\r\nAdded tests, but not sure how/where to add documentation, I'm guessing it should be in the output of `pytest --help`?",
      "state": "MERGED",
      "createdAt": "2024-03-06T23:17:47Z",
      "updatedAt": "2024-08-23T13:56:00Z",
      "closedAt": "2024-03-09T06:51:52Z",
      "mergedAt": "2024-03-09T06:51:52Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "parse_args_from_file",
      "author": {
        "login": "levsa"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 10
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Update 11871.feature.rst",
              "committedDate": "2024-03-08T22:15:12Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "CHANGES_REQUESTED",
            "submittedAt": "2024-03-07T15:21:02Z",
            "body": "Thanks!\r\n\r\nCan you also add a test using `pytester` to `testing/acceptance_test.py`? This will make sure it works end-to-end."
          },
          {
            "author": {
              "login": "levsa"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-03-07T19:38:18Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-03-08T10:16:30Z",
            "body": "A few small comments, but with them I think this is good to go."
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "CHANGES_REQUESTED",
            "submittedAt": "2024-03-08T12:23:08Z",
            "body": "Great work, thanks!\r\n\r\n\r\nWe should add this feature to the docs, I think here is a good place to mention it:\r\n\r\nhttps://docs.pytest.org/en/stable/how-to/usage.html#specifying-which-tests-to-run"
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-08T18:49:57Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-08T22:12:16Z",
            "body": "LGTM!"
          }
        ]
      }
    },
    {
      "number": 12082,
      "title": "change param_index if param is pseudofixturedef",
      "body": "fix #12008",
      "state": "OPEN",
      "createdAt": "2024-03-06T08:24:07Z",
      "updatedAt": "2024-03-24T07:43:57Z",
      "closedAt": null,
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "fix_multiparam_sorting",
      "author": {
        "login": "ShurikMen"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "same param_index usage for markers params and fixtures params",
              "committedDate": "2024-03-24T07:36:13Z",
              "author": {
                "name": "Aleksandr Brodin",
                "email": "sank.brodin@gmail.com",
                "user": {
                  "login": "ShurikMen"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "sadra-barikbin"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-03-13T14:41:10Z",
            "body": ""
          },
          {
            "author": {
              "login": "ShurikMen"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-03-20T01:52:09Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12077,
      "title": "[8.1.x] Do not import duplicated modules with --importmode=importlib",
      "body": "Backport of PR #12074 to 8.1.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2024-03-04T15:45:17Z",
      "updatedAt": "2024-03-04T16:06:00Z",
      "closedAt": "2024-03-04T16:05:59Z",
      "mergedAt": "2024-03-04T16:05:59Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "8.1.x",
      "headRefName": "backport-12074-to-8.1.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[8.1.x] Do not import duplicated modules with --importmode=importlib",
              "committedDate": "2024-03-04T15:45:15Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "nicoddemus@gmail.com",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-04T15:45:34Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12076,
      "title": "[8.1.x] Yank version 8.1.0",
      "body": "Backport of PR #12075 to 8.1.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2024-03-04T15:21:33Z",
      "updatedAt": "2024-03-04T15:24:03Z",
      "closedAt": "2024-03-04T15:24:02Z",
      "mergedAt": "2024-03-04T15:24:02Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "8.1.x",
      "headRefName": "backport-12075-to-8.1.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[8.1.x] Yank version 8.1.0",
              "committedDate": "2024-03-04T15:21:31Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "nicoddemus@gmail.com",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 12075,
      "title": "Yank version 8.1.0",
      "body": "Related to #12069.",
      "state": "MERGED",
      "createdAt": "2024-03-04T15:18:02Z",
      "updatedAt": "2024-03-04T15:26:22Z",
      "closedAt": "2024-03-04T15:21:12Z",
      "mergedAt": "2024-03-04T15:21:12Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "yank-8.1.0",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Yank version 8.1.0\n\nRelated to #12069",
              "committedDate": "2024-03-04T15:18:14Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": [
          {
            "requestedReviewer": {
              "login": "RonnyPfannschmidt"
            }
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-04T15:19:25Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12074,
      "title": "Do not import duplicated modules with --importmode=importlib",
      "body": "Regression brought up by #11475.\r\n",
      "state": "MERGED",
      "createdAt": "2024-03-04T15:09:00Z",
      "updatedAt": "2024-07-04T07:45:12Z",
      "closedAt": "2024-03-04T15:44:56Z",
      "mergedAt": "2024-03-04T15:44:56Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "11475-duplicated-imports",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 10
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Do not import duplicated modules with --importmode=importlib\n\nRegression brought up by #11475.",
              "committedDate": "2024-03-04T15:08:18Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-04T15:21:49Z",
            "body": "Regardless of whether it fixes @flying-sheep's issue, the change LGTM"
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-07-04T07:45:12Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12070,
      "title": "add myself as tidelifter",
      "body": "- **add myself to tidelift**\n",
      "state": "MERGED",
      "createdAt": "2024-03-04T12:03:15Z",
      "updatedAt": "2024-03-04T13:01:53Z",
      "closedAt": "2024-03-04T13:01:53Z",
      "mergedAt": "2024-03-04T13:01:53Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "lift",
      "author": {
        "login": "RonnyPfannschmidt"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "add myself to tidelift",
              "committedDate": "2024-03-04T11:59:54Z",
              "author": {
                "name": "Ronny Pfannschmidt",
                "email": "opensource@ronnypfannschmidt.de",
                "user": {
                  "login": "RonnyPfannschmidt"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-04T13:01:46Z",
            "body": "Thanks!"
          }
        ]
      }
    },
    {
      "number": 12058,
      "title": "build(deps): Bump peter-evans/create-pull-request from 6.0.0 to 6.0.1",
      "body": "Bumps [peter-evans/create-pull-request](https://github.com/peter-evans/create-pull-request) from 6.0.0 to 6.0.1.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/peter-evans/create-pull-request/releases\">peter-evans/create-pull-request's releases</a>.</em></p>\n<blockquote>\n<h2>Create Pull Request v6.0.1</h2>\n<p>\u2699\ufe0f Fixes <a href=\"https://redirect.github.com/peter-evans/create-pull-request/issues/2790\">an issue</a> where updating a pull request leads to the error <code>Cannot read properties of undefined (reading 'number')</code>. This was likely caused by GitHub fixing a long standing bug with an API endpoint, resulting in a breaking change.</p>\n<h2>What's Changed</h2>\n<ul>\n<li>build(deps-dev): bump <code>@\u200btypes/jest</code> from 29.5.11 to 29.5.12 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/peter-evans/create-pull-request/pull/2730\">peter-evans/create-pull-request#2730</a></li>\n<li>build(deps-dev): bump prettier from 3.2.4 to 3.2.5 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/peter-evans/create-pull-request/pull/2731\">peter-evans/create-pull-request#2731</a></li>\n<li>build(deps-dev): bump <code>@\u200btypes/node</code> from 18.19.10 to 18.19.14 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/peter-evans/create-pull-request/pull/2732\">peter-evans/create-pull-request#2732</a></li>\n<li>build(deps): bump peter-evans/slash-command-dispatch from 3 to 4 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/peter-evans/create-pull-request/pull/2748\">peter-evans/create-pull-request#2748</a></li>\n<li>build(deps): bump peter-evans/create-pull-request from 5 to 6 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/peter-evans/create-pull-request/pull/2747\">peter-evans/create-pull-request#2747</a></li>\n<li>build(deps-dev): bump <code>@\u200btypes/node</code> from 18.19.14 to 18.19.15 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/peter-evans/create-pull-request/pull/2759\">peter-evans/create-pull-request#2759</a></li>\n<li>build(deps-dev): bump eslint-plugin-jest from 27.6.3 to 27.9.0 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/peter-evans/create-pull-request/pull/2769\">peter-evans/create-pull-request#2769</a></li>\n<li>build(deps-dev): bump <code>@\u200btypes/node</code> from 18.19.15 to 18.19.17 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/peter-evans/create-pull-request/pull/2768\">peter-evans/create-pull-request#2768</a></li>\n<li>build(deps-dev): bump <code>@\u200btypes/node</code> from 18.19.17 to 18.19.18 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/peter-evans/create-pull-request/pull/2780\">peter-evans/create-pull-request#2780</a></li>\n<li>build(deps-dev): bump eslint from 8.56.0 to 8.57.0 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/peter-evans/create-pull-request/pull/2781\">peter-evans/create-pull-request#2781</a></li>\n<li>fix: list pulls using the correct head format by <a href=\"https://github.com/peter-evans\"><code>@\u200bpeter-evans</code></a> in <a href=\"https://redirect.github.com/peter-evans/create-pull-request/pull/2792\">peter-evans/create-pull-request#2792</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/peter-evans/create-pull-request/compare/v6.0.0...v6.0.1\">https://github.com/peter-evans/create-pull-request/compare/v6.0.0...v6.0.1</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/peter-evans/create-pull-request/commit/a4f52f8033a6168103c2538976c07b467e8163bc\"><code>a4f52f8</code></a> fix: list pulls using the correct head format (<a href=\"https://redirect.github.com/peter-evans/create-pull-request/issues/2792\">#2792</a>)</li>\n<li><a href=\"https://github.com/peter-evans/create-pull-request/commit/853c071bcf61c8762f57e59c1576d97418f495ad\"><code>853c071</code></a> build(deps-dev): bump eslint from 8.56.0 to 8.57.0 (<a href=\"https://redirect.github.com/peter-evans/create-pull-request/issues/2781\">#2781</a>)</li>\n<li><a href=\"https://github.com/peter-evans/create-pull-request/commit/d2c126edc79e6a215930e9a6adc95b7686b84f78\"><code>d2c126e</code></a> build(deps-dev): bump <code>@\u200btypes/node</code> from 18.19.17 to 18.19.18 (<a href=\"https://redirect.github.com/peter-evans/create-pull-request/issues/2780\">#2780</a>)</li>\n<li><a href=\"https://github.com/peter-evans/create-pull-request/commit/43d39c683601267cd565ea6bd727a4e92aa00852\"><code>43d39c6</code></a> build(deps-dev): bump <code>@\u200btypes/node</code> from 18.19.15 to 18.19.17 (<a href=\"https://redirect.github.com/peter-evans/create-pull-request/issues/2768\">#2768</a>)</li>\n<li><a href=\"https://github.com/peter-evans/create-pull-request/commit/5a9d206da2b6452cd63eb84e2e5116ff3213e8cb\"><code>5a9d206</code></a> build(deps-dev): bump eslint-plugin-jest from 27.6.3 to 27.9.0 (<a href=\"https://redirect.github.com/peter-evans/create-pull-request/issues/2769\">#2769</a>)</li>\n<li><a href=\"https://github.com/peter-evans/create-pull-request/commit/e0743ed96cb63913cf4be3cd1f5492df2ae1c6a4\"><code>e0743ed</code></a> build(deps-dev): bump <code>@\u200btypes/node</code> from 18.19.14 to 18.19.15 (<a href=\"https://redirect.github.com/peter-evans/create-pull-request/issues/2759\">#2759</a>)</li>\n<li><a href=\"https://github.com/peter-evans/create-pull-request/commit/e1529cb8abb50dd7240e4276b5c4e705d97be7e7\"><code>e1529cb</code></a> build(deps): bump peter-evans/create-pull-request from 5 to 6 (<a href=\"https://redirect.github.com/peter-evans/create-pull-request/issues/2747\">#2747</a>)</li>\n<li><a href=\"https://github.com/peter-evans/create-pull-request/commit/aad52e87e709ba797765001128cf194c946a457b\"><code>aad52e8</code></a> build(deps): bump peter-evans/slash-command-dispatch from 3 to 4 (<a href=\"https://redirect.github.com/peter-evans/create-pull-request/issues/2748\">#2748</a>)</li>\n<li><a href=\"https://github.com/peter-evans/create-pull-request/commit/a64ebdd73452502a4dd07379ce8f3640dcc0d987\"><code>a64ebdd</code></a> build(deps-dev): bump <code>@\u200btypes/node</code> from 18.19.10 to 18.19.14 (<a href=\"https://redirect.github.com/peter-evans/create-pull-request/issues/2732\">#2732</a>)</li>\n<li><a href=\"https://github.com/peter-evans/create-pull-request/commit/51b40aff5f23f35e5211017631b0bc1d2746beab\"><code>51b40af</code></a> build(deps-dev): bump prettier from 3.2.4 to 3.2.5 (<a href=\"https://redirect.github.com/peter-evans/create-pull-request/issues/2731\">#2731</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/peter-evans/create-pull-request/compare/b1ddad2c994a25fbc81a28b3ec0e368bb2021c50...a4f52f8033a6168103c2538976c07b467e8163bc\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=peter-evans/create-pull-request&package-manager=github_actions&previous-version=6.0.0&new-version=6.0.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "CLOSED",
      "createdAt": "2024-03-04T03:47:27Z",
      "updatedAt": "2024-03-08T12:07:59Z",
      "closedAt": "2024-03-08T12:07:51Z",
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "dependabot/github_actions/peter-evans/create-pull-request-6.0.1",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "github_actions"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump peter-evans/create-pull-request from 6.0.0 to 6.0.1\n\nBumps [peter-evans/create-pull-request](https://github.com/peter-evans/create-pull-request) from 6.0.0 to 6.0.1.\n- [Release notes](https://github.com/peter-evans/create-pull-request/releases)\n- [Commits](https://github.com/peter-evans/create-pull-request/compare/b1ddad2c994a25fbc81a28b3ec0e368bb2021c50...a4f52f8033a6168103c2538976c07b467e8163bc)\n\n---\nupdated-dependencies:\n- dependency-name: peter-evans/create-pull-request\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2024-03-04T03:47:26Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 12057,
      "title": "build(deps): Bump pypa/gh-action-pypi-publish from 1.8.11 to 1.8.12",
      "body": "Bumps [pypa/gh-action-pypi-publish](https://github.com/pypa/gh-action-pypi-publish) from 1.8.11 to 1.8.12.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pypa/gh-action-pypi-publish/releases\">pypa/gh-action-pypi-publish's releases</a>.</em></p>\n<blockquote>\n<h2>v1.8.12</h2>\n<h2>\ud83d\udc85 Cosmetic Output Improvements</h2>\n<p><a href=\"https://github.com/woodruffw\"><code>@\u200bwoodruffw</code></a><a href=\"https://github.com/sponsors/woodruffw\">\ud83d\udcb0</a> replaced the notice annotations with simplified debug messages related to authentication methanism selection via <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/196\">#196</a>. The also improved the error clarity during OIDC exchange on PRs from forks via  <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/203\">#203</a>.</p>\n<h2>\ud83d\udcdd What's Documented</h2>\n<p><a href=\"https://github.com/virtuald\"><code>@\u200bvirtuald</code></a><a href=\"https://github.com/sponsors/virtuald\">\ud83d\udcb0</a> updated the docs and pointer messages were updated to mention that reusable workflows aren't supported right now in <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/186\">#186</a> and <a href=\"https://github.com/xuanzhi33\"><code>@\u200bxuanzhi33</code></a><a href=\"https://github.com/sponsors/xuanzhi33\">\ud83d\udcb0</a> later corrected the markdown syntax there via <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/216\">#216</a>.</p>\n<h2>\ud83d\udee0\ufe0f Internal Dependencies</h2>\n<ul>\n<li>pre-commit linters got autoupdated @ <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/204\">#204</a></li>\n<li>Cryptography was bumped from 41.0.6 to 42.0.4 @ <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/210\">#210</a>, <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/213\">#213</a> and <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/214\">#214</a></li>\n</ul>\n<h2>\u2699\ufe0f  Secret Stuff</h2>\n<p><a href=\"https://github.com/woodruffw\"><code>@\u200bwoodruffw</code></a> proactively updated the OIDC minting API endpoint used during the exchange via <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/206\">#206</a>. Nothing you should be too concerned about, promise!</p>\n<h2>\ud83d\udcaa New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/virtuald\"><code>@\u200bvirtuald</code></a> made their first contribution in <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/186\">pypa/gh-action-pypi-publish#186</a></li>\n<li><a href=\"https://github.com/xuanzhi33\"><code>@\u200bxuanzhi33</code></a> made their first contribution in <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/216\">pypa/gh-action-pypi-publish#216</a></li>\n</ul>\n<p><strong>\ud83e\ude9e Full Diff</strong>: <a href=\"https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.11...v1.8.12\">https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.11...v1.8.12</a></p>\n<p><strong>:man_beard: Release Manager:</strong> <a href=\"https://github.com/sponsors/webknjaz\"><code>@\u200bwebknjaz \ud83c\uddfa\ud83c\udde6</code></a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/e53eb8b103ffcb59469888563dc324e3c8ba6f06\"><code>e53eb8b</code></a> Clarify the error during OIDC exchange on PRs from forks</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/edfa8f355b2652764330cc56a770050d4c0f96a4\"><code>edfa8f3</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/216\">#216</a> from xuanzhi33/unstable/v1</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/aeff019ac8445052e1ddbb5d3ec20a9296254d89\"><code>aeff019</code></a> docs(fix): Fix a markdown alert</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/24c5d5ca4a35300bc01ffd365bcf1d71e2cf084e\"><code>24c5d5c</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/214\">#214</a> from pypa/dependabot/pip/requirements/cryptography-42...</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/c13b4aa8c56a0e901a36c594bd62f0f192dda463\"><code>c13b4aa</code></a> build(deps): bump cryptography from 42.0.2 to 42.0.4 in /requirements</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/72a79c870ceb3710e9cf97bde6192141ff9e6b13\"><code>72a79c8</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/213\">#213</a> from pypa/dependabot/pip/requirements/cryptography-42...</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/751e5b80a462e94c03a00e7805fc137bb8fea5db\"><code>751e5b8</code></a> build(deps): bump cryptography from 42.0.0 to 42.0.2 in /requirements</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/0580fcbb84c80ef2e629d60092942af2de59e8a7\"><code>0580fcb</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/210\">#210</a> from pypa/dependabot/pip/requirements/cryptography-42...</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/a524841e7b6cddfac007bdab4ddfd1ef4d48c4c4\"><code>a524841</code></a> build(deps): bump cryptography from 41.0.6 to 42.0.0 in /requirements</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/3f824c73d94f6ad4925913f56d31c29caba41990\"><code>3f824c7</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/204\">#204</a> from pypa/pre-commit-ci-update-config</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.11...v1.8.12\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pypa/gh-action-pypi-publish&package-manager=github_actions&previous-version=1.8.11&new-version=1.8.12)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2024-03-04T03:47:22Z",
      "updatedAt": "2024-03-08T12:07:31Z",
      "closedAt": "2024-03-08T12:07:30Z",
      "mergedAt": "2024-03-08T12:07:30Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/github_actions/pypa/gh-action-pypi-publish-1.8.12",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "github_actions"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump pypa/gh-action-pypi-publish from 1.8.11 to 1.8.12\n\nBumps [pypa/gh-action-pypi-publish](https://github.com/pypa/gh-action-pypi-publish) from 1.8.11 to 1.8.12.\n- [Release notes](https://github.com/pypa/gh-action-pypi-publish/releases)\n- [Commits](https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.11...v1.8.12)\n\n---\nupdated-dependencies:\n- dependency-name: pypa/gh-action-pypi-publish\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2024-03-04T03:47:21Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-08T12:07:24Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12056,
      "title": "build(deps): Bump twisted from 23.10.0 to 24.3.0 in /testing/plugins_integration",
      "body": "Bumps [twisted](https://github.com/twisted/twisted) from 23.10.0 to 24.3.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/twisted/twisted/releases\">twisted's releases</a>.</em></p>\n<blockquote>\n<h1>Twisted 24.3.0 (2024-03-01)</h1>\n<p>This release supports PyPy v7.3.14.</p>\n<h2>Bugfixes</h2>\n<ul>\n<li>twisted.logger.formatEvent now honors dotted method names, not just\nflat function names, in format strings, as it has long been\nexplicitly documented to do. So, you will now get the expected\nresult from [formatEvent(&quot;here's the result of calling a method at\nlog-format time: {obj.method()}&quot;, obj=...)]{.title-ref} (<a href=\"https://redirect.github.com/twisted/twisted/issues/9347\">#9347</a>)</li>\n<li>twisted.web.http.HTTPChannel now ignores the trailer headers\nprovided in the last chunk of a chunked encoded response, rather\nthan raising an exception. (<a href=\"https://redirect.github.com/twisted/twisted/issues/11997\">#11997</a>)</li>\n<li>twisted.protocols.tls.BufferingTLSTransport, used by default by\ntwisted.protocols.tls.TLSMemoryBIOFactory, was refactored for\nimproved performance when doing a high number of small writes.\n(<a href=\"https://redirect.github.com/twisted/twisted/issues/12011\">#12011</a>)</li>\n<li>twisted.python.failure.Failure now throws exception for generators\nwithout triggering a deprecation warnings on Python 3.12. (<a href=\"https://redirect.github.com/twisted/twisted/issues/12026\">#12026</a>)</li>\n<li>twisted.internet.process.Process, used by <code>reactor.spawnProcess</code>,\nnow copies the parent environment when the [env=None]{.title-ref}\nargument is passed on Posix systems and <code>os.posix_spawnp</code> is used\ninternally. (<a href=\"https://redirect.github.com/twisted/twisted/issues/12068\">#12068</a>)</li>\n<li>twisted.internet.defer.inlineCallbacks.returnValue's stack\nintrospection was adjusted for the latest PyPy 7.3.14 release,\nallowing legacy <a href=\"https://github.com/inlineCallbacks\"><code>@\u200binlineCallbacks</code></a> to run on new PyPY versions.\n(<a href=\"https://redirect.github.com/twisted/twisted/issues/12084\">#12084</a>)</li>\n</ul>\n<h2>Deprecations and Removals</h2>\n<ul>\n<li>twisted.trial.reporter.TestRun.startTest() is no longer called for\ntests with skip annotation or skip attribute for Python 3.12.1 or\nnewer. This is the result of upstream Python <a href=\"https://redirect.github.com/twisted/twisted/issues/106584\">gh-106584</a> change. The\nbehavior is not change in 3.12.0 or older. (<a href=\"https://redirect.github.com/twisted/twisted/issues/12052\">#12052</a>)</li>\n</ul>\n<h2>Misc</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/twisted/twisted/issues/11902\">#11902</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/12018\">#12018</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/12023\">#12023</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/12031\">#12031</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/12032\">#12032</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/12052\">#12052</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/12056\">#12056</a>,\n<a href=\"https://redirect.github.com/twisted/twisted/issues/12067\">#12067</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/12076\">#12076</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/12078\">#12078</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/12087\">#12087</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/12095\">#12095</a></li>\n</ul>\n<h2>Conch</h2>\n<p>No significant changes.</p>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/twisted/twisted/blob/trunk/NEWS.rst\">twisted's changelog</a>.</em></p>\n<blockquote>\n<h1>Twisted 24.3.0 (2024-03-01)</h1>\n<p>This release supports PyPy v7.3.14.</p>\n<h2>Bugfixes</h2>\n<ul>\n<li>twisted.logger.formatEvent now honors dotted method names, not just flat\nfunction names, in format strings, as it has long been explicitly documented to\ndo.  So, you will now get the expected result from <code>formatEvent(&quot;here's the result of calling a method at log-format time: {obj.method()}&quot;, obj=...)</code> (<a href=\"https://redirect.github.com/twisted/twisted/issues/9347\">#9347</a>)</li>\n<li>twisted.web.http.HTTPChannel now ignores the trailer headers provided in the last chunk of a chunked encoded response, rather than raising an exception. (<a href=\"https://redirect.github.com/twisted/twisted/issues/11997\">#11997</a>)</li>\n<li>twisted.protocols.tls.BufferingTLSTransport, used by default by twisted.protocols.tls.TLSMemoryBIOFactory, was refactored for improved performance when doing a high number of small writes. (<a href=\"https://redirect.github.com/twisted/twisted/issues/12011\">#12011</a>)</li>\n<li>twisted.python.failure.Failure now throws exception for generators without triggering a deprecation warnings on Python 3.12. (<a href=\"https://redirect.github.com/twisted/twisted/issues/12026\">#12026</a>)</li>\n<li>twisted.internet.process.Process, used by <code>reactor.spawnProcess</code>, now copies the parent environment when the <code>env=None</code> argument is passed on Posix systems and <code>os.posix_spawnp</code> is used internally. (<a href=\"https://redirect.github.com/twisted/twisted/issues/12068\">#12068</a>)</li>\n<li>twisted.internet.defer.inlineCallbacks.returnValue's stack introspection was adjusted for the latest PyPy 7.3.14 release, allowing legacy <a href=\"https://github.com/inlineCallbacks\"><code>@\u200binlineCallbacks</code></a> to run on new PyPY versions. (<a href=\"https://redirect.github.com/twisted/twisted/issues/12084\">#12084</a>)</li>\n</ul>\n<h2>Deprecations and Removals</h2>\n<ul>\n<li>twisted.trial.reporter.TestRun.startTest() is no longer called for tests\nwith skip annotation or skip attribute for Python 3.12.1 or newer.\nThis is the result of upstream Python <a href=\"https://redirect.github.com/twisted/twisted/issues/106584\">gh-106584</a> change.\nThe behavior is not change in 3.12.0 or older. (<a href=\"https://redirect.github.com/twisted/twisted/issues/12052\">#12052</a>)</li>\n</ul>\n<h2>Misc</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/twisted/twisted/issues/11902\">#11902</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/12018\">#12018</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/12023\">#12023</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/12031\">#12031</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/12032\">#12032</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/12052\">#12052</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/12056\">#12056</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/12067\">#12067</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/12076\">#12076</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/12078\">#12078</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/12087\">#12087</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/12095\">#12095</a></li>\n</ul>\n<h2>Conch</h2>\n<p>No significant changes.</p>\n<h2>Web</h2>\n<p>Bugfixes</p>\n<pre><code>\n- The documentation for twisted.web.client.CookieAgent no longer references\n  long-deprecated ``cookielib`` and ``urllib2`` standard library modules. ([#12044](https://github.com/twisted/twisted/issues/12044))\n<p>&lt;/tr&gt;&lt;/table&gt;\n</code></pre></p>\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/twisted/twisted/commit/2e59e1fb322bc4b20009443f2252ecc6d7c79f80\"><code>2e59e1f</code></a> Merge remote-tracking branch 'origin/release-24.2.0-12097' into release-24.2....</li>\n<li><a href=\"https://github.com/twisted/twisted/commit/64a18eb6d8a71de2dafe6212482a680a12397e0b\"><code>64a18eb</code></a> Prep for final release.</li>\n<li><a href=\"https://github.com/twisted/twisted/commit/c33d114c83cc283376650defda0e253053c87ef3\"><code>c33d114</code></a> Update NEWS.rst</li>\n<li><a href=\"https://github.com/twisted/twisted/commit/d7c9b3d886d0f99fe86df2f8bfc9080063ab4b08\"><code>d7c9b3d</code></a> Clarify and fix docs.</li>\n<li><a href=\"https://github.com/twisted/twisted/commit/4ed1a5b8ad9aaa1e3c5adb13076a2d79ec4279f1\"><code>4ed1a5b</code></a> Update copyright year.</li>\n<li><a href=\"https://github.com/twisted/twisted/commit/a2ba6eb33011e75102f35a630cd594e0bab403c4\"><code>a2ba6eb</code></a> Changelog for 24.2.0.</li>\n<li><a href=\"https://github.com/twisted/twisted/commit/f2f1bc5d544efef89139a6a264d39ce0598e3b68\"><code>f2f1bc5</code></a> New pre-release.</li>\n<li><a href=\"https://github.com/twisted/twisted/commit/446ee139189440e890b26a29af256e9b9d0e8eba\"><code>446ee13</code></a> Fix chat.py example (<a href=\"https://redirect.github.com/twisted/twisted/issues/12070\">#12070</a>)</li>\n<li><a href=\"https://github.com/twisted/twisted/commit/d05599b21ad3ab3185ca73aa465be0d8dd79a98b\"><code>d05599b</code></a> Merge branch 'trunk' into fix-chat-example</li>\n<li><a href=\"https://github.com/twisted/twisted/commit/234f3788b60f21ccdc51e7b865d244b9343877bf\"><code>234f378</code></a> <a href=\"https://redirect.github.com/twisted/twisted/issues/11902\">#11902</a> - Fix type for twisted.web.server.Request.defaultContentType (<a href=\"https://redirect.github.com/twisted/twisted/issues/12101\">#12101</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/twisted/twisted/compare/twisted-23.10.0...twisted-24.3.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=twisted&package-manager=pip&previous-version=23.10.0&new-version=24.3.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2024-03-04T03:25:36Z",
      "updatedAt": "2024-03-08T12:07:03Z",
      "closedAt": "2024-03-08T12:07:02Z",
      "mergedAt": "2024-03-08T12:07:02Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/pip/testing/plugins_integration/twisted-24.3.0",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "python"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump twisted in /testing/plugins_integration\n\nBumps [twisted](https://github.com/twisted/twisted) from 23.10.0 to 24.3.0.\n- [Release notes](https://github.com/twisted/twisted/releases)\n- [Changelog](https://github.com/twisted/twisted/blob/trunk/NEWS.rst)\n- [Commits](https://github.com/twisted/twisted/compare/twisted-23.10.0...twisted-24.3.0)\n\n---\nupdated-dependencies:\n- dependency-name: twisted\n  dependency-type: direct:production\n  update-type: version-update:semver-major\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2024-03-04T03:25:34Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-08T12:06:56Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12055,
      "title": "Cherry-pick 8.1.0 release notes",
      "body": "(cherry picked from commit 0a536810dc5f51dac99bdb90dde06704b5aa034e)\r\n\r\n<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "MERGED",
      "createdAt": "2024-03-03T21:27:43Z",
      "updatedAt": "2024-03-03T21:29:51Z",
      "closedAt": "2024-03-03T21:29:47Z",
      "mergedAt": "2024-03-03T21:29:47Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "cherry-pick-release",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Cherry-pick 8.1.0 release notes\n\n(cherry picked from commit 0a536810dc5f51dac99bdb90dde06704b5aa034e)",
              "committedDate": "2024-03-03T21:27:02Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 12054,
      "title": "Prepare release 8.1.0",
      "body": "Created by the [prepare release pr](https://github.com/pytest-dev/pytest/actions/workflows/prepare-release-pr.yml) workflow.\n\nOnce all builds pass and it has been **approved** by one or more maintainers, start the [deploy](https://github.com/pytest-dev/pytest/actions/workflows/deploy.yml) workflow, using these parameters:\n\n* `Use workflow from`: `release-8.1.0`.\n* `Release version`: `8.1.0`.\n\nOr execute on the command line:\n\n```console\ngh workflow run deploy.yml -r release-8.1.0 -f version=8.1.0\n```\n\nAfter the workflow has been approved by a core maintainer, the package will be uploaded to PyPI automatically.\n",
      "state": "MERGED",
      "createdAt": "2024-03-03T20:47:26Z",
      "updatedAt": "2024-03-03T21:25:10Z",
      "closedAt": "2024-03-03T21:25:09Z",
      "mergedAt": "2024-03-03T21:25:09Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "8.1.x",
      "headRefName": "release-8.1.0",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Prepare release version 8.1.0",
              "committedDate": "2024-03-03T20:47:25Z",
              "author": {
                "name": "pytest bot",
                "email": "pytestbot@gmail.com",
                "user": {
                  "login": "pytestbot"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-03T20:54:24Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-03T21:17:42Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12052,
      "title": "Rename 'testing' extra to 'dev'",
      "body": "Minor, but seems `dev` is more standard for the development extras than `testing`, being the default for tools like `poetry`.\r\n",
      "state": "MERGED",
      "createdAt": "2024-03-03T13:20:27Z",
      "updatedAt": "2024-03-07T22:12:23Z",
      "closedAt": "2024-03-07T22:12:20Z",
      "mergedAt": "2024-03-07T22:12:20Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "rename-to-dev-extras",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Rename 'testing' extra to 'dev'\n\nMinor, but seems `dev` is more standard for the development extras than `testing`, being the default for tools like `poetry`.",
              "committedDate": "2024-03-03T13:19:02Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-03T13:36:10Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12051,
      "title": "[minor/QoL] monkeypatch.delenv PYTHONBREAKPOINT in two tests that previously failed/skipped",
      "body": "Noticed this one test failing due to me having locally set `PYTHONBREAKPOINT`, and while fixing I noticed another test that resolved same issue with a `skipif` - but I don't see any reason to skip instead of monkeypatching. This should have zero effect on running tests in CI, mostly just a small QoL for some devs running tests locally.",
      "state": "MERGED",
      "createdAt": "2024-03-03T12:51:11Z",
      "updatedAt": "2024-03-03T13:32:45Z",
      "closedAt": "2024-03-03T13:07:19Z",
      "mergedAt": "2024-03-03T13:07:19Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "test_debugging_pythonbreakpoint",
      "author": {
        "login": "jakkdl"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "monkeypatch.delenv PYTHONBREAKPOINT in two tests that previously failed/skipped",
              "committedDate": "2024-03-03T12:48:29Z",
              "author": {
                "name": "jakkdl",
                "email": "h6+github@pm.me",
                "user": {
                  "login": "jakkdl"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-03T13:02:16Z",
            "body": "Makes sense, thanks!"
          }
        ]
      }
    },
    {
      "number": 12050,
      "title": "Do not collect symlinked tests under Windows",
      "body": "The check for short paths under Windows via os.path.samefile, introduced in #11936, also found similar tests in symlinked tests in the GH Actions CI. This checks additionally that one of the files is not a symlink.\r\n\r\nFixes #12039.\r\n",
      "state": "MERGED",
      "createdAt": "2024-03-03T07:42:16Z",
      "updatedAt": "2024-03-03T12:42:18Z",
      "closedAt": "2024-03-03T12:41:32Z",
      "mergedAt": "2024-03-03T12:41:32Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "symlinked-tests",
      "author": {
        "login": "mrbean-bremen"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Improve test",
              "committedDate": "2024-03-03T12:21:08Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "mrbean-bremen"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-03-03T12:08:12Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-03-03T12:09:27Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-03T12:41:05Z",
            "body": "Thanks again @mrbean-bremen! "
          }
        ]
      }
    },
    {
      "number": 12049,
      "title": "[automated] Update plugin list",
      "body": "[automated] Update plugin list",
      "state": "MERGED",
      "createdAt": "2024-03-03T00:19:21Z",
      "updatedAt": "2024-03-03T12:50:43Z",
      "closedAt": "2024-03-03T12:50:42Z",
      "mergedAt": "2024-03-03T12:50:42Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "update-plugin-list/patch-6ed005161",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[automated] Update plugin list",
              "committedDate": "2024-03-03T00:19:20Z",
              "author": {
                "name": "pytest bot",
                "email": "pytestbot@users.noreply.github.com",
                "user": {
                  "login": "pytestbot"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-03T12:37:45Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12048,
      "title": "fixtures: use exception group when multiple finalizers raise in fixture teardown",
      "body": "Fix #12047.\r\n\r\nPreviously, if more than one fixture finalizer raised, only the first was reported, and the other errors were lost.\r\n\r\nUse an exception group to report them all. This is similar to the change we made in node teardowns (in `SetupState`).",
      "state": "MERGED",
      "createdAt": "2024-03-02T21:24:38Z",
      "updatedAt": "2024-03-03T13:09:38Z",
      "closedAt": "2024-03-03T13:09:36Z",
      "mergedAt": "2024-03-03T13:09:36Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "fixture-teardown-excgroup",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "fixtures: use exception group when multiple finalizers raise in fixture teardown\n\nPreviously, if more than one fixture finalizer raised, only the first\nwas reported, and the other errors were lost.\n\nUse an exception group to report them all. This is similar to the change\nwe made in node teardowns (in `SetupState`).",
              "committedDate": "2024-03-02T21:39:11Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-03T12:40:38Z",
            "body": "LGTM!"
          }
        ]
      }
    },
    {
      "number": 12043,
      "title": "Fix collection failures due to permission errors when using `--pyargs`",
      "body": "This should fix #11904. It does *not* fix all permission error situations that popped up with pytest 8.0.0 but most complaints were about `--pyargs` and others are mostly misconfigurations as far I could tell, so let's start with this to unblock pytest 8.1.0 and see about the others as the come.\r\n\r\nThe PR has some preparatory commits, here is the description of the main change (last commit):\r\n\r\nIn pytest<8, the collection tree for `pyargs` arguments in an invocation like this:\r\n\r\n    pytest --collect-only --pyargs pyflakes.test.test_undefined_names\r\n\r\nlooked like this:\r\n\r\n```xml\r\n<Package test>\r\n  <Module test_undefined_names.py>\r\n    <UnitTestCase Test>\r\n      <TestCaseFunction test_annotationUndefined>\r\n      ... snipped ...\r\n```\r\n\r\nThe pytest 8 collection improvements changed it to this:\r\n\r\n```xml\r\n<Dir pytest>\r\n  <Dir .tox>\r\n    <Dir venv>\r\n      <Dir lib>\r\n        <Dir python3.11>\r\n          <Dir site-packages>\r\n            <Package pyflakes>\r\n              <Package test>\r\n                <Module test_undefined_names.py>\r\n                  <UnitTestCase Test>\r\n                    <TestCaseFunction test_annotationUndefined>\r\n                    ... snipped ...\r\n```\r\n\r\nBesides being egregious (and potentially even worse than the above, going all the way to the root, for system-installed packages, as is apparently common in CI), this also caused permission errors when trying to probe some of those intermediate directories.\r\n\r\nThis change makes `--pyargs` arguments no longer try to add parent directories to the collection tree according to the `--confcutdir` like they're regular arguments. Instead, only add the parents that are in the import path. This now looks like this:\r\n\r\n```xml\r\n<Package .tox/venv/lib/python3.11/site-packages/pyflakes>\r\n  <Package test>\r\n    <Module test_undefined_names.py>\r\n      <UnitTestCase Test>\r\n        <TestCaseFunction test_annotationUndefined>\r\n        ... snipped ...\r\n```",
      "state": "MERGED",
      "createdAt": "2024-03-01T13:15:25Z",
      "updatedAt": "2024-03-02T19:12:40Z",
      "closedAt": "2024-03-02T19:09:20Z",
      "mergedAt": "2024-03-02T19:09:20Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "pyargs-root",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "main: only include package parents in collection tree for --pyargs collection arguments\n\n(diff better viewed ignoring whitespace)\n\nIn pytest<8, the collection tree for `pyargs` arguments in an invocation\nlike this:\n\n    pytest --collect-only --pyargs pyflakes.test.test_undefined_names\n\nlooked like this:\n\n```\n<Package test>\n  <Module test_undefined_names.py>\n    <UnitTestCase Test>\n      <TestCaseFunction test_annotationUndefined>\n      ... snipped ...\n```\n\nThe pytest 8 collection improvements changed it to this:\n\n```\n<Dir pytest>\n  <Dir .tox>\n    <Dir venv>\n      <Dir lib>\n        <Dir python3.11>\n          <Dir site-packages>\n            <Package pyflakes>\n              <Package test>\n                <Module test_undefined_names.py>\n                  <UnitTestCase Test>\n                    <TestCaseFunction test_annotationUndefined>\n                    ... snipped ...\n```\n\nBesides being egregious (and potentially even worse than the above,\ngoing all the way to the root, for system-installed packages, as is\napparently common in CI), this also caused permission errors when trying\nto probe some of those intermediate directories.\n\nThis change makes `--pyargs` arguments no longer try to add parent\ndirectories to the collection tree according to the `--confcutdir` like\nthey're regular arguments. Instead, only add the parents that are in the\nimport path. This now looks like this:\n\n```\n<Package .tox/venv/lib/python3.11/site-packages/pyflakes>\n  <Package test>\n    <Module test_undefined_names.py>\n      <UnitTestCase Test>\n        <TestCaseFunction test_annotationUndefined>\n        ... snipped ...\n```\n\nFix #11904.",
              "committedDate": "2024-03-02T18:26:02Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-02T16:54:37Z",
            "body": "LGTM!\r\n\r\nI specially liked the `CollectionArgument` dataclass, this is something that also caught my eye in the past.\r\n\r\nMissing a CHANGELOG entry; I would add an example showing the old and the new collection tree, as it helps understand the change better."
          }
        ]
      }
    },
    {
      "number": 12042,
      "title": "docs: update plugins number",
      "body": "update plugins number to 1300\r\n<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "MERGED",
      "createdAt": "2024-02-29T21:45:57Z",
      "updatedAt": "2024-03-01T13:20:33Z",
      "closedAt": "2024-03-01T13:20:33Z",
      "mergedAt": "2024-03-01T13:20:33Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "docs-0301",
      "author": {
        "login": "donhui"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "docs: update plugins number",
              "committedDate": "2024-02-29T21:43:57Z",
              "author": {
                "name": "donghui",
                "email": "977675308@qq.com",
                "user": {
                  "login": "donhui"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-01T13:20:24Z",
            "body": "Nice, thanks!"
          }
        ]
      }
    },
    {
      "number": 12038,
      "title": "fixtures: avoid mutable arg2index state in favor of looking up the request chain",
      "body": "pytest allows a fixture to request its own name (directly or indirectly), in which case the fixture with the same name but one level up is used.\r\n\r\nTo know which fixture should be used next, pytest keeps a mutable item-global dict `_arg2index` which maintains this state. This is not great:\r\n\r\n- Mutable state like this is hard to understand and reason about.\r\n\r\n- It is conceptually buggy; the indexing is global (e.g. if requesting   `fix1` and `fix2`, the indexing is shared between them), but actually   different branches of the subrequest tree should not affect each   other.\r\n\r\n  This is not an issue in practice because pytest keeps a cache of the  fixturedefs it resolved anyway (`_fixture_defs`), but if the cache is removed it becomes evident.\r\n\r\nInstead of the `_arg2index` state, count how many `argname`s deep we are in the subrequest tree (\"the fixture stack\") and use that for the index.\r\n\r\nThis way, no global mutable state and the logic is very localized and easier to understand.\r\n\r\nThis is slower, however fixture stacks should not be so deep that this matters much, I hope.",
      "state": "MERGED",
      "createdAt": "2024-02-27T20:28:01Z",
      "updatedAt": "2024-03-03T13:45:37Z",
      "closedAt": "2024-03-03T13:45:34Z",
      "mergedAt": "2024-03-03T13:45:34Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "fixtures-rm-arg2index",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "fixtures: avoid mutable `arg2index` state in favor of looking up the request chain\n\npytest allows a fixture to request its own name (directly or\nindirectly), in which case the fixture with the same name but one level\nup is used.\n\nTo know which fixture should be used next, pytest keeps a mutable\nitem-global dict `_arg2index` which maintains this state. This is not\ngreat:\n\n- Mutable state like this is hard to understand and reason about.\n\n- It is conceptually buggy; the indexing is global (e.g. if requesting\n  `fix1` and `fix2`, the indexing is shared between them), but actually\n  different branches of the subrequest tree should not affect each\n  other.\n\n  This is not an issue in practice because pytest keeps a cache of the\n  fixturedefs it resolved anyway (`_fixture_defs`), but if the cache is\n  removed it becomes evident.\n\nInstead of the `_arg2index` state, count how many `argname`s deep we are\nin the subrequest tree (\"the fixture stack\") and use that for the index.\n\nThis way, no global mutable state and the logic is very localized and\neasier to understand.\n\nThis is slower, however fixture stacks should not be so deep that this\nmatters much, I hope.",
              "committedDate": "2024-02-27T20:24:26Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-03T13:15:39Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12037,
      "title": "fixtures: remove unneeded optimization from `_getnextfixturedef`",
      "body": "According to my understanding, this code, which handles obtaining the relevant fixturedefs when a dynamic `getfixturevalue` is used, has an optimization where it only grabs fixturedefs that are visible to the *parent* of the item, instead of the item itself, under the assumption that a fixturedef can't be visible to a single item, only to a collector.\r\n\r\nRemove this optimization for the following reasons:\r\n- It doesn't save much (one loop iteration in `matchfactories`)\r\n- It slightly complicates the complex fixtures code\r\n- If some plugin wants to make a fixture visible only to a single item, why not let it?\r\n- In the static case (`getfixtureclosure`), this optimization is not done (despite the confusing name `parentnode`, it is *not* the parent node). This is inconsistent.\r\n\r\n<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "MERGED",
      "createdAt": "2024-02-27T20:25:32Z",
      "updatedAt": "2024-02-28T07:28:18Z",
      "closedAt": "2024-02-28T07:28:15Z",
      "mergedAt": "2024-02-28T07:28:15Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "fixtures-getnextfixturedef-parent",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "fixtures: remove unneeded optimization from `_getnextfixturedef`\n\nAccording to my understanding, this code, which handles obtaining the\nrelevant fixturedefs when a dynamic `getfixturevalue` is used, has an\noptimization where it only grabs fixturedefs that are visible to the\n*parent* of the item, instead of the item itself, under the assumption\nthat a fixturedef can't be visible to a single item, only to a\ncollector.\n\nRemove this optimization for the following reasons:\n- It doesn't save much (one loop iteration in `matchfactories`)\n- It slightly complicates the complex fixtures code\n- If some plugin wants to make a fixture visible only to a single item,\n  why not let it?\n- In the static case (`getfixtureclosure`), this optimization is not\n  done (despite the confusing name `parentnode`, it is *not* the parent\n  node). This is inconsistent.",
              "committedDate": "2024-02-27T20:22:07Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-27T22:17:46Z",
            "body": "Your rationale makes sense. \ud83d\udc4d "
          }
        ]
      }
    },
    {
      "number": 12033,
      "title": "build(deps): Bump anyio[curio,trio] from 4.2.0 to 4.3.0 in /testing/plugins_integration",
      "body": "Bumps [anyio[curio,trio]](https://github.com/agronholm/anyio) from 4.2.0 to 4.3.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/agronholm/anyio/releases\">anyio[curio,trio]'s releases</a>.</em></p>\n<blockquote>\n<h2>4.3.0</h2>\n<ul>\n<li>\n<p>Added support for the Python 3.12 <code>walk_up</code> keyword argument in <code>anyio.Path.relative_to()</code> (PR by Colin Taylor)</p>\n</li>\n<li>\n<p>Fixed passing <code>total_tokens</code> to <code>anyio.CapacityLimiter()</code> as a keyword argument not working on the <code>trio</code> backend (<a href=\"https://redirect.github.com/agronholm/anyio/issues/515\">#515</a>)</p>\n</li>\n<li>\n<p>Fixed <code>Process.aclose()</code> not performing the minimum level of necessary cleanup when cancelled. Previously:</p>\n<ul>\n<li>Cancellation of <code>Process.aclose()</code> could leak an orphan process</li>\n<li>Cancellation of <code>run_process()</code> could very briefly leak an orphan process.</li>\n<li>Cancellation of <code>Process.aclose()</code> or <code>run_process()</code> on Trio could leave standard streams unclosed</li>\n</ul>\n<p>(PR by Ganden Schaffner)</p>\n</li>\n<li>\n<p>Fixed <code>Process.stdin.aclose()</code>, <code>Process.stdout.aclose()</code>, and <code>Process.stderr.aclose()</code> not including a checkpoint on asyncio (PR by Ganden Schaffner)</p>\n</li>\n<li>\n<p>Fixed documentation on how to provide your own typed attributes</p>\n</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/agronholm/anyio/blob/master/docs/versionhistory.rst\">anyio[curio,trio]'s changelog</a>.</em></p>\n<blockquote>\n<h1>Version history</h1>\n<p>This library adheres to <code>Semantic Versioning 2.0 &lt;http://semver.org/&gt;</code>_.</p>\n<p><strong>4.3.0</strong></p>\n<ul>\n<li>\n<p>Added support for the Python 3.12 <code>walk_up</code> keyword argument in\n<code>anyio.Path.relative_to()</code> (PR by Colin Taylor)</p>\n</li>\n<li>\n<p>Fixed passing <code>total_tokens</code> to <code>anyio.CapacityLimiter()</code> as a keyword argument\nnot working on the <code>trio</code> backend\n(<code>[#515](https://github.com/agronholm/anyio/issues/515) &lt;https://github.com/agronholm/anyio/issues/515&gt;</code>_)</p>\n</li>\n<li>\n<p>Fixed <code>Process.aclose()</code> not performing the minimum level of necessary cleanup when\ncancelled. Previously:</p>\n<ul>\n<li>Cancellation of <code>Process.aclose()</code> could leak an orphan process</li>\n<li>Cancellation of <code>run_process()</code> could very briefly leak an orphan process.</li>\n<li>Cancellation of <code>Process.aclose()</code> or <code>run_process()</code> on Trio could leave\nstandard streams unclosed</li>\n</ul>\n<p>(PR by Ganden Schaffner)</p>\n</li>\n<li>\n<p>Fixed <code>Process.stdin.aclose()</code>, <code>Process.stdout.aclose()</code>, and\n<code>Process.stderr.aclose()</code> not including a checkpoint on asyncio (PR by Ganden\nSchaffner)</p>\n</li>\n<li>\n<p>Fixed documentation on how to provide your own typed attributes</p>\n</li>\n</ul>\n<p><strong>4.2.0</strong></p>\n<ul>\n<li>\n<p>Add support for <code>byte</code>-based paths in <code>connect_unix</code>, <code>create_unix_listeners</code>,\n<code>create_unix_datagram_socket</code>, and <code>create_connected_unix_datagram_socket</code>. (PR by\nLura Skye)</p>\n</li>\n<li>\n<p>Enabled the <code>Event</code> and <code>CapacityLimiter</code> classes to be instantiated outside an\nevent loop thread</p>\n</li>\n<li>\n<p>Broadly improved/fixed the type annotations. Among other things, many functions and\nmethods that take variadic positional arguments now make use of PEP 646\n<code>TypeVarTuple</code> to allow the positional arguments to be validated by static type\ncheckers. These changes affected numerous methods and functions, including:</p>\n<ul>\n<li><code>anyio.run()</code></li>\n<li><code>TaskGroup.start_soon()</code></li>\n<li><code>anyio.from_thread.run()</code></li>\n<li><code>anyio.from_thread.run_sync()</code></li>\n<li><code>anyio.to_thread.run_sync()</code></li>\n<li><code>anyio.to_process.run_sync()</code></li>\n<li><code>BlockingPortal.call()</code></li>\n<li><code>BlockingPortal.start_task_soon()</code></li>\n<li><code>BlockingPortal.start_task()</code></li>\n</ul>\n<p>(also resolves <code>[#560](https://github.com/agronholm/anyio/issues/560) &lt;https://github.com/agronholm/anyio/issues/560&gt;</code>_)</p>\n</li>\n<li>\n<p>Fixed various type annotations of <code>anyio.Path</code> to match Typeshed:</p>\n</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/agronholm/anyio/commit/437a7e310925a962cab4a58fcd2455fbcd578d51\"><code>437a7e3</code></a> Bumped up the version</li>\n<li><a href=\"https://github.com/agronholm/anyio/commit/1ce32e5c9e4789154b783150785db0fdaf35e0c1\"><code>1ce32e5</code></a> Updated the upload/download artifact actions</li>\n<li><a href=\"https://github.com/agronholm/anyio/commit/d39c83780d1465a43c5c52b07fea23d65bb73cb5\"><code>d39c837</code></a> [pre-commit.ci] pre-commit autoupdate (<a href=\"https://redirect.github.com/agronholm/anyio/issues/690\">#690</a>)</li>\n<li><a href=\"https://github.com/agronholm/anyio/commit/ba48ea8ae18b6e2895af20104d187ee22a9a551c\"><code>ba48ea8</code></a> Added the network marker to some tests that need DNS (<a href=\"https://redirect.github.com/agronholm/anyio/issues/687\">#687</a>)</li>\n<li><a href=\"https://github.com/agronholm/anyio/commit/5426f7bf1e01066ac7111a090d76a4ff5d48e25f\"><code>5426f7b</code></a> Remove conditionals and workarounds for Python interpreter versions 3.7 and o...</li>\n<li><a href=\"https://github.com/agronholm/anyio/commit/7565f3162706f9eca503f5ef353113076135f95c\"><code>7565f31</code></a> [pre-commit.ci] pre-commit autoupdate (<a href=\"https://redirect.github.com/agronholm/anyio/issues/684\">#684</a>)</li>\n<li><a href=\"https://github.com/agronholm/anyio/commit/137de708f40262e959d9d43178dda600432da56b\"><code>137de70</code></a> Fixed documentation on providing custom typed attributes (<a href=\"https://redirect.github.com/agronholm/anyio/issues/683\">#683</a>)</li>\n<li><a href=\"https://github.com/agronholm/anyio/commit/8b8806c745482c1d39708d012b2c90e4c9e92c6f\"><code>8b8806c</code></a> Fixed typo (<a href=\"https://redirect.github.com/agronholm/anyio/issues/681\">#681</a>)</li>\n<li><a href=\"https://github.com/agronholm/anyio/commit/1e60219d95bb6a3c1ddf0618634f8ee3eb566037\"><code>1e60219</code></a> Fixed <code>run_process()</code> and <code>open_process().__aexit__</code> leaking an orphan proces...</li>\n<li><a href=\"https://github.com/agronholm/anyio/commit/3f14df89fe4c6d5edebae345a95d04c30334bba2\"><code>3f14df8</code></a> [pre-commit.ci] pre-commit autoupdate (<a href=\"https://redirect.github.com/agronholm/anyio/issues/676\">#676</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/agronholm/anyio/compare/4.2.0...4.3.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=anyio[curio,trio]&package-manager=pip&previous-version=4.2.0&new-version=4.3.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2024-02-26T03:55:21Z",
      "updatedAt": "2024-02-26T13:51:08Z",
      "closedAt": "2024-02-26T13:51:07Z",
      "mergedAt": "2024-02-26T13:51:07Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/pip/testing/plugins_integration/anyio-curiotrio--4.3.0",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "python"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump anyio[curio,trio] in /testing/plugins_integration\n\nBumps [anyio[curio,trio]](https://github.com/agronholm/anyio) from 4.2.0 to 4.3.0.\n- [Release notes](https://github.com/agronholm/anyio/releases)\n- [Changelog](https://github.com/agronholm/anyio/blob/master/docs/versionhistory.rst)\n- [Commits](https://github.com/agronholm/anyio/compare/4.2.0...4.3.0)\n\n---\nupdated-dependencies:\n- dependency-name: anyio[curio,trio]\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2024-02-26T03:55:21Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 12032,
      "title": "Create tea.yaml",
      "body": "<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "CLOSED",
      "createdAt": "2024-02-25T19:11:58Z",
      "updatedAt": "2024-02-25T19:41:28Z",
      "closedAt": "2024-02-25T19:41:28Z",
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "main",
      "author": {
        "login": "PrastianHD"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Create tea.yaml",
              "committedDate": "2024-02-25T19:11:40Z",
              "author": {
                "name": "NodeInter",
                "email": "48909279+PrastianHD@users.noreply.github.com",
                "user": {
                  "login": "PrastianHD"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 12031,
      "title": "[automated] Update plugin list",
      "body": "[automated] Update plugin list",
      "state": "MERGED",
      "createdAt": "2024-02-25T00:19:35Z",
      "updatedAt": "2024-02-25T00:50:45Z",
      "closedAt": "2024-02-25T00:50:44Z",
      "mergedAt": "2024-02-25T00:50:44Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "update-plugin-list/patch-affc652f1",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Fix mention of the prefix for pytest plugins in `plugin_list`",
              "committedDate": "2024-02-25T00:35:51Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-25T00:37:26Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12030,
      "title": "Cherry pick 8.0.2 release notes",
      "body": "(cherry picked from commit e53f79893212391c0bada5f1628b977371a09434)\r\n\r\n<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "MERGED",
      "createdAt": "2024-02-24T22:26:44Z",
      "updatedAt": "2024-02-24T22:31:55Z",
      "closedAt": "2024-02-24T22:31:53Z",
      "mergedAt": "2024-02-24T22:31:53Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "cherry-pick-release",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Cherry pick 8.0.2 release notes\n\n(cherry picked from commit e53f79893212391c0bada5f1628b977371a09434)",
              "committedDate": "2024-02-24T22:25:49Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 12029,
      "title": "Prepare release 8.0.2",
      "body": "Created by the [prepare release pr](https://github.com/pytest-dev/pytest/actions/workflows/prepare-release-pr.yml) workflow.\n\nOnce all builds pass and it has been **approved** by one or more maintainers, start the [deploy](https://github.com/pytest-dev/pytest/actions/workflows/deploy.yml) workflow, using these parameters:\n\n* `Use workflow from`: `release-8.0.2`.\n* `Release version`: `8.0.2`.\n\nOr execute on the command line:\n\n```console\ngh workflow run deploy.yml -r release-8.0.2 -f version=8.0.2\n```\n\nAfter the workflow has been approved by a core maintainer, the package will be uploaded to PyPI automatically.\n",
      "state": "MERGED",
      "createdAt": "2024-02-24T22:02:41Z",
      "updatedAt": "2024-02-24T22:24:32Z",
      "closedAt": "2024-02-24T22:24:32Z",
      "mergedAt": "2024-02-24T22:24:32Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "8.0.x",
      "headRefName": "release-8.0.2",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Prepare release version 8.0.2",
              "committedDate": "2024-02-24T22:02:40Z",
              "author": {
                "name": "pytest bot",
                "email": "pytestbot@gmail.com",
                "user": {
                  "login": "pytestbot"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-24T22:04:16Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-24T22:15:47Z",
            "body": "\ud83c\udf89 "
          }
        ]
      }
    },
    {
      "number": 12027,
      "title": "runner: add support for `sys.last_exc` for post-mortem debugging on Python>=3.12",
      "body": "Fix #11850\r\n\r\nThis PR is same as #11934 by @robotherapist with the comments fixed, so we can include it pytest 8.1 (I can't update the original PR).\r\n\r\nReviewed by me.\r\n\r\nCloses #11934",
      "state": "MERGED",
      "createdAt": "2024-02-23T14:02:24Z",
      "updatedAt": "2024-02-23T20:41:17Z",
      "closedAt": "2024-02-23T20:41:14Z",
      "mergedAt": "2024-02-23T20:41:14Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "sys-last-exc",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "runner: add support for `sys.last_exc` for post-mortem debugging on Python>=3.12\n\nFix #11850",
              "committedDate": "2024-02-23T13:59:32Z",
              "author": {
                "name": "robotherapist",
                "email": "edd@robopsychology.io",
                "user": {
                  "login": "robotherapist"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-23T14:19:46Z",
            "body": "Nice.\r\n\r\nAdded \"Closes #11934\" to the PR description so it will get closed when this gets merged."
          }
        ]
      }
    },
    {
      "number": 12025,
      "title": "[8.0.x] Revert \"Fix teardown error reporting when `--maxfail=1` (#11721)\"",
      "body": "Backport of PR #12022 to 8.0.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2024-02-23T13:35:16Z",
      "updatedAt": "2024-02-23T13:52:43Z",
      "closedAt": "2024-02-23T13:52:42Z",
      "mergedAt": "2024-02-23T13:52:42Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "8.0.x",
      "headRefName": "backport-12022-to-8.0.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[8.0.x] Revert \"Fix teardown error reporting when `--maxfail=1` (#11721)\"",
              "committedDate": "2024-02-23T13:35:15Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-23T13:39:13Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12024,
      "title": "[8.0.x] Fix collection of short paths on Windows",
      "body": "Backport of PR #11936 to 8.0.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2024-02-23T10:51:46Z",
      "updatedAt": "2024-02-23T11:20:20Z",
      "closedAt": "2024-02-23T11:20:19Z",
      "mergedAt": "2024-02-23T11:20:19Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "8.0.x",
      "headRefName": "backport-11936-to-8.0.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[8.0.x] Fix collection of short paths on Windows",
              "committedDate": "2024-02-23T10:51:44Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "nicoddemus@gmail.com",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-23T10:52:21Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12023,
      "title": "fixtures: remove an unneeded suppress",
      "body": "In `CallSpec2.setmulti` the `params` and `_arg2scope` dicts are always set together ([link](https://github.com/pytest-dev/pytest/blob/010ce2ab0f6d2e90f295d4e3f9e725d31dd5721d/src/_pytest/python.py#L1078-L1083)).\r\n\r\nFurther, the `get_parametrized_fixture_keys` accesses `_arg2scope` for all argnames without a check ([link](https://github.com/pytest-dev/pytest/blob/010ce2ab0f6d2e90f295d4e3f9e725d31dd5721d/src/_pytest/fixtures.py#L175-L177)), which I think rules out that the code protects against plugin shenanigans.\r\n\r\nAfter removing the suppress, adjust the comment and code to make more sense.",
      "state": "MERGED",
      "createdAt": "2024-02-23T09:54:35Z",
      "updatedAt": "2024-02-23T13:35:21Z",
      "closedAt": "2024-02-23T13:35:18Z",
      "mergedAt": "2024-02-23T13:35:18Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "fixtures-cleanups-2",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "fixtures: remove an unneeded suppress\n\nIn `CallSpec2.setmulti` the `params` and `_arg2scope` dicts are always\nset together.\n\nFurther, the `get_parametrized_fixture_keys` accesses `_arg2scope` for\nall argnames without a check, which I think rules out that the code\nprotects against plugin shenanigans.\n\nAfter removing the suppress, adjust the comment and code to make more\nsense.",
              "committedDate": "2024-02-23T09:51:49Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-23T11:19:59Z",
            "body": "Sounds reasonable. :+1: "
          }
        ]
      }
    },
    {
      "number": 12022,
      "title": "Revert \"Fix teardown error reporting when `--maxfail=1` (#11721)\"",
      "body": "Fix #12021.\r\nReopens #11706.\r\n\r\nThis reverts commit 12b9bd580198edf88a795b692cbd6a1a05fe408a.\r\n\r\nThis change caused a bad regression in pytest-xdist: https://github.com/pytest-dev/pytest-xdist/issues/1024\r\n\r\npytest-xdist necessarily has special handling of `--maxfail` and session fixture teardown get executed multiple times with the change.\r\n\r\nSince I'm not sure how to adapt pytest-xdist myself, revert for now.\r\n\r\nI kept the sticky `shouldstop`/`shouldfail` changes as they are good ideas regardless I think.\r\n\r\n<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "MERGED",
      "createdAt": "2024-02-23T09:49:27Z",
      "updatedAt": "2024-02-23T13:50:58Z",
      "closedAt": "2024-02-23T13:34:32Z",
      "mergedAt": "2024-02-23T13:34:32Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "revert-11721",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "needs backport"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Revert \"Fix teardown error reporting when `--maxfail=1` (#11721)\"\n\nFix #12021.\nReopens #11706.\n\nThis reverts commit 12b9bd580198edf88a795b692cbd6a1a05fe408a.\n\nThis change caused a bad regression in pytest-xdist:\nhttps://github.com/pytest-dev/pytest-xdist/issues/1024\n\npytest-xdist necessarily has special handling of `--maxfail` and session\nfixture teardown get executed multiple times with the change.\n\nSince I'm not sure how to adapt pytest-xdist myself, revert for now.\n\nI kept the sticky `shouldstop`/`shouldfail` changes as they are good\nideas regardless I think.",
              "committedDate": "2024-02-23T09:45:26Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-23T11:17:44Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12020,
      "title": "Remove Anthony from Tidelift participants",
      "body": "As discussed in the core development channels, `@asottile` asked to no longer be a Tidelift participant, at least for the time being.\r\n",
      "state": "MERGED",
      "createdAt": "2024-02-22T19:56:01Z",
      "updatedAt": "2024-02-23T00:04:12Z",
      "closedAt": "2024-02-23T00:04:11Z",
      "mergedAt": "2024-02-23T00:04:11Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "update-tidelift",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Remove Anthony from Tidelift participants\n\nAs discussed in the core development channels, @asottile asked to no longer be a Tidelift participant, at least for the time being.",
              "committedDate": "2024-02-22T19:55:51Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "nicoddemus@gmail.com",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "asottile"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-22T19:56:56Z",
            "body": "\r\n\r\n![](https://i.fluffy.cc/VKWgLLbr8ZGc8Gs0b6Hm8wb5xQGmlbwR.gif)"
          }
        ]
      }
    },
    {
      "number": 12019,
      "title": "fixtures: remove a no longer needed sort",
      "body": "First 2 commits are simple code cleanups, the 3rd commit is described below. I saw it when looking into #12008 but it's unrelated to it.\r\n\r\n---\r\n\r\nDicts these days preserve order, so the sort is no longer needed to achieve determinism.\r\n\r\nAs shown by the `test_dynamic_parametrized_ordering` test, this can change the ordering of items, but only in equivalent ways (same number of setups/teardowns per scope), it will just respect the user's given ordering better (hence `vxlan` items now ordered before `vlan` items compared to the previous ordering).",
      "state": "MERGED",
      "createdAt": "2024-02-22T08:00:35Z",
      "updatedAt": "2024-02-22T19:52:59Z",
      "closedAt": "2024-02-22T19:52:56Z",
      "mergedAt": "2024-02-22T19:52:56Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "fixtures-simplify",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "fixtures: remove a no longer needed sort\n\nDicts these days preserve order, so the sort is no longer needed to\nachieve determinism.\n\nAs shown by the `test_dynamic_parametrized_ordering` test, this can\nchange the ordering of items, but only in equivalent ways (same number\nof setups/teardowns per scope), it will just respect the user's given\nordering better (hence `vxlan` items now ordered before `vlan` items\ncompared to the previous ordering).",
              "committedDate": "2024-02-21T08:17:25Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-22T10:37:29Z",
            "body": "Nice!"
          }
        ]
      }
    },
    {
      "number": 12017,
      "title": "assorted code updates and f string migrations",
      "body": "- [x] junitxml fstrings\r\n- [x] skipping fstrings\r\n- [x] fixture test fstrings\r\n- [x] junitxml tests Domnode Refactoring (needs bikeshedding)\r\n\r\nthis is a bunch of changes i collected as i wanted to start redoing #10997 \r\n\r\ndepends on #12501 ",
      "state": "MERGED",
      "createdAt": "2024-02-21T15:33:30Z",
      "updatedAt": "2025-03-11T08:14:44Z",
      "closedAt": "2025-03-11T08:14:36Z",
      "mergedAt": "2025-03-11T08:14:36Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "RonnyPfannschmidt"
      },
      "baseRefName": "main",
      "headRefName": "ronny-ruff-upgrade",
      "author": {
        "login": "RonnyPfannschmidt"
      },
      "assignees": {
        "nodes": [
          {
            "login": "RonnyPfannschmidt"
          }
        ]
      },
      "labels": {
        "nodes": [
          {
            "name": "bot:chronographer:provided"
          }
        ]
      },
      "milestone": {
        "title": "8.4",
        "dueOn": null
      },
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "add extra coverage for junit test helpers",
              "committedDate": "2025-03-10T14:21:43Z",
              "author": {
                "name": "Ronny Pfannschmidt",
                "email": "opensource@ronnypfannschmidt.de",
                "user": {
                  "login": "RonnyPfannschmidt"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": [
          {
            "requestedReviewer": {
              "login": "The-Compiler"
            }
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "The-Compiler"
            },
            "state": "DISMISSED",
            "submittedAt": "2024-06-21T16:07:28Z",
            "body": "Nice! A couple of questions and suggestions."
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-06-22T08:22:05Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-06-22T08:27:17Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-06-22T08:29:30Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-06-22T13:05:54Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-06-22T13:16:26Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-06-22T13:16:50Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-07-08T08:35:45Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-07-08T22:44:09Z",
            "body": "Left minor suggestions, otherwise LGTM."
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-07-19T14:24:09Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12014,
      "title": "ENH: Improve warning stacklevel",
      "body": "- [ ] ~~Include documentation when adding new features.~~\r\n- [x] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n- [x] Add yourself to `AUTHORS` in alphabetical order.\r\n\r\nThis is really proposal-by-PR (because the PR is pretty trivial). In MNE-Python at least it takes this warning on 8.0.1:\r\n```\r\n================================================================================= warnings summary =================================================================================\r\n../pytest/src/_pytest/mark/structures.py:357\r\n  /home/larsoner/python/pytest/src/_pytest/mark/structures.py:357: PytestRemovedIn9Warning: Marks applied to fixtures have no effect\r\n  See docs: https://docs.pytest.org/en/stable/deprecations.html#applying-a-mark-to-a-fixture-function\r\n    store_mark(func, self.mark)\r\n```\r\nand puts it on the correct line needed to fix the warning\r\n```\r\n================================================================================= warnings summary =================================================================================\r\nmne/conftest.py:1125\r\n  /home/larsoner/python/mne-python/mne/conftest.py:1125: PytestRemovedIn9Warning: Marks applied to fixtures have no effect\r\n  See docs: https://docs.pytest.org/en/stable/deprecations.html#applying-a-mark-to-a-fixture-function\r\n    @pytest.mark.filterwarnings(\"ignore:.*Extraction of measurement.*:\")\r\n```\r\nHappy to add to some test if people think this is a good idea and will work in the general case. Happy to explore if it will work in some cases (esp. if someone can point me to the right place to add a test!).\r\n\r\nCan also rebase and re-target for `main` but on my machine at least I get a cryptic error when I try to use latest `main` with MNE-Python so haven't done that for now.",
      "state": "MERGED",
      "createdAt": "2024-02-20T17:00:31Z",
      "updatedAt": "2024-02-23T06:16:09Z",
      "closedAt": "2024-02-23T06:11:05Z",
      "mergedAt": "2024-02-23T06:11:05Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Zac-HD"
      },
      "baseRefName": "main",
      "headRefName": "stacklevel",
      "author": {
        "login": "larsoner"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "MAINT: Changelog",
              "committedDate": "2024-02-21T14:22:16Z",
              "author": {
                "name": "Eric Larson",
                "email": "larson.eric.d@gmail.com",
                "user": {
                  "login": "larsoner"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "DISMISSED",
            "submittedAt": "2024-02-21T10:30:57Z",
            "body": "lovely enhancement :+1:\r\nplease add a changelog fragment for towncrier, you can use the pr id as issue id\r\n\r\nalso do you want to rebase/squash or should we"
          },
          {
            "author": {
              "login": "Zac-HD"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-23T06:10:35Z",
            "body": "Thanks so much @larsoner!"
          }
        ]
      }
    },
    {
      "number": 12013,
      "title": "testing: add a regression test for `setup_module` + `--doctest-modules`",
      "body": "Refs #12011 (only fails on 8.0.1, not main).\n",
      "state": "MERGED",
      "createdAt": "2024-02-20T07:36:43Z",
      "updatedAt": "2024-02-20T20:22:05Z",
      "closedAt": "2024-02-20T20:22:02Z",
      "mergedAt": "2024-02-20T20:22:02Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "doctest-test",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "testing: add a regression test for `setup_module` + `--doctest-modules`\n\nRefs #12011 (only fails on 8.0.1, not main).",
              "committedDate": "2024-02-20T07:36:00Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-20T14:51:05Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12012,
      "title": "[pre-commit.ci] pre-commit autoupdate",
      "body": "<!--pre-commit.ci start-->\nupdates:\n- [github.com/astral-sh/ruff-pre-commit: v0.2.1 \u2192 v0.2.2](https://github.com/astral-sh/ruff-pre-commit/compare/v0.2.1...v0.2.2)\n<!--pre-commit.ci end-->",
      "state": "MERGED",
      "createdAt": "2024-02-20T00:25:29Z",
      "updatedAt": "2024-02-20T00:36:04Z",
      "closedAt": "2024-02-20T00:36:04Z",
      "mergedAt": "2024-02-20T00:36:04Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "pre-commit-ci-update-config",
      "author": {
        "login": "pre-commit-ci"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[pre-commit.ci] pre-commit autoupdate\n\nupdates:\n- [github.com/astral-sh/ruff-pre-commit: v0.2.1 \u2192 v0.2.2](https://github.com/astral-sh/ruff-pre-commit/compare/v0.2.1...v0.2.2)",
              "committedDate": "2024-02-20T00:25:28Z",
              "author": {
                "name": "pre-commit-ci[bot]",
                "email": "66853113+pre-commit-ci[bot]@users.noreply.github.com",
                "user": {
                  "login": "pre-commit-ci[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-20T00:35:54Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12007,
      "title": "Clarify PytestPluginManager._is_in_confcutdir",
      "body": "Follow up to #12006, let's put some comments clarifying `is_in_confcutdir` semantics, as this is not the first time someone misunderstands it.\r\n\r\nAlso removed an obsolete comment in `_loadconftestmodules`: we already set the `confcutdir` based on `rootdir`/`initfile` if not explicitly given.\r\n",
      "state": "MERGED",
      "createdAt": "2024-02-18T12:08:54Z",
      "updatedAt": "2024-02-18T20:27:50Z",
      "closedAt": "2024-02-18T20:27:47Z",
      "mergedAt": "2024-02-18T20:27:47Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "confcutdir-docs",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Update src/_pytest/config/__init__.py\n\nCo-authored-by: Ran Benita <ran@unusedvar.com>",
              "committedDate": "2024-02-18T16:11:12Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "nicoddemus@gmail.com",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-18T12:09:34Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-18T12:11:27Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-18T14:40:37Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12006,
      "title": "Fix PytestPluginManager._is_in_confcutdir on Windows",
      "body": "On Windows two paths might be in different drives, so if a path is not one of the parents of the confcutdir, it does not necessarily mean it is inside the confcutdir either.\r\n\r\nUse `Path.is_relative_to` instead which directly answers that question for us.\r\n\r\nThe previous implementation could cause pytest to inspect all the parent paths of a path from one drive if pytest was invoked from another drive.\r\n\r\nMoved the implementation to a function because it would be too convoluted to test the `PytestPluginManager._is_in_confcutdir` method directly.",
      "state": "CLOSED",
      "createdAt": "2024-02-18T11:11:29Z",
      "updatedAt": "2024-02-18T11:25:48Z",
      "closedAt": "2024-02-18T11:25:44Z",
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "confcutdir-check-windows",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Fix PytestPluginManager._is_in_confcutdir on Windows\n\nOn Windows two paths might be in different drives, so if a path is not one of the parents of the confcutdir, it does not necessarily mean it is inside the confcutdir either.\n\nUse `Path.is_relative_to` instead which directly answers that question for us.\n\nThe previous implementation could cause pytest to inspect all the parent paths of a path from one drive if pytest was invoked from another drive.\n\nMoved the implementation to a function because it would be too convoluted to test the `PytestPluginManager._is_in_confcutdir` method directly.",
              "committedDate": "2024-02-18T11:10:53Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 12005,
      "title": "[8.0.x] Allow Sphinx 7.x",
      "body": "Backport of PR #12002 to 8.0.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2024-02-18T10:21:24Z",
      "updatedAt": "2024-02-18T10:43:50Z",
      "closedAt": "2024-02-18T10:43:49Z",
      "mergedAt": "2024-02-18T10:43:49Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "8.0.x",
      "headRefName": "backport-12002-to-8.0.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[8.0.x] Allow Sphinx 7.x",
              "committedDate": "2024-02-18T10:21:23Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "nicoddemus@gmail.com",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-18T10:29:08Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12003,
      "title": "[automated] Update plugin list",
      "body": "[automated] Update plugin list",
      "state": "MERGED",
      "createdAt": "2024-02-18T00:19:27Z",
      "updatedAt": "2024-02-18T01:35:27Z",
      "closedAt": "2024-02-18T01:35:26Z",
      "mergedAt": "2024-02-18T01:35:26Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "update-plugin-list/patch-cefb3e227",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Fix 'pytest_' mention: it was being considered a rst reference",
              "committedDate": "2024-02-18T01:21:30Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-18T01:21:52Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12002,
      "title": "Allow Sphinx 7.x",
      "body": "Thanks to https://github.com/pytest-dev/pytest/issues/11988#issuecomment-1950318888, the problem was our custom template.\r\n\r\nThe solution was to copy the template from Sphinx 7 and remove the header.\r\n",
      "state": "MERGED",
      "createdAt": "2024-02-17T21:06:38Z",
      "updatedAt": "2024-02-18T10:21:10Z",
      "closedAt": "2024-02-18T10:21:05Z",
      "mergedAt": "2024-02-18T10:21:05Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "sphinx-7-search-bar",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Allow Sphinx 7.x\n\nThanks to https://github.com/pytest-dev/pytest/issues/11988#issuecomment-1950318888, the problem was our custom template.\n\nThe solution was to copy the template from Sphinx 7 and remove the header.",
              "committedDate": "2024-02-17T21:06:17Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-18T10:13:36Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12001,
      "title": "[8.0.x] Disallow Sphinx 6 and 7",
      "body": "Backport of PR #12000 to 8.0.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2024-02-17T20:47:18Z",
      "updatedAt": "2024-02-17T21:02:42Z",
      "closedAt": "2024-02-17T21:02:42Z",
      "mergedAt": "2024-02-17T21:02:41Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "8.0.x",
      "headRefName": "backport-12000-to-8.0.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[8.0.x] Disallow Sphinx 6 and 7",
              "committedDate": "2024-02-17T20:47:16Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "nicoddemus@gmail.com",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-17T20:47:37Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 12000,
      "title": "Disallow Sphinx 6 and 7",
      "body": "Using Sphinx 6.x and 7.x the search bar disappears. Restrict to Sphinx 5.x for now until we find a solution.\r\n\r\nReverts #11568\r\nFixes #11988\r\n",
      "state": "MERGED",
      "createdAt": "2024-02-17T20:36:26Z",
      "updatedAt": "2024-02-17T21:00:44Z",
      "closedAt": "2024-02-17T20:46:58Z",
      "mergedAt": "2024-02-17T20:46:58Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "search-bar-11988",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Disallow Sphinx 6 and 7\n\nUsing Sphinx 6.x and 7.x the search bar disappears. Restrict to Sphinx 5.x for now until we find a solution.\n\nReverts #11568\nFixes #11988",
              "committedDate": "2024-02-17T20:35:05Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-17T20:46:26Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11999,
      "title": "[8.0.x] code: fix `IndexError` crash in `getstatementrange_ast`",
      "body": "Backport of PR #11996 to 8.0.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2024-02-17T16:59:40Z",
      "updatedAt": "2024-02-17T18:28:14Z",
      "closedAt": "2024-02-17T18:28:14Z",
      "mergedAt": "2024-02-17T18:28:14Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "8.0.x",
      "headRefName": "backport-11996-to-8.0.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[8.0.x] code: fix `IndexError` crash in `getstatementrange_ast`",
              "committedDate": "2024-02-17T16:59:38Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-17T18:28:12Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11998,
      "title": "Revert sys.platform verification to simple comparison",
      "body": "As the comment above it states, we need to keep the comparison simple so mypy can understand it, otherwise it will fail to properly handle this on Windows and will flag ``os.getuid()`` missing.\r\n",
      "state": "MERGED",
      "createdAt": "2024-02-17T16:36:52Z",
      "updatedAt": "2024-02-21T10:27:40Z",
      "closedAt": "2024-02-17T19:10:21Z",
      "mergedAt": "2024-02-17T19:10:21Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "revert-platform-check",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 4
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Revert sys.platform verification to simple comparison\n\nAs the comment above it states, we need to keep the comparison simple so mypy can understand it, otherwise it will fail to properly handle this on Windows and will flag ``os.getuid()`` missing.",
              "committedDate": "2024-02-17T16:36:23Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-17T16:44:31Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-17T16:58:00Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11997,
      "title": "Change importlib to first try to import modules using the standard mechanism",
      "body": "As detailed in https://github.com/pytest-dev/pytest/issues/11475#issuecomment-1937043670, currently with `--import-mode=importlib` pytest will try to import every file by using a unique module name, regardless if that module could be imported using the normal import mechanism without touching `sys.path`.\r\n\r\nThis has the consequence that non-test modules available in `sys.path` (via other mechanism, such as being installed into a virtualenv, PYTHONPATH, etc) would end up being imported as standalone modules, instead of imported with their expected module names.\r\n\r\nTo illustrate:\r\n\r\n```\r\n.env/\r\n  lib/\r\n    site-packages/\r\n      anndata/\r\n        core.py \r\n``` \r\n\r\nGiven `anndata` is installed into the virtual environment, `python -c \"import anndata.core\"` works, but pytest with `importlib` mode would import that module as a standalone module named `\".env.lib.site-packages.anndata.core\"`, because importlib module was designed to import test files which are not reachable from `sys.path`, but now it is clear that normal modules should be imported using the standard mechanisms if possible.\r\n\r\nNow `imporlib` mode will first try to import the module normally, without changing `sys.path`, and if that fails it falls back to importing the module as a standalone module.\r\n\r\nThis supersedes #11931.\r\n\r\nFix #11475 \r\nClose #11931",
      "state": "MERGED",
      "createdAt": "2024-02-17T16:26:01Z",
      "updatedAt": "2024-03-04T11:02:14Z",
      "closedAt": "2024-03-03T12:43:15Z",
      "mergedAt": "2024-03-03T12:43:14Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "11475-importlib",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 14
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "doc: document consider_namespace_packages option",
              "committedDate": "2024-03-02T19:13:48Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-17T16:54:42Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-17T20:15:06Z",
            "body": ""
          },
          {
            "author": {
              "login": "flying-sheep"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-18T12:24:53Z",
            "body": "Beautiful! If I understand correctly, this is basically the more efficient way to do what I did in my PR by brute forcing. I have a thought regarding the changed wording for `--import-mode=importlib`:"
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-18T12:31:21Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "CHANGES_REQUESTED",
            "submittedAt": "2024-02-18T18:32:30Z",
            "body": "The `import_module` might import (= execute) modules that were not intended. I don't think that we can assume that arbitrary names (names of test files) are safe to import. \r\n\r\nE.g. consider I'm running `pytest x.py` and I have an `x` module in my site-packages, then the `x` module in site-packages will get executed, this is quite unexpected and possibly dangerous. (The code as written also has a bug, where even in the case the `if mod.__file__ and Path(mod.__file__) == path` condition is false, the module from the site-packages will still be returned, because of the `return sys.modules[module_name]` just below).\r\n\r\nThe Python importlib stuff confuses me greatly but it seems to me that the existing importlib mode code basically has the right idea -- it first finds the module spec and only executes it afterwards. Perhaps we can just tweak/extend the existing `sys.meta_path` search code to work, and keep something like the `mod.__file__ and Path(mod.__file__) == path` check, but with the module spec, not the actual module?"
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-18T20:15:16Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-18T20:23:18Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-19T01:14:53Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-19T07:25:20Z",
            "body": "Didn't review yet, only looked at the `resolve_pkg_root_and_module_name` function."
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-19T10:59:14Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-19T11:08:07Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-24T12:56:56Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-24T13:22:12Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-24T18:39:49Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-25T14:17:09Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-25T14:28:10Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-25T14:29:55Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-25T17:45:49Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-25T17:46:52Z",
            "body": "Didn't review the code yet, just some light comments. Will review a bit later."
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-27T20:13:43Z",
            "body": "Went over the code now, it looks good to me in general! I left a few comments in addition to the previous ones.\r\n\r\nAlso for your consideration, I've split the PR into commits, I think it will help with reviewing/bisecting/reverting compared to one big commit. https://github.com/bluetech/pytest/commits/11475-importlib/ "
          }
        ]
      }
    },
    {
      "number": 11996,
      "title": "code: fix `IndexError` crash in `getstatementrange_ast`",
      "body": "Fix #11953.\r\n\r\nI haven't been able to reproduce (needs a multiline statement which starts with a blank line?), though I didn't try very hard. However the fix is pretty innocent so I think it's OK to merge without a regression test.",
      "state": "MERGED",
      "createdAt": "2024-02-17T10:26:05Z",
      "updatedAt": "2024-02-17T16:59:26Z",
      "closedAt": "2024-02-17T16:59:10Z",
      "mergedAt": "2024-02-17T16:59:10Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "getstatementrange-index-error",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "code: fix `IndexError` crash in `getstatementrange_ast`\n\nFix #11953.",
              "committedDate": "2024-02-17T16:43:55Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-17T13:01:37Z",
            "body": "changelog?"
          }
        ]
      }
    },
    {
      "number": 11995,
      "title": "Cherry pick 8.0.1 release notes",
      "body": "(cherry picked from commit 68524d48586e7f8d070fc1146e5ff90e770d0382)\n",
      "state": "MERGED",
      "createdAt": "2024-02-16T22:12:54Z",
      "updatedAt": "2024-02-16T22:27:59Z",
      "closedAt": "2024-02-16T22:27:55Z",
      "mergedAt": "2024-02-16T22:27:55Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "cherry-pick-release",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Merge pull request #11993 from pytest-dev/release-8.0.1\n\nPrepare release 8.0.1\n\n(cherry picked from commit 68524d48586e7f8d070fc1146e5ff90e770d0382)",
              "committedDate": "2024-02-16T22:11:27Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11993,
      "title": "Prepare release 8.0.1",
      "body": "Created by the [prepare release pr](https://github.com/pytest-dev/pytest/actions/workflows/prepare-release-pr.yml) workflow.\n\nOnce all builds pass and it has been **approved** by one or more maintainers, start the [deploy](https://github.com/pytest-dev/pytest/actions/workflows/deploy.yml) workflow, using these parameters:\n\n* `Use workflow from`: `release-8.0.1`.\n* `Release version`: `8.0.1`.\n\nOr execute on the command line:\n\n```console\ngh workflow run deploy.yml -r release-8.0.1 -f version=8.0.1\n```\n\nAfter the workflow has been approved by a core maintainer, the package will be uploaded to PyPI automatically.\n",
      "state": "MERGED",
      "createdAt": "2024-02-16T13:20:18Z",
      "updatedAt": "2024-02-16T22:09:48Z",
      "closedAt": "2024-02-16T22:09:47Z",
      "mergedAt": "2024-02-16T22:09:47Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "8.0.x",
      "headRefName": "release-8.0.1",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Prepare release version 8.0.1",
              "committedDate": "2024-02-16T13:20:17Z",
              "author": {
                "name": "pytest bot",
                "email": "pytestbot@gmail.com",
                "user": {
                  "login": "pytestbot"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-16T13:37:46Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11992,
      "title": "[8.0.x] recwarn: fix pytest.warns handling of Warnings with multiple arguments",
      "body": "(cherry picked from commit fbe18fc7a9a44982bedc81c1d25f63e6d20fffab)\n",
      "state": "MERGED",
      "createdAt": "2024-02-16T12:38:28Z",
      "updatedAt": "2024-02-16T12:55:35Z",
      "closedAt": "2024-02-16T12:55:28Z",
      "mergedAt": "2024-02-16T12:55:28Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "8.0.x",
      "headRefName": "backport-11991",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[8.0.x] recwarn: fix pytest.warns handling of Warnings with multiple arguments\n\n(cherry picked from commit fbe18fc7a9a44982bedc81c1d25f63e6d20fffab)",
              "committedDate": "2024-02-16T12:34:01Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11991,
      "title": "recwarn: fix pytest.warns handling of Warnings with multiple arguments",
      "body": "Fix #11906.\n\nThis is a rebase of #11917 so can be included in 8.0.1. I can't update the original PR so created a new one.\n",
      "state": "MERGED",
      "createdAt": "2024-02-16T12:15:21Z",
      "updatedAt": "2024-02-16T12:30:02Z",
      "closedAt": "2024-02-16T12:29:19Z",
      "mergedAt": "2024-02-16T12:29:19Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "warns-fix",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "recwarn: fix pytest.warns handling of Warnings with multiple arguments\n\nFix #11906",
              "committedDate": "2024-02-16T12:14:24Z",
              "author": {
                "name": "Reagan Lee",
                "email": "96998476+reaganjlee@users.noreply.github.com",
                "user": {
                  "login": "reaganjlee"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11990,
      "title": "[8.0.x] recwarn: let base exceptions propagate through `pytest.warns` again",
      "body": "(cherry picked from commit 718cd400152d64e6e6d47dc96f61bf1e6c06011a)",
      "state": "MERGED",
      "createdAt": "2024-02-16T10:36:49Z",
      "updatedAt": "2024-02-16T10:52:20Z",
      "closedAt": "2024-02-16T10:52:17Z",
      "mergedAt": "2024-02-16T10:52:17Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "8.0.x",
      "headRefName": "backport-11920",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[8.0.x] recwarn: let base exceptions propagate through `pytest.warns` again\n\n(cherry picked from commit 718cd400152d64e6e6d47dc96f61bf1e6c06011a)",
              "committedDate": "2024-02-16T10:31:51Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11989,
      "title": "scripts/update-plugin-list: include packages starting with \"pytest_\" (underscore)",
      "body": "Fix #11985.\n",
      "state": "MERGED",
      "createdAt": "2024-02-16T10:05:05Z",
      "updatedAt": "2024-02-16T11:01:28Z",
      "closedAt": "2024-02-16T11:01:25Z",
      "mergedAt": "2024-02-16T11:01:25Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "plugin-list-underscore",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "scripts/update-plugin-list: include packages starting with \"pytest_\" (underscore)\n\nFix #11985.",
              "committedDate": "2024-02-16T10:03:38Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-16T11:00:21Z",
            "body": "Thanks!"
          }
        ]
      }
    },
    {
      "number": 11979,
      "title": "Add --log-file-mode option to the logging plugin, enabling appending to log-files",
      "body": "Previously, the mode was hard-coded to be \"w\" which truncates the file before logging. Relevant documentation has been updated and tests have been added to validate the new functionality.\r\n\r\nCloses #11978\r\n\r\n<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [X] Include documentation when adding new features.\r\n- [X] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [X] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [X] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [X] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "MERGED",
      "createdAt": "2024-02-15T01:50:36Z",
      "updatedAt": "2024-02-21T22:09:40Z",
      "closedAt": "2024-02-21T12:02:19Z",
      "mergedAt": "2024-02-21T12:02:19Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "11978-add-log-file-mode-option",
      "author": {
        "login": "Leithal3"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Update 11978.improvement.rst",
              "committedDate": "2024-02-21T11:48:30Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-17T21:13:46Z",
            "body": "Looks great, thanks!\r\n\r\nLeft two minor suggestions."
          }
        ]
      }
    },
    {
      "number": 11977,
      "title": "[8.0.x] Added `logot` to the plugin list",
      "body": "Backport of PR #11972 to 8.0.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2024-02-14T18:50:53Z",
      "updatedAt": "2024-02-14T19:08:39Z",
      "closedAt": "2024-02-14T19:08:39Z",
      "mergedAt": "2024-02-14T19:08:39Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "8.0.x",
      "headRefName": "backport-11972-to-8.0.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[8.0.x] Added `logot` to the plugin list",
              "committedDate": "2024-02-14T18:50:52Z",
              "author": {
                "name": "Dave Hall",
                "email": "dave@etianen.com",
                "user": {
                  "login": "etianen"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-14T18:51:26Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11972,
      "title": "Added `logot` to the plugin list",
      "body": "I've just released [`logot`](https://github.com/etianen/logot), a log testing library that includes a [`pytest` plugin](https://logot.readthedocs.io/latest/using-pytest.html). Although it works with other testing frameworks, the `pytest` integration is showcased everywhere in the docs, and generally expected to be _the way to use it_.\r\n\r\nBecause the library is not named `pytest-XXX`, it needs to be added to the manual plugin list. \ud83d\ude47 \r\n\r\nHere's a quick example of how it looks:\r\n\r\n``` py\r\nfrom logot import Logot, logged\r\n\r\ndef test_something(logot: Logot) -> None:\r\n   do_something()\r\n   logot.assert_logged(logged.info(\"Something was done\"))\r\n```\r\n\r\n`logot`'s most interesting feature is its ability to test highly-concurrent [threaded](https://logot.readthedocs.io/latest/index.html#testing-threaded-code) or [async](https://logot.readthedocs.io/latest/index.html#testing-asynchronous-code) code by asserting on captured logs. It's also useful in \"normal\" synchronous code as a higher-level `caplog` replacement.",
      "state": "MERGED",
      "createdAt": "2024-02-13T22:44:31Z",
      "updatedAt": "2024-02-14T19:08:31Z",
      "closedAt": "2024-02-14T18:50:35Z",
      "mergedAt": "2024-02-14T18:50:35Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "add-logot-docs",
      "author": {
        "login": "etianen"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Add `logot` to plugin list",
              "committedDate": "2024-02-13T22:34:09Z",
              "author": {
                "name": "Dave Hall",
                "email": "dave@etianen.com",
                "user": {
                  "login": "etianen"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-14T06:13:36Z",
            "body": "Thanks "
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-14T18:50:28Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11968,
      "title": "[8.0.x] main: fix reversed collection order in Session",
      "body": "Backport of PR #11957 to 8.0.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2024-02-13T07:44:37Z",
      "updatedAt": "2024-02-13T08:01:02Z",
      "closedAt": "2024-02-13T08:01:01Z",
      "mergedAt": "2024-02-13T08:01:01Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "8.0.x",
      "headRefName": "backport-11957-to-8.0.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[8.0.x] main: fix reversed collection order in Session",
              "committedDate": "2024-02-13T07:44:36Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-13T07:47:01Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11967,
      "title": "[pre-commit.ci] pre-commit autoupdate",
      "body": "<!--pre-commit.ci start-->\nupdates:\n- [github.com/astral-sh/ruff-pre-commit: v0.2.0 \u2192 v0.2.1](https://github.com/astral-sh/ruff-pre-commit/compare/v0.2.0...v0.2.1)\n<!--pre-commit.ci end-->",
      "state": "MERGED",
      "createdAt": "2024-02-13T00:07:44Z",
      "updatedAt": "2024-02-13T05:19:41Z",
      "closedAt": "2024-02-13T05:19:40Z",
      "mergedAt": "2024-02-13T05:19:40Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "main",
      "headRefName": "pre-commit-ci-update-config",
      "author": {
        "login": "pre-commit-ci"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[pre-commit.ci] pre-commit autoupdate\n\nupdates:\n- [github.com/astral-sh/ruff-pre-commit: v0.2.0 \u2192 v0.2.1](https://github.com/astral-sh/ruff-pre-commit/compare/v0.2.0...v0.2.1)",
              "committedDate": "2024-02-13T00:07:42Z",
              "author": {
                "name": "pre-commit-ci[bot]",
                "email": "66853113+pre-commit-ci[bot]@users.noreply.github.com",
                "user": {
                  "login": "pre-commit-ci[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-13T05:19:25Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11965,
      "title": "build(deps): Bump pytest-asyncio from 0.23.3 to 0.23.5 in /testing/plugins_integration",
      "body": "Bumps [pytest-asyncio](https://github.com/pytest-dev/pytest-asyncio) from 0.23.3 to 0.23.5.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pytest-dev/pytest-asyncio/releases\">pytest-asyncio's releases</a>.</em></p>\n<blockquote>\n<h2>pytest-asyncio 0.23.5</h2>\n<h1>0.23.5 (2024-02-09)</h1>\n<ul>\n<li>Declare compatibility with pytest 8 <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/issues/737\">#737</a></li>\n<li>Fix typing errors with recent versions of mypy <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/issues/769\">#769</a></li>\n<li>Prevent DeprecationWarning about internal use of <code>asyncio.get_event_loop()</code> from affecting test cases <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/issues/757\">#757</a></li>\n</ul>\n<h2>Known issues</h2>\n<p>As of v0.23, pytest-asyncio attaches an asyncio event loop to each item of the test suite (i.e. session, packages, modules, classes, functions) and allows tests to be run in those loops when marked accordingly. Pytest-asyncio currently assumes that async fixture scope is correlated with the new event loop scope. This prevents fixtures from being evaluated independently from the event loop scope and breaks some existing test suites (see <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/issues/706\">#706</a>). For example, a test suite may require all fixtures and tests to run in the same event loop, but have async fixtures that are set up and torn down for each module. If you're affected by this issue, please continue using the v0.21 release, until it is resolved.</p>\n<h2>pytest-asyncio 0.23.5a0</h2>\n<h1>0.23.5 (UNRELEASED)</h1>\n<ul>\n<li>Declare compatibility with pytest 8 <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/issues/737\">#737</a></li>\n<li>Fix typing errors with recent versions of mypy <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/issues/769\">#769</a></li>\n</ul>\n<h2>Known issues</h2>\n<p>As of v0.23, pytest-asyncio attaches an asyncio event loop to each item of the test suite (i.e. session, packages, modules, classes, functions) and allows tests to be run in those loops when marked accordingly. Pytest-asyncio currently assumes that async fixture scope is correlated with the new event loop scope. This prevents fixtures from being evaluated independently from the event loop scope and breaks some existing test suites (see <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/issues/706\">#706</a>). For example, a test suite may require all fixtures and tests to run in the same event loop, but have async fixtures that are set up and torn down for each module. If you're affected by this issue, please continue using the v0.21 release, until it is resolved.</p>\n<h2>pytest-asyncio 0.23.4</h2>\n<h1>0.23.4 (2024-01-28)</h1>\n<ul>\n<li>pytest-asyncio no longer imports additional, unrelated packages during test collection <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/issues/729\">#729</a></li>\n<li>Addresses further issues that caused an internal pytest error during test collection</li>\n<li>Declares incompatibility with pytest 8 <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/issues/737\">#737</a></li>\n</ul>\n<h2>pytest-asyncio 0.23.4a2</h2>\n<h1>0.23.4 (UNRELEASED)</h1>\n<ul>\n<li>pytest-asyncio no longer imports additional, unrelated packages during test collection <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/issues/729\">#729</a></li>\n<li>Addresses further issues that caused an internal pytest error during test collection</li>\n</ul>\n<h2>Known issues</h2>\n<p>As of v0.23, pytest-asyncio attaches an asyncio event loop to each item of the test suite (i.e. session, packages, modules, classes, functions) and allows tests to be run in those loops when marked accordingly. Pytest-asyncio currently assumes that async fixture scope is correlated with the new event loop scope. This prevents fixtures from being evaluated independently from the event loop scope and breaks some existing test suites (see <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/issues/706\">#706</a>). For example, a test suite may require all fixtures and tests to run in the same event loop, but have async fixtures that are set up and torn down for each module. If you're affected by this issue, please continue using the v0.21 release, until it is resolved.</p>\n<h2>pytest-asyncio 0.23.4a1</h2>\n<h1>0.23.4 (UNRELEASED)</h1>\n<ul>\n<li>pytest-asyncio no longer imports additional, unrelated packages during test collection <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/issues/729\">#729</a></li>\n</ul>\n<h2>Known issues</h2>\n<p>As of v0.23, pytest-asyncio attaches an asyncio event loop to each item of the test suite (i.e. session, packages, modules, classes, functions) and allows tests to be run in those loops when marked accordingly. Pytest-asyncio currently assumes that async fixture scope is correlated with the new event loop scope. This prevents fixtures from being evaluated independently from the event loop scope and breaks some existing test suites (see <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/issues/706\">#706</a>). For example, a test suite may require all fixtures and tests to run in the same event loop, but have async fixtures that are set up and torn down for each module. If you're affected by this issue, please continue using the v0.21 release, until it is resolved.</p>\n<h2>pytest-asyncio 0.23.4a0</h2>\n<h1>0.23.4 (UNRELEASED)</h1>\n<ul>\n<li>pytest-asyncio no longer imports additional, unrelated packages during test collection <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/issues/729\">#729</a></li>\n</ul>\n<h2>Known issues</h2>\n<p>As of v0.23, pytest-asyncio attaches an asyncio event loop to each item of the test suite (i.e. session, packages, modules, classes, functions) and allows tests to be run in those loops when marked accordingly. Pytest-asyncio currently assumes that async fixture scope is correlated with the new event loop scope. This prevents fixtures from being evaluated independently from the event loop scope and breaks some existing test suites (see <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/issues/706\">#706</a>). For example, a test suite may require all fixtures and tests to run in the same event loop, but have async fixtures that are set up and torn down for each module. If you're affected by this issue, please continue using the v0.21 release, until it is resolved.</p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/3aef60532f2a1c634af5f4539eabdd4fbfffcabc\"><code>3aef605</code></a> [build] Update actions/upload-artifact and actions/download-artifact to v4.</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/4b1908d9ed26895c194a4bb8d4c61cef2dfc5067\"><code>4b1908d</code></a> [fix] Prevent DeprecationWarning from bubbling to user code.</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/fc6d6cfeb2fd7db1572869b80517ec436ef95e7f\"><code>fc6d6cf</code></a> Fix typing and update to mypy 1.8.0 (<a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/issues/769\">#769</a>)</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/6008cf16e2a5c6c365e249db975a8a1afec3c8bf\"><code>6008cf1</code></a> Build(deps): Bump pluggy from 1.3.0 to 1.4.0 in /dependencies/default</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/712c51bde9d385ecf69ee98e8c40fa6868b80a75\"><code>712c51b</code></a> Build(deps): Bump coverage from 7.4.0 to 7.4.1 in /dependencies/default</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/42fd3041c3e44e3428adee10afa7935757375ff9\"><code>42fd304</code></a> Build(deps): Bump hypothesis in /dependencies/default</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/a40b4f662454e3b33d44fc552958439db167a294\"><code>a40b4f6</code></a> Build(deps): Bump urllib3 from 2.1.0 to 2.2.0 in /dependencies/docs</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/9d90f8ec6e68e2564f5116cf2accfe0b202af390\"><code>9d90f8e</code></a> Build(deps): Bump certifi in /dependencies/docs</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/fe5da0771dcc0b939ae9ee3d1b9a50cfc4860667\"><code>fe5da07</code></a> Build(deps): Bump markupsafe from 2.1.4 to 2.1.5 in /dependencies/docs</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/42b140decf8de145e76dcd61894a7963b10e815b\"><code>42b140d</code></a> fix compatibility with pytest ^8 (<a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/issues/776\">#776</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pytest-dev/pytest-asyncio/compare/v0.23.3...v0.23.5\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pytest-asyncio&package-manager=pip&previous-version=0.23.3&new-version=0.23.5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2024-02-12T03:41:29Z",
      "updatedAt": "2024-02-12T14:06:15Z",
      "closedAt": "2024-02-12T14:06:14Z",
      "mergedAt": "2024-02-12T14:06:14Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/pip/testing/plugins_integration/pytest-asyncio-0.23.5",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "python"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump pytest-asyncio in /testing/plugins_integration\n\nBumps [pytest-asyncio](https://github.com/pytest-dev/pytest-asyncio) from 0.23.3 to 0.23.5.\n- [Release notes](https://github.com/pytest-dev/pytest-asyncio/releases)\n- [Commits](https://github.com/pytest-dev/pytest-asyncio/compare/v0.23.3...v0.23.5)\n\n---\nupdated-dependencies:\n- dependency-name: pytest-asyncio\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2024-02-12T03:41:28Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11964,
      "title": "[automated] Update plugin list",
      "body": "[automated] Update plugin list",
      "state": "MERGED",
      "createdAt": "2024-02-11T00:20:04Z",
      "updatedAt": "2024-02-11T00:50:25Z",
      "closedAt": "2024-02-11T00:50:24Z",
      "mergedAt": "2024-02-11T00:50:24Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "update-plugin-list/patch-7690a0ddf",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[automated] Update plugin list",
              "committedDate": "2024-02-11T00:20:02Z",
              "author": {
                "name": "pytest bot",
                "email": "pytestbot@users.noreply.github.com",
                "user": {
                  "login": "pytestbot"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11963,
      "title": "Consider paths and pathlists relative to cwd in case of an absent ini-file",
      "body": "Previously this would trigger an `AssertionError`.\r\n\r\nWhile it could be considered a bug-fix, but given it now can be relied upon, it is probably better to consider it an improvement.\r\n\r\nFix #11311\r\n",
      "state": "MERGED",
      "createdAt": "2024-02-10T23:23:40Z",
      "updatedAt": "2024-02-14T19:07:30Z",
      "closedAt": "2024-02-14T18:53:28Z",
      "mergedAt": "2024-02-14T18:53:28Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "paths-ini-without-configfile-11311",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Consider paths and pathlists relative to cwd in case of an absent ini-file\n\nPreviously this would trigger an `AssertionError`.\n\nWhile it could be considered a bug-fix, but given it now can be relied upon, it is probably better to consider it an improvement.\n\nFix #11311",
              "committedDate": "2024-02-10T23:23:26Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-11T18:47:08Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11962,
      "title": "Consider pyproject.toml files for config if no other config files were found",
      "body": "Today `pyproject.toml` is the standard for declaring a Python project root, so seems reasonable to consider it for the ini configuration (and specially `rootdir`) in case we do not find other suitable candidates.\r\n\r\nRelated to #11311",
      "state": "MERGED",
      "createdAt": "2024-02-10T22:12:13Z",
      "updatedAt": "2024-02-14T19:08:48Z",
      "closedAt": "2024-02-14T19:08:45Z",
      "mergedAt": "2024-02-14T19:08:45Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "pyproject-toml-root",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Improve docs a bit",
              "committedDate": "2024-02-14T18:56:05Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-10T22:33:45Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-11T18:44:36Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-11T19:21:04Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-14T18:57:05Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11961,
      "title": "[pre-commit] Add some autofixable refactor rules from pylint",
      "body": "Some opinionated fixes added to lint (from pylint but using the fast ruff implementation with autofix). There's an embedded performance improvement, that I'll create a MR specifically for (b922270ce) if the other changes are too controversial to be merged.",
      "state": "MERGED",
      "createdAt": "2024-02-10T19:26:20Z",
      "updatedAt": "2024-02-11T18:52:32Z",
      "closedAt": "2024-02-11T18:52:29Z",
      "mergedAt": "2024-02-11T18:52:29Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "main",
      "headRefName": "add-some-autofixable-refactor-from-pylint",
      "author": {
        "login": "Pierre-Sassoulas"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[ruff] Add unwanted pylint message to the ignore list",
              "committedDate": "2024-02-10T22:42:36Z",
              "author": {
                "name": "Pierre Sassoulas",
                "email": "pierre.sassoulas@gmail.com",
                "user": {
                  "login": "Pierre-Sassoulas"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-10T20:56:31Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-11T18:42:46Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11959,
      "title": "Allow using `warnings.warn()` with a `Warning`",
      "body": "[`warnigns.warn()` expects its first argument to be a `str` or a `Warning`](https://docs.python.org/3/library/warnings.html#available-functions) (see also [`WarningMessage` in typeshed](https://github.com/python/typeshed/blob/9d90eeb29646f88937bcee38e4dd954a6a769ed2/stdlib/warnings.pyi#L43-L44)) and using a different type can cause difficult to diagnose errors (as was reported in #10865):\r\n```python\r\n>>> import warnings\r\n>>> with warnings.catch_warnings():\r\n...     warnings.filterwarnings(\"ignore\", \"test\")\r\n...     warnings.warn(\"Warning!\")\r\n...     warnings.warn(RuntimeWarning())\r\n...     warnings.warn(0)\r\n... \r\n<stdin>:3: UserWarning: Warning!\r\n<stdin>:4: RuntimeWarning: \r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 5, in <module>\r\nTypeError: expected string or bytes-like object\r\n```\r\nRecently #11804 tried to help address this problem by making `pytest.warns()` check the type that was passed to `warnings.warn()`, but the checks are now too strict:\r\n```python\r\n>>> import warnings\r\n>>> import pytest\r\n>>> with pytest.warns(Warning):\r\n...     warnings.warn(RuntimeWarning([\"warning\", \"context\"]))\r\n... \r\nTraceback (most recent call last):\r\n    ...\r\n    raise TypeError(\r\nTypeError: Warning message must be str, got ['warning', 'context'] (type list)\r\n>>> with pytest.warns(Warning):\r\n...     warnings.warn(RuntimeWarning())\r\n... \r\nTraceback (most recent call last):\r\n    ...\r\nIndexError: tuple index out of range\r\n```\r\nBoth uses are explicitly permitted by Python. Furthermore, in the second case the `IndexError` is completely unexpected.\r\n\r\nWith my patch `pytest.warns()` allows `warnings.warn()` to be used with a `Warning` instance, except if a `UserWarning` is created by passing it arguments and the first argument is not a `str`. This is because if an invalid type was used in `warnings.warn()` then Python creates a `UserWarning` anyways and it becomes impossible for `pytest` to figure out if that was done automatically or not. However, even with that shortcoming `pytest.warns()` still behaves much better than it does right now.\r\n\r\nCloses #11954\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [x] Include documentation when adding new features.\r\n- [x] Include new tests or update existing tests when applicable.\r\n- [ ] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.",
      "state": "MERGED",
      "createdAt": "2024-02-09T21:06:40Z",
      "updatedAt": "2024-02-16T20:50:55Z",
      "closedAt": "2024-02-16T12:00:37Z",
      "mergedAt": "2024-02-16T12:00:37Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "warn-message-type",
      "author": {
        "login": "eerovaher"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Allow using `warnings.warn()` with Warnings\n\nTest:\n\n`warnings.warn()` expects that its first argument is a `str` or a\n`Warning`, but since 9454fc38d3636b79ee657d6cacf7477eb8acee52\n`pytest.warns()` no longer allows `Warning` instances unless the first\nargument the `Warning` was initialized with is a `str`. Furthermore, if\nthe `Warning` was created without arguments then `pytest.warns()` raises\nan unexpected `IndexError`. The new tests reveal the problem.\n\nFix:\n\n`pytest.warns()` now allows using `warnings.warn()` with a `Warning`\ninstance, as is required by Python, with one exception. If the warning\nused is a `UserWarning` that was created by passing it arguments and the\nfirst argument was not a `str` then `pytest.raises()` still considers\nthat an error. This is because if an invalid type was used in\n`warnings.warn()` then Python creates a `UserWarning` anyways and it\nbecomes impossible for `pytest` to figure out if that was done\nautomatically or not.\n\n[ran: rebased on previous commit]",
              "committedDate": "2024-02-16T11:41:59Z",
              "author": {
                "name": "Eero Vaher",
                "email": "eero.vaher@fysik.lu.se",
                "user": {
                  "login": "eerovaher"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-16T11:49:24Z",
            "body": "Thanks for the patch and the clear description.\r\n\r\nI added a commit and rebase yours on top to make things a bit clearer, but the logic is the same except I removed the `isinstance(wrn, Warning)` check which I believe was unnecessary and made the typing not work out."
          }
        ]
      }
    },
    {
      "number": 11958,
      "title": "[8.0.x] Improve error message when using @pytest.fixture twice",
      "body": "Backport of PR #11670 to 8.0.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2024-02-09T13:59:27Z",
      "updatedAt": "2024-02-09T14:34:47Z",
      "closedAt": "2024-02-09T14:34:46Z",
      "mergedAt": "2024-02-09T14:34:46Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "The-Compiler"
      },
      "baseRefName": "8.0.x",
      "headRefName": "backport-11670-to-8.0.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[8.0.x] Improve error message when using @pytest.fixture twice",
              "committedDate": "2024-02-09T13:59:25Z",
              "author": {
                "name": "Florian Bruhin",
                "email": "me@the-compiler.org",
                "user": {
                  "login": "The-Compiler"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "The-Compiler"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-09T14:20:18Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11957,
      "title": "main: fix reversed collection order in Session",
      "body": "Since we're working with a stack (last in first out), we need to append to it in reverse to preserve the order when popped.\r\n\r\nFix #11937.",
      "state": "MERGED",
      "createdAt": "2024-02-09T13:26:35Z",
      "updatedAt": "2024-02-13T07:44:23Z",
      "closedAt": "2024-02-13T07:44:13Z",
      "mergedAt": "2024-02-13T07:44:13Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "fix-session-collect-order",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "main: fix reversed collection order in Session\n\nSince we're working with a stack (last in first out), we need to append\nto it in reverse to preserve the order when popped.\n\nFix #11937.",
              "committedDate": "2024-02-09T13:24:44Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-09T13:28:30Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-12T14:05:53Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-12T15:00:46Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-13T07:44:01Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11956,
      "title": "Fix ruff deprecation warning + enable few more rules",
      "body": "Fix the following warning:\r\n\r\n```\r\nwarning: The top-level linter settings are deprecated in favour of their counterparts in the `lint` section. Please update the following options in `pyproject.toml`:\r\n  - 'ignore' -> 'lint.ignore'\r\n  - 'select' -> 'lint.select'\r\n```\r\n\r\nEnable https://docs.astral.sh/ruff/rules/#flake8-pie-pie\r\nEnable https://docs.astral.sh/ruff/rules/blanket-noqa/",
      "state": "MERGED",
      "createdAt": "2024-02-09T09:18:07Z",
      "updatedAt": "2024-02-09T13:32:14Z",
      "closedAt": "2024-02-09T13:32:11Z",
      "mergedAt": "2024-02-09T13:32:11Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "ruff-warning",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Enable lint PGH004 - Use specific rule codes when using noqa",
              "committedDate": "2024-02-09T09:14:36Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-09T09:43:18Z",
            "body": ""
          },
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-09T10:27:22Z",
            "body": "Look great ! I thought I fixed this Ruff warning already though. Are you based on the latest main ? Also Ruff 0.2 went out recentely with some breaking changes, could be a good idea to upgrade it and check for problems in this MR. (The pre-commit bot will create a new one soon if you want to separate the two)"
          }
        ]
      }
    },
    {
      "number": 11951,
      "title": "add optional `new_path` argument to `Pytester.chdir`",
      "body": "<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [X] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [X] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n\r\nfixes #11942\r\n",
      "state": "CLOSED",
      "createdAt": "2024-02-08T10:05:58Z",
      "updatedAt": "2024-02-10T00:42:51Z",
      "closedAt": "2024-02-10T00:42:51Z",
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "patch-1",
      "author": {
        "login": "DetachHead"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "add optional `new_path` argument to `Pytester.chdir`",
              "committedDate": "2024-02-08T10:04:36Z",
              "author": {
                "name": "DetachHead",
                "email": "57028336+DetachHead@users.noreply.github.com",
                "user": {
                  "login": "DetachHead"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "CHANGES_REQUESTED",
            "submittedAt": "2024-02-08T12:40:54Z",
            "body": "Thanks @DetachHead!\r\n\r\nPlease take a look at my comment, also before merging we need:\r\n\r\n1. A quick test for this; while the code is simple, we want a test to avoid future regressions. Please write one in `testing/test_pytester.py` which: \r\n   * Calls `pytester.chdir` without arguments, and check `os.cwd` has changed to `pytester.path`.\r\n   * Next, call `pytester.chdir(new_path)`, and check that `os.cwd` has changed to `new_path`, while `pytester.path` remains the same.\r\n\r\n2. A changelog entry of type `improvement`, something like:\r\n\r\n    ```rst\r\n    :meth:`pytest.Pytester.chdir` now accepts an optional `Path` to changing the directory to, defaulting to `self.path`.\r\n    ```"
          },
          {
            "author": {
              "login": "DetachHead"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-10T00:42:47Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11948,
      "title": "[8.0.x] Merge pull request #11941 from bluetech/doctest-parsefactories",
      "body": "doctest: fix autouse fixtures possibly not getting picked up (cherry picked from commit 6c0b6c2f92b68757988cdb11499cac750ba71862)\r\n\r\nNote - the backport is not clean due to 06dbd3c21ccdf1ac76e8fa264048133cb4660842, but as argued in that commit we can just ignore the `conftest.py` branch. ",
      "state": "MERGED",
      "createdAt": "2024-02-07T20:55:18Z",
      "updatedAt": "2024-02-08T01:09:19Z",
      "closedAt": "2024-02-08T01:09:19Z",
      "mergedAt": "2024-02-08T01:09:19Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "8.0.x",
      "headRefName": "backport-11941",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[8.0.x] Merge pull request #11941 from bluetech/doctest-parsefactories\n\ndoctest: fix autouse fixtures possibly not getting picked up\n(cherry picked from commit 6c0b6c2f92b68757988cdb11499cac750ba71862)",
              "committedDate": "2024-02-07T20:52:47Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-08T01:09:15Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11947,
      "title": "Revert \"testing: temporarily disable test due to hypothesis issue (#1836)\"",
      "body": "This reverts commit 5cd0535395541d8940035418b368331318002199.",
      "state": "MERGED",
      "createdAt": "2024-02-07T20:14:51Z",
      "updatedAt": "2024-02-07T20:45:01Z",
      "closedAt": "2024-02-07T20:44:58Z",
      "mergedAt": "2024-02-07T20:44:58Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "hypothesis-revert",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Revert \"testing: temporarily disable test due to hypothesis issue (#11836)\"\n\nThis reverts commit 5cd0535395541d8940035418b368331318002199.",
              "committedDate": "2024-02-07T20:13:23Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-07T20:31:23Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11946,
      "title": "build(deps): Bump django from 5.0 to 5.0.2 in /testing/plugins_integration",
      "body": "Bumps [django](https://github.com/django/django) from 5.0 to 5.0.2.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/django/django/commit/428d06ccef09e70bcef9869c5a9404863b2fc7d8\"><code>428d06c</code></a> [5.0.x] Bumped version for 5.0.2 release.</li>\n<li><a href=\"https://github.com/django/django/commit/16a8fe18a3b81250f4fa57e3f93f0599dc4895bc\"><code>16a8fe1</code></a> [5.0.x] Fixed CVE-2024-24680 -- Mitigated potential DoS in intcomma template ...</li>\n<li><a href=\"https://github.com/django/django/commit/2cfa3fba0c8c5f3cf5daf23fd5333902a34fea86\"><code>2cfa3fb</code></a> [5.0.x] Changed severity levels to list in security policy docs.</li>\n<li><a href=\"https://github.com/django/django/commit/761946f8e1b6d725f83fa4f3b04ca9750f486009\"><code>761946f</code></a> [5.0.x] Fixed <a href=\"https://redirect.github.com/django/django/issues/35149\">#35149</a> -- Fixed crashes of db_default with unresolvable output ...</li>\n<li><a href=\"https://github.com/django/django/commit/914eee1a9bee7ae48e6b23ef905ec00bcc241791\"><code>914eee1</code></a> [5.0.x] Refs <a href=\"https://redirect.github.com/django/django/issues/35149\">#35149</a> -- Made equivalent db_default alterations noops.</li>\n<li><a href=\"https://github.com/django/django/commit/3e7a30fb3a5ea38d06bbedd53e2130bf192425c7\"><code>3e7a30f</code></a> [5.0.x] Fixed <a href=\"https://redirect.github.com/django/django/issues/35162\">#35162</a> -- Fixed crash when adding fields with db_default on MySQL.</li>\n<li><a href=\"https://github.com/django/django/commit/741f080ab595fa34ad0d682a096026abade0dcab\"><code>741f080</code></a> [5.0.x] Fixed <a href=\"https://redirect.github.com/django/django/issues/35147\">#35147</a> -- Added backward incompatibility note about filtering a...</li>\n<li><a href=\"https://github.com/django/django/commit/58d5e5779c6b079f1a36e537a3fc2ebc446a721a\"><code>58d5e57</code></a> [5.0.x] Fixed typo in docs/topics/db/managers.txt.</li>\n<li><a href=\"https://github.com/django/django/commit/a8f9c29d4bf1387bf1ede03a173dd7bfed3e2ce0\"><code>a8f9c29</code></a> [5.0.x] Removed mention of designers in DTL design philosophy.</li>\n<li><a href=\"https://github.com/django/django/commit/06b05c748ff4079411b7e570311de879671399df\"><code>06b05c7</code></a> [5.0.x] Refs <a href=\"https://redirect.github.com/django/django/issues/34936\">#34936</a> -- Added test for altering DecimalField with db_default t...</li>\n<li>Additional commits viewable in <a href=\"https://github.com/django/django/compare/5.0...5.0.2\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=django&package-manager=pip&previous-version=5.0&new-version=5.0.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/pytest-dev/pytest/network/alerts).\n\n</details>",
      "state": "MERGED",
      "createdAt": "2024-02-07T17:33:48Z",
      "updatedAt": "2024-02-07T18:37:57Z",
      "closedAt": "2024-02-07T18:37:56Z",
      "mergedAt": "2024-02-07T18:37:56Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/pip/testing/plugins_integration/django-5.0.2",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "python"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump django in /testing/plugins_integration\n\nBumps [django](https://github.com/django/django) from 5.0 to 5.0.2.\n- [Commits](https://github.com/django/django/compare/5.0...5.0.2)\n\n---\nupdated-dependencies:\n- dependency-name: django\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2024-02-07T17:33:47Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11941,
      "title": "doctest: fix autouse fixtures possibly not getting picked up",
      "body": "Fix #11929. There is also a prerequisite commit, please see the commit message.",
      "state": "MERGED",
      "createdAt": "2024-02-06T22:08:11Z",
      "updatedAt": "2024-02-07T20:09:32Z",
      "closedAt": "2024-02-07T20:09:18Z",
      "mergedAt": "2024-02-07T20:09:18Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "doctest-parsefactories",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "doctest: fix autouse fixtures possibly not getting picked up\n\nFix #11929.\n\nFigured out what's going on. We have the following collection tree:\n\n```\n<Dir pyspacewar>\n  <Dir src>\n    <Package pyspacewar>\n      <Package tests>\n        <DoctestModule test_main.py>\n          <DoctestItem pyspacewar.tests.test_main.doctest_main>\n```\n\nAnd the `test_main.py` contains an autouse fixture (`fake_game_ui`) that\n`doctest_main` needs in order to run properly. The fixture doesn't run!\nIt doesn't run because nothing collects the fixtures from (calls\n`parsefactories()` on) the `test_main.py` `DoctestModule`.\n\nHow come it only started happening with commit\nab63ebb3dc07b89670b96ae97044f48406c44fa0? Turns out it mostly only\nworked accidentally. Each `DoctestModule` is also collected as a normal\n`Module`, with the `Module` collected after the `DoctestModule`. For\nexample, if we add a non-doctest test to `test_main.py`, the collection\ntree looks like this:\n\n```\n<Dir pyspacewar>\n  <Dir src>\n    <Package pyspacewar>\n      <Package tests>\n        <DoctestModule test_main.py>\n          <DoctestItem pyspacewar.tests.test_main.doctest_main>\n        <Module test_main.py>\n          <Function test_it>\n```\n\nNow, `Module` *does* collect fixtures. When autouse fixtures are\ncollected, they are added to the `_nodeid_autousenames` dict.\n\nBefore ab63ebb3dc07b89670b96ae97044f48406c44fa0, `DoctestItem` consults\n`_nodeid_autousenames` at *setup* time. At this point, the `Module` has\ncollected and so it ended up picking the autouse fixture (this relies on\nanother \"accident\", that the `DoctestModule` and `Module` have the same\nnode ID).\n\nAfter ab63ebb3dc07b89670b96ae97044f48406c44fa0, `DoctestItem` consults\n`_nodeid_autousenames` at *collection* time (= when it's created). At\nthis point, the `Module` hasn't collected yet, so the autouse fixture is\nnot picked out.\n\nThe fix is simple -- have `DoctestModule.collect()` call\n`parsefactories`. From some testing I've done it shouldn't have negative\nconsequences (I hope).",
              "committedDate": "2024-02-07T19:53:51Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-06T23:25:52Z",
            "body": "LGTM, appreciate the separate commits (as always).\r\n\r\nI noticed this is touching the doctest import part mentioned in #11475...\r\n\r\n@flying-sheep any chance of you testing this branch with your reproducer, and see how it affects it?"
          }
        ]
      }
    },
    {
      "number": 11936,
      "title": "Fix collection of short paths on Windows",
      "body": "Passing a short path in the command line was causing the matchparts check to fail, because `Path(short_path) != Path(long_path)`.\r\n\r\nUsing `os.path.samefile` as fallback ensures the comparison works on Windows when comparing short/long paths.\r\n\r\nFix #11895",
      "state": "MERGED",
      "createdAt": "2024-02-05T21:16:02Z",
      "updatedAt": "2024-02-23T10:51:30Z",
      "closedAt": "2024-02-23T10:51:15Z",
      "mergedAt": "2024-02-23T10:51:15Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "11895-short-path-win",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 9
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Revert \"Expand to long paths when resolving collection arguments\"\n\nThis reverts commit 2e8f9572a4aab7b0156fa4c448ee5c88a726915b.",
              "committedDate": "2024-02-17T20:50:39Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Zac-HD"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-23T07:38:54Z",
            "body": "Looks good, and I also favor the `stat` solution - correctness is _definitely_ worth it IMO."
          }
        ]
      }
    },
    {
      "number": 11935,
      "title": "[pre-commit.ci] pre-commit autoupdate",
      "body": "<!--pre-commit.ci start-->\nupdates:\n- [github.com/astral-sh/ruff-pre-commit: v0.1.15 \u2192 v0.2.0](https://github.com/astral-sh/ruff-pre-commit/compare/v0.1.15...v0.2.0)\n<!--pre-commit.ci end-->",
      "state": "MERGED",
      "createdAt": "2024-02-05T20:29:39Z",
      "updatedAt": "2024-02-05T20:46:12Z",
      "closedAt": "2024-02-05T20:46:12Z",
      "mergedAt": "2024-02-05T20:46:11Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "main",
      "headRefName": "pre-commit-ci-update-config",
      "author": {
        "login": "pre-commit-ci"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[pre-commit.ci] pre-commit autoupdate\n\nupdates:\n- [github.com/astral-sh/ruff-pre-commit: v0.1.15 \u2192 v0.2.0](https://github.com/astral-sh/ruff-pre-commit/compare/v0.1.15...v0.2.0)",
              "committedDate": "2024-02-05T20:29:38Z",
              "author": {
                "name": "pre-commit-ci[bot]",
                "email": "66853113+pre-commit-ci[bot]@users.noreply.github.com",
                "user": {
                  "login": "pre-commit-ci[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-05T20:44:07Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11934,
      "title": "Issue #11850 - Add sys.last_exc",
      "body": "Closes #11850 ",
      "state": "CLOSED",
      "createdAt": "2024-02-05T20:20:01Z",
      "updatedAt": "2024-02-23T20:41:48Z",
      "closedAt": "2024-02-23T20:41:15Z",
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "main",
      "author": {
        "login": "robotherapist"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Merge branch 'main' into main",
              "committedDate": "2024-02-07T09:35:40Z",
              "author": {
                "name": "robotherapist",
                "email": "158772496+robotherapist@users.noreply.github.com",
                "user": {
                  "login": "robotherapist"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-05T20:39:06Z",
            "body": "Thanks for taking this @robotherapist, looks good to me.\r\n\r\nI do wonder about the \"Skip *this* frame\" thing, however I don't think we should be touching the exc traceback itself, so it's probably OK.\r\n\r\nA couple of things before we can merge this:\r\n- Add a changelog entry\r\n- Add a test -- can add a check for `last_exc` to `test_store_except_info_on_error` in `testing/test_runner.py`."
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-07T20:43:37Z",
            "body": "LGTM, thanks! See my comment about the mypy issue.\r\n\r\nTwo \"procedural\" notes, in case you'd like to submit more PRs in the future:\r\n\r\n- Prefer to update the branch of PRs using `git rebase`, not `git merge`, this makes it a bit easier to handle.\r\n- Prefer to submit PRs from a branch in your fork, not from the `main` branch. This allows maintainers to update the PR if needed, and probably cause less of a mess for you as the submitter."
          }
        ]
      }
    },
    {
      "number": 11932,
      "title": "[pyproject-fmt] Add pre-commit hook and autofix existing",
      "body": "Follow-up to [#11930](https://github.com/pytest-dev/pytest/pull/11930#pullrequestreview-1863341396).",
      "state": "MERGED",
      "createdAt": "2024-02-05T19:26:36Z",
      "updatedAt": "2024-02-06T14:14:10Z",
      "closedAt": "2024-02-06T14:14:07Z",
      "mergedAt": "2024-02-06T14:14:07Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "main",
      "headRefName": "addpyproject-fmt",
      "author": {
        "login": "Pierre-Sassoulas"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Update setuptools version to the one that support pyproject.toml",
              "committedDate": "2024-02-06T13:40:31Z",
              "author": {
                "name": "Pierre Sassoulas",
                "email": "pierre.sassoulas@gmail.com",
                "user": {
                  "login": "Pierre-Sassoulas"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "edgarrmondragon"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-06T07:31:36Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-06T12:57:25Z",
            "body": "i like the changes, lets see to bikeshed the indent/details a little and get it in"
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-06T13:17:25Z",
            "body": ""
          },
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-06T13:38:28Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-06T14:05:48Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11931,
      "title": "Use shortest module name for importlib imports",
      "body": "<!--\nThanks for submitting a PR, your contribution is really appreciated!\n\nHere is a quick checklist that should be present in PRs.\n\n- [x] Include documentation when adding new features.\n- [x] Include new tests or update existing tests when applicable.\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\n\nIf this change fixes an issue, please:\n\n- [x] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\n\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\n\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\n\n  Write sentences in the **past or present tense**, examples:\n\n  * *Improved verbose diff output with sequences.*\n  * *Terminal summary statistics now use multiple colors.*\n\n  Also make sure to end the sentence with a `.`.\n\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\n-->\n\n\nCloses #11475",
      "state": "CLOSED",
      "createdAt": "2024-02-05T15:10:21Z",
      "updatedAt": "2024-02-18T12:09:46Z",
      "closedAt": "2024-02-18T12:09:46Z",
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "doctest-parent",
      "author": {
        "login": "flying-sheep"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Update pyproject.toml",
              "committedDate": "2024-02-12T09:14:19Z",
              "author": {
                "name": "Philipp A",
                "email": "flying-sheep@web.de",
                "user": {
                  "login": "flying-sheep"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-05T19:08:31Z",
            "body": "I'll let @nicoddemus decide if this makes sense, just some comments on the code."
          },
          {
            "author": {
              "login": "flying-sheep"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-06T08:01:24Z",
            "body": ""
          },
          {
            "author": {
              "login": "flying-sheep"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-06T08:12:17Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11930,
      "title": "Migration from ``setup.cfg`` to ``pyproject.toml``",
      "body": "This is a follow-up to https://github.com/pytest-dev/pytest/pull/11928. Diff between what is generated on main and what is generated on last commit of this branch using ``python -m build`` is as follow:\r\n```diff\r\ndiff --git a/pytest-8.1.0.dev153+gaaa9ca732/.pre-commit-config.yaml b/pytest-8.1.0.dev153+gaaa9ca732/.pre-commit-config.yaml\r\nindex 032fe8c4d..ca3b41d58 100644\r\n--- a/pytest-8.1.0.dev153+gaaa9ca732/.pre-commit-config.yaml\r\n+++ b/pytest-8.1.0.dev153+gaaa9ca732/.pre-commit-config.yaml\r\n@@ -21,11 +21,6 @@ repos:\r\n     hooks:\r\n     -   id: blacken-docs\r\n         additional_dependencies: [black==24.1.1]\r\n--   repo: https://github.com/asottile/setup-cfg-fmt\r\n-    rev: v2.5.0\r\n-    hooks:\r\n-    -   id: setup-cfg-fmt\r\n-        args: [\"--max-py-version=3.12\", \"--include-version-classifiers\"]\r\n -   repo: https://github.com/pre-commit/pygrep-hooks\r\n     rev: v1.10.0\r\n     hooks:\r\ndiff --git a/pytest-8.1.0.dev153+gaaa9ca732/PKG-INFO b/pytest-8.1.0.dev153+gaaa9ca732/PKG-INFO\r\nindex 8691affe6..27e62a6c4 100644\r\n--- a/pytest-8.1.0.dev153+gaaa9ca732/PKG-INFO\r\n+++ b/pytest-8.1.0.dev153+gaaa9ca732/PKG-INFO\r\n@@ -1,44 +1,42 @@\r\n Metadata-Version: 2.1\r\n Name: pytest\r\n-Version: 8.1.0.dev153+gaaa9ca732\r\n+Version: 8.1.0.dev159+g2f7ee5dde.d20240205\r\n Summary: pytest: simple powerful testing with Python\r\n-Home-page: https://docs.pytest.org/en/latest/\r\n-Author: Holger Krekel, Bruno Oliveira, Ronny Pfannschmidt, Floris Bruynooghe, Brianna Laugher, Florian Bruhin and others\r\n+Author: Holger Krekel\r\n+Maintainer: Bruno Oliveira, Ronny Pfannschmidt, Floris Bruynooghe, Brianna Laugher, Florian Bruhin and others, Others (See AUTHORS)\r\n License: MIT\r\n+Project-URL: Homepage, https://docs.pytest.org/en/latest/\r\n Project-URL: Changelog, https://docs.pytest.org/en/stable/changelog.html\r\n Project-URL: Twitter, https://twitter.com/pytestdotorg\r\n Project-URL: Source, https://github.com/pytest-dev/pytest\r\n Project-URL: Tracker, https://github.com/pytest-dev/pytest/issues\r\n Keywords: test,unittest\r\n-Platform: unix\r\n-Platform: linux\r\n-Platform: osx\r\n-Platform: cygwin\r\n-Platform: win32\r\n Classifier: Development Status :: 6 - Mature\r\n Classifier: Intended Audience :: Developers\r\n Classifier: License :: OSI Approved :: MIT License\r\n-Classifier: Operating System :: MacOS :: MacOS X\r\n+Classifier: Operating System :: Unix\r\n+Classifier: Operating System :: MacOS\r\n Classifier: Operating System :: Microsoft :: Windows\r\n Classifier: Operating System :: POSIX\r\n Classifier: Programming Language :: Python :: 3\r\n Classifier: Programming Language :: Python :: 3 :: Only\r\n-Classifier: Programming Language :: Python :: 3.8\r\n-Classifier: Programming Language :: Python :: 3.9\r\n Classifier: Programming Language :: Python :: 3.10\r\n Classifier: Programming Language :: Python :: 3.11\r\n Classifier: Programming Language :: Python :: 3.12\r\n+Classifier: Programming Language :: Python :: 3.8\r\n+Classifier: Programming Language :: Python :: 3.9\r\n Classifier: Topic :: Software Development :: Libraries\r\n Classifier: Topic :: Software Development :: Testing\r\n Classifier: Topic :: Utilities\r\n Requires-Python: >=3.8\r\n Description-Content-Type: text/x-rst\r\n License-File: LICENSE\r\n+License-File: AUTHORS\r\n+Requires-Dist: colorama; sys_platform == \"win32\"\r\n+Requires-Dist: exceptiongroup>=1.0.0rc8; python_version < \"3.11\"\r\n Requires-Dist: iniconfig\r\n Requires-Dist: packaging\r\n Requires-Dist: pluggy<2.0,>=1.4.0\r\n-Requires-Dist: colorama; sys_platform == \"win32\"\r\n-Requires-Dist: exceptiongroup>=1.0.0rc8; python_version < \"3.11\"\r\n Requires-Dist: tomli>=1.0.0; python_version < \"3.11\"\r\n Provides-Extra: testing\r\n Requires-Dist: argcomplete; extra == \"testing\"\r\n@@ -49,6 +47,13 @@ Requires-Dist: pygments>=2.7.2; extra == \"testing\"\r\n Requires-Dist: requests; extra == \"testing\"\r\n Requires-Dist: setuptools; extra == \"testing\"\r\n Requires-Dist: xmlschema; extra == \"testing\"\r\n+Provides-Extra: release\r\n+Requires-Dist: pypandoc; extra == \"release\"\r\n+Requires-Dist: colorama; extra == \"release\"\r\n+Requires-Dist: github3.py; extra == \"release\"\r\n+Requires-Dist: pre-commit>=2.9.3; extra == \"release\"\r\n+Requires-Dist: wheel; extra == \"release\"\r\n+Requires-Dist: towncrier<21.3.0; extra == \"release\"\r\n \r\n .. image:: https://github.com/pytest-dev/pytest/raw/main/doc/en/img/pytest_logo_curves.svg\r\n    :target: https://docs.pytest.org/en/stable/\r\ndiff --git a/pytest-8.1.0.dev153+gaaa9ca732/pyproject.toml b/pytest-8.1.0.dev153+gaaa9ca732/pyproject.toml\r\nindex 15a855ce6..8c1b3fff0 100644\r\n--- a/pytest-8.1.0.dev153+gaaa9ca732/pyproject.toml\r\n+++ b/pytest-8.1.0.dev153+gaaa9ca732/pyproject.toml\r\n@@ -1,3 +1,83 @@\r\n+[project]\r\n+name = \"pytest\"\r\n+dynamic = [\"version\"]\r\n+description = \"pytest: simple powerful testing with Python\"\r\n+authors = [\r\n+    {name = \"Holger Krekel\"},\r\n+]\r\n+maintainers = [\r\n+    {name = \"Bruno Oliveira\"},\r\n+    {name = \"Ronny Pfannschmidt\"},\r\n+    {name = \"Floris Bruynooghe\"},\r\n+    {name = \"Brianna Laugher\"},\r\n+    {name = \"Florian Bruhin and others\"},\r\n+    {name = \"Others (See AUTHORS)\"},\r\n+]\r\n+readme = \"README.rst\"\r\n+license = {text = \"MIT\"}\r\n+keywords = [\"test\", \"unittest\"]\r\n+classifiers = [\r\n+    \"Development Status :: 6 - Mature\",\r\n+    \"Intended Audience :: Developers\",\r\n+    \"License :: OSI Approved :: MIT License\",\r\n+    \"Operating System :: Unix\",\r\n+    \"Operating System :: MacOS\",\r\n+    \"Operating System :: Microsoft :: Windows\",\r\n+    \"Operating System :: POSIX\",\r\n+    \"Programming Language :: Python :: 3\",\r\n+    \"Programming Language :: Python :: 3 :: Only\",\r\n+    \"Programming Language :: Python :: 3.10\",\r\n+    \"Programming Language :: Python :: 3.11\",\r\n+    \"Programming Language :: Python :: 3.12\",\r\n+    \"Programming Language :: Python :: 3.8\",\r\n+    \"Programming Language :: Python :: 3.9\",\r\n+    \"Topic :: Software Development :: Libraries\",\r\n+    \"Topic :: Software Development :: Testing\",\r\n+    \"Topic :: Utilities\",\r\n+]\r\n+\r\n+dependencies = [\r\n+    \"colorama;sys_platform=='win32'\",\r\n+    \"exceptiongroup>=1.0.0rc8;python_version<'3.11'\",\r\n+    \"iniconfig\",\r\n+    \"packaging\",\r\n+    \"pluggy>=1.4.0,<2.0\",\r\n+    \"tomli>=1.0.0;python_version<'3.11'\",\r\n+]\r\n+requires-python = \">=3.8\"\r\n+\r\n+[project.optional-dependencies]\r\n+testing = [\r\n+    \"argcomplete\",\r\n+    \"attrs>=19.2.0\",\r\n+    \"hypothesis>=3.56\",\r\n+    \"mock\",\r\n+    \"pygments>=2.7.2\",\r\n+    \"requests\",\r\n+    \"setuptools\",\r\n+    \"xmlschema\",\r\n+]\r\n+release = [\r\n+    \"pypandoc\",\r\n+    \"colorama\",\r\n+    \"github3.py\",\r\n+    \"pre-commit>=2.9.3\",\r\n+    \"wheel\",\r\n+    # https://github.com/twisted/towncrier/issues/340\r\n+    \"towncrier<21.3.0\",\r\n+]\r\n+\r\n+[project.scripts]\r\n+\"py.test\" = \"pytest:console_main\"\r\n+pytest = \"pytest:console_main\"\r\n+\r\n+[project.urls]\r\n+Homepage = \"https://docs.pytest.org/en/latest/\"\r\n+Changelog = \"https://docs.pytest.org/en/stable/changelog.html\"\r\n+Twitter = \"https://twitter.com/pytestdotorg\"\r\n+Source = \"https://github.com/pytest-dev/pytest\"\r\n+Tracker = \"https://github.com/pytest-dev/pytest/issues\"\r\n+\r\n [build-system]\r\n requires = [\r\n   \"setuptools>=45.0\",\r\n@@ -5,6 +85,10 @@ requires = [\r\n ]\r\n build-backend = \"setuptools.build_meta\"\r\n \r\n+[tool.setuptools.package-data]\r\n+\"_pytest\" = [\"py.typed\"]\r\n+\"pytest\" = [\"py.typed\"]\r\n+\r\n [tool.setuptools_scm]\r\n write_to = \"src/_pytest/_version.py\"\r\n \r\ndiff --git a/pytest-8.1.0.dev153+gaaa9ca732/setup.cfg b/pytest-8.1.0.dev153+gaaa9ca732/setup.cfg\r\nindex 71d7ed980..8bfd5a12f 100644\r\n--- a/pytest-8.1.0.dev153+gaaa9ca732/setup.cfg\r\n+++ b/pytest-8.1.0.dev153+gaaa9ca732/setup.cfg\r\n@@ -1,72 +1,3 @@\r\n-[metadata]\r\n-name = pytest\r\n-description = pytest: simple powerful testing with Python\r\n-long_description = file: README.rst\r\n-long_description_content_type = text/x-rst\r\n-url = https://docs.pytest.org/en/latest/\r\n-author = Holger Krekel, Bruno Oliveira, Ronny Pfannschmidt, Floris Bruynooghe, Brianna Laugher, Florian Bruhin and others\r\n-license = MIT\r\n-license_files = LICENSE\r\n-platforms = unix, linux, osx, cygwin, win32\r\n-classifiers = \r\n-\tDevelopment Status :: 6 - Mature\r\n-\tIntended Audience :: Developers\r\n-\tLicense :: OSI Approved :: MIT License\r\n-\tOperating System :: MacOS :: MacOS X\r\n-\tOperating System :: Microsoft :: Windows\r\n-\tOperating System :: POSIX\r\n-\tProgramming Language :: Python :: 3\r\n-\tProgramming Language :: Python :: 3 :: Only\r\n-\tProgramming Language :: Python :: 3.8\r\n-\tProgramming Language :: Python :: 3.9\r\n-\tProgramming Language :: Python :: 3.10\r\n-\tProgramming Language :: Python :: 3.11\r\n-\tProgramming Language :: Python :: 3.12\r\n-\tTopic :: Software Development :: Libraries\r\n-\tTopic :: Software Development :: Testing\r\n-\tTopic :: Utilities\r\n-keywords = test, unittest\r\n-project_urls = \r\n-\tChangelog=https://docs.pytest.org/en/stable/changelog.html\r\n-\tTwitter=https://twitter.com/pytestdotorg\r\n-\tSource=https://github.com/pytest-dev/pytest\r\n-\tTracker=https://github.com/pytest-dev/pytest/issues\r\n-\r\n-[options]\r\n-install_requires = \r\n-\tiniconfig\r\n-\tpackaging\r\n-\tpluggy>=1.4.0,<2.0\r\n-\tcolorama;sys_platform==\"win32\"\r\n-\texceptiongroup>=1.0.0rc8;python_version<\"3.11\"\r\n-\ttomli>=1.0.0;python_version<\"3.11\"\r\n-python_requires = >=3.8\r\n-package_dir = \r\n-\t=src\r\n-setup_requires = \r\n-\tsetuptools\r\n-\tsetuptools-scm>=6.0\r\n-\r\n-[options.entry_points]\r\n-console_scripts = \r\n-\tpytest=pytest:console_main\r\n-\tpy.test=pytest:console_main\r\n-\r\n-[options.extras_require]\r\n-testing = \r\n-\targcomplete\r\n-\tattrs>=19.2.0\r\n-\thypothesis>=3.56\r\n-\tmock\r\n-\tpygments>=2.7.2\r\n-\trequests\r\n-\tsetuptools\r\n-\txmlschema\r\n-\r\n-[options.package_data]\r\n-_pytest = py.typed\r\n-pytest = py.typed\r\n-\r\n [egg_info]\r\n tag_build = \r\n tag_date = 0\r\ndiff --git a/pytest-8.1.0.dev153+gaaa9ca732/tox.ini b/pytest-8.1.0.dev153+gaaa9ca732/tox.ini\r\nindex 0ac2ff2dd..c335601fe 100644\r\n--- a/pytest-8.1.0.dev153+gaaa9ca732/tox.ini\r\n+++ b/pytest-8.1.0.dev153+gaaa9ca732/tox.ini\r\n@@ -22,8 +22,6 @@ envlist =\r\n     # not included in CI.\r\n     py311-exceptiongroup\r\n \r\n-\r\n-\r\n [testenv]\r\n commands =\r\n     {env:_PYTEST_TOX_COVERAGE_RUN:} pytest {posargs:{env:_PYTEST_TOX_DEFAULT_POSARGS:}}\r\n@@ -163,26 +161,19 @@ description = do a release, required posarg of the version number\r\n basepython = python3\r\n usedevelop = True\r\n passenv = *\r\n-deps =\r\n-    colorama\r\n-    github3.py\r\n-    pre-commit>=2.9.3\r\n-    wheel\r\n-    # https://github.com/twisted/towncrier/issues/340\r\n-    towncrier<21.3.0\r\n+extras = release\r\n commands = python scripts/release.py {posargs}\r\n \r\n [testenv:prepare-release-pr]\r\n description = prepare a release PR from a manual trigger in GitHub actions\r\n usedevelop = {[testenv:release]usedevelop}\r\n passenv = {[testenv:release]passenv}\r\n-deps = {[testenv:release]deps}\r\n+extras = {[testenv:release]extras}\r\n commands = python scripts/prepare-release-pr.py {posargs}\r\n \r\n [testenv:generate-gh-release-notes]\r\n description = generate release notes that can be published as GitHub Release\r\n basepython = python3\r\n-usedevelop = True\r\n-deps =\r\n-    pypandoc\r\n+usedevelop = {[testenv:release]usedevelop}\r\n+extras = {[testenv:release]extras}\r\n commands = python scripts/generate-gh-release-notes.py {posargs}\r\n```\r\n\r\n(It look like we're packaging our pre-commit configuration and other things that are not strictly necessary to use pytest, or maybe I didn't package properly.)",
      "state": "MERGED",
      "createdAt": "2024-02-05T14:40:46Z",
      "updatedAt": "2024-02-05T21:40:47Z",
      "closedAt": "2024-02-05T21:40:44Z",
      "mergedAt": "2024-02-05T21:40:44Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "main",
      "headRefName": "setup.cfg-to-pyproject.toml",
      "author": {
        "login": "Pierre-Sassoulas"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[pyproject.toml] Moving 'package_data' (py.typed) from setup.cfg",
              "committedDate": "2024-02-05T20:04:33Z",
              "author": {
                "name": "Pierre Sassoulas",
                "email": "pierre.sassoulas@gmail.com",
                "user": {
                  "login": "Pierre-Sassoulas"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-05T17:02:30Z",
            "body": "should we add https://pyproject-fmt.readthedocs.io/en/latest/"
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-05T18:58:32Z",
            "body": "Thanks! Looks good to me except a couple of comments."
          },
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-05T19:30:06Z",
            "body": ""
          },
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-05T19:30:09Z",
            "body": ""
          },
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-05T19:31:01Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-05T19:37:05Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11928,
      "title": "Some setup.cfg cleanups",
      "body": "Remove some no longer needed sections, and move the mypy config to pyproject.toml.",
      "state": "MERGED",
      "createdAt": "2024-02-05T10:23:48Z",
      "updatedAt": "2024-02-05T11:29:52Z",
      "closedAt": "2024-02-05T11:29:49Z",
      "mergedAt": "2024-02-05T11:29:49Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "setup-cfg-cleanups",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "setup.cfg: remove `zip_safe`\n\nThe setuptools docs say it's obsolete and no longer needed:\nhttps://setuptools.pypa.io/en/latest/deprecated/zip_safe.html#understanding-the-zip-safe-flag",
              "committedDate": "2024-02-05T10:21:37Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-05T10:28:46Z",
            "body": "Looks great. Is something blocking moving to ``pyproject.toml`` entirely and removing the setup.cfg ?"
          }
        ]
      }
    },
    {
      "number": 11927,
      "title": "[8.0.x] doc: Remove sold out training",
      "body": "Backport of PR #11823 to 8.0.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2024-02-05T07:15:09Z",
      "updatedAt": "2024-02-05T08:04:33Z",
      "closedAt": "2024-02-05T08:04:32Z",
      "mergedAt": "2024-02-05T08:04:32Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "The-Compiler"
      },
      "baseRefName": "8.0.x",
      "headRefName": "backport-11823-to-8.0.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[8.0.x] doc: Remove sold out training",
              "committedDate": "2024-02-05T07:15:07Z",
              "author": {
                "name": "Florian Bruhin",
                "email": "me@the-compiler.org",
                "user": {
                  "login": "The-Compiler"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "The-Compiler"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-05T07:50:43Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11926,
      "title": "[8.0.x] doc: Update training dates and add pytest sprint",
      "body": "Backport of PR #11819 to 8.0.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2024-02-05T06:56:09Z",
      "updatedAt": "2024-02-05T07:13:53Z",
      "closedAt": "2024-02-05T07:12:10Z",
      "mergedAt": "2024-02-05T07:12:10Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "The-Compiler"
      },
      "baseRefName": "8.0.x",
      "headRefName": "backport-11819-to-8.0.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[8.0.x] doc: Update training dates and add pytest sprint",
              "committedDate": "2024-02-05T06:56:08Z",
              "author": {
                "name": "Florian Bruhin",
                "email": "me@the-compiler.org",
                "user": {
                  "login": "The-Compiler"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "The-Compiler"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-05T06:58:07Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11925,
      "title": "build(deps): Bump pytest-sugar from 0.9.7 to 1.0.0 in /testing/plugins_integration",
      "body": "Bumps [pytest-sugar](https://github.com/Teemu/pytest-sugar) from 0.9.7 to 1.0.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/Teemu/pytest-sugar/releases\">pytest-sugar's releases</a>.</em></p>\n<blockquote>\n<h2>pytest-sugar 1.0.0</h2>\n<ul>\n<li>Add support for pytest 8.x</li>\n<li>Drop support for Python 3.7</li>\n</ul>\n<p>Thanks to folks to contributed to this release: <a href=\"https://github.com/suutari-ai\"><code>@\u200bsuutari-ai</code></a>, <a href=\"https://github.com/hugovk\"><code>@\u200bhugovk</code></a>, <a href=\"https://github.com/kianmeng\"><code>@\u200bkianmeng</code></a>, <a href=\"https://github.com/mattcristal\"><code>@\u200bmattcristal</code></a>, and <a href=\"https://github.com/justinmayer\"><code>@\u200bjustinmayer</code></a></p>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/Teemu/pytest-sugar/blob/main/CHANGES.rst\">pytest-sugar's changelog</a>.</em></p>\n<blockquote>\n<p>1.0.0 - 2024-02-01\n^^^^^^^^^^^^^^^^^^</p>\n<ul>\n<li>Add support for pytest 8.x</li>\n<li>Drop support for Python 3.7</li>\n</ul>\n<p>Contributed by <a href=\"https://github.com/justinmayer\">Justin Mayer</a> via [PR <a href=\"https://redirect.github.com/Teemu/pytest-sugar/issues/281\">#281</a>](<a href=\"https://redirect.github.com/Teemu/pytest-sugar/pull/281/\">Teemu/pytest-sugar#281</a>)</p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/Teemu/pytest-sugar/commit/ceec846c4a8fe91f415c63c6512d88d7517010f5\"><code>ceec846</code></a> Release pytest-sugar 1.0.0</li>\n<li><a href=\"https://github.com/Teemu/pytest-sugar/commit/2944a5ec6e593b3aded25899a7f436598f3131b2\"><code>2944a5e</code></a> Merge pull request <a href=\"https://redirect.github.com/Teemu/pytest-sugar/issues/281\">#281</a> from Teemu/upgrade-linters</li>\n<li><a href=\"https://github.com/Teemu/pytest-sugar/commit/e81bc74df912da6d30ae656205fc514d7033b3e0\"><code>e81bc74</code></a> Prepare release</li>\n<li><a href=\"https://github.com/Teemu/pytest-sugar/commit/1cb3a58319f8b02910079784c44b4d7dc71f500e\"><code>1cb3a58</code></a> Add additional status badges to top of README</li>\n<li><a href=\"https://github.com/Teemu/pytest-sugar/commit/e02ead2cc75ef74023cb02bd2a508e0c261d04aa\"><code>e02ead2</code></a> Set GitHub repository URL as home page URL on PyPI</li>\n<li><a href=\"https://github.com/Teemu/pytest-sugar/commit/de34860db2bfbd0d93f3002d31d133372cc487ed\"><code>de34860</code></a> Update list of contributors</li>\n<li><a href=\"https://github.com/Teemu/pytest-sugar/commit/2a1075396553ba1f87b17a4e70961d8c419fa1a0\"><code>2a10753</code></a> Update PyPI classifiers</li>\n<li><a href=\"https://github.com/Teemu/pytest-sugar/commit/8954e4a5f8229e73de20ee10501a2b693165124f\"><code>8954e4a</code></a> Upgrade code style linters</li>\n<li><a href=\"https://github.com/Teemu/pytest-sugar/commit/1d0705994ff8edad133cde187dc224e1df7b0f64\"><code>1d07059</code></a> Merge pull request <a href=\"https://redirect.github.com/Teemu/pytest-sugar/issues/280\">#280</a> from hugovk/rm-setup</li>\n<li><a href=\"https://github.com/Teemu/pytest-sugar/commit/6f5bb8947448395790350ddc2b0d4187f4c40728\"><code>6f5bb89</code></a> Move config from setup.cfg to pyproject.toml</li>\n<li>Additional commits viewable in <a href=\"https://github.com/Teemu/pytest-sugar/compare/v0.9.7...v1.0.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pytest-sugar&package-manager=pip&previous-version=0.9.7&new-version=1.0.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2024-02-05T03:39:30Z",
      "updatedAt": "2024-02-05T11:31:51Z",
      "closedAt": "2024-02-05T11:31:51Z",
      "mergedAt": "2024-02-05T11:31:51Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/pip/testing/plugins_integration/pytest-sugar-1.0.0",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "python"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump pytest-sugar in /testing/plugins_integration\n\nBumps [pytest-sugar](https://github.com/Teemu/pytest-sugar) from 0.9.7 to 1.0.0.\n- [Release notes](https://github.com/Teemu/pytest-sugar/releases)\n- [Changelog](https://github.com/Teemu/pytest-sugar/blob/main/CHANGES.rst)\n- [Commits](https://github.com/Teemu/pytest-sugar/compare/v0.9.7...v1.0.0)\n\n---\nupdated-dependencies:\n- dependency-name: pytest-sugar\n  dependency-type: direct:production\n  update-type: version-update:semver-major\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2024-02-05T03:39:30Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-05T11:31:42Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11924,
      "title": "build(deps): Bump pytest-asyncio from 0.23.3 to 0.23.4 in /testing/plugins_integration",
      "body": "Bumps [pytest-asyncio](https://github.com/pytest-dev/pytest-asyncio) from 0.23.3 to 0.23.4.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pytest-dev/pytest-asyncio/releases\">pytest-asyncio's releases</a>.</em></p>\n<blockquote>\n<h2>pytest-asyncio 0.23.4</h2>\n<h1>0.23.4 (2024-01-28)</h1>\n<ul>\n<li>pytest-asyncio no longer imports additional, unrelated packages during test collection <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/issues/729\">#729</a></li>\n<li>Addresses further issues that caused an internal pytest error during test collection</li>\n<li>Declares incompatibility with pytest 8 <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/issues/737\">#737</a></li>\n</ul>\n<h2>pytest-asyncio 0.23.4a2</h2>\n<h1>0.23.4 (UNRELEASED)</h1>\n<ul>\n<li>pytest-asyncio no longer imports additional, unrelated packages during test collection <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/issues/729\">#729</a></li>\n<li>Addresses further issues that caused an internal pytest error during test collection</li>\n</ul>\n<h2>Known issues</h2>\n<p>As of v0.23, pytest-asyncio attaches an asyncio event loop to each item of the test suite (i.e. session, packages, modules, classes, functions) and allows tests to be run in those loops when marked accordingly. Pytest-asyncio currently assumes that async fixture scope is correlated with the new event loop scope. This prevents fixtures from being evaluated independently from the event loop scope and breaks some existing test suites (see <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/issues/706\">#706</a>). For example, a test suite may require all fixtures and tests to run in the same event loop, but have async fixtures that are set up and torn down for each module. If you're affected by this issue, please continue using the v0.21 release, until it is resolved.</p>\n<h2>pytest-asyncio 0.23.4a1</h2>\n<h1>0.23.4 (UNRELEASED)</h1>\n<ul>\n<li>pytest-asyncio no longer imports additional, unrelated packages during test collection <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/issues/729\">#729</a></li>\n</ul>\n<h2>Known issues</h2>\n<p>As of v0.23, pytest-asyncio attaches an asyncio event loop to each item of the test suite (i.e. session, packages, modules, classes, functions) and allows tests to be run in those loops when marked accordingly. Pytest-asyncio currently assumes that async fixture scope is correlated with the new event loop scope. This prevents fixtures from being evaluated independently from the event loop scope and breaks some existing test suites (see <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/issues/706\">#706</a>). For example, a test suite may require all fixtures and tests to run in the same event loop, but have async fixtures that are set up and torn down for each module. If you're affected by this issue, please continue using the v0.21 release, until it is resolved.</p>\n<h2>pytest-asyncio 0.23.4a0</h2>\n<h1>0.23.4 (UNRELEASED)</h1>\n<ul>\n<li>pytest-asyncio no longer imports additional, unrelated packages during test collection <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/issues/729\">#729</a></li>\n</ul>\n<h2>Known issues</h2>\n<p>As of v0.23, pytest-asyncio attaches an asyncio event loop to each item of the test suite (i.e. session, packages, modules, classes, functions) and allows tests to be run in those loops when marked accordingly. Pytest-asyncio currently assumes that async fixture scope is correlated with the new event loop scope. This prevents fixtures from being evaluated independently from the event loop scope and breaks some existing test suites (see <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/issues/706\">#706</a>). For example, a test suite may require all fixtures and tests to run in the same event loop, but have async fixtures that are set up and torn down for each module. If you're affected by this issue, please continue using the v0.21 release, until it is resolved.</p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/b879130e3212884fde45f2ecfe48b41ce1eacce3\"><code>b879130</code></a> [chore] Updated shed pre-commit hook to v2024.1.1.</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/a309bc509b6a2010adadedba76c2a3ea8ca46676\"><code>a309bc5</code></a> [docs] Prepare release of v0.23.4.</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/c51c3e7cebfb5ffdeed6922e89bbf5259c45c8e3\"><code>c51c3e7</code></a> [docs] Mention compatibility issue with pytest 8.</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/dd129e9c4ce92cc8af50b82551e23ba2d857f8da\"><code>dd129e9</code></a> [fix] Fixes a bug that prevented tests from being collected from package when...</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/463ce984677f0ac965f225c3b7ac14ebf43adad6\"><code>463ce98</code></a> [fix] Avoid trying to install scoped event loops for unknown test collector t...</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/256ef7d2f5baab34d8668c6ffc476b7740b782fc\"><code>256ef7d</code></a> [fix] pytest-asyncio no longer uses virtual modules to install dynamic packag...</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/8ba9bd03c44584929c7251cf1383df23f5e14f44\"><code>8ba9bd0</code></a> [fix] Make virtual modules compatible with Windows.</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/df487d5e2d7976c89f79d3459e7cb13c3899082e\"><code>df487d5</code></a> [ci] Shorten names of display OS in CI jobs.</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/9572f3e0e42d3359cbea5b70a02be6169059f0e8\"><code>9572f3e</code></a> [tests] Fixed deprecated use of yield_fixture in test.</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/ef619b9fea227a70387f1c97828cc21617c1ea2d\"><code>ef619b9</code></a> [build] Run tests on Windows.</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pytest-dev/pytest-asyncio/compare/v0.23.3...v0.23.4\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pytest-asyncio&package-manager=pip&previous-version=0.23.3&new-version=0.23.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "CLOSED",
      "createdAt": "2024-02-05T03:39:28Z",
      "updatedAt": "2024-02-05T11:41:36Z",
      "closedAt": "2024-02-05T11:41:28Z",
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "dependabot/pip/testing/plugins_integration/pytest-asyncio-0.23.4",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "python"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump pytest-asyncio in /testing/plugins_integration\n\nBumps [pytest-asyncio](https://github.com/pytest-dev/pytest-asyncio) from 0.23.3 to 0.23.4.\n- [Release notes](https://github.com/pytest-dev/pytest-asyncio/releases)\n- [Commits](https://github.com/pytest-dev/pytest-asyncio/compare/v0.23.3...v0.23.4)\n\n---\nupdated-dependencies:\n- dependency-name: pytest-asyncio\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2024-02-05T11:32:36Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11923,
      "title": "build(deps): Bump pytest-django from 4.7.0 to 4.8.0 in /testing/plugins_integration",
      "body": "Bumps [pytest-django](https://github.com/pytest-dev/pytest-django) from 4.7.0 to 4.8.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pytest-dev/pytest-django/releases\">pytest-django's releases</a>.</em></p>\n<blockquote>\n<h2>4.8.0</h2>\n<p><a href=\"https://pytest-django.readthedocs.io/en/latest/changelog.html#v4-8-0-2024-01-30\">https://pytest-django.readthedocs.io/en/latest/changelog.html#v4-8-0-2024-01-30</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/pytest-dev/pytest-django/blob/master/docs/changelog.rst\">pytest-django's changelog</a>.</em></p>\n<blockquote>\n<h2>v4.8.0 (2024-01-30)</h2>\n<p>Improvements\n^^^^^^^^^^^^</p>\n<ul>\n<li>Added <code>pytest_django.asserts.assertMessages()</code> to mimic the behaviour of the\n:meth:<code>~django.contrib.messages.test.MessagesTestMixin.assertMessages</code> method\nfor Django versions &gt;= 5.0.</li>\n</ul>\n<p>Bugfixes\n^^^^^^^^</p>\n<ul>\n<li>Fix <code>--help</code>/<code>--version</code> crash in a partially configured app.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pytest-dev/pytest-django/commit/49b98d184e89ea68da0ee14e1ddb3fd4dbb72ddd\"><code>49b98d1</code></a> Release 4.8.0</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-django/commit/7c04917dd18871adf5961bd587151ee25ab04911\"><code>7c04917</code></a> django_username_field example should use create_user not create</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-django/commit/0b42a937579c66dfcb2506d9565ae501677c396c\"><code>0b42a93</code></a> Added assertMessages() from django.contrib.messages. (<a href=\"https://redirect.github.com/pytest-dev/pytest-django/issues/1109\">#1109</a>)</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-django/commit/5283aa411c6613598f9a92dcac33c90b2d880d22\"><code>5283aa4</code></a> Fix <code>--help</code>/<code>--version</code> crash in a partially configured app</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-django/commit/d0d22bab1d7a921025a1926746795fa37799f67d\"><code>d0d22ba</code></a> Remove redundant <code>_setup_django</code> call in <code>django_test_environment</code></li>\n<li><a href=\"https://github.com/pytest-dev/pytest-django/commit/6cf63b65e86870abf68ae1f376398429e35864e7\"><code>6cf63b6</code></a> Upgrade GitHub Action setup-python (<a href=\"https://redirect.github.com/pytest-dev/pytest-django/issues/1103\">#1103</a>)</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-django/commit/523c8d545d0ac188a7c79c69faf9da28d63ace07\"><code>523c8d5</code></a> Remove MANIFEST.in file</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-django/commit/72080ad936f2ca33c4dea6e3f84c6d84271fdb7b\"><code>72080ad</code></a> tests: make it possible to run without setting <code>PYTHONPATH=$(pwd)</code></li>\n<li><a href=\"https://github.com/pytest-dev/pytest-django/commit/b17b7bc1aac707c8765f597a95d37effcdca8f60\"><code>b17b7bc</code></a> tests: make variable faithful to its name</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-django/commit/12cf87704037ad7d60197b2eec2b09a6508b7a02\"><code>12cf877</code></a> Avoid mutable global state in <code>SettingsWrapper</code></li>\n<li>See full diff in <a href=\"https://github.com/pytest-dev/pytest-django/compare/v4.7.0...v4.8.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pytest-django&package-manager=pip&previous-version=4.7.0&new-version=4.8.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2024-02-05T03:39:24Z",
      "updatedAt": "2024-02-05T11:32:12Z",
      "closedAt": "2024-02-05T11:32:11Z",
      "mergedAt": "2024-02-05T11:32:11Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/pip/testing/plugins_integration/pytest-django-4.8.0",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "python"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump pytest-django in /testing/plugins_integration\n\nBumps [pytest-django](https://github.com/pytest-dev/pytest-django) from 4.7.0 to 4.8.0.\n- [Release notes](https://github.com/pytest-dev/pytest-django/releases)\n- [Changelog](https://github.com/pytest-dev/pytest-django/blob/master/docs/changelog.rst)\n- [Commits](https://github.com/pytest-dev/pytest-django/compare/v4.7.0...v4.8.0)\n\n---\nupdated-dependencies:\n- dependency-name: pytest-django\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2024-02-05T03:39:23Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-05T11:32:04Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11922,
      "title": "build(deps): Bump peter-evans/create-pull-request from 5.0.2 to 6.0.0",
      "body": "Bumps [peter-evans/create-pull-request](https://github.com/peter-evans/create-pull-request) from 5.0.2 to 6.0.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/peter-evans/create-pull-request/releases\">peter-evans/create-pull-request's releases</a>.</em></p>\n<blockquote>\n<h2>Create Pull Request v6.0.0</h2>\n<h2>Behaviour changes</h2>\n<ul>\n<li>The default values for <code>author</code> and <code>committer</code> have changed. See &quot;What's new&quot; below for details. If you are overriding the default values you will not be affected by this change.</li>\n<li>On completion, the action now removes the temporary git remote configuration it adds when using <code>push-to-fork</code>. This should not affect you unless you were using the temporary configuration for some other purpose after the action completes.</li>\n</ul>\n<h2>What's new</h2>\n<ul>\n<li>Updated runtime to Node.js 20\n<ul>\n<li>The action now requires a minimum version of <a href=\"https://github.com/actions/runner/releases/tag/v2.308.0\">v2.308.0</a> for the Actions runner. Update self-hosted runners to v2.308.0 or later to ensure compatibility.</li>\n</ul>\n</li>\n<li>The default value for <code>author</code> has been changed to <code>${{ github.actor }} &lt;${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com&gt;</code>. The change adds the <code>${{ github.actor_id }}+</code> prefix to the email address to align with GitHub's standard format for the author email address.</li>\n<li>The default value for <code>committer</code> has been changed to <code>github-actions[bot] &lt;41898282+github-actions[bot]@users.noreply.github.com&gt;</code>. This is to align with the default GitHub Actions bot user account.</li>\n<li>Adds input <code>git-token</code>, the <a href=\"https://docs.github.com/en/github/authenticating-to-github/creating-a-personal-access-token\">Personal Access Token (PAT)</a> that the action will use for git operations. This input defaults to the value of <code>token</code>. Use this input if you would like the action to use a different token for git operations than the one used for the GitHub API.</li>\n<li><code>push-to-fork</code> now supports pushing to sibling repositories in the same network.</li>\n<li>Previously, when using <code>push-to-fork</code>, the action did not remove temporary git remote configuration it adds during execution. This has been fixed and the configuration is now removed when the action completes.</li>\n<li>If the pull request body is truncated due to exceeding the maximum length, the action will now suffix the body with the message &quot;...<em>[Pull request body truncated]</em>&quot; to indicate that the body has been truncated.</li>\n<li>The action now uses <code>--unshallow</code> only when necessary, rather than as a default argument of <code>git fetch</code>. This should improve performance, particularly for large git repositories with extensive commit history.</li>\n<li>The action can now be executed on one GitHub server and create pull requests on a <em>different</em> GitHub server. Server products include GitHub hosted (github.com), GitHub Enterprise Server (GHES), and GitHub Enterprise Cloud (GHEC). For example, the action can be executed on GitHub hosted and create pull requests on a GHES or GHEC instance.</li>\n</ul>\n<h2>What's Changed</h2>\n<ul>\n<li>Update distribution by <a href=\"https://github.com/actions-bot\"><code>@\u200bactions-bot</code></a> in <a href=\"https://redirect.github.com/peter-evans/create-pull-request/pull/2086\">peter-evans/create-pull-request#2086</a></li>\n<li>fix crazy-max/ghaction-import-gp parameters by <a href=\"https://github.com/fharper\"><code>@\u200bfharper</code></a> in <a href=\"https://redirect.github.com/peter-evans/create-pull-request/pull/2177\">peter-evans/create-pull-request#2177</a></li>\n<li>Update distribution by <a href=\"https://github.com/actions-bot\"><code>@\u200bactions-bot</code></a> in <a href=\"https://redirect.github.com/peter-evans/create-pull-request/pull/2364\">peter-evans/create-pull-request#2364</a></li>\n<li>Use checkout v4 by <a href=\"https://github.com/okuramasafumi\"><code>@\u200bokuramasafumi</code></a> in <a href=\"https://redirect.github.com/peter-evans/create-pull-request/pull/2521\">peter-evans/create-pull-request#2521</a></li>\n<li>Note about <code>delete-branch</code> by <a href=\"https://github.com/dezren39\"><code>@\u200bdezren39</code></a> in <a href=\"https://redirect.github.com/peter-evans/create-pull-request/pull/2631\">peter-evans/create-pull-request#2631</a></li>\n<li>98 dependency updates by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/fharper\"><code>@\u200bfharper</code></a> made their first contribution in <a href=\"https://redirect.github.com/peter-evans/create-pull-request/pull/2177\">peter-evans/create-pull-request#2177</a></li>\n<li><a href=\"https://github.com/okuramasafumi\"><code>@\u200bokuramasafumi</code></a> made their first contribution in <a href=\"https://redirect.github.com/peter-evans/create-pull-request/pull/2521\">peter-evans/create-pull-request#2521</a></li>\n<li><a href=\"https://github.com/dezren39\"><code>@\u200bdezren39</code></a> made their first contribution in <a href=\"https://redirect.github.com/peter-evans/create-pull-request/pull/2631\">peter-evans/create-pull-request#2631</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/peter-evans/create-pull-request/compare/v5.0.2...v6.0.0\">https://github.com/peter-evans/create-pull-request/compare/v5.0.2...v6.0.0</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/peter-evans/create-pull-request/commit/b1ddad2c994a25fbc81a28b3ec0e368bb2021c50\"><code>b1ddad2</code></a> feat: v6 (<a href=\"https://redirect.github.com/peter-evans/create-pull-request/issues/2717\">#2717</a>)</li>\n<li><a href=\"https://github.com/peter-evans/create-pull-request/commit/bb809027fda03cc267431a7d36a88148eb9f3846\"><code>bb80902</code></a> build(deps-dev): bump <code>@\u200btypes/node</code> from 18.19.8 to 18.19.10 (<a href=\"https://redirect.github.com/peter-evans/create-pull-request/issues/2712\">#2712</a>)</li>\n<li><a href=\"https://github.com/peter-evans/create-pull-request/commit/e0037d470cdeb1c8133acfba89af08639bb69eb3\"><code>e0037d4</code></a> build(deps): bump peter-evans/create-or-update-comment from 3 to 4 (<a href=\"https://redirect.github.com/peter-evans/create-pull-request/issues/2702\">#2702</a>)</li>\n<li><a href=\"https://github.com/peter-evans/create-pull-request/commit/94b1f99e3a73880074d0e669c3b69d376cc8ceae\"><code>94b1f99</code></a> build(deps): bump peter-evans/find-comment from 2 to 3 (<a href=\"https://redirect.github.com/peter-evans/create-pull-request/issues/2703\">#2703</a>)</li>\n<li><a href=\"https://github.com/peter-evans/create-pull-request/commit/69c27eaf4a14a67b5362a51e681f83d3d5e0f96b\"><code>69c27ea</code></a> build(deps-dev): bump ts-jest from 29.1.1 to 29.1.2 (<a href=\"https://redirect.github.com/peter-evans/create-pull-request/issues/2685\">#2685</a>)</li>\n<li><a href=\"https://github.com/peter-evans/create-pull-request/commit/7ea722a0f6286a45eb3005280d83575a74bc8fef\"><code>7ea722a</code></a> build(deps-dev): bump prettier from 3.2.2 to 3.2.4 (<a href=\"https://redirect.github.com/peter-evans/create-pull-request/issues/2684\">#2684</a>)</li>\n<li><a href=\"https://github.com/peter-evans/create-pull-request/commit/5ee839affd4c87811108724370a2819a40e2e5d3\"><code>5ee839a</code></a> build(deps-dev): bump <code>@\u200btypes/node</code> from 18.19.7 to 18.19.8 (<a href=\"https://redirect.github.com/peter-evans/create-pull-request/issues/2683\">#2683</a>)</li>\n<li><a href=\"https://github.com/peter-evans/create-pull-request/commit/60fc256c678e6ed78d0d42e09675c9beba09cb94\"><code>60fc256</code></a> build(deps-dev): bump eslint-plugin-prettier from 5.1.2 to 5.1.3 (<a href=\"https://redirect.github.com/peter-evans/create-pull-request/issues/2660\">#2660</a>)</li>\n<li><a href=\"https://github.com/peter-evans/create-pull-request/commit/0c677233614c017442253060c74fd2cb7ff349fc\"><code>0c67723</code></a> build(deps-dev): bump <code>@\u200btypes/node</code> from 18.19.5 to 18.19.7 (<a href=\"https://redirect.github.com/peter-evans/create-pull-request/issues/2661\">#2661</a>)</li>\n<li><a href=\"https://github.com/peter-evans/create-pull-request/commit/4e288e851b95bd1362e281a255094fcc47ada675\"><code>4e288e8</code></a> build(deps-dev): bump prettier from 3.1.1 to 3.2.2 (<a href=\"https://redirect.github.com/peter-evans/create-pull-request/issues/2659\">#2659</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/peter-evans/create-pull-request/compare/153407881ec5c347639a548ade7d8ad1d6740e38...b1ddad2c994a25fbc81a28b3ec0e368bb2021c50\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=peter-evans/create-pull-request&package-manager=github_actions&previous-version=5.0.2&new-version=6.0.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2024-02-05T03:11:30Z",
      "updatedAt": "2024-02-14T19:11:21Z",
      "closedAt": "2024-02-14T19:11:20Z",
      "mergedAt": "2024-02-14T19:11:20Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/github_actions/peter-evans/create-pull-request-6.0.0",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "github_actions"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump peter-evans/create-pull-request from 5.0.2 to 6.0.0\n\nBumps [peter-evans/create-pull-request](https://github.com/peter-evans/create-pull-request) from 5.0.2 to 6.0.0.\n- [Release notes](https://github.com/peter-evans/create-pull-request/releases)\n- [Commits](https://github.com/peter-evans/create-pull-request/compare/153407881ec5c347639a548ade7d8ad1d6740e38...b1ddad2c994a25fbc81a28b3ec0e368bb2021c50)\n\n---\nupdated-dependencies:\n- dependency-name: peter-evans/create-pull-request\n  dependency-type: direct:production\n  update-type: version-update:semver-major\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2024-02-05T03:11:29Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-14T19:11:15Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11921,
      "title": "build(deps): Bump codecov/codecov-action from 3 to 4",
      "body": "Bumps [codecov/codecov-action](https://github.com/codecov/codecov-action) from 3 to 4.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/codecov/codecov-action/releases\">codecov/codecov-action's releases</a>.</em></p>\n<blockquote>\n<h2>v4.0.0</h2>\n<p>v4 of the Codecov Action uses the <a href=\"https://docs.codecov.com/docs/the-codecov-cli\">CLI</a> as the underlying upload. The CLI has helped to power new features including local upload, the global upload token, and new upcoming features.</p>\n<h2>Breaking Changes</h2>\n<ul>\n<li>The Codecov Action runs as a <code>node20</code> action due to <code>node16</code> deprecation. See <a href=\"https://github.blog/changelog/2023-09-22-github-actions-transitioning-from-node-16-to-node-20/\">this post from GitHub</a> on how to migrate.</li>\n<li>Tokenless uploading is unsupported. However, PRs made from forks to the upstream public repos will support tokenless (e.g. contributors to OS projects do not need the upstream repo's Codecov token). This <a href=\"https://docs.codecov.com/docs/adding-the-codecov-token#github-actions\">doc</a> shows instructions on how to add the Codecov token.</li>\n<li>OS platforms have been added, though some may not be automatically detected. To see a list of platforms, see our <a href=\"https://cli.codecov.io\">CLI download page</a></li>\n<li>Various arguments to the Action have been changed. Please be aware that the arguments match with the CLI's needs</li>\n</ul>\n<p><code>v3</code> versions and below will not have access to CLI features (e.g. global upload token, ATS).</p>\n<h2>What's Changed</h2>\n<ul>\n<li>build(deps): bump openpgp from 5.8.0 to 5.9.0 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/985\">codecov/codecov-action#985</a></li>\n<li>build(deps): bump actions/checkout from 3.0.0 to 3.5.3 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1000\">codecov/codecov-action#1000</a></li>\n<li>build(deps): bump ossf/scorecard-action from 2.1.3 to 2.2.0 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1006\">codecov/codecov-action#1006</a></li>\n<li>build(deps): bump tough-cookie from 4.0.0 to 4.1.3 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1013\">codecov/codecov-action#1013</a></li>\n<li>build(deps-dev): bump word-wrap from 1.2.3 to 1.2.4 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1024\">codecov/codecov-action#1024</a></li>\n<li>build(deps): bump node-fetch from 3.3.1 to 3.3.2 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1031\">codecov/codecov-action#1031</a></li>\n<li>build(deps-dev): bump <code>@\u200btypes/node</code> from 20.1.4 to 20.4.5 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1032\">codecov/codecov-action#1032</a></li>\n<li>build(deps): bump github/codeql-action from 1.0.26 to 2.21.2 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1033\">codecov/codecov-action#1033</a></li>\n<li>build commit,report and upload args based on codecovcli by <a href=\"https://github.com/dana-yaish\"><code>@\u200bdana-yaish</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/943\">codecov/codecov-action#943</a></li>\n<li>build(deps-dev): bump <code>@\u200btypes/node</code> from 20.4.5 to 20.5.3 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1055\">codecov/codecov-action#1055</a></li>\n<li>build(deps): bump github/codeql-action from 2.21.2 to 2.21.4 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1051\">codecov/codecov-action#1051</a></li>\n<li>build(deps-dev): bump <code>@\u200btypes/node</code> from 20.5.3 to 20.5.4 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1058\">codecov/codecov-action#1058</a></li>\n<li>chore(deps): update outdated deps by <a href=\"https://github.com/thomasrockhu-codecov\"><code>@\u200bthomasrockhu-codecov</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1059\">codecov/codecov-action#1059</a></li>\n<li>build(deps-dev): bump <code>@\u200btypes/node</code> from 20.5.4 to 20.5.6 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1060\">codecov/codecov-action#1060</a></li>\n<li>build(deps-dev): bump <code>@\u200btypescript-eslint/parser</code> from 6.4.1 to 6.5.0 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1065\">codecov/codecov-action#1065</a></li>\n<li>build(deps-dev): bump <code>@\u200btypescript-eslint/eslint-plugin</code> from 6.4.1 to 6.5.0 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1064\">codecov/codecov-action#1064</a></li>\n<li>build(deps): bump actions/checkout from 3.5.3 to 3.6.0 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1063\">codecov/codecov-action#1063</a></li>\n<li>build(deps-dev): bump eslint from 8.47.0 to 8.48.0 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1061\">codecov/codecov-action#1061</a></li>\n<li>build(deps-dev): bump <code>@\u200btypes/node</code> from 20.5.6 to 20.5.7 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1062\">codecov/codecov-action#1062</a></li>\n<li>build(deps): bump openpgp from 5.9.0 to 5.10.1 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1066\">codecov/codecov-action#1066</a></li>\n<li>build(deps-dev): bump <code>@\u200btypes/node</code> from 20.5.7 to 20.5.9 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1070\">codecov/codecov-action#1070</a></li>\n<li>build(deps): bump github/codeql-action from 2.21.4 to 2.21.5 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1069\">codecov/codecov-action#1069</a></li>\n<li>build(deps-dev): bump <code>@\u200btypescript-eslint/eslint-plugin</code> from 6.5.0 to 6.6.0 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1072\">codecov/codecov-action#1072</a></li>\n<li>Update README.md by <a href=\"https://github.com/thomasrockhu-codecov\"><code>@\u200bthomasrockhu-codecov</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1073\">codecov/codecov-action#1073</a></li>\n<li>build(deps-dev): bump <code>@\u200btypescript-eslint/parser</code> from 6.5.0 to 6.6.0 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1071\">codecov/codecov-action#1071</a></li>\n<li>build(deps-dev): bump <code>@\u200bvercel/ncc</code> from 0.36.1 to 0.38.0 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1074\">codecov/codecov-action#1074</a></li>\n<li>build(deps): bump <code>@\u200bactions/core</code> from 1.10.0 to 1.10.1 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1081\">codecov/codecov-action#1081</a></li>\n<li>build(deps-dev): bump <code>@\u200btypescript-eslint/eslint-plugin</code> from 6.6.0 to 6.7.0 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1080\">codecov/codecov-action#1080</a></li>\n<li>build(deps): bump actions/checkout from 3.6.0 to 4.0.0 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1078\">codecov/codecov-action#1078</a></li>\n<li>build(deps): bump actions/upload-artifact from 3.1.2 to 3.1.3 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1077\">codecov/codecov-action#1077</a></li>\n<li>build(deps-dev): bump <code>@\u200btypes/node</code> from 20.5.9 to 20.6.0 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1075\">codecov/codecov-action#1075</a></li>\n<li>build(deps-dev): bump <code>@\u200btypescript-eslint/parser</code> from 6.6.0 to 6.7.0 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1079\">codecov/codecov-action#1079</a></li>\n<li>build(deps-dev): bump eslint from 8.48.0 to 8.49.0 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1076\">codecov/codecov-action#1076</a></li>\n<li>use cli instead of node uploader by <a href=\"https://github.com/dana-yaish\"><code>@\u200bdana-yaish</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1068\">codecov/codecov-action#1068</a></li>\n<li>chore(release): 4.0.0-beta.1 by <a href=\"https://github.com/thomasrockhu-codecov\"><code>@\u200bthomasrockhu-codecov</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1084\">codecov/codecov-action#1084</a></li>\n<li>not adding -n if empty to do-upload command by <a href=\"https://github.com/dana-yaish\"><code>@\u200bdana-yaish</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1085\">codecov/codecov-action#1085</a></li>\n<li>4.0.0-beta.2 by <a href=\"https://github.com/thomasrockhu-codecov\"><code>@\u200bthomasrockhu-codecov</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1086\">codecov/codecov-action#1086</a></li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/codecov/codecov-action/blob/main/CHANGELOG.md\">codecov/codecov-action's changelog</a>.</em></p>\n<blockquote>\n<h2>4.0.0-beta.2</h2>\n<h3>Fixes</h3>\n<ul>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/1085\">#1085</a> not adding -n if empty to do-upload command</li>\n</ul>\n<h2>4.0.0-beta.1</h2>\n<p><code>v4</code> represents a move from the <a href=\"https://github.com/codecov/uploader\">universal uploader</a> to the <a href=\"https://github.com/codecov/codecov-cli\">Codecov CLI</a>. Although this will unlock new features for our users, the CLI is not yet at feature parity with the universal uploader.</p>\n<h3>Breaking Changes</h3>\n<ul>\n<li>No current support for <code>aarch64</code> and <code>alpine</code> architectures.</li>\n<li>Tokenless uploading is unsuported</li>\n<li>Various arguments to the Action have been removed</li>\n</ul>\n<h2>3.1.4</h2>\n<h3>Fixes</h3>\n<ul>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/967\">#967</a> Fix typo in README.md</li>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/971\">#971</a> fix: add back in working dir</li>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/969\">#969</a> fix: CLI option names for uploader</li>\n</ul>\n<h3>Dependencies</h3>\n<ul>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/970\">#970</a> build(deps-dev): bump <code>@\u200btypes/node</code> from 18.15.12 to 18.16.3</li>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/979\">#979</a> build(deps-dev): bump <code>@\u200btypes/node</code> from 20.1.0 to 20.1.2</li>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/981\">#981</a> build(deps-dev): bump <code>@\u200btypes/node</code> from 20.1.2 to 20.1.4</li>\n</ul>\n<h2>3.1.3</h2>\n<h3>Fixes</h3>\n<ul>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/960\">#960</a> fix: allow for aarch64 build</li>\n</ul>\n<h3>Dependencies</h3>\n<ul>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/957\">#957</a> build(deps-dev): bump jest-junit from 15.0.0 to 16.0.0</li>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/958\">#958</a> build(deps): bump openpgp from 5.7.0 to 5.8.0</li>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/959\">#959</a> build(deps-dev): bump <code>@\u200btypes/node</code> from 18.15.10 to 18.15.12</li>\n</ul>\n<h2>3.1.2</h2>\n<h3>Fixes</h3>\n<ul>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/718\">#718</a> Update README.md</li>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/851\">#851</a> Remove unsupported path_to_write_report argument</li>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/898\">#898</a> codeql-analysis.yml</li>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/901\">#901</a> Update README to contain correct information - inputs and negate feature</li>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/955\">#955</a> fix: add in all the extra arguments for uploader</li>\n</ul>\n<h3>Dependencies</h3>\n<ul>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/819\">#819</a> build(deps): bump openpgp from 5.4.0 to 5.5.0</li>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/835\">#835</a> build(deps): bump node-fetch from 3.2.4 to 3.2.10</li>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/840\">#840</a> build(deps): bump ossf/scorecard-action from 1.1.1 to 2.0.4</li>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/841\">#841</a> build(deps): bump <code>@\u200bactions/core</code> from 1.9.1 to 1.10.0</li>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/843\">#843</a> build(deps): bump <code>@\u200bactions/github</code> from 5.0.3 to 5.1.1</li>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/869\">#869</a> build(deps): bump node-fetch from 3.2.10 to 3.3.0</li>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/872\">#872</a> build(deps-dev): bump jest-junit from 13.2.0 to 15.0.0</li>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/879\">#879</a> build(deps): bump decode-uri-component from 0.2.0 to 0.2.2</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/codecov/codecov-action/commit/e0b68c6749509c5f83f984dd99a76a1c1a231044\"><code>e0b68c6</code></a> fix: show both token uses in readme (<a href=\"https://redirect.github.com/codecov/codecov-action/issues/1250\">#1250</a>)</li>\n<li><a href=\"https://github.com/codecov/codecov-action/commit/1f9f5573d12d0967fe14551018a4b25610226551\"><code>1f9f557</code></a> Add all args (<a href=\"https://redirect.github.com/codecov/codecov-action/issues/1245\">#1245</a>)</li>\n<li><a href=\"https://github.com/codecov/codecov-action/commit/09686fcfcb6453414a5acd7f3a939670a7a77826\"><code>09686fc</code></a> Update README.md (<a href=\"https://redirect.github.com/codecov/codecov-action/issues/1243\">#1243</a>)</li>\n<li><a href=\"https://github.com/codecov/codecov-action/commit/f30e4959ba63075080d4f7f90cacc18d9f3fafd7\"><code>f30e495</code></a> fix: update action.yml (<a href=\"https://redirect.github.com/codecov/codecov-action/issues/1240\">#1240</a>)</li>\n<li><a href=\"https://github.com/codecov/codecov-action/commit/a7b945cea47ad44d8340fae2b004cb982191264f\"><code>a7b945c</code></a> fix: allow for other archs (<a href=\"https://redirect.github.com/codecov/codecov-action/issues/1239\">#1239</a>)</li>\n<li><a href=\"https://github.com/codecov/codecov-action/commit/98ab2c591b94478f4c3606d68ff73601df85ec43\"><code>98ab2c5</code></a> Update package.json (<a href=\"https://redirect.github.com/codecov/codecov-action/issues/1238\">#1238</a>)</li>\n<li><a href=\"https://github.com/codecov/codecov-action/commit/43235cc5aeeafd8aeb836fe7d647599acead161c\"><code>43235cc</code></a> Update README.md (<a href=\"https://redirect.github.com/codecov/codecov-action/issues/1237\">#1237</a>)</li>\n<li><a href=\"https://github.com/codecov/codecov-action/commit/0cf8684c821546a4e0c8c9a4cf4f21a7a0c5014b\"><code>0cf8684</code></a> chore(ci): bump to node20 (<a href=\"https://redirect.github.com/codecov/codecov-action/issues/1236\">#1236</a>)</li>\n<li><a href=\"https://github.com/codecov/codecov-action/commit/8e1e730371bf82c744e8ca9aa469e2b7011542ce\"><code>8e1e730</code></a> build(deps-dev): bump <code>@\u200btypescript-eslint/eslint-plugin</code> from 6.19.1 to 6.20.0 ...</li>\n<li><a href=\"https://github.com/codecov/codecov-action/commit/61293af0e8288c75266030376a088c781ec81c18\"><code>61293af</code></a> build(deps-dev): bump <code>@\u200btypescript-eslint/parser</code> from 6.19.1 to 6.20.0 (<a href=\"https://redirect.github.com/codecov/codecov-action/issues/1235\">#1235</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/codecov/codecov-action/compare/v3...v4\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=codecov/codecov-action&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2024-02-05T03:11:26Z",
      "updatedAt": "2024-02-14T19:11:31Z",
      "closedAt": "2024-02-14T19:11:30Z",
      "mergedAt": "2024-02-14T19:11:30Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/github_actions/codecov/codecov-action-4",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "github_actions"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump codecov/codecov-action from 3 to 4\n\nBumps [codecov/codecov-action](https://github.com/codecov/codecov-action) from 3 to 4.\n- [Release notes](https://github.com/codecov/codecov-action/releases)\n- [Changelog](https://github.com/codecov/codecov-action/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/codecov/codecov-action/compare/v3...v4)\n\n---\nupdated-dependencies:\n- dependency-name: codecov/codecov-action\n  dependency-type: direct:production\n  update-type: version-update:semver-major\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2024-02-05T03:11:24Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-14T19:11:26Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11920,
      "title": "recwarn: let base exceptions propagate through `pytest.warns` again",
      "body": "Fix #11907.",
      "state": "MERGED",
      "createdAt": "2024-02-04T21:14:51Z",
      "updatedAt": "2024-02-16T10:23:07Z",
      "closedAt": "2024-02-16T10:22:52Z",
      "mergedAt": "2024-02-16T10:22:52Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "warn-skip",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "recwarn: let base exceptions propagate through `pytest.warns` again\n\nFix #11907.",
              "committedDate": "2024-02-16T10:07:56Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "mgorny"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-05T03:41:39Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-12T14:13:37Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11918,
      "title": "[automated] Update plugin list",
      "body": "[automated] Update plugin list",
      "state": "MERGED",
      "createdAt": "2024-02-04T00:19:53Z",
      "updatedAt": "2024-02-05T11:49:11Z",
      "closedAt": "2024-02-05T11:49:10Z",
      "mergedAt": "2024-02-05T11:49:10Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "update-plugin-list/patch-20b18f0f9",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[automated] Update plugin list",
              "committedDate": "2024-02-04T00:19:52Z",
              "author": {
                "name": "pytest bot",
                "email": "pytestbot@users.noreply.github.com",
                "user": {
                  "login": "pytestbot"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-05T11:32:47Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11917,
      "title": "``pytest.warns`` multiple argument handling",
      "body": "<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n\r\nFixes #11906",
      "state": "CLOSED",
      "createdAt": "2024-02-04T00:06:28Z",
      "updatedAt": "2024-10-07T04:40:41Z",
      "closedAt": "2024-02-16T12:29:50Z",
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "CONFLICTING",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "warns-fix",
      "author": {
        "login": "reaganjlee"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "formats",
              "committedDate": "2024-02-10T02:46:41Z",
              "author": {
                "name": "Reagan Lee",
                "email": "96998476+reaganjlee@users.noreply.github.com",
                "user": {
                  "login": "reaganjlee"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "CHANGES_REQUESTED",
            "submittedAt": "2024-02-05T11:41:06Z",
            "body": ""
          },
          {
            "author": {
              "login": "reaganjlee"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-05T19:42:57Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-05T19:56:21Z",
            "body": ""
          },
          {
            "author": {
              "login": "reaganjlee"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-05T23:58:57Z",
            "body": ""
          },
          {
            "author": {
              "login": "reaganjlee"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-06T00:21:05Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-07T21:08:43Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-08T00:12:52Z",
            "body": "LGTM!\r\n\r\nLeft a small suggest, other than that we also need a changelog, please create `changelog/11906.bugfix.rst` with something along these lines:\r\n\r\n```rst\r\nFix regression using :func:`pytest.warns` with custom warning subclasses which have more than one parameter in their `__init__`.\r\n```"
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-08T11:08:18Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-08T14:08:23Z",
            "body": "Thanks @reaganjlee!"
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "CHANGES_REQUESTED",
            "submittedAt": "2024-02-09T09:19:53Z",
            "body": "Left a question on the new change. Also there are some formatting changes which seem unnecessary so linting fails, can you remove them?"
          },
          {
            "author": {
              "login": "reaganjlee"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-10T02:25:42Z",
            "body": ""
          },
          {
            "author": {
              "login": "reaganjlee"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-10T02:32:02Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11916,
      "title": "Add typing to `from_parent` return values",
      "body": "Up to now the return values of `from_parent` were untyped, this is an attempt to make it work with `typing.Self`.",
      "state": "MERGED",
      "createdAt": "2024-02-03T21:45:05Z",
      "updatedAt": "2024-08-27T23:39:55Z",
      "closedAt": "2024-02-23T07:35:57Z",
      "mergedAt": "2024-02-23T07:35:57Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Zac-HD"
      },
      "baseRefName": "main",
      "headRefName": "from-parent-typing",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Add typing to `from_parent` return values\n\nUp to now the return values of `from_parent` were untyped, this is an\nattempt to make it work with `typing.Self`.",
              "committedDate": "2024-02-03T21:41:17Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": [
          {
            "requestedReviewer": {
              "login": "RonnyPfannschmidt"
            }
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Zac-HD"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-23T07:35:47Z",
            "body": "Looks great - thanks @bluetech!"
          }
        ]
      }
    },
    {
      "number": 11915,
      "title": "compat: a couple of minor cleanups",
      "body": "Please see the commits.",
      "state": "MERGED",
      "createdAt": "2024-02-03T21:30:32Z",
      "updatedAt": "2024-02-04T21:18:21Z",
      "closedAt": "2024-02-04T14:51:43Z",
      "mergedAt": "2024-02-04T14:51:43Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "compat-string-types",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "compat: inline helpers into `ascii_escaped`\n\nThe helpers don't add much.",
              "committedDate": "2024-02-03T16:42:05Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-04T10:03:51Z",
            "body": "\ud83d\udc4d I like it, really simple things should not be hidden in functions / constants."
          }
        ]
      }
    },
    {
      "number": 11914,
      "title": "[ruff] Activate flake8-bugbear and flake8-pyi",
      "body": "Follow-up to [#11912 ](https://github.com/pytest-dev/pytest/pull/11912#pullrequestreview-1860122417). The message raised by flake8bugbear were very often false positives. Maybe not such a good linter for the pytest team after all ? Or maybe it can catch issues that took time to fix in the past, as the codebase is of very high quality because it's old and battle tested ?",
      "state": "MERGED",
      "createdAt": "2024-02-02T20:39:30Z",
      "updatedAt": "2024-02-05T08:37:40Z",
      "closedAt": "2024-02-05T08:37:37Z",
      "mergedAt": "2024-02-05T08:37:37Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "main",
      "headRefName": "activate-flake8-bugbear-and-pyi",
      "author": {
        "login": "Pierre-Sassoulas"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[flake8-bugbear] Remove hidden global state to import only once",
              "committedDate": "2024-02-04T22:08:38Z",
              "author": {
                "name": "Pierre Sassoulas",
                "email": "pierre.sassoulas@gmail.com",
                "user": {
                  "login": "Pierre-Sassoulas"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-02T21:13:43Z",
            "body": "Left some comments, the commits made it really easy to review, thanks.\r\n\r\nFrom what I've seen the lints are nice so I vote to :+1: on bugbear."
          },
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-02T21:19:47Z",
            "body": ""
          },
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-02T21:20:36Z",
            "body": ""
          },
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-02T21:25:00Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-02T21:40:54Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-02T21:42:11Z",
            "body": ""
          },
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-04T10:54:07Z",
            "body": ""
          },
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-04T10:54:41Z",
            "body": ""
          },
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-04T10:56:58Z",
            "body": ""
          },
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-04T10:58:16Z",
            "body": ""
          },
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-04T10:59:00Z",
            "body": ""
          },
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-04T10:59:43Z",
            "body": ""
          },
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-04T11:01:03Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-04T14:55:38Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-04T14:57:23Z",
            "body": ""
          },
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-04T15:39:28Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-04T18:05:16Z",
            "body": ""
          },
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-04T18:43:40Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-04T21:37:14Z",
            "body": ""
          },
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-04T22:01:26Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11913,
      "title": "Ignore isort on _version.py",
      "body": "The file is generated. This makes `ruff src/` run cleanly (when not running through pre-commit).",
      "state": "MERGED",
      "createdAt": "2024-02-02T19:31:27Z",
      "updatedAt": "2024-02-02T19:55:43Z",
      "closedAt": "2024-02-02T19:55:40Z",
      "mergedAt": "2024-02-02T19:55:40Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "ruff-version-ignore",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Ignore isort on _version.py\n\nThe file is generated. This makes `ruff src/` run cleanly (when not\nrunning through pre-commit).",
              "committedDate": "2024-02-02T19:29:30Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-02T19:52:38Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11912,
      "title": "[pre-commit] Activate ruff checks and fix existing issues",
      "body": "Follow-up to #11901, there's some nice fixes here I think, especially automated removal of useless noqa. I would consider adding flake8-bugbear next but let me know what you think. I suppose most of the ``f\"{x!s}\"`` are the default behavior in a f-string and we could replace them with ``f\"{x}\"`` but I'm not sure why this is not what ruff does when autofixing already.",
      "state": "MERGED",
      "createdAt": "2024-02-02T14:24:19Z",
      "updatedAt": "2024-02-02T19:22:21Z",
      "closedAt": "2024-02-02T19:22:18Z",
      "mergedAt": "2024-02-02T19:22:18Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "main",
      "headRefName": "activate-ruff-checks",
      "author": {
        "login": "Pierre-Sassoulas"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[ruff] Fix all consider [*cats, garfield] instead of cats + [garfield]",
              "committedDate": "2024-02-02T14:18:38Z",
              "author": {
                "name": "Pierre Sassoulas",
                "email": "pierre.sassoulas@gmail.com",
                "user": {
                  "login": "Pierre-Sassoulas"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-02T19:06:30Z",
            "body": "Nice!\r\n\r\n:+1: on bugbear (at least most of the rules).\r\n\r\nflake8-pyi also looks very nice."
          }
        ]
      }
    },
    {
      "number": 11911,
      "title": "[backport] Migrate from autoflake, black, isort, pyupgrade, flake8 and pydocstyle, to ruff",
      "body": "Backport of #11901. There was a large number of conflicts so I applied ``git restore . --ours`` and made pre-commit happy again.\r\n\r\n\r\n\r\n",
      "state": "MERGED",
      "createdAt": "2024-02-02T13:40:43Z",
      "updatedAt": "2024-02-02T19:21:49Z",
      "closedAt": "2024-02-02T19:21:46Z",
      "mergedAt": "2024-02-02T19:21:46Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "8.0.x",
      "headRefName": "backport-ruff-migration",
      "author": {
        "login": "Pierre-Sassoulas"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Migrate from autoflake, black, isort, pyupgrade, flake8 and pydocstyle, to ruff\n\nruff is faster and handle everything we had prior.\n\nisort configuration done based on the indication from\nhttps://github.com/astral-sh/ruff/issues/4670, previousely based on\nreorder-python-import (#11896)\n\nflake8-docstrings was a wrapper around pydocstyle (now archived) that\nexplicitly asks to use ruff in https://github.com/PyCQA/pydocstyle/pull/658.\n\nflake8-typing-import is useful mainly for project that support python 3.7\nand the one useful check will be implemented in https://github.com/astral-sh/ruff/issues/2302\n\nWe need to keep blacken-doc because ruff does not handle detection\nof python code inside .md and .rst. The direct link to the repo is\nnow used to avoid a redirection.\n\nManual fixes:\n- Lines that became too long\n- % formatting that was not done automatically\n- type: ignore that were moved around\n- noqa of hard to fix issues (UP031 generally)\n- fmt: off and fmt: on that is not really identical\n  between black and ruff\n- autofix re-order in pre-commit from faster to slower\n\nCo-authored-by: Ran Benita <ran@unusedvar.com>",
              "committedDate": "2024-02-02T13:38:12Z",
              "author": {
                "name": "Pierre Sassoulas",
                "email": "pierre.sassoulas@gmail.com",
                "user": {
                  "login": "Pierre-Sassoulas"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-02T19:09:27Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11910,
      "title": "Move show-fixtures code from python.py to fixtures.py",
      "body": "It makes more sense, also, we have a long term idea of generalizing fixture support to items defined by other plugins, not just python, in which case `--fixtures` would definitely not be python-plugin specific.\r\n\r\n<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "MERGED",
      "createdAt": "2024-02-02T13:40:26Z",
      "updatedAt": "2024-04-02T20:28:36Z",
      "closedAt": "2024-04-02T20:28:32Z",
      "mergedAt": "2024-04-02T20:28:32Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "move-show-fixtures",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Move show-fixtures code from python.py to fixtures.py\n\nIt makes more sense, also, we have a long term idea of generalizing\nfixture support to items defined by other plugins, not just python, in\nwhich case `--fixtures` would definitely not be python-plugin\nspecific.",
              "committedDate": "2024-04-02T20:02:10Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-20T15:57:33Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-03-29T11:23:33Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11903,
      "title": "EAFP check on if file is accessible.",
      "body": "closes #11902.\r\n`os.access` suggests EAFP rather than checking access then accessing.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n",
      "state": "CLOSED",
      "createdAt": "2024-01-31T21:41:10Z",
      "updatedAt": "2024-02-04T23:04:18Z",
      "closedAt": "2024-02-04T23:04:18Z",
      "mergedAt": null,
      "isDraft": true,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "directory-access",
      "author": {
        "login": "ntjohnson1"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "EAFP check on if file is accessible.",
              "committedDate": "2024-01-31T21:27:01Z",
              "author": {
                "name": "Nick Johnson",
                "email": "24689722+ntjohnson1@users.noreply.github.com",
                "user": {
                  "login": "ntjohnson1"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11901,
      "title": "Migrate from ``autoflake``, ``black``, ``isort``, ``pyupgrade``, ``flake8`` and ``pydocstyle``, to ``ruff``",
      "body": "Follow-up to #11896, this seems to be blocked by https://github.com/astral-sh/ruff/issues/4670 unless we're ready to accept a little churn. There are other tools that we could remove if we activate more ruff message, but I figured doing one at a time would help with the reviews.",
      "state": "MERGED",
      "createdAt": "2024-01-31T13:37:04Z",
      "updatedAt": "2024-02-02T13:20:32Z",
      "closedAt": "2024-02-02T08:42:08Z",
      "mergedAt": "2024-02-02T08:42:08Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "main",
      "headRefName": "migrate-from-isort-to-ruff",
      "author": {
        "login": "Pierre-Sassoulas"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 21
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[.git-blame-ignore-revs] Add migration to ruff/ruff format and blacken-docs 2024's style",
              "committedDate": "2024-02-02T08:28:09Z",
              "author": {
                "name": "Pierre Sassoulas",
                "email": "pierre.sassoulas@gmail.com",
                "user": {
                  "login": "Pierre-Sassoulas"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": [
          {
            "requestedReviewer": {
              "login": "nicoddemus"
            }
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-31T15:48:54Z",
            "body": ""
          },
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-31T19:07:40Z",
            "body": ""
          },
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-31T19:12:21Z",
            "body": ""
          },
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-31T19:15:33Z",
            "body": ""
          },
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-31T19:19:06Z",
            "body": ""
          },
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-31T19:19:14Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-31T20:51:15Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-31T21:31:15Z",
            "body": ""
          },
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-31T22:14:55Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-01T11:39:34Z",
            "body": ""
          },
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-01T11:42:15Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-01T21:00:43Z",
            "body": "Great work @Pierre-Sassoulas, went through everything and it looks good to me.\r\n\r\nOne thing though, I tried it and it seems like ruff format *doesn't* support formatting code snippets in rst and md files yet. It does support formatting rst and md snippets in docstrings but that's not what we need. So until ruff implements this (https://github.com/astral-sh/ruff/issues/8237), we should keep blacken-docs."
          },
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-01T21:06:24Z",
            "body": ""
          },
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-01T21:19:00Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-01T21:30:08Z",
            "body": ""
          },
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-01T21:51:06Z",
            "body": ""
          },
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-01T21:53:04Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-01T22:10:28Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11900,
      "title": "[8.0.x] Upgrade blacken-doc to black's 2024 style (#11899)",
      "body": "(cherry picked from commit 4546d5445aaefe6a03957db028c263521dfb5c4b)\r\n\r\nFollow up to #11899. ",
      "state": "MERGED",
      "createdAt": "2024-01-31T13:04:59Z",
      "updatedAt": "2024-01-31T13:46:54Z",
      "closedAt": "2024-01-31T13:46:51Z",
      "mergedAt": "2024-01-31T13:46:51Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "8.0.x",
      "headRefName": "backport-11899-to-8.0.x",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[8.0.x] Upgrade blacken-doc to black's 2024 style (#11899)\n\n(cherry picked from commit 4546d5445aaefe6a03957db028c263521dfb5c4b)",
              "committedDate": "2024-01-31T13:04:06Z",
              "author": {
                "name": "Pierre Sassoulas",
                "email": "pierre.sassoulas@gmail.com",
                "user": {
                  "login": "Pierre-Sassoulas"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11899,
      "title": "Upgrade blacken-doc to black's 2024 style",
      "body": "Follow-up to #11898 prior to migrating to ruff.\r\n",
      "state": "MERGED",
      "createdAt": "2024-01-31T12:19:19Z",
      "updatedAt": "2024-01-31T13:01:08Z",
      "closedAt": "2024-01-31T12:53:22Z",
      "mergedAt": "2024-01-31T12:53:21Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "main",
      "headRefName": "upgrade-blacken-docs",
      "author": {
        "login": "Pierre-Sassoulas"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Upgrade blacken-doc to black's 2024 style",
              "committedDate": "2024-01-31T12:17:12Z",
              "author": {
                "name": "Pierre Sassoulas",
                "email": "pierre.sassoulas@gmail.com",
                "user": {
                  "login": "Pierre-Sassoulas"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-31T12:40:53Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11898,
      "title": "[8.0.x] Replace reorder-python-imports by isort due to black incompatibility",
      "body": "Backport of #11896\r\n",
      "state": "MERGED",
      "createdAt": "2024-01-31T11:55:26Z",
      "updatedAt": "2024-01-31T12:08:44Z",
      "closedAt": "2024-01-31T12:08:36Z",
      "mergedAt": "2024-01-31T12:08:36Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "8.0.x",
      "headRefName": "backport-11896-to-8.0.x",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[8.0.x] Replace reorder-python-imports by isort due to black incompatibility\n\nBackport of #11896",
              "committedDate": "2024-01-31T11:54:45Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11897,
      "title": "[8.0.x] fix incorrect examples for group_contains",
      "body": "Backport of PR #11892 to 8.0.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2024-01-30T20:21:50Z",
      "updatedAt": "2024-01-30T20:37:19Z",
      "closedAt": "2024-01-30T20:37:18Z",
      "mergedAt": "2024-01-30T20:37:18Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "8.0.x",
      "headRefName": "backport-11892-to-8.0.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[8.0.x] fix incorrect examples for group_contains",
              "committedDate": "2024-01-30T20:21:49Z",
              "author": {
                "name": "John Litborn",
                "email": "11260241+jakkdl@users.noreply.github.com",
                "user": {
                  "login": "jakkdl"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-30T20:22:55Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11896,
      "title": "Replace reorder-python-imports by isort due to black incompatibility",
      "body": "Unfortunately black and reorder-python-imports are no longer compatible, and from the looks of it probably will not be compatible anytime soon:\r\n\r\nhttps://github.com/asottile/reorder-python-imports/issues/367\r\nhttps://github.com/asottile/reorder-python-imports/issues/366\r\nhttps://github.com/psf/black/issues/4175\r\n\r\nThis replaces `reorder-python-imports` by `isort` configured in a way to yield roughtly the same results.\r\n\r\nCloses #11885",
      "state": "MERGED",
      "createdAt": "2024-01-30T19:37:47Z",
      "updatedAt": "2024-01-31T11:44:23Z",
      "closedAt": "2024-01-31T11:04:39Z",
      "mergedAt": "2024-01-31T11:04:39Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "isort",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Update and rename .gitblameignore to .git-blame-ignore-revs\n\nSeems like `.git-blame-ignore-revs` is the standard used and also automatically detected by GitHub:\r\n\r\nhttps://github.blog/changelog/2022-03-24-ignore-commits-in-the-blame-view-beta/",
              "committedDate": "2024-01-31T10:50:49Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "nicoddemus@gmail.com",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-30T20:13:56Z",
            "body": "LGTM. ruff is a drop in replacement for isort, but also for autoflake, flake8, flake8-typing-imports,  (flake8-docstrings I don't think so, but I don't know what's inside, maybe it's done by other checks), and pyupgrade, maybe something to consider instead ? It's a single tool, but it's also faster. I can do it and provide a configuration if you want."
          },
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-30T20:16:30Z",
            "body": "(Approving in case ruff is not desirable)"
          }
        ]
      }
    },
    {
      "number": 11894,
      "title": "[8.0.x] BUG: fix an edge case where ExceptionInfo._stringify_exception could crash pytest.raises",
      "body": "Backport of PR #11879 to 8.0.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2024-01-30T15:20:58Z",
      "updatedAt": "2024-01-30T15:38:44Z",
      "closedAt": "2024-01-30T15:38:43Z",
      "mergedAt": "2024-01-30T15:38:43Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "8.0.x",
      "headRefName": "backport-11879-to-8.0.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[8.0.x] BUG: fix an edge case where ExceptionInfo._stringify_exception could crash pytest.raises",
              "committedDate": "2024-01-30T15:20:56Z",
              "author": {
                "name": "Cl\u00e9ment Robert",
                "email": "cr52@protonmail.com",
                "user": {
                  "login": "neutrinoceros"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-30T15:23:14Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11892,
      "title": "fix incorrect examples for group_contains",
      "body": "fixes #11882",
      "state": "MERGED",
      "createdAt": "2024-01-30T13:44:46Z",
      "updatedAt": "2024-01-31T11:03:26Z",
      "closedAt": "2024-01-30T20:00:39Z",
      "mergedAt": "2024-01-30T20:00:39Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Zac-HD"
      },
      "baseRefName": "main",
      "headRefName": "fix_group_contains_docs",
      "author": {
        "login": "jakkdl"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "fix incorrect example for group_contains",
              "committedDate": "2024-01-30T13:43:46Z",
              "author": {
                "name": "jakkdl",
                "email": "h6+github@pm.me",
                "user": {
                  "login": "jakkdl"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-30T14:24:06Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11891,
      "title": "[8.0.x] Add a changelog entry about FixtureManager.getfixtureclosure losing a default argument",
      "body": "Backport of PR #11887 to 8.0.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2024-01-30T12:41:40Z",
      "updatedAt": "2024-01-30T12:55:37Z",
      "closedAt": "2024-01-30T12:55:36Z",
      "mergedAt": "2024-01-30T12:55:36Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "8.0.x",
      "headRefName": "backport-11887-to-8.0.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[8.0.x] Add a changelog entry about FixtureManager.getfixtureclosure losing a default argument",
              "committedDate": "2024-01-30T12:41:38Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "nicoddemus@gmail.com",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-30T12:41:59Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11889,
      "title": "Pin back pytest-asyncio to 8.0.0 compatible release",
      "body": "The current version (0.23.4) explicitly does not support pytest 8 yet, so we fallback to the previous release in the hope that at least our integration tests pass.\r\n",
      "state": "MERGED",
      "createdAt": "2024-01-30T00:26:21Z",
      "updatedAt": "2024-01-30T09:58:26Z",
      "closedAt": "2024-01-30T09:58:23Z",
      "mergedAt": "2024-01-30T09:58:23Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "pin-pytest-asyncio",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Pin back pytest-asyncio to 8.0.0 compatible release\n\nThe current version (0.23.4) explicitly does not support pytest 8 yet, so we fallback to the previous release in the hope that at least our integration tests pass.",
              "committedDate": "2024-01-30T00:25:07Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-30T07:42:18Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11888,
      "title": "Reintroduce default value for ignore_args argument of FixtureManager.getfixtureclosure",
      "body": "Fix #11868\r\n",
      "state": "CLOSED",
      "createdAt": "2024-01-30T00:17:36Z",
      "updatedAt": "2024-01-30T14:24:30Z",
      "closedAt": "2024-01-30T13:06:51Z",
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "getfixtureclosure-default",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 10
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Update changelog/11868.bugfix.rst\n\nCo-authored-by: Ran Benita <ran@unusedvar.com>",
              "committedDate": "2024-01-30T11:53:13Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "nicoddemus@gmail.com",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-30T11:16:26Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-30T11:53:10Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11887,
      "title": "Add a changelog entry about FixtureManager.getfixtureclosure losing a default argument",
      "body": "As discussed in #11868.\r\n\r\n",
      "state": "MERGED",
      "createdAt": "2024-01-30T00:15:07Z",
      "updatedAt": "2024-01-30T12:41:25Z",
      "closedAt": "2024-01-30T12:41:19Z",
      "mergedAt": "2024-01-30T12:41:19Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "getfixtureclosure-changelog",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Update doc/en/changelog.rst\n\nCo-authored-by: Ran Benita <ran@unusedvar.com>",
              "committedDate": "2024-01-30T12:38:02Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "nicoddemus@gmail.com",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-30T12:02:21Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-30T12:38:14Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11885,
      "title": "[pre-commit.ci] pre-commit autoupdate",
      "body": "<!--pre-commit.ci start-->\nupdates:\n- [github.com/psf/black: 23.12.1 \u2192 24.1.1](https://github.com/psf/black/compare/23.12.1...24.1.1)\n<!--pre-commit.ci end-->",
      "state": "CLOSED",
      "createdAt": "2024-01-29T20:40:48Z",
      "updatedAt": "2024-01-31T12:57:17Z",
      "closedAt": "2024-01-31T11:04:40Z",
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "pre-commit-ci-update-config",
      "author": {
        "login": "pre-commit-ci"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[pre-commit.ci] auto fixes from pre-commit.com hooks\n\nfor more information, see https://pre-commit.ci",
              "committedDate": "2024-01-29T20:42:24Z",
              "author": {
                "name": "pre-commit-ci[bot]",
                "email": "66853113+pre-commit-ci[bot]@users.noreply.github.com",
                "user": {
                  "login": "pre-commit-ci[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-29T20:44:46Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11883,
      "title": "FIX use safe_getattr instead of getattr for Python 3.9 compat",
      "body": "<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n\r\ncloses #11872 \r\n\r\nUse `safe_getattr` instead of `getattr` that fails with Python 3.9\r\n\r\nTODO:\r\n\r\n- [x] add non-regression test\r\n- [x] create a changelog entry\r\n- [x] add name in AUTHORS\r\n",
      "state": "CLOSED",
      "createdAt": "2024-01-29T18:05:39Z",
      "updatedAt": "2024-01-29T18:48:17Z",
      "closedAt": "2024-01-29T18:46:20Z",
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "is/11872",
      "author": {
        "login": "glemaitre"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "DOC add name in AUTHORS",
              "committedDate": "2024-01-29T18:38:18Z",
              "author": {
                "name": "Guillaume Lemaitre",
                "email": "g.lemaitre58@gmail.com",
                "user": {
                  "login": "glemaitre"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11879,
      "title": "BUG: fix an edge case where ExceptionInfo._stringify_exception could crash pytest.raises",
      "body": "Closes #11872\r\nThanks @bluetech for your guidance !",
      "state": "MERGED",
      "createdAt": "2024-01-29T08:29:17Z",
      "updatedAt": "2024-01-30T23:48:48Z",
      "closedAt": "2024-01-30T15:20:30Z",
      "mergedAt": "2024-01-30T15:20:30Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "hotfix/11872",
      "author": {
        "login": "neutrinoceros"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 5
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[pre-commit.ci] auto fixes from pre-commit.com hooks\n\nfor more information, see https://pre-commit.ci",
              "committedDate": "2024-01-30T14:42:12Z",
              "author": {
                "name": "pre-commit-ci[bot]",
                "email": "66853113+pre-commit-ci[bot]@users.noreply.github.com",
                "user": {
                  "login": "pre-commit-ci[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "neutrinoceros"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-29T08:32:49Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-29T10:10:16Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-29T13:44:11Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-29T18:48:37Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-29T18:49:01Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-30T15:18:57Z",
            "body": "I updated to use @Zac-HD's approach, good to go now."
          }
        ]
      }
    },
    {
      "number": 11878,
      "title": "build(deps): Bump pytest-asyncio from 0.23.3 to 0.23.4 in /testing/plugins_integration",
      "body": "Bumps [pytest-asyncio](https://github.com/pytest-dev/pytest-asyncio) from 0.23.3 to 0.23.4.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pytest-dev/pytest-asyncio/releases\">pytest-asyncio's releases</a>.</em></p>\n<blockquote>\n<h2>pytest-asyncio 0.23.4</h2>\n<h1>0.23.4 (2024-01-28)</h1>\n<ul>\n<li>pytest-asyncio no longer imports additional, unrelated packages during test collection <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/issues/729\">#729</a></li>\n<li>Addresses further issues that caused an internal pytest error during test collection</li>\n<li>Declares incompatibility with pytest 8 <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/issues/737\">#737</a></li>\n</ul>\n<h2>pytest-asyncio 0.23.4a2</h2>\n<h1>0.23.4 (UNRELEASED)</h1>\n<ul>\n<li>pytest-asyncio no longer imports additional, unrelated packages during test collection <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/issues/729\">#729</a></li>\n<li>Addresses further issues that caused an internal pytest error during test collection</li>\n</ul>\n<h2>Known issues</h2>\n<p>As of v0.23, pytest-asyncio attaches an asyncio event loop to each item of the test suite (i.e. session, packages, modules, classes, functions) and allows tests to be run in those loops when marked accordingly. Pytest-asyncio currently assumes that async fixture scope is correlated with the new event loop scope. This prevents fixtures from being evaluated independently from the event loop scope and breaks some existing test suites (see <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/issues/706\">#706</a>). For example, a test suite may require all fixtures and tests to run in the same event loop, but have async fixtures that are set up and torn down for each module. If you're affected by this issue, please continue using the v0.21 release, until it is resolved.</p>\n<h2>pytest-asyncio 0.23.4a1</h2>\n<h1>0.23.4 (UNRELEASED)</h1>\n<ul>\n<li>pytest-asyncio no longer imports additional, unrelated packages during test collection <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/issues/729\">#729</a></li>\n</ul>\n<h2>Known issues</h2>\n<p>As of v0.23, pytest-asyncio attaches an asyncio event loop to each item of the test suite (i.e. session, packages, modules, classes, functions) and allows tests to be run in those loops when marked accordingly. Pytest-asyncio currently assumes that async fixture scope is correlated with the new event loop scope. This prevents fixtures from being evaluated independently from the event loop scope and breaks some existing test suites (see <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/issues/706\">#706</a>). For example, a test suite may require all fixtures and tests to run in the same event loop, but have async fixtures that are set up and torn down for each module. If you're affected by this issue, please continue using the v0.21 release, until it is resolved.</p>\n<h2>pytest-asyncio 0.23.4a0</h2>\n<h1>0.23.4 (UNRELEASED)</h1>\n<ul>\n<li>pytest-asyncio no longer imports additional, unrelated packages during test collection <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/issues/729\">#729</a></li>\n</ul>\n<h2>Known issues</h2>\n<p>As of v0.23, pytest-asyncio attaches an asyncio event loop to each item of the test suite (i.e. session, packages, modules, classes, functions) and allows tests to be run in those loops when marked accordingly. Pytest-asyncio currently assumes that async fixture scope is correlated with the new event loop scope. This prevents fixtures from being evaluated independently from the event loop scope and breaks some existing test suites (see <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/issues/706\">#706</a>). For example, a test suite may require all fixtures and tests to run in the same event loop, but have async fixtures that are set up and torn down for each module. If you're affected by this issue, please continue using the v0.21 release, until it is resolved.</p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/b879130e3212884fde45f2ecfe48b41ce1eacce3\"><code>b879130</code></a> [chore] Updated shed pre-commit hook to v2024.1.1.</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/a309bc509b6a2010adadedba76c2a3ea8ca46676\"><code>a309bc5</code></a> [docs] Prepare release of v0.23.4.</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/c51c3e7cebfb5ffdeed6922e89bbf5259c45c8e3\"><code>c51c3e7</code></a> [docs] Mention compatibility issue with pytest 8.</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/dd129e9c4ce92cc8af50b82551e23ba2d857f8da\"><code>dd129e9</code></a> [fix] Fixes a bug that prevented tests from being collected from package when...</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/463ce984677f0ac965f225c3b7ac14ebf43adad6\"><code>463ce98</code></a> [fix] Avoid trying to install scoped event loops for unknown test collector t...</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/256ef7d2f5baab34d8668c6ffc476b7740b782fc\"><code>256ef7d</code></a> [fix] pytest-asyncio no longer uses virtual modules to install dynamic packag...</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/8ba9bd03c44584929c7251cf1383df23f5e14f44\"><code>8ba9bd0</code></a> [fix] Make virtual modules compatible with Windows.</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/df487d5e2d7976c89f79d3459e7cb13c3899082e\"><code>df487d5</code></a> [ci] Shorten names of display OS in CI jobs.</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/9572f3e0e42d3359cbea5b70a02be6169059f0e8\"><code>9572f3e</code></a> [tests] Fixed deprecated use of yield_fixture in test.</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/ef619b9fea227a70387f1c97828cc21617c1ea2d\"><code>ef619b9</code></a> [build] Run tests on Windows.</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pytest-dev/pytest-asyncio/compare/v0.23.3...v0.23.4\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pytest-asyncio&package-manager=pip&previous-version=0.23.3&new-version=0.23.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2024-01-29T03:50:39Z",
      "updatedAt": "2024-01-29T13:42:29Z",
      "closedAt": "2024-01-29T13:42:28Z",
      "mergedAt": "2024-01-29T13:42:28Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/pip/testing/plugins_integration/pytest-asyncio-0.23.4",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "python"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump pytest-asyncio in /testing/plugins_integration\n\nBumps [pytest-asyncio](https://github.com/pytest-dev/pytest-asyncio) from 0.23.3 to 0.23.4.\n- [Release notes](https://github.com/pytest-dev/pytest-asyncio/releases)\n- [Commits](https://github.com/pytest-dev/pytest-asyncio/compare/v0.23.3...v0.23.4)\n\n---\nupdated-dependencies:\n- dependency-name: pytest-asyncio\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2024-01-29T03:50:38Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11877,
      "title": "build(deps): Bump hynek/build-and-inspect-python-package from 2.0.0 to 2.0.1",
      "body": "Bumps [hynek/build-and-inspect-python-package](https://github.com/hynek/build-and-inspect-python-package) from 2.0.0 to 2.0.1.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/hynek/build-and-inspect-python-package/releases\">hynek/build-and-inspect-python-package's releases</a>.</em></p>\n<blockquote>\n<h2>v2.0.1</h2>\n<p>This release updates the setup-python action to v5 to avoid deprecation warnings.</p>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/hynek/build-and-inspect-python-package/blob/main/CHANGELOG.md\">hynek/build-and-inspect-python-package's changelog</a>.</em></p>\n<blockquote>\n<h2><a href=\"https://github.com/hynek/build-and-inspect-python-package/compare/v2.0.0...v2.0.1\">2.0.1</a> - 2024-01-25</h2>\n<h3>Changed</h3>\n<ul>\n<li>Switched to <code>setup-python@v5</code> to avoid the &quot;Node.js 16 actions are deprecated.&quot; deprecation warning.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/hynek/build-and-inspect-python-package/commit/3a76fe0f90ca169edffd7d518137a64c0c4a3a41\"><code>3a76fe0</code></a> v2.0.1</li>\n<li><a href=\"https://github.com/hynek/build-and-inspect-python-package/commit/900460488d669585001541fffdf8fc270e9b4c76\"><code>9004604</code></a> Document setup-python change</li>\n<li><a href=\"https://github.com/hynek/build-and-inspect-python-package/commit/c9f989a84ff66453a6f6936ce0d90667849f3eaa\"><code>c9f989a</code></a> Automated dependency upgrades (<a href=\"https://redirect.github.com/hynek/build-and-inspect-python-package/issues/81\">#81</a>)</li>\n<li><a href=\"https://github.com/hynek/build-and-inspect-python-package/commit/d1fc4c3bfff56201b5e660a4b2fce06cc38e56be\"><code>d1fc4c3</code></a> Bump actions/setup-python from 4 to 5 (<a href=\"https://redirect.github.com/hynek/build-and-inspect-python-package/issues/82\">#82</a>)</li>\n<li>See full diff in <a href=\"https://github.com/hynek/build-and-inspect-python-package/compare/v2.0.0...v2.0.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=hynek/build-and-inspect-python-package&package-manager=github_actions&previous-version=2.0.0&new-version=2.0.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2024-01-29T03:16:38Z",
      "updatedAt": "2024-01-29T13:42:52Z",
      "closedAt": "2024-01-29T13:42:51Z",
      "mergedAt": "2024-01-29T13:42:51Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/github_actions/hynek/build-and-inspect-python-package-2.0.1",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "github_actions"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump hynek/build-and-inspect-python-package\n\nBumps [hynek/build-and-inspect-python-package](https://github.com/hynek/build-and-inspect-python-package) from 2.0.0 to 2.0.1.\n- [Release notes](https://github.com/hynek/build-and-inspect-python-package/releases)\n- [Changelog](https://github.com/hynek/build-and-inspect-python-package/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/hynek/build-and-inspect-python-package/compare/v2.0.0...v2.0.1)\n\n---\nupdated-dependencies:\n- dependency-name: hynek/build-and-inspect-python-package\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2024-01-29T03:16:38Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-29T13:42:50Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11876,
      "title": "[8.0.x] Catch `OSError` from `getpass.getuser()`",
      "body": "Backport of PR #11875 to 8.0.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2024-01-29T02:07:38Z",
      "updatedAt": "2024-01-29T02:25:19Z",
      "closedAt": "2024-01-29T02:25:18Z",
      "mergedAt": "2024-01-29T02:25:18Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "8.0.x",
      "headRefName": "backport-11875-to-8.0.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[8.0.x] Catch `OSError` from `getpass.getuser()`",
              "committedDate": "2024-01-29T02:07:36Z",
              "author": {
                "name": "Russell Martin",
                "email": "russell@rjm.li",
                "user": {
                  "login": "rmartin16"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-29T02:07:59Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11875,
      "title": "Catch `OSError` from `getpass.getuser()`",
      "body": "- Previously, `getpass.getuser()` would leak an ImportError if the USERNAME environment variable was not set on Windows because the `pwd` module cannot be imported.\r\n- Starting in Python 3.13.0a3, it only raises `OSError`.\r\n- Closes #11874\r\n\r\n<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [X] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "MERGED",
      "createdAt": "2024-01-28T22:49:28Z",
      "updatedAt": "2024-01-29T02:07:54Z",
      "closedAt": "2024-01-29T02:07:18Z",
      "mergedAt": "2024-01-29T02:07:18Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "win-no-username-3.13-fix",
      "author": {
        "login": "rmartin16"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Create 11875.bugfix.rst",
              "committedDate": "2024-01-29T02:00:11Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-29T02:00:27Z",
            "body": "Thanks!"
          }
        ]
      }
    },
    {
      "number": 11867,
      "title": "[automated] Update plugin list",
      "body": "[automated] Update plugin list",
      "state": "MERGED",
      "createdAt": "2024-01-28T00:19:40Z",
      "updatedAt": "2024-01-28T13:28:29Z",
      "closedAt": "2024-01-28T13:28:28Z",
      "mergedAt": "2024-01-28T13:28:28Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "update-plugin-list/patch-e7b43b212",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[automated] Update plugin list",
              "committedDate": "2024-01-28T00:19:39Z",
              "author": {
                "name": "pytest bot",
                "email": "pytestbot@users.noreply.github.com",
                "user": {
                  "login": "pytestbot"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-28T13:14:19Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11866,
      "title": "[8.0.x] build(deps): Bump hynek/build-and-inspect-python-package from 1.5.4 to 2.0.0",
      "body": "Backport of PR #11718 to 8.0.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2024-01-27T22:11:01Z",
      "updatedAt": "2024-01-27T22:25:46Z",
      "closedAt": "2024-01-27T22:25:45Z",
      "mergedAt": "2024-01-27T22:25:45Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "8.0.x",
      "headRefName": "backport-11718-to-8.0.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[8.0.x] build(deps): Bump hynek/build-and-inspect-python-package from 1.5.4 to 2.0.0",
              "committedDate": "2024-01-27T22:10:59Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-27T22:11:28Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11865,
      "title": "Cherry pick 8.0.0 release notes",
      "body": "(cherry picked from commit 24c681d4eeaad22ba26c5bcf6958e0476ae37a89)",
      "state": "MERGED",
      "createdAt": "2024-01-27T22:00:46Z",
      "updatedAt": "2024-01-27T22:03:09Z",
      "closedAt": "2024-01-27T22:03:07Z",
      "mergedAt": "2024-01-27T22:03:07Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "cherry-pick-release",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Merge pull request #11864 from bluetech/release-8.0.0\n\nPrepare release version 8.0.0\n\n(cherry picked from commit 24c681d4eeaad22ba26c5bcf6958e0476ae37a89)",
              "committedDate": "2024-01-27T22:00:15Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11864,
      "title": "Prepare release version 8.0.0",
      "body": "",
      "state": "MERGED",
      "createdAt": "2024-01-27T21:26:55Z",
      "updatedAt": "2024-01-27T21:55:31Z",
      "closedAt": "2024-01-27T21:55:27Z",
      "mergedAt": "2024-01-27T21:55:27Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "8.0.x",
      "headRefName": "release-8.0.0",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Prepare release version 8.0.0",
              "committedDate": "2024-01-27T21:23:56Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-27T21:37:56Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11863,
      "title": "[8.0.x] fix: avoid rounding microsecond to `1_000_000`",
      "body": "Backport of PR #11861 to 8.0.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2024-01-27T13:40:54Z",
      "updatedAt": "2024-01-27T16:48:02Z",
      "closedAt": "2024-01-27T16:48:01Z",
      "mergedAt": "2024-01-27T16:48:01Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "8.0.x",
      "headRefName": "backport-11861-to-8.0.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[8.0.x] fix: avoid rounding microsecond to `1_000_000`",
              "committedDate": "2024-01-27T13:40:53Z",
              "author": {
                "name": "D\u01b0\u01a1ng Qu\u1ed1c Kh\u00e1nh",
                "email": "dqkqdlot@gmail.com",
                "user": {
                  "login": "dqkqd"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-27T13:44:51Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11862,
      "title": "mypy: disallow untyped defs by default",
      "body": "Change our mypy configuration to disallow untyped defs by default, which ensures *new* files added to the code base are fully typed.\r\n\r\nTo avoid having to type-annotate everything now, add `# mypy: allow-untyped-defs` to files which are not fully type annotated yet. \r\n\r\nAs we fully type annotate those modules, we can then just remove that directive from the top.",
      "state": "MERGED",
      "createdAt": "2024-01-27T12:07:28Z",
      "updatedAt": "2024-01-28T13:12:42Z",
      "closedAt": "2024-01-28T13:12:42Z",
      "mergedAt": "2024-01-28T13:12:42Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "require-typed-defs-by-default",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "mypy: disallow untyped defs by default\n\nChange our mypy configuration to disallow untyped defs by default, which ensures *new* files added to the code base are fully typed.\n\nTo avoid having to type-annotate everything now, add `# mypy: allow-untyped-defs` to files which are not fully type annotated yet.\n\nAs we fully type annotate those modules, we can then just remove that directive from the top.",
              "committedDate": "2024-01-27T13:26:27Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-27T22:05:21Z",
            "body": "I like it :+1:"
          }
        ]
      }
    },
    {
      "number": 11861,
      "title": "fix: avoid rounding microsecond to `1_000_000`",
      "body": "<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n\r\nI'm using pytest with python 3.9, and my `log-date-format` is enabled for microseconds. However, my testsuite occasionally fails with the message below:\r\n```\r\nValueError: microsecond must be in 0..999999\r\n```\r\nI'm pretty sure the issue occurred because we're rounding up microsecond here, which make it exceeds 999999.\r\nhttps://github.com/pytest-dev/pytest/blob/ac2cd72e5fb00257ef1f6e17b2c16336362c6234/src/_pytest/logging.py#L72-L75\r\n\r\nAs we can see `msecs` can take more than 4 digits after decimal points, hence it can be rounded up to `1_000_000` after multiplying with `1_000`. (in python 3.9)\r\n```python\r\n>>> import logging\r\n>>> r = logging.makeLogRecord({'msg': 'Message'})\r\n>>> r.msecs\r\n696.0451602935791\r\n```\r\n\r\nThis is \"fixed\" in python 3.10 and 3.11 https://github.com/python/cpython/issues/89047\r\nThey floored `msecs` so it will always never be rounded to `1_000_000`.\r\n```python\r\n>>> import logging\r\n>>> r = logging.makeLogRecord({'msg': 'Message'})\r\n>>> r.msecs\r\n459.0\r\n```\r\n\r\nHowever, since we also support 3.8 and 3.9, I think we should fix this by flooring microsecond as well.\r\n(I don't know how to write test for this case without mocking `time.time()`)",
      "state": "MERGED",
      "createdAt": "2024-01-26T16:05:21Z",
      "updatedAt": "2024-01-27T15:49:52Z",
      "closedAt": "2024-01-27T13:40:31Z",
      "mergedAt": "2024-01-27T13:40:31Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "fix-bug-formatter-round-microsecond-to-1000000",
      "author": {
        "login": "dqkqd"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Update and rename 11861.trivial.rst to 11861.bugfix.rst",
              "committedDate": "2024-01-27T13:22:58Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "CHANGES_REQUESTED",
            "submittedAt": "2024-01-27T11:28:42Z",
            "body": "Other than my comment, could you please also add a changelog entry? Thanks!"
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-27T13:23:33Z",
            "body": "Thanks, appreciate it!\r\n\r\n"
          }
        ]
      }
    },
    {
      "number": 11859,
      "title": "pathlib: speed up `make_numbered_dir` given a large tmp root",
      "body": "The function currently uses `find_suffixes` which iterates the entire directory searching for files with the given suffix. In some cases though, like in pytest's selftest, the directory can get big:\r\n\r\n    $ ls /tmp/pytest-of-ran/pytest-0/\r\n    7686\r\n\r\nand iterating it many times can get slow.\r\n\r\nThis doesn't fix the underlying issue (iterating the directory) but at least speeds it up a bit by using `os.scandir` instead of `path.iterdir`. So `make_numbered_dir` is still slow for pytest's selftests, but reduces ~10s for me.\r\n\r\n<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "MERGED",
      "createdAt": "2024-01-25T17:31:38Z",
      "updatedAt": "2024-01-27T22:05:42Z",
      "closedAt": "2024-01-27T22:05:39Z",
      "mergedAt": "2024-01-27T22:05:39Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "numbered-dir-scandir",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "pathlib: speed up `make_numbered_dir` given a large tmp root\n\nThe function currently uses `find_suffixes` which iterates the entire\ndirectory searching for files with the given suffix. In some cases\nthough, like in pytest's selftest, the directory can get big:\n\n    $ ls /tmp/pytest-of-ran/pytest-0/\n    7686\n\nand iterating it many times can get slow.\n\nThis doesn't fix the underlying issue (iterating the directory) but at\nleast speeds it up a bit by using `os.scandir` instead of\n`path.iterdir`. So `make_numbered_dir` is still slow for pytest's\nselftests, but reduces ~10s for me.",
              "committedDate": "2024-01-25T17:19:02Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-26T00:06:21Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11856,
      "title": "config: use `pluginmanager.unblock` instead of accessing pluggy's internals",
      "body": "The function was added in pluggy 1.4.0.",
      "state": "MERGED",
      "createdAt": "2024-01-24T14:08:24Z",
      "updatedAt": "2024-01-25T08:42:17Z",
      "closedAt": "2024-01-25T08:42:14Z",
      "mergedAt": "2024-01-25T08:42:14Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "pluggy-unblock",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "config: use `pluginmanager.unblock` instead of accessing pluggy's internals\n\nThe function was added in pluggy 1.4.0.",
              "committedDate": "2024-01-25T08:20:44Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-24T17:42:44Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11855,
      "title": "make mypy as strict as possible",
      "body": "<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "CLOSED",
      "createdAt": "2024-01-23T19:42:56Z",
      "updatedAt": "2024-01-23T20:52:52Z",
      "closedAt": "2024-01-23T20:26:56Z",
      "mergedAt": null,
      "isDraft": true,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "make-mypy-as-strict-as-possible",
      "author": {
        "login": "graingert"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "make mypy as strict as possible",
              "committedDate": "2024-01-23T19:41:38Z",
              "author": {
                "name": "Thomas Grainger",
                "email": "tagrain@gmail.com",
                "user": {
                  "login": "graingert"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "graingert"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-23T19:44:42Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-23T20:12:01Z",
            "body": ""
          },
          {
            "author": {
              "login": "graingert"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-23T20:27:09Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11854,
      "title": "runner: inline `call_runtest_hook`",
      "body": "- Reduce the common stacktrace by an entry - this is mostly for benefit of devs looking at crash logs.\r\n\r\n- Reduce 6 slow `ihook` calls per test to 3.\r\n\r\nReplaces #11851.",
      "state": "MERGED",
      "createdAt": "2024-01-22T14:30:25Z",
      "updatedAt": "2024-01-24T08:36:32Z",
      "closedAt": "2024-01-24T08:36:28Z",
      "mergedAt": "2024-01-24T08:36:28Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "runner-inline-2",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "runner: inline `call_runtest_hook`\n\n- Reduce the common stacktrace by an entry - this is mostly for benefit\n  of devs looking at crash logs.\n\n- Reduce 6 slow `ihook` calls per test to 3.",
              "committedDate": "2024-01-22T14:26:55Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-22T14:46:15Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-23T17:53:10Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-23T19:29:43Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-23T19:29:53Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-23T20:34:22Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-24T08:36:21Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11852,
      "title": "build(deps): Bump actions/cache from 3 to 4",
      "body": "Bumps [actions/cache](https://github.com/actions/cache) from 3 to 4.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/actions/cache/releases\">actions/cache's releases</a>.</em></p>\n<blockquote>\n<h2>v4.0.0</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Update action to node20 by <a href=\"https://github.com/takost\"><code>@\u200btakost</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1284\">actions/cache#1284</a></li>\n<li>feat: save-always flag by <a href=\"https://github.com/to-s\"><code>@\u200bto-s</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1242\">actions/cache#1242</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/takost\"><code>@\u200btakost</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/cache/pull/1284\">actions/cache#1284</a></li>\n<li><a href=\"https://github.com/to-s\"><code>@\u200bto-s</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/cache/pull/1242\">actions/cache#1242</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/cache/compare/v3...v4.0.0\">https://github.com/actions/cache/compare/v3...v4.0.0</a></p>\n<h2>v3.3.3</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Cache v3.3.3 by <a href=\"https://github.com/robherley\"><code>@\u200brobherley</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1302\">actions/cache#1302</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/robherley\"><code>@\u200brobherley</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/cache/pull/1302\">actions/cache#1302</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/cache/compare/v3...v3.3.3\">https://github.com/actions/cache/compare/v3...v3.3.3</a></p>\n<h2>v3.3.2</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Fixed readme with new segment timeout values by <a href=\"https://github.com/kotewar\"><code>@\u200bkotewar</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1133\">actions/cache#1133</a></li>\n<li>Readme fixes by <a href=\"https://github.com/kotewar\"><code>@\u200bkotewar</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1134\">actions/cache#1134</a></li>\n<li>Updated description of the lookup-only input for main action by <a href=\"https://github.com/kotewar\"><code>@\u200bkotewar</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1130\">actions/cache#1130</a></li>\n<li>Change two new actions mention as quoted text by <a href=\"https://github.com/bishal-pdMSFT\"><code>@\u200bbishal-pdMSFT</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1131\">actions/cache#1131</a></li>\n<li>Update Cross-OS Caching tips by <a href=\"https://github.com/pdotl\"><code>@\u200bpdotl</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1122\">actions/cache#1122</a></li>\n<li>Bazel example (Take <a href=\"https://redirect.github.com/actions/cache/issues/2\">#2</a>\ufe0f\u20e3) by <a href=\"https://github.com/vorburger\"><code>@\u200bvorburger</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1132\">actions/cache#1132</a></li>\n<li>Remove actions to add new PRs and issues to a project board by <a href=\"https://github.com/jorendorff\"><code>@\u200bjorendorff</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1187\">actions/cache#1187</a></li>\n<li>Consume latest toolkit and fix dangling promise bug by <a href=\"https://github.com/chkimes\"><code>@\u200bchkimes</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1217\">actions/cache#1217</a></li>\n<li>Bump action version to 3.3.2 by <a href=\"https://github.com/bethanyj28\"><code>@\u200bbethanyj28</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1236\">actions/cache#1236</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/vorburger\"><code>@\u200bvorburger</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/cache/pull/1132\">actions/cache#1132</a></li>\n<li><a href=\"https://github.com/jorendorff\"><code>@\u200bjorendorff</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/cache/pull/1187\">actions/cache#1187</a></li>\n<li><a href=\"https://github.com/chkimes\"><code>@\u200bchkimes</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/cache/pull/1217\">actions/cache#1217</a></li>\n<li><a href=\"https://github.com/bethanyj28\"><code>@\u200bbethanyj28</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/cache/pull/1236\">actions/cache#1236</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/cache/compare/v3...v3.3.2\">https://github.com/actions/cache/compare/v3...v3.3.2</a></p>\n<h2>v3.3.1</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Reduced download segment size to 128 MB and timeout to 10 minutes by <a href=\"https://github.com/kotewar\"><code>@\u200bkotewar</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1129\">actions/cache#1129</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/cache/compare/v3...v3.3.1\">https://github.com/actions/cache/compare/v3...v3.3.1</a></p>\n<h2>v3.3.0</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Bug: Permission is missing in cache delete example by <a href=\"https://github.com/kotokaze\"><code>@\u200bkotokaze</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1123\">actions/cache#1123</a></li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/actions/cache/blob/main/RELEASES.md\">actions/cache's changelog</a>.</em></p>\n<blockquote>\n<h1>Releases</h1>\n<h3>3.0.0</h3>\n<ul>\n<li>Updated minimum runner version support from node 12 -&gt; node 16</li>\n</ul>\n<h3>3.0.1</h3>\n<ul>\n<li>Added support for caching from GHES 3.5.</li>\n<li>Fixed download issue for files &gt; 2GB during restore.</li>\n</ul>\n<h3>3.0.2</h3>\n<ul>\n<li>Added support for dynamic cache size cap on GHES.</li>\n</ul>\n<h3>3.0.3</h3>\n<ul>\n<li>Fixed avoiding empty cache save when no files are available for caching. (<a href=\"https://redirect.github.com/actions/cache/issues/624\">issue</a>)</li>\n</ul>\n<h3>3.0.4</h3>\n<ul>\n<li>Fixed tar creation error while trying to create tar with path as <code>~/</code> home folder on <code>ubuntu-latest</code>. (<a href=\"https://redirect.github.com/actions/cache/issues/689\">issue</a>)</li>\n</ul>\n<h3>3.0.5</h3>\n<ul>\n<li>Removed error handling by consuming actions/cache 3.0 toolkit, Now cache server error handling will be done by toolkit. (<a href=\"https://redirect.github.com/actions/cache/pull/834\">PR</a>)</li>\n</ul>\n<h3>3.0.6</h3>\n<ul>\n<li>Fixed <a href=\"https://redirect.github.com/actions/cache/issues/809\">#809</a> - zstd -d: no such file or directory error</li>\n<li>Fixed <a href=\"https://redirect.github.com/actions/cache/issues/833\">#833</a> - cache doesn't work with github workspace directory</li>\n</ul>\n<h3>3.0.7</h3>\n<ul>\n<li>Fixed <a href=\"https://redirect.github.com/actions/cache/issues/810\">#810</a> - download stuck issue. A new timeout is introduced in the download process to abort the download if it gets stuck and doesn't finish within an hour.</li>\n</ul>\n<h3>3.0.8</h3>\n<ul>\n<li>Fix zstd not working for windows on gnu tar in issues <a href=\"https://redirect.github.com/actions/cache/issues/888\">#888</a> and <a href=\"https://redirect.github.com/actions/cache/issues/891\">#891</a>.</li>\n<li>Allowing users to provide a custom timeout as input for aborting download of a cache segment using an environment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MINS</code>. Default is 60 minutes.</li>\n</ul>\n<h3>3.0.9</h3>\n<ul>\n<li>Enhanced the warning message for cache unavailablity in case of GHES.</li>\n</ul>\n<h3>3.0.10</h3>\n<ul>\n<li>Fix a bug with sorting inputs.</li>\n<li>Update definition for restore-keys in README.md</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/actions/cache/commit/13aacd865c20de90d75de3b17ebe84f7a17d57d2\"><code>13aacd8</code></a> Merge pull request <a href=\"https://redirect.github.com/actions/cache/issues/1242\">#1242</a> from to-s/main</li>\n<li><a href=\"https://github.com/actions/cache/commit/53b35c543921fe2e8b288765ff817de9de8d906f\"><code>53b35c5</code></a> Merge branch 'main' into main</li>\n<li><a href=\"https://github.com/actions/cache/commit/65b8989fab3bb394817bdb845a453dff480c2b51\"><code>65b8989</code></a> Merge pull request <a href=\"https://redirect.github.com/actions/cache/issues/1284\">#1284</a> from takost/update-to-node-20</li>\n<li><a href=\"https://github.com/actions/cache/commit/d0be34d54485f31ca2ccbe66e6ea3d96544a807b\"><code>d0be34d</code></a> Fix dist</li>\n<li><a href=\"https://github.com/actions/cache/commit/66cf064d47313d2cccf392d01bd10925da2bd072\"><code>66cf064</code></a> Merge branch 'main' into update-to-node-20</li>\n<li><a href=\"https://github.com/actions/cache/commit/1326563738ddb735c5f2ce85cba8c79f33b728cd\"><code>1326563</code></a> Merge branch 'main' into main</li>\n<li><a href=\"https://github.com/actions/cache/commit/e71876755e268d6cc25a5d3e3c46ae447e35290a\"><code>e718767</code></a> Fix format</li>\n<li><a href=\"https://github.com/actions/cache/commit/01229828ffa049a8dee4db27bcb23ed33f2b451f\"><code>0122982</code></a> Apply workaround for earlyExit</li>\n<li><a href=\"https://github.com/actions/cache/commit/3185ecfd6135856ca6d904ae032cff4f39b8b365\"><code>3185ecf</code></a> Update &quot;only-&quot; actions to node20</li>\n<li><a href=\"https://github.com/actions/cache/commit/25618a0a675e8447e5ffc8ed9b7ddb2aaf927f65\"><code>25618a0</code></a> Bump version</li>\n<li>Additional commits viewable in <a href=\"https://github.com/actions/cache/compare/v3...v4\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2024-01-22T03:57:13Z",
      "updatedAt": "2024-01-22T13:11:10Z",
      "closedAt": "2024-01-22T13:11:09Z",
      "mergedAt": "2024-01-22T13:11:09Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/github_actions/actions/cache-4",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "github_actions"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump actions/cache from 3 to 4\n\nBumps [actions/cache](https://github.com/actions/cache) from 3 to 4.\n- [Release notes](https://github.com/actions/cache/releases)\n- [Changelog](https://github.com/actions/cache/blob/main/RELEASES.md)\n- [Commits](https://github.com/actions/cache/compare/v3...v4)\n\n---\nupdated-dependencies:\n- dependency-name: actions/cache\n  dependency-type: direct:production\n  update-type: version-update:semver-major\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2024-01-22T03:57:12Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11851,
      "title": "runner: inline `call_and_report` and `call_runtest_hook`",
      "body": "- Reduce 6 slow `ihook` calls per test to 1.\r\n\r\n- Remove two stack frames - this is mostly for the benefit of devs looking at crash logs.\r\n\r\nHowever this adds a bit of duplication.\r\n\r\n<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "CLOSED",
      "createdAt": "2024-01-21T20:32:39Z",
      "updatedAt": "2024-01-24T08:37:46Z",
      "closedAt": "2024-01-24T08:37:46Z",
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "CONFLICTING",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "runner-inline",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "runner: inline `call_and_report` and `call_runtest_hook`\n\n- Reduce 6 slow `ihook` calls per test to 1.\n\n- Remove two stack frames - this is mostly for the benefit of devs\n  looking at crash logs.\n\nHowever this adds a bit of duplication.",
              "committedDate": "2024-01-21T19:54:58Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "CHANGES_REQUESTED",
            "submittedAt": "2024-01-22T05:20:05Z",
            "body": "Id prefer if we would pass in hook rather than unrolling this as the logic is quite a pain "
          }
        ]
      }
    },
    {
      "number": 11848,
      "title": "[automated] Update plugin list",
      "body": "[automated] Update plugin list",
      "state": "MERGED",
      "createdAt": "2024-01-21T00:21:08Z",
      "updatedAt": "2024-01-22T13:14:59Z",
      "closedAt": "2024-01-22T13:14:58Z",
      "mergedAt": "2024-01-22T13:14:58Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "update-plugin-list/patch-c3fc717ff",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[automated] Update plugin list",
              "committedDate": "2024-01-21T00:21:06Z",
              "author": {
                "name": "pytest bot",
                "email": "pytestbot@users.noreply.github.com",
                "user": {
                  "login": "pytestbot"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11845,
      "title": "[8.0.x] Escape skip reason in junitxml",
      "body": "Backport of PR #11842 to 8.0.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2024-01-19T01:08:47Z",
      "updatedAt": "2024-01-19T01:26:07Z",
      "closedAt": "2024-01-19T01:26:06Z",
      "mergedAt": "2024-01-19T01:26:06Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "8.0.x",
      "headRefName": "backport-11842-to-8.0.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[8.0.x] Escape skip reason in junitxml",
              "committedDate": "2024-01-19T01:08:46Z",
              "author": {
                "name": "clee2000",
                "email": "44682903+clee2000@users.noreply.github.com",
                "user": {
                  "login": "clee2000"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-19T01:11:44Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11844,
      "title": "delete silly chdir",
      "body": "This line causes the below insane behavior. I hypothesize that it's here for no really good reason.\r\n\r\nhttps://gist.github.com/bukzor/085b1c2bdaa5bc6033db50d718c48bd3\r\n\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n",
      "state": "CLOSED",
      "createdAt": "2024-01-18T22:52:24Z",
      "updatedAt": "2025-02-28T13:33:06Z",
      "closedAt": "2025-02-28T13:33:05Z",
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "patch-1",
      "author": {
        "login": "bukzor"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "status: needs information"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 5
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Merge branch 'main' into patch-1",
              "committedDate": "2024-01-19T17:11:04Z",
              "author": {
                "name": "Buck Evan",
                "email": "workitharder@gmail.com",
                "user": {
                  "login": "bukzor"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Tusenka"
            },
            "state": "APPROVED",
            "submittedAt": "2024-12-21T08:05:06Z",
            "body": ""
          },
          {
            "author": {
              "login": "Tusenka"
            },
            "state": "APPROVED",
            "submittedAt": "2024-12-21T08:07:20Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11843,
      "title": "doc/writing_plugins: correct inaccuracies re. initial conftest loading",
      "body": "I tried to update this doc to match reality, though reality is quite messy...",
      "state": "MERGED",
      "createdAt": "2024-01-18T20:18:56Z",
      "updatedAt": "2024-01-19T12:30:23Z",
      "closedAt": "2024-01-19T12:30:20Z",
      "mergedAt": "2024-01-19T12:30:20Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "writing-plugins",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "doc/writing_plugins: correct inaccuracies re. initial conftest loading",
              "committedDate": "2024-01-18T20:17:55Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-18T22:42:55Z",
            "body": "\ud83d\ude2c "
          }
        ]
      }
    },
    {
      "number": 11842,
      "title": "Escape skip reason in junitxml",
      "body": "<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n\r\nEscape invalid characters in the skip message in junitxml.\r\n\r\nSmall repro:\r\n```\r\nimport pytest\r\n\r\nclass TestA:\r\n    @pytest.mark.skip(\"\\33[31;1madsfsd\\33[0m\")\r\n    def test_a(self):\r\n        assert 2 == 2\r\n```\r\nRun the above via `pytest repro.py --junit-xml=repro.xml`\r\nThe result is (formatted for easier reading):\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<testsuites>\r\n    <testsuite name=\"pytest\" errors=\"0\" failures=\"0\" skipped=\"1\" tests=\"1\" time=\"0.045\"\r\n        timestamp=\"2024-01-18T09:38:22.499385\" hostname=\"csl-mbp\">\r\n        <testcase classname=\"repro.TestA\" name=\"test_a\" time=\"0.000\">\r\n            <skipped type=\"pytest.skip\" message=\"\u001b[31;1mrandom colored skip reason\u001b[0m\">/Users/csl/zzzzzzzz/random-testing/repro.py:4:\r\n                #x1B[31;1mrandom colored skip reason#x1B[0m</skipped>\r\n        </testcase>\r\n    </testsuite>\r\n</testsuites>\r\n```\r\nThere's an invalid XML character (Unicode 0x1b) in the message that prevents me from parsing the XML.\r\nThe output after this change is:\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<testsuites>\r\n    <testsuite name=\"pytest\" errors=\"0\" failures=\"0\" skipped=\"1\" tests=\"1\" time=\"0.037\"\r\n        timestamp=\"2024-01-18T09:39:55.805037\" hostname=\"csl-mbp\">\r\n        <testcase classname=\"repro.TestA\" name=\"test_a\" time=\"0.000\">\r\n            <skipped type=\"pytest.skip\" message=\"#x1B[31;1mrandom colored skip reason#x1B[0m\">/Users/csl/zzzzzzzz/random-testing/repro.py:4:\r\n                #x1B[31;1mrandom colored skip reason#x1B[0m</skipped>\r\n        </testcase>\r\n    </testsuite>\r\n</testsuites>\r\n```\r\n",
      "state": "MERGED",
      "createdAt": "2024-01-18T17:45:01Z",
      "updatedAt": "2024-01-19T01:08:33Z",
      "closedAt": "2024-01-19T01:08:26Z",
      "mergedAt": "2024-01-19T01:08:26Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "patch-1",
      "author": {
        "login": "clee2000"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "typo",
              "committedDate": "2024-01-19T00:52:05Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-19T00:52:47Z",
            "body": "Thanks a lot @clee2000, appreciate it! "
          }
        ]
      }
    },
    {
      "number": 11840,
      "title": "[8.0.x] Properly attach packages to the GH release notes (#11839)",
      "body": "Backport of https://github.com/pytest-dev/pytest/pull/11839.",
      "state": "MERGED",
      "createdAt": "2024-01-17T22:22:45Z",
      "updatedAt": "2024-01-17T23:56:13Z",
      "closedAt": "2024-01-17T23:56:13Z",
      "mergedAt": "2024-01-17T23:56:12Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "8.0.x",
      "headRefName": "backport-11839",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Properly attach packages to the GH release notes (#11839)\n\nFollow up to https://github.com/pytest-dev/pytest/pull/11754, noticed that the latest GitHub release does not contain the attached files.\r\n\r\nOutput log from the action:\r\n\r\n```\r\n\ud83e\udd14 Pattern 'dist/*' does not match any files.\r\n```",
              "committedDate": "2024-01-17T22:22:00Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "nicoddemus@gmail.com",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11839,
      "title": "Properly attach packages to the GH release notes",
      "body": "Follow up to https://github.com/pytest-dev/pytest/pull/11754, noticed that the latest GitHub release does not contain the attached files.\r\n\r\n[Output log](https://github.com/pytest-dev/pytest/actions/runs/7562055008/job/20591844192) from the action:\r\n\r\n```\r\n\ud83e\udd14 Pattern 'dist/*' does not match any files.\r\n```\r\n",
      "state": "MERGED",
      "createdAt": "2024-01-17T21:55:55Z",
      "updatedAt": "2024-01-17T22:20:42Z",
      "closedAt": "2024-01-17T22:11:10Z",
      "mergedAt": "2024-01-17T22:11:10Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "fix-release-notes-attachments",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Properly attach packages to the GH release notes\n\nFollow up to https://github.com/pytest-dev/pytest/pull/11754, noticed that the latest GitHub release does not contain the attached files.\n\nOutput log from the action:\n\n```\n\ud83e\udd14 Pattern 'dist/*' does not match any files.\n```",
              "committedDate": "2024-01-17T21:53:24Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-17T21:57:09Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11838,
      "title": "Prepare release version 8.0.0rc2",
      "body": "(cherry picked from commit 97960bdd148972b2f26bd9b336163e590bbc4c6b)",
      "state": "MERGED",
      "createdAt": "2024-01-17T21:46:13Z",
      "updatedAt": "2024-01-17T22:06:28Z",
      "closedAt": "2024-01-17T21:53:42Z",
      "mergedAt": "2024-01-17T21:53:42Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "cherry-pick-release",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Merge pull request #11835 from pytest-dev/release-8.0.0rc2\n\nPrepare release version 8.0.0rc2\n\n(cherry picked from commit 97960bdd148972b2f26bd9b336163e590bbc4c6b)",
              "committedDate": "2024-01-17T21:45:21Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11837,
      "title": "[8.0.x] testing: temporarily disable test due to hypothesis issue",
      "body": "Backport of PR #11836 to 8.0.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2024-01-17T20:53:31Z",
      "updatedAt": "2024-01-17T21:09:48Z",
      "closedAt": "2024-01-17T21:09:47Z",
      "mergedAt": "2024-01-17T21:09:47Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "8.0.x",
      "headRefName": "backport-11836-to-8.0.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[8.0.x] testing: temporarily disable test due to hypothesis issue",
              "committedDate": "2024-01-17T20:53:29Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-17T20:56:41Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11836,
      "title": "testing: temporarily disable test due to hypothesis issue",
      "body": "Ref: https://github.com/pytest-dev/pytest/pull/11825#issuecomment-1894094641",
      "state": "MERGED",
      "createdAt": "2024-01-17T20:38:22Z",
      "updatedAt": "2024-01-17T20:53:16Z",
      "closedAt": "2024-01-17T20:53:04Z",
      "mergedAt": "2024-01-17T20:53:04Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "hypofix",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[pre-commit.ci] auto fixes from pre-commit.com hooks\n\nfor more information, see https://pre-commit.ci",
              "committedDate": "2024-01-17T20:39:42Z",
              "author": {
                "name": "pre-commit-ci[bot]",
                "email": "66853113+pre-commit-ci[bot]@users.noreply.github.com",
                "user": {
                  "login": "pre-commit-ci[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11835,
      "title": "Prepare release version 8.0.0rc2",
      "body": "",
      "state": "MERGED",
      "createdAt": "2024-01-17T20:25:59Z",
      "updatedAt": "2024-01-17T21:44:02Z",
      "closedAt": "2024-01-17T21:44:02Z",
      "mergedAt": "2024-01-17T21:44:02Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "8.0.x",
      "headRefName": "release-8.0.0rc2",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Prepare release version 8.0.0rc2",
              "committedDate": "2024-01-17T21:10:03Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11834,
      "title": "Prepare release 7.5.0rc2",
      "body": "Created by the [prepare release pr](https://github.com/pytest-dev/pytest/actions/workflows/prepare-release-pr.yml) workflow.\n\nOnce all builds pass and it has been **approved** by one or more maintainers, start the [deploy](https://github.com/pytest-dev/pytest/actions/workflows/deploy.yml) workflow, using these parameters:\n\n* `Use workflow from`: `release-7.5.0rc2`.\n* `Release version`: `7.5.0rc2`.\n\nOr execute on the command line:\n\n```console\ngh workflow run deploy.yml -r release-7.5.0rc2 -f version=7.5.0rc2\n```\n\nAfter the workflow has been approved by a core maintainer, the package will be uploaded to PyPI automatically.\n",
      "state": "CLOSED",
      "createdAt": "2024-01-17T19:46:32Z",
      "updatedAt": "2024-01-17T21:33:15Z",
      "closedAt": "2024-01-17T19:47:22Z",
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "8.0.x",
      "headRefName": "release-7.5.0rc2",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Prepare release version 7.5.0rc2",
              "committedDate": "2024-01-17T19:46:31Z",
              "author": {
                "name": "pytest bot",
                "email": "pytestbot@gmail.com",
                "user": {
                  "login": "pytestbot"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11833,
      "title": "Don't add fixture finalizer if the value is cached",
      "body": "Fixes #1489 - see https://github.com/pytest-dev/pytest/issues/1489#issuecomment-1894057766 for explanation of current behavior.\r\n\r\nIt's possible this might break test setups that (inadvertently) relies on the teardown order being as it is, but I think it's an improvement on the status quo.\r\n\r\nThe code for setup & teardown of fixtures was very hard to parse, and I added a couple comments and fixed what I think are outdated and now incorrect docstrings. But feels like a more thorough cleanup could be warranted. I have not looked into `git blame` to see if/when/how stuff got changed.\r\n\r\nRemaining questions:\r\n* Should finalizer be scheduled if the cached result is an exception? It previously was, I probably lean no. The change does not affect any current tests, but I could maybe write a test that asserts the behavior.\r\n* I never managed to figure out why fixtures adds its finalizer to all fixtures it depends on, nor if this could cause setup/teardown ordering failures (I tried writing tests that would trigger it, but didn't manage to). There's definitely reasons for it though, lots of stuff breaks if I remove that code.\r\n  * I tested moving the loop of adding the finalizer to fixtures after getting the cached value, which could plausibly remove some extraneous finalizers getting added, and that affected the result of `test_issue_519` #519 (teardown of `('test_one[arg1v2-arg2v1]', 'fix2', 'arg2v1'),` got moved one step earlier) and a similar thing in `test_parametrization_setup_teardown_ordering` (`step1-2` happening before `setup 2`), but I haven't dug into why or if/how it's bad.\r\n  * saving the `functools.partial` call is mostly to make it more visible that it's done in several places in the function, but am down for skipping it.\r\n* should I just make `execute` return `None`?",
      "state": "MERGED",
      "createdAt": "2024-01-17T15:30:42Z",
      "updatedAt": "2024-09-27T10:19:38Z",
      "closedAt": "2024-03-16T21:45:56Z",
      "mergedAt": "2024-03-16T21:45:56Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "teardown_fixture_order",
      "author": {
        "login": "jakkdl"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 23
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[pre-commit.ci] auto fixes from pre-commit.com hooks\n\nfor more information, see https://pre-commit.ci",
              "committedDate": "2024-03-16T21:23:34Z",
              "author": {
                "name": "pre-commit-ci[bot]",
                "email": "66853113+pre-commit-ci[bot]@users.noreply.github.com",
                "user": {
                  "login": "pre-commit-ci[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-09T16:17:13Z",
            "body": "The overall implementation looks like an improvement\n\nI'm slightly worried as we currently express the logic in code instead of a data structure\n\nHowever at first glance the better control looks reasonable "
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-09T16:19:01Z",
            "body": "I believe we need to figure tests that include cached fixtures with failures "
          },
          {
            "author": {
              "login": "jakkdl"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-12T13:37:08Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-12T13:40:20Z",
            "body": ""
          },
          {
            "author": {
              "login": "jakkdl"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-13T12:34:20Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-13T13:16:19Z",
            "body": ""
          },
          {
            "author": {
              "login": "jakkdl"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-13T14:07:42Z",
            "body": ""
          },
          {
            "author": {
              "login": "jakkdl"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-23T11:07:45Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-03-02T22:20:08Z",
            "body": "Not a real review yet, just some quick comments"
          },
          {
            "author": {
              "login": "jakkdl"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-03-03T10:05:32Z",
            "body": ""
          },
          {
            "author": {
              "login": "jakkdl"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-03-03T10:09:53Z",
            "body": ""
          },
          {
            "author": {
              "login": "jakkdl"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-03-03T10:20:04Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-03-03T11:19:05Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-03-03T11:24:31Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-03-03T11:26:37Z",
            "body": ""
          },
          {
            "author": {
              "login": "jakkdl"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-03-03T12:09:13Z",
            "body": ""
          },
          {
            "author": {
              "login": "jakkdl"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-03-03T12:11:39Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-03-14T19:55:47Z",
            "body": "Thanks a lot for the PR @jakkdl, if we can get it merged it would be a very nice simplification.\r\n\r\nSo here is my understanding:\r\n\r\n- In issue #1489 we're seeing bad fixture teardown ordering.\r\n\r\n- You've analyzed the situation and concluded that we're adding finalizers too eagerly, particularly what's causing the issue is that we're adding a finalizer even when the fixturedef value is already cached.\r\n\r\n- Your PR makes it so that we don't add a finalizer when the fixture is cached.\r\n\r\n- In the process you've also removed code that was added as a fix for #1895 (the `SubRequest._schedule_finalizers` code), because it is seemingly no longer needed (indeed, the regression test `test_getfixturevalue_teardown` passes).\r\n\r\nSo for me as a reviewer there are two questions:\r\n\r\n- Is the addfinalizer in the cached case needed for correctness?\r\n- Is the removal of the #1895 code OK?\r\n\r\n### Is the removal of the #1895 code OK?\r\n\r\nFirst I'm looking at the 2nd question since it's easier to examine. Here is the regression test for #1895:\r\n\r\n```py\r\nimport pytest\r\n\r\n@pytest.fixture(scope='session')\r\ndef resource():\r\n    r = ['value']\r\n    yield r\r\n    r.pop()\r\n\r\n@pytest.fixture(scope='session')\r\ndef inner(request):\r\n    resource = request.getfixturevalue('resource')\r\n    assert resource == ['value']\r\n    yield\r\n    assert resource == ['value']\r\n\r\ndef test_inner(inner):\r\n    pass\r\n\r\ndef test_func(resource):\r\n    pass\r\n```\r\n\r\nI added some prints in pytest to see what's going on. Here is the output *before* this PR:\r\n\r\n```py\r\nx.py::test_inner PASSED\r\nTEARDOWN <Function test_inner>\r\n\r\nx.py::test_func PASSED\r\nTEARDOWN <Function test_func>\r\n\r\nTEARDOWN <Module x.py>\r\n\r\nTEARDOWN <Dir pytest>\r\n\r\nTEARDOWN <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=2>\r\n\r\nFIXTURE FINISH <FixtureDef argname='resource' scope='session' baseid='x.py'> <SubRequest 'resource' for <Function test_func>>\r\n\r\nFIXTURE FINISH <FixtureDef argname='inner' scope='session' baseid='x.py'> <SubRequest 'inner' for <Function test_inner>>\r\n\r\nFIXTURE FINISH <FixtureDef argname='inner' scope='session' baseid='x.py'> <SubRequest 'inner' for <Function test_inner>>\r\n\r\nFIXTURE FINISH <FixtureDef argname='resource' scope='session' baseid='x.py'> <SubRequest 'resource' for <Function test_inner>>\r\n```\r\n\r\nAfter the PR, the output is (diff):\r\n\r\n```diff\r\n@@ -19,10 +19,6 @@\r\n \r\n TEARDOWN <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=2>\r\n \r\n-FIXTURE FINISH <FixtureDef argname='resource' scope='session' baseid='x.py'> <SubRequest 'resource' for <Function test_func>>\r\n-\r\n-FIXTURE FINISH <FixtureDef argname='inner' scope='session' baseid='x.py'> <SubRequest 'inner' for <Function test_inner>>\r\n-\r\n FIXTURE FINISH <FixtureDef argname='inner' scope='session' baseid='x.py'> <SubRequest 'inner' for <Function test_inner>>\r\n \r\n FIXTURE FINISH <FixtureDef argname='resource' scope='session' baseid='x.py'> <SubRequest 'resource' for <Function test_inner>>\r\n```\r\n\r\nThe optimistic interpretation of this is that before #1895 fix, we've been adding a useless finalizer in the cached case, and the #1895 fix fixed this by adding *another*  useless finalizer to beat the previous useless finalizer. And this PR fixes it by not adding the useless finalizer in the first place.\r\n\r\nThe less optimistic interpretation is that the \"useless\" finalizer is not useless and is needed for correctness in some odd case, and then this PR causes some regression.\r\n\r\nSo really the second question reduces down to the first question.\r\n\r\n### Is the addfinalizer in the cached case needed for correctness?\r\n\r\nUnfortunately I'm out of time for today to investigate this question, so this ends with a cliffhanger..."
          },
          {
            "author": {
              "login": "jakkdl"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-03-15T11:35:18Z",
            "body": ""
          },
          {
            "author": {
              "login": "jakkdl"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-03-15T11:46:00Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11832,
      "title": "Mark some xfails from #10042 as non-strict",
      "body": "While debugging https://github.com/pytest-dev/pytest/pull/11825#issuecomment-1894094641 in hypothesis, I was sidetracked by some `xfail`s that unexpectedly passed. Based on https://github.com/pytest-dev/pytest/issues/10042#issuecomment-1237132867 and https://github.com/pytest-dev/pytest/issues/10042#issuecomment-1274655510 it looks like these particular ones should not fail the test suite if they unexpectedly pass.\r\n\r\nThis trivial change has no linked issue, and does not require a changelog entry or AUTHORS addition.\r\n\r\n\r\n<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "MERGED",
      "createdAt": "2024-01-17T15:12:59Z",
      "updatedAt": "2024-01-26T09:06:27Z",
      "closedAt": "2024-01-22T21:29:15Z",
      "mergedAt": "2024-01-22T21:29:15Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "mark-xfails-non-strict",
      "author": {
        "login": "jobh"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Mark some xfails from #10042 as non-strict",
              "committedDate": "2024-01-22T21:11:57Z",
              "author": {
                "name": "Joachim B Haga",
                "email": "jobh@simula.no",
                "user": {
                  "login": "jobh"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-22T21:12:48Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11831,
      "title": "[8.0.x] avoid using __file__ in pytest_plugin_registered as can be wrong on Windows",
      "body": "(Manual) Backport PR #11825 to 8.0.x.",
      "state": "MERGED",
      "createdAt": "2024-01-17T13:43:13Z",
      "updatedAt": "2024-01-21T02:44:21Z",
      "closedAt": "2024-01-17T19:34:57Z",
      "mergedAt": "2024-01-17T19:34:57Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "8.0.x",
      "headRefName": "backport-11825-to-8.0.x",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[8.0.x] avoid using __file__ in pytest_plugin_registered as can be wrong on Windows",
              "committedDate": "2024-01-17T13:40:14Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11830,
      "title": "[DOCS] Clarify temporary directory location and retention",
      "body": "<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [X] Include documentation when adding new features.\r\n- [X] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [X] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [X] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n\r\nFixes #11789 and #11790 ",
      "state": "MERGED",
      "createdAt": "2024-01-17T12:06:12Z",
      "updatedAt": "2024-01-18T11:55:45Z",
      "closedAt": "2024-01-18T10:21:50Z",
      "mergedAt": "2024-01-18T10:21:50Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "docs/tmp-dir-retention",
      "author": {
        "login": "faph"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Add changelog and authors entry for issue #11790",
              "committedDate": "2024-01-18T09:21:42Z",
              "author": {
                "name": "faph",
                "email": "faph@users.noreply.github.com",
                "user": {
                  "login": "faph"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-17T12:29:44Z",
            "body": ""
          },
          {
            "author": {
              "login": "faph"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-17T12:53:10Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-18T10:21:22Z",
            "body": "Thanks!"
          }
        ]
      }
    },
    {
      "number": 11826,
      "title": "Prefer using the invocation dir over CWD",
      "body": "We should aim to remove all `cwd()` calls except one (for the invocation dir), otherwise things will go bad if the working directory changes. Use the invocation dir instead.",
      "state": "MERGED",
      "createdAt": "2024-01-16T20:08:11Z",
      "updatedAt": "2024-01-18T17:02:41Z",
      "closedAt": "2024-01-18T17:02:38Z",
      "mergedAt": "2024-01-18T17:02:38Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "no-cwd",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "python: use invocation dir instead of cwd in fixture-printing code\n\nWe should aim to remove all `cwd()` calls except one, otherwise things\nwill go bad if the working directory changes. Use the invocation dir\ninstead.",
              "committedDate": "2024-01-18T10:35:32Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-17T10:40:49Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-17T11:29:39Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-17T11:32:00Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-17T11:33:28Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-17T11:58:41Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-17T13:36:34Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-17T13:37:16Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-17T13:53:06Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-17T13:53:32Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11825,
      "title": "avoid using __file__ in pytest_plugin_registered as can be wrong on Windows",
      "body": "<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n\r\ncloses https://github.com/pytest-dev/pytest/issues/11816\r\n\r\nAlternative fix to https://github.com/pytest-dev/pytest/pull/11821.\r\n\r\nThe plugin name is equal to the path for conftest plugins (suggested in https://github.com/pytest-dev/pytest/issues/11816#issuecomment-1893364761). Use that instead of `plugin.__file__`.\r\n\r\nTest with the h5py CI that was broken by the issue: https://github.com/h5py/h5py/pull/2370\r\n\r\nAnother way of testing this MR:\r\n\r\n```\r\npython -m pip install \"ewokscore==0.7.1\" matplotlib ipykernel^\r\n    git+https://github.com/woutdenolf/pytest.git@fix_missing_fixture_issue --no-cache\r\npython -m pytest -v --pyargs ewokscore.tests\r\n```\r\n",
      "state": "MERGED",
      "createdAt": "2024-01-16T14:44:40Z",
      "updatedAt": "2024-01-17T13:29:37Z",
      "closedAt": "2024-01-17T13:29:29Z",
      "mergedAt": "2024-01-17T13:29:29Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "fix_missing_fixture_issue",
      "author": {
        "login": "woutdenolf"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 4
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "fixtures: avoid slow `pm.get_name(plugin)` call by using the new `plugin_name` hook parameter",
              "committedDate": "2024-01-17T13:06:45Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "woutdenolf"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-16T15:12:45Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-16T15:30:58Z",
            "body": "Yep, exactly, this LGTM.\r\n\r\nTest failures seem unrelated. \"hypothesis.errors.HypothesisSideeffectWarning: Slow code in plugin: avoid lazy evaluation of text() at import time!\" never seen this before. Unless the `get_name` slowness is actually the culprit... I will re-run the jobs later.\r\n\r\nAs for optimizing the `get_name` call, I can do it in a separate PR, unless you want to do it here already. The best approach I think is to add a `plugin_name` parameter to the `pytest_plugin_registered` hook."
          }
        ]
      }
    },
    {
      "number": 11824,
      "title": "[7.4.x] doc: Remove sold out training",
      "body": "Backport of PR #11823 to 7.4.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2024-01-16T13:53:36Z",
      "updatedAt": "2024-01-16T14:07:27Z",
      "closedAt": "2024-01-16T14:07:26Z",
      "mergedAt": "2024-01-16T14:07:26Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "The-Compiler"
      },
      "baseRefName": "7.4.x",
      "headRefName": "backport-11823-to-7.4.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[7.4.x] doc: Remove sold out training",
              "committedDate": "2024-01-16T13:53:34Z",
              "author": {
                "name": "Florian Bruhin",
                "email": "me@the-compiler.org",
                "user": {
                  "login": "The-Compiler"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "The-Compiler"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-16T13:54:05Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11823,
      "title": "doc: Remove sold out training",
      "body": "Apologies for the PR churn - only now Python Academy told me they will remove the sold out training from their website, so it makes sense to remove it on pytest.org too :sweat_smile: ",
      "state": "MERGED",
      "createdAt": "2024-01-16T10:01:04Z",
      "updatedAt": "2024-02-05T07:14:51Z",
      "closedAt": "2024-01-16T13:53:10Z",
      "mergedAt": "2024-01-16T13:53:10Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "The-Compiler"
      },
      "baseRefName": "main",
      "headRefName": "training-update-2024-01-2",
      "author": {
        "login": "The-Compiler"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: docs"
          },
          {
            "name": "needs backport"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "doc: Remove sold out training",
              "committedDate": "2024-01-16T10:00:13Z",
              "author": {
                "name": "Florian Bruhin",
                "email": "me@the-compiler.org",
                "user": {
                  "login": "The-Compiler"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-16T12:31:49Z",
            "body": "Congratulations!"
          }
        ]
      }
    },
    {
      "number": 11822,
      "title": "hookspec: minor doc tweaks",
      "body": "These are commits extracted from #9496",
      "state": "MERGED",
      "createdAt": "2024-01-15T21:54:54Z",
      "updatedAt": "2024-01-16T16:34:39Z",
      "closedAt": "2024-01-16T16:34:34Z",
      "mergedAt": "2024-01-16T16:34:34Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "doc-hookspec",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "hookspec: modernize a reference",
              "committedDate": "2024-01-15T21:47:19Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-16T13:24:10Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11821,
      "title": "module __file__ attribute is not the canonical path",
      "body": "<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n\r\ncloses #11816\r\n\r\n# What\r\n\r\nUndo https://github.com/pytest-dev/pytest/pull/11708 and replace it will a more general fix of `anymodule.__file__` not having the right casing.\r\n\r\nThis fails on Windows (python 3.8, pytest 8.0.0rc2):\r\n\r\n```\r\npython -m pip install \"ewokscore==0.7.1\" matplotlib ipykernel^\r\n    git+https://github.com/pytest-dev/pytest.git@b0c7f923aa39f0765425c367a02f53b1d97915f6 --no-cache\r\npython -m pytest -v --pyargs ewokscore.tests\r\n```\r\n\r\nThis MR fixes it:\r\n\r\n```\r\npython -m pip install \"ewokscore==0.7.1\" matplotlib ipykernel^\r\n    git+https://github.com/woutdenolf/pytest.git@module_file_resolve --no-cache\r\npython -m pytest -v --pyargs ewokscore.tests\r\n```\r\n\r\nTest with the h5py CI that was broken by the issue: https://github.com/h5py/h5py/pull/2368\r\n\r\n# Notes\r\n\r\n* we need to use `realpath`, `abspath` is not enough: https://github.com/pytest-dev/pytest/pull/11821#issuecomment-1892792126\r\n* it seems we need to preserve symlinks: https://github.com/pytest-dev/pytest/pull/6523\r\n* the behavior of `TestPytestPluginInteractions.test_conftestpath_case_sensitivity` is expected to change (https://github.com/pytest-dev/pytest/pull/11708/files#r1447814841) but this MR changes it in a way that was not intended (`config.pluginmanager.get_plugin` returns `None` when the string case is not the real path case)\r\n",
      "state": "CLOSED",
      "createdAt": "2024-01-15T21:00:17Z",
      "updatedAt": "2024-01-17T16:26:19Z",
      "closedAt": "2024-01-17T16:26:18Z",
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "CONFLICTING",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "module_file_resolve",
      "author": {
        "login": "woutdenolf"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "module __file__ attribute does not have the right casing",
              "committedDate": "2024-01-16T12:23:20Z",
              "author": {
                "name": "woutdenolf",
                "email": "woutdenolf@users.sf.net",
                "user": {
                  "login": "woutdenolf"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11820,
      "title": "[7.4.x] doc: Update training dates and add pytest sprint",
      "body": "Backport of PR #11819 to 7.4.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2024-01-15T20:04:34Z",
      "updatedAt": "2024-01-15T20:18:32Z",
      "closedAt": "2024-01-15T20:18:32Z",
      "mergedAt": "2024-01-15T20:18:32Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "The-Compiler"
      },
      "baseRefName": "7.4.x",
      "headRefName": "backport-11819-to-7.4.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[7.4.x] doc: Update training dates and add pytest sprint",
              "committedDate": "2024-01-15T20:04:32Z",
              "author": {
                "name": "Florian Bruhin",
                "email": "me@the-compiler.org",
                "user": {
                  "login": "The-Compiler"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "The-Compiler"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-15T20:05:02Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11819,
      "title": "doc: Update training dates and add pytest sprint",
      "body": "The one in March is fully booked apparently! Still leaving it in for now in case there are any cancellations or anything - but we decided to go for a second date in June, and also already announce the one for 2025.\r\n\r\nFinally, I also added a link to the sprint discussion and date poll, in the hope of getting some more attention to it.",
      "state": "MERGED",
      "createdAt": "2024-01-15T19:11:01Z",
      "updatedAt": "2024-02-05T06:55:54Z",
      "closedAt": "2024-01-15T20:04:08Z",
      "mergedAt": "2024-01-15T20:04:08Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "The-Compiler"
      },
      "baseRefName": "main",
      "headRefName": "training-update-2024-01",
      "author": {
        "login": "The-Compiler"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: docs"
          },
          {
            "name": "needs backport"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "doc: Update training dates and add pytest sprint",
              "committedDate": "2024-01-15T15:01:13Z",
              "author": {
                "name": "Florian Bruhin",
                "email": "me@the-compiler.org",
                "user": {
                  "login": "The-Compiler"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-15T19:44:18Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11818,
      "title": "fix #11797: be more lenient on SequenceLike approx",
      "body": "this needs a validation as it allows partially implemented sequences\r\n\r\ncloses #11797 \r\n\r\nthis changes the recursive map of approx to accept all sequences (just like approx)\r\ni would like to gather feedback form @nicoddemus and @Zac-HD on whether to accept the recursion in general,\r\nor if we ought to limit it by changing the toplevel call in ApproxSequenceLike to a listcomp operating only on the elements of the sequence\r\n",
      "state": "MERGED",
      "createdAt": "2024-01-15T11:24:29Z",
      "updatedAt": "2024-06-19T09:26:02Z",
      "closedAt": "2024-06-19T09:25:55Z",
      "mergedAt": "2024-06-19T09:25:55Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "RonnyPfannschmidt"
      },
      "baseRefName": "main",
      "headRefName": "ronny/issue-11797-approx-sequence-like",
      "author": {
        "login": "RonnyPfannschmidt"
      },
      "assignees": {
        "nodes": [
          {
            "login": "RonnyPfannschmidt"
          }
        ]
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 6
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "fix #11797: be more lenient on SequenceLike approx\n\nthis needs a validation as it allows partially implemented sequences",
              "committedDate": "2024-06-18T15:01:24Z",
              "author": {
                "name": "Ronny Pfannschmidt",
                "email": "opensource@ronnypfannschmidt.de",
                "user": {
                  "login": "RonnyPfannschmidt"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-12T14:11:05Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-12T14:11:08Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-02-12T14:55:56Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11817,
      "title": "config: stop using exception triplets in `ConftestImportError`",
      "body": "In recent python versions all of the info is on the exception object itself so no reason to deal with the annoying tuple.",
      "state": "MERGED",
      "createdAt": "2024-01-15T07:49:40Z",
      "updatedAt": "2024-01-15T12:07:11Z",
      "closedAt": "2024-01-15T11:26:47Z",
      "mergedAt": "2024-01-15T11:26:47Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "conftesterror-cleanup",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "config: stop using exception triplets in `ConftestImportError`\n\nIn recent python versions all of the info is on the exception object\nitself so no reason to deal with the annoying tuple.",
              "committedDate": "2024-01-15T07:47:55Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-15T10:45:47Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-15T11:32:54Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-15T12:07:11Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11815,
      "title": "nodes: rename `iterparents()` -> `iter_parents()`",
      "body": "After the fact I remembered that there is `node.iter_markers()`, so let's be consistent with that rather than with `listchain()`.",
      "state": "MERGED",
      "createdAt": "2024-01-14T13:19:21Z",
      "updatedAt": "2024-01-15T07:47:02Z",
      "closedAt": "2024-01-15T07:47:00Z",
      "mergedAt": "2024-01-15T07:47:00Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "iter_parents-rename",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "nodes: rename `iterparents()` -> `iter_parents()`\n\nAfter the fact I remembered there is `node.iter_markers()` so let's be\nconsistent with that rather than with `listchain()`.",
              "committedDate": "2024-01-14T13:17:41Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-14T15:36:28Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11814,
      "title": "main,python: move `__pycache__` ignore to `pytest_ignore_collect`",
      "body": "Follow up on https://github.com/pytest-dev/pytest/pull/11646#discussion_r1412155970\r\n\r\nThis removes one thing that directory collectors need to worry about.\r\n\r\nThis adds one hook dispatch per `__pycache__` file, but I think it's worth it for consistency.\r\n\r\n<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "MERGED",
      "createdAt": "2024-01-14T13:14:33Z",
      "updatedAt": "2024-01-15T08:57:44Z",
      "closedAt": "2024-01-14T16:26:34Z",
      "mergedAt": "2024-01-14T16:26:34Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "RonnyPfannschmidt"
      },
      "baseRefName": "main",
      "headRefName": "pycache-ignore-collect",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "main,python: move `__pycache__` ignore to `pytest_ignore_collect`\n\nThis removes one thing that directory collectors need to worry about.\n\nThis adds one hook dispatch per `__pycache__` file, but I think it's\nworth it for consistency.",
              "committedDate": "2024-01-14T13:05:15Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-14T15:37:08Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11813,
      "title": "[8.0.x] Improve assert mod not in mods error message",
      "body": "Backport of PR #11795 to 8.0.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2024-01-14T11:39:35Z",
      "updatedAt": "2024-01-14T11:55:58Z",
      "closedAt": "2024-01-14T11:55:57Z",
      "mergedAt": "2024-01-14T11:55:57Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "8.0.x",
      "headRefName": "backport-11795-to-8.0.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[8.0.x] Improve assert mod not in mods error message",
              "committedDate": "2024-01-14T11:39:34Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-14T11:40:31Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11812,
      "title": "terminal: include markers in `--collect-only` output",
      "body": "Closes #1509\r\n\r\nNote that I haven't done these yet:\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable. (I've updated the tests so that they should pass but new tests should be added)\r\n\r\nAs I have a few questions about how this should work and intend this PR to be a jumping off point for a conversation (as per @RonnyPfannschmidt 's suggestion in #1509).\r\n\r\nMy questions are:\r\n\r\n- currently this will only display when `--verbosity=-1`. On one hand this feels reasonable as that outputs one test per line and for grepping purposes that makes most sense. However it feels then a bit weird that it's not included in more verbose levels of `collect-only`. Though having the marks in an output format where each test is multiple lines makes is kinda annoying from the POV of grepping... Maybe a new flag could be added (e.g. `--collect-only-include-markers`)? This seems a little clunky TBH though. Ultimately if we want to consume the output of `--collect-only` programmatically then I think some formal structured data output makes most sense (e.g. json) but that's quite a bit more work than what I did here.\r\n- currently I guess this could be considered a breaking change as it changes output (but I suppose many people aren't relying on that?). I anyway included this as an improvement in the changelog for the time being.\r\n",
      "state": "OPEN",
      "createdAt": "2024-01-14T09:42:56Z",
      "updatedAt": "2024-01-14T12:27:01Z",
      "closedAt": null,
      "mergedAt": null,
      "isDraft": true,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "add_marks_to_collect_only_summary",
      "author": {
        "login": "cj-timothy-sampson"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "terminal: include markers in `--collect-only` output\n\nCloses #1509",
              "committedDate": "2024-01-14T09:31:46Z",
              "author": {
                "name": "Tim Sampson",
                "email": "timothy.sampson@cujo.com",
                "user": {
                  "login": "cj-timothy-sampson"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11811,
      "title": "[automated] Update plugin list",
      "body": "[automated] Update plugin list",
      "state": "MERGED",
      "createdAt": "2024-01-14T00:20:53Z",
      "updatedAt": "2024-01-14T04:04:54Z",
      "closedAt": "2024-01-14T04:04:54Z",
      "mergedAt": "2024-01-14T04:04:53Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "update-plugin-list/patch-e403bbf1a",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[automated] Update plugin list",
              "committedDate": "2024-01-14T00:20:52Z",
              "author": {
                "name": "pytest bot",
                "email": "pytestbot@users.noreply.github.com",
                "user": {
                  "login": "pytestbot"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11810,
      "title": "[8.0.x] FIX key formating divergence when inspecting plugin dictionary.",
      "body": "Backport of PR #11708 to 8.0.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2024-01-13T19:46:09Z",
      "updatedAt": "2024-01-13T21:02:21Z",
      "closedAt": "2024-01-13T21:02:20Z",
      "mergedAt": "2024-01-13T21:02:20Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "8.0.x",
      "headRefName": "backport-11708-to-8.0.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[8.0.x] FIX key formating divergence when inspecting plugin dictionary.",
              "committedDate": "2024-01-13T19:46:07Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-13T21:02:08Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11808,
      "title": "doctest: remove special conftest handling",
      "body": "(Diff better viewed ignoring whitespace)\r\n\r\nSince e1c66ab0ad8eda13e5552dfc939e07d7290ecd39, conftest loading is handled at the directory level before sub-nodes are collected, so there is no need for the doctest plugin to handle it specially.\r\n\r\nThis was probably the case even before e1c66ab0ad8eda13e5552dfc939e07d7290ecd39, but I haven't verified this.\r\n\r\n<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "MERGED",
      "createdAt": "2024-01-13T09:21:23Z",
      "updatedAt": "2024-01-13T17:50:23Z",
      "closedAt": "2024-01-13T17:50:20Z",
      "mergedAt": "2024-01-13T17:50:20Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "doctest-conftest",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "doctest: remove special conftest handling\n\n(Diff better viewed ignoring whitespace)\n\nSince e1c66ab0ad8eda13e5552dfc939e07d7290ecd39, conftest loading is\nhandled at the directory level before sub-nodes are collected, so there\nis no need for the doctest plugin to handle it specially.\n\nThis was probably the case even before\ne1c66ab0ad8eda13e5552dfc939e07d7290ecd39, but I haven't verified this.",
              "committedDate": "2024-01-13T09:18:41Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-13T12:22:27Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11804,
      "title": "closes: 10865 Fix muted exception",
      "body": "closes #10865\r\n\r\n<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [X ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [X ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ X] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "MERGED",
      "createdAt": "2024-01-12T07:00:58Z",
      "updatedAt": "2024-02-08T02:09:00Z",
      "closedAt": "2024-02-08T00:47:56Z",
      "mergedAt": "2024-02-08T00:47:56Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Zac-HD"
      },
      "baseRefName": "main",
      "headRefName": "feature/issue-10865",
      "author": {
        "login": "whysage"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "feat: 10865 fix conflict",
              "committedDate": "2024-02-05T17:02:40Z",
              "author": {
                "name": "Volodymyr Kochetkov",
                "email": "whysages@gmail.com",
                "user": {
                  "login": "whysage"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Zac-HD"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-25T05:32:23Z",
            "body": "Thanks for volunteering to take this on, @whysage!  The implementation looks good; I've just suggested a tweak to the message and a test approach which I hope will get us full coverage of the diff."
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "DISMISSED",
            "submittedAt": "2024-01-27T11:50:25Z",
            "body": "Thanks @whysage! \r\n\r\nLeft a few comments as well. \ud83d\udc4d "
          },
          {
            "author": {
              "login": "whysage"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-28T13:32:40Z",
            "body": ""
          },
          {
            "author": {
              "login": "whysage"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-28T13:32:48Z",
            "body": ""
          },
          {
            "author": {
              "login": "whysage"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-28T13:33:03Z",
            "body": ""
          },
          {
            "author": {
              "login": "whysage"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-28T13:33:08Z",
            "body": ""
          },
          {
            "author": {
              "login": "Zac-HD"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-08T00:47:12Z",
            "body": "Looks great!  Thanks for bearing with us through the process @whysage, we really appreciate your contribution \ud83e\udd70 "
          }
        ]
      }
    },
    {
      "number": 11803,
      "title": "Add note about package scope",
      "body": "The behavior of package scope is surprising to some  (as seen by related questions on SO), this note should clarify it a bit.\r\n\r\nSee for example [this question](https://stackoverflow.com/questions/77749958/why-isnt-my-fixture-created-once-per-package-with-the-package-scope) which gave me the idea (not the first of this kind).\r\n\r\nI guess the change is trivial enough to not require an entry in the release notes.\r\n\r\n<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "MERGED",
      "createdAt": "2024-01-11T18:06:37Z",
      "updatedAt": "2024-01-12T20:15:34Z",
      "closedAt": "2024-01-12T20:15:34Z",
      "mergedAt": "2024-01-12T20:15:34Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "package-scope-note",
      "author": {
        "login": "mrbean-bremen"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Clarify package scope\n\nThe behavior of package scope is surprising to some\n(as seen by related questions on SO), this should clarify it a bit.",
              "committedDate": "2024-01-12T19:03:30Z",
              "author": {
                "name": "mrbean-bremen",
                "email": "mrbean-bremen@users.noreply.github.com",
                "user": {
                  "login": "mrbean-bremen"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-11T21:51:32Z",
            "body": ""
          },
          {
            "author": {
              "login": "mrbean-bremen"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-12T17:44:00Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-12T20:15:17Z",
            "body": "Thanks @mrbean-bremen!"
          }
        ]
      }
    },
    {
      "number": 11801,
      "title": "nodes: add `Node.iterchain()` function",
      "body": "This is a useful addition to the existing `listchain`. While `listchain` returns top-to-bottom, `iterchain` is bottom-to-top and doesn't require an internal full iteration + `reverse`.\r\n\r\nFollow up on https://github.com/pytest-dev/pytest/pull/11785#discussion_r1444663550",
      "state": "MERGED",
      "createdAt": "2024-01-11T10:00:21Z",
      "updatedAt": "2024-01-12T09:01:52Z",
      "closedAt": "2024-01-12T09:01:49Z",
      "mergedAt": "2024-01-12T09:01:49Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "node-iterchain",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 5
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "nodes: add `Node.iterparents()` function\n\nThis is a useful addition to the existing `listchain`. While `listchain`\nreturns top-to-bottom, `iterparents` is bottom-to-top and doesn't require\nan internal full iteration + `reverse`.",
              "committedDate": "2024-01-11T21:19:45Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-11T10:35:57Z",
            "body": "Nice, the only wart in my opinion is that the names are nearly identical, in fact I would say the only difference between them based on the names only, is that one returns a list, other an iterator, but the same contents. I'm sure I won't remember which one returns what and would need to look it up every time.\r\n\r\nIf we were designing this methods now, I would suggest `iter_upwards` and `iter_downwards`, both returning iterators. Perhaps it is worth to introduce these two methods, and keep `listchain` implemented as `list(self.iter_downwards())` just for backward compatibility?"
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-11T10:46:13Z",
            "body": "it leaves a bit of a sour taste that listchain and iterchain have different order,\r\nbut its hard to name those\r\nperhaps we could call it iterparents() but thats also not the nicest name"
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-11T11:06:39Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-11T12:51:19Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11800,
      "title": "Doc tmp_path",
      "body": "<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [X] Include documentation when adding new features.\r\n- [X] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [X] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [X] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n\r\nCloses #11790. Slight change to `tmp_path` documentation to more clearly illustrate it's behavior\r\n\r\nFeel free to suggest changes if the updated documentation is still misleading :)",
      "state": "MERGED",
      "createdAt": "2024-01-11T03:47:35Z",
      "updatedAt": "2024-01-11T11:01:07Z",
      "closedAt": "2024-01-11T11:01:07Z",
      "mergedAt": "2024-01-11T11:01:07Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "bugfix-for-issue-11790",
      "author": {
        "login": "faisal-fawad"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Delete changelog/11790.doc.rst",
              "committedDate": "2024-01-11T10:40:12Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-11T10:40:30Z",
            "body": "Thanks!\r\n\r\nIn this case, as the change is small, I feel we do not need a changelog entry, so I removed it. :+1: "
          }
        ]
      }
    },
    {
      "number": 11799,
      "title": "python: remove support for nose's `compat_co_firstlineno`",
      "body": "Since we're removing nose support, let's also drop support for this attribute.\r\n\r\nFrom doing a code search on github, this seems completely unused outside of nose, except for some projects which used to use it, but no longer do.",
      "state": "MERGED",
      "createdAt": "2024-01-10T17:23:11Z",
      "updatedAt": "2024-01-11T11:13:34Z",
      "closedAt": "2024-01-11T11:13:30Z",
      "mergedAt": "2024-01-11T11:13:30Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "rm-nose-compat_co_firstlineno",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "python: remove support for nose's `compat_co_firstlineno`\n\nSince we're removing nose support, let's also drop support for this\nattribute.\n\nFrom doing a code search on github, this seems completely unused outside\nof nose, except for some projects which used to use it, but no longer\ndo.",
              "committedDate": "2024-01-10T17:22:19Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-10T19:22:53Z",
            "body": ":+1: "
          }
        ]
      }
    },
    {
      "number": 11795,
      "title": "Improve assert mod not in mods error message",
      "body": "Related to #9765, add a better error message than `assert mod not in mods`. This would have been super useful to figure out from the error message the difference from `conftestpath` and `mod.__file__`. Hopefully the #11708 will be merged and this error is less likely to occur, but at least if a variation of the issue occurs again there will be a better error message.\r\n\r\nHere is the error on my reproducer https://github.com/lesteve/pytest-issue-9765-reproducer:\r\n```\r\nAssertionError: str(conftestpath)='C:\\\\msys64\\\\home\\\\lesteve\\\\dev\\\\pytest-issue-9765-reproducer\\\\project\\\\conftest.py'\r\nhas already been loaded as the module mod=<module 'project.conftest' from 'c:\\\\msys64\\\\home\\\\lesteve\\\\dev\\\\pytest-issue\r\n-9765-reproducer\\\\project\\\\conftest.py'>\r\n```\r\n\r\nFor now I keep an `AssertionError` but let me know if you think another kind of error is more appropriate.\r\n\r\nIt does not seem that easy to add a test for this ...\r\n\r\nLet me know if you think this is worth adding a changelog for this or not!\r\n\r\nDepending on how #11708 goes, this may need to be tweaked since a discrepancy between `mod.__file__` and `str(contestpath)` is likely not how this problem will show up. It could even lead to red-herring, since it will be potentially fine that `mod.__file__` and `str(conftestpath)` are not the consistent and people may be misled by reading comments like https://github.com/pytest-dev/pytest/issues/9765#issuecomment-1880768441  ...",
      "state": "MERGED",
      "createdAt": "2024-01-10T06:07:13Z",
      "updatedAt": "2024-01-14T11:39:22Z",
      "closedAt": "2024-01-14T11:39:14Z",
      "mergedAt": "2024-01-14T11:39:14Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "improve-assert-mod-not-in-mods-error-message",
      "author": {
        "login": "lesteve"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Improve assert mod not in mods error message\n\n[ran: tweaked message, made the formatting lazy]",
              "committedDate": "2024-01-14T11:21:54Z",
              "author": {
                "name": "Lo\u00efc Est\u00e8ve",
                "email": "loic.esteve@ymail.com",
                "user": {
                  "login": "lesteve"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-10T10:18:44Z",
            "body": "Indeed having a better error message is something we should have for all internal `assert` calls, thanks!"
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-10T18:17:42Z",
            "body": "Thanks, this would have been useful with the issue."
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-14T11:25:53Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-14T11:26:02Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11794,
      "title": "A few cleanups",
      "body": "A few small cleanups -- please see the commits.",
      "state": "MERGED",
      "createdAt": "2024-01-09T21:51:32Z",
      "updatedAt": "2024-01-11T09:16:31Z",
      "closedAt": "2024-01-10T05:44:15Z",
      "mergedAt": "2024-01-10T05:44:15Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "RonnyPfannschmidt"
      },
      "baseRefName": "main",
      "headRefName": "fixturedef-ref-cycle",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "config: clarify a bit of code in `_importconftest`",
              "committedDate": "2024-01-09T21:49:03Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-10T01:07:15Z",
            "body": "LGTM!"
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-10T05:43:46Z",
            "body": "Lovely "
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-10T05:44:03Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11792,
      "title": "[pre-commit.ci] pre-commit autoupdate",
      "body": "<!--pre-commit.ci start-->\nupdates:\n- [github.com/PyCQA/flake8: 6.1.0 \u2192 7.0.0](https://github.com/PyCQA/flake8/compare/6.1.0...7.0.0)\n<!--pre-commit.ci end-->",
      "state": "MERGED",
      "createdAt": "2024-01-08T20:42:48Z",
      "updatedAt": "2024-01-08T21:19:37Z",
      "closedAt": "2024-01-08T21:19:36Z",
      "mergedAt": "2024-01-08T21:19:36Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "main",
      "headRefName": "pre-commit-ci-update-config",
      "author": {
        "login": "pre-commit-ci"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[pre-commit.ci] pre-commit autoupdate\n\nupdates:\n- [github.com/PyCQA/flake8: 6.1.0 \u2192 7.0.0](https://github.com/PyCQA/flake8/compare/6.1.0...7.0.0)",
              "committedDate": "2024-01-08T20:42:47Z",
              "author": {
                "name": "pre-commit-ci[bot]",
                "email": "66853113+pre-commit-ci[bot]@users.noreply.github.com",
                "user": {
                  "login": "pre-commit-ci[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-08T20:51:48Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11788,
      "title": "build(deps): Bump pytest-asyncio from 0.23.2 to 0.23.3 in /testing/plugins_integration",
      "body": "Bumps [pytest-asyncio](https://github.com/pytest-dev/pytest-asyncio) from 0.23.2 to 0.23.3.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pytest-dev/pytest-asyncio/releases\">pytest-asyncio's releases</a>.</em></p>\n<blockquote>\n<h2>pytest-asyncio 0.23.3</h2>\n<h1>0.23.3 (2024-01-01)</h1>\n<ul>\n<li>Fixes a bug that caused event loops to be closed prematurely when using async generator fixtures with class scope or wider in a function-scoped test <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/issues/706\">#706</a></li>\n<li>Fixes various bugs that caused an internal pytest error during test collection <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/issues/711\">#711</a> <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/issues/713\">#713</a> <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/issues/719\">#719</a></li>\n</ul>\n<h2>Known issues</h2>\n<p>As of v0.23, pytest-asyncio attaches an asyncio event loop to each item of the test suite (i.e. session, packages, modules, classes, functions) and allows tests to be run in those loops when marked accordingly. Pytest-asyncio currently assumes that async fixture scope is correlated with the new event loop scope. This prevents fixtures from being evaluated independently from the event loop scope and breaks some existing test suites (see <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/issues/706\">#706</a>). For example, a test suite may require all fixtures and tests to run in the same event loop, but have async fixtures that are set up and torn down for each module. If you're affected by this issue, please continue using the v0.21 release, until it is resolved.</p>\n<h2>pytest-asyncio 0.23.3a0</h2>\n<h1>0.23.3 (UNRELEASED)</h1>\n<ul>\n<li>Fixes a bug that caused event loops to be closed prematurely when using async generator fixtures with class scope or wider in a function-scoped test <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/issues/708\">#708</a></li>\n<li>Fixes a bug that caused an internal pytest error when using unittest.SkipTest in a module <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/issues/711\">#711</a></li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/260b79185b198bad96a8fb2abc607a91ad8a5490\"><code>260b791</code></a> [docs] Prepare release of v0.23.3.</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/6a253e20fb174b6750075a6cfdd9409e4c6221f5\"><code>6a253e2</code></a> [docs] Shorten changelog by combining multiple issues.</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/e2cbb906c5124df131abe39c447c5486aae913be\"><code>e2cbb90</code></a> [docs] Mention correct issue in changelog.</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/0c522bff1525e77ff75691ee7530c71fe63e2775\"><code>0c522bf</code></a> [fix] Fixes a bug that caused an internal pytest error when using ImportWarni...</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/31c7e6f9acda156a7aabf23d18e88c23f5f897a4\"><code>31c7e6f</code></a> Build(deps): Bump coverage from 7.3.3 to 7.3.4 in /dependencies/default</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/38d5c7eed0d5193752043631aabde287d0627127\"><code>38d5c7e</code></a> Build(deps): Bump sphinx-rtd-theme in /dependencies/docs</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/650ec5875dcefc4eb4c1b2b0ba792aa643cd0823\"><code>650ec58</code></a> Build(deps): Bump babel from 2.13.1 to 2.14.0 in /dependencies/docs</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/0166a7e55fd5ac31afdaffd7dd54e77003f6cc30\"><code>0166a7e</code></a> Build(deps): Bump typing-extensions in /dependencies/default</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/3a15f3039c2b0101b73af651e8b9c667b1a51434\"><code>3a15f30</code></a> Build(deps): Bump coverage from 7.3.2 to 7.3.3 in /dependencies/default</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/28e91f00cd59d8aca364e6041f898cde8239b4e6\"><code>28e91f0</code></a> Build(deps): Bump hypothesis in /dependencies/default</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pytest-dev/pytest-asyncio/compare/v0.23.2...v0.23.3\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pytest-asyncio&package-manager=pip&previous-version=0.23.2&new-version=0.23.3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2024-01-08T03:37:25Z",
      "updatedAt": "2024-01-08T20:40:48Z",
      "closedAt": "2024-01-08T20:40:48Z",
      "mergedAt": "2024-01-08T20:40:48Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/pip/testing/plugins_integration/pytest-asyncio-0.23.3",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "python"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump pytest-asyncio in /testing/plugins_integration\n\nBumps [pytest-asyncio](https://github.com/pytest-dev/pytest-asyncio) from 0.23.2 to 0.23.3.\n- [Release notes](https://github.com/pytest-dev/pytest-asyncio/releases)\n- [Commits](https://github.com/pytest-dev/pytest-asyncio/compare/v0.23.2...v0.23.3)\n\n---\nupdated-dependencies:\n- dependency-name: pytest-asyncio\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2024-01-08T20:24:22Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-08T19:26:01Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11787,
      "title": "build(deps): Bump django from 5.0 to 5.0.1 in /testing/plugins_integration",
      "body": "Bumps [django](https://github.com/django/django) from 5.0 to 5.0.1.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/django/django/commit/9c436a09b3a641874881706495ae07293aa97c2f\"><code>9c436a0</code></a> [5.0.x] Bumped version for 5.0.1 release.</li>\n<li><a href=\"https://github.com/django/django/commit/01d2f94cfdaa5c6ce8c53bbc230edf48c58a7106\"><code>01d2f94</code></a> [5.0.x] Added release date for 5.0.1 and 4.2.9.</li>\n<li><a href=\"https://github.com/django/django/commit/031bc4710138e36445322488a8074c1b9e835702\"><code>031bc47</code></a> [5.0.x] Fixed <a href=\"https://redirect.github.com/django/django/issues/35072\">#35072</a> -- Corrected Field.choices description in models topic.</li>\n<li><a href=\"https://github.com/django/django/commit/c69dbc7c1068a0a059ed77120c30b4cebbcf0e4b\"><code>c69dbc7</code></a> [5.0.x] Fixed <a href=\"https://redirect.github.com/django/django/issues/35069\">#35069</a> -- Fixed typo in docs/ref/forms/api.txt.</li>\n<li><a href=\"https://github.com/django/django/commit/c8274ecfe2164878ffb66e7c92a9e6d23793f1c1\"><code>c8274ec</code></a> [5.0.x] Corrected method/function wording in tutorial 3.</li>\n<li><a href=\"https://github.com/django/django/commit/8480f2ec3628e077993b58f5ba2b9c56b95e8cc9\"><code>8480f2e</code></a> [5.0.x] Added backticks around name argument in tutorial 3.</li>\n<li><a href=\"https://github.com/django/django/commit/f33eddff8ad166de2677b9ee19835f97e673ab1b\"><code>f33eddf</code></a> [5.0.x] Corrected code-block directives in docs.</li>\n<li><a href=\"https://github.com/django/django/commit/454269b2e124865be49e79e0394e1485043be5f2\"><code>454269b</code></a> [5.0.x] Updated asgiref dependency for 5.0 release series.</li>\n<li><a href=\"https://github.com/django/django/commit/7e3ba869a6c3dd80e42460e82db2402218ce805a\"><code>7e3ba86</code></a> [5.0.x] Improved DEFAULT_FROM_EMAIL/SERVER_EMAIL docs.</li>\n<li><a href=\"https://github.com/django/django/commit/9a182f3d959d16354e24f34713df602f1bef6556\"><code>9a182f3</code></a> [5.0.x] Fixed <a href=\"https://redirect.github.com/django/django/issues/35056\">#35056</a> -- Fixed system check crash on reverse m2m relations wit...</li>\n<li>Additional commits viewable in <a href=\"https://github.com/django/django/compare/5.0...5.0.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=django&package-manager=pip&previous-version=5.0&new-version=5.0.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "CLOSED",
      "createdAt": "2024-01-08T03:37:21Z",
      "updatedAt": "2024-01-08T19:25:23Z",
      "closedAt": "2024-01-08T19:25:14Z",
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "dependabot/pip/testing/plugins_integration/django-5.0.1",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "python"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump django in /testing/plugins_integration\n\nBumps [django](https://github.com/django/django) from 5.0 to 5.0.1.\n- [Commits](https://github.com/django/django/compare/5.0...5.0.1)\n\n---\nupdated-dependencies:\n- dependency-name: django\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2024-01-08T03:37:20Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11785,
      "title": "fixtures: match fixtures based on actual node hierarchy, not textual nodeids",
      "body": "Refs #11662.\r\n\r\n### Problem\r\n\r\nEach fixture definition has a \"visibility\", the `FixtureDef.baseid` attribute. This is nodeid-like string. When a certain `node` requests a certain fixture name, we match node's nodeid against the fixture definitions with this name.\r\n\r\nThe matching currently happens on the *textual* representation of the nodeid - we split `node.nodeid` to its \"parent nodeids\" and then check if the fixture's `baseid` is in there.\r\n\r\nWhile this has worked so far, we really should try to avoid textual manipulation of nodeids as much as possible. It has also caused problem in an odd case of a `Package` in the root directory: the `Package` gets nodeid `.`, while a `Module` in it gets nodeid `test_module.py`. And textually, `.` is not a parent of `test_module.py`.\r\n\r\n### Solution\r\n\r\nAvoid this entirely by just checking the node hierarchy itself. This is made possible by the fact that we now have proper `Directory` nodes (`Dir` or `Package`) for the entire hierarchy.\r\n\r\nAlso do the same for `_getautousenames` which is a similar deal.\r\n\r\nThe `iterparentnodeids` function is no longer used and is removed.\r\n",
      "state": "MERGED",
      "createdAt": "2024-01-07T22:11:35Z",
      "updatedAt": "2024-01-08T20:37:42Z",
      "closedAt": "2024-01-08T20:23:08Z",
      "mergedAt": "2024-01-08T20:23:08Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "matchfactories-nodes",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "fixtures: match fixtures based on actual node hierarchy, not textual nodeids\n\nRefs #11662.\n\n--- Problem\n\nEach fixture definition has a \"visibility\", the `FixtureDef.baseid`\nattribute. This is nodeid-like string. When a certain `node` requests a\ncertain fixture name, we match node's nodeid against the fixture\ndefinitions with this name.\n\nThe matching currently happens on the *textual* representation of the\nnodeid - we split `node.nodeid` to its \"parent nodeids\" and then check\nif the fixture's `baseid` is in there.\n\nWhile this has worked so far, we really should try to avoid textual\nmanipulation of nodeids as much as possible. It has also caused problem\nin an odd case of a `Package` in the root directory: the `Package` gets\nnodeid `.`, while a `Module` in it gets nodeid `test_module.py`. And\ntextually, `.` is not a parent of `test_module.py`.\n\n--- Solution\n\nAvoid this entirely by just checking the node hierarchy itself. This is\nmade possible by the fact that we now have proper `Directory` nodes\n(`Dir` or `Package`) for the entire hierarchy.\n\nAlso do the same for `_getautousenames` which is a similar deal.\n\nThe `iterparentnodeids` function is no longer used and is removed.",
              "committedDate": "2024-01-08T19:36:51Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-08T05:33:35Z",
            "body": "Finally \ud83c\udf89\ud83c\udf7e\ud83c\udf86"
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-08T12:10:42Z",
            "body": "Nice cleanup!"
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-08T13:44:48Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-08T19:05:08Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11784,
      "title": "[automated] Update plugin list",
      "body": "[automated] Update plugin list",
      "state": "MERGED",
      "createdAt": "2024-01-07T00:20:48Z",
      "updatedAt": "2024-01-07T13:20:39Z",
      "closedAt": "2024-01-07T13:20:38Z",
      "mergedAt": "2024-01-07T13:20:38Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "update-plugin-list/patch-13eacdad8",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[automated] Update plugin list",
              "committedDate": "2024-01-07T00:20:46Z",
              "author": {
                "name": "pytest bot",
                "email": "pytestbot@users.noreply.github.com",
                "user": {
                  "login": "pytestbot"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11780,
      "title": "Add an internal \"register fixture\" API and use it replace object patching for fixture injection",
      "body": "(Based on #11776, ignore first commit)\r\n\r\nSee the commit messages, and the discussion in #11662.",
      "state": "MERGED",
      "createdAt": "2024-01-06T12:08:32Z",
      "updatedAt": "2024-01-08T19:24:58Z",
      "closedAt": "2024-01-08T19:24:55Z",
      "mergedAt": "2024-01-08T19:24:55Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "register-fixture",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "python,unittest: replace obj fixture patching with `FixtureManager._register_fixture`\n\nInstead of modifying user objects like modules and classes that we\nreally shouldn't be touching, use the new `_register_fixture` internal\nAPI to do it directly.",
              "committedDate": "2024-01-08T19:02:59Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-06T13:08:47Z",
            "body": "As is this is already a great improvement, awesome work!\r\n\r\nI think we should merge this, and discuss later how/if expose this as part of the public API."
          }
        ]
      }
    },
    {
      "number": 11778,
      "title": "[8.0.x] Add summary for xfails with -rxX option",
      "body": "Backport of PR #11574 to 8.0.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2024-01-05T22:17:32Z",
      "updatedAt": "2024-01-05T22:35:48Z",
      "closedAt": "2024-01-05T22:35:48Z",
      "mergedAt": "2024-01-05T22:35:47Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "8.0.x",
      "headRefName": "backport-11574-to-8.0.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[8.0.x] Add summary for xfails with -rxX option",
              "committedDate": "2024-01-05T22:17:30Z",
              "author": {
                "name": "Fabian Sturm",
                "email": "fabio.sturm@gmail.com",
                "user": {
                  "login": "sturmf"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-05T22:17:49Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11776,
      "title": "unittest: inline `_make_xunit_fixture`",
      "body": "The indirection makes things harder to follow in this case IMO.\r\n\r\nThis change makes some thing I'm planning easier, but I think it's good on its own so submitting separately.",
      "state": "MERGED",
      "createdAt": "2024-01-05T12:40:38Z",
      "updatedAt": "2024-01-08T19:02:27Z",
      "closedAt": "2024-01-08T19:02:25Z",
      "mergedAt": "2024-01-08T19:02:25Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "unittest-xunit-inline",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "unittest: inline `_make_xunit_fixture`\n\nThe indirection makes things harder to follow in this case IMO.",
              "committedDate": "2024-01-05T12:37:03Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-05T12:55:12Z",
            "body": "Agreed, this does look better!"
          }
        ]
      }
    },
    {
      "number": 11774,
      "title": "Small `fspath` cleanups",
      "body": "A couple of remaining `fspath` cleanups.",
      "state": "MERGED",
      "createdAt": "2024-01-04T20:36:31Z",
      "updatedAt": "2024-01-08T19:01:59Z",
      "closedAt": "2024-01-08T19:01:56Z",
      "mergedAt": "2024-01-08T19:01:56Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "fspath-cleanups",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "nodes: fix attribute name `fspath` -> `path` in `get_fslocation_from_item`",
              "committedDate": "2024-01-04T20:32:34Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-05T12:43:11Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11769,
      "title": "Fix a mistake in pytest.warns' docstring (expect_warning accepts tuples, not any sequence)",
      "body": "<!--\nThanks for submitting a PR, your contribution is really appreciated!\n\nHere is a quick checklist that should be present in PRs.\n\n- [ ] Include documentation when adding new features.\n- [ ] Include new tests or update existing tests when applicable.\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\n\nIf this change fixes an issue, please:\n\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\n\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\n\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\n\n  Write sentences in the **past or present tense**, examples:\n\n  * *Improved verbose diff output with sequences.*\n  * *Terminal summary statistics now use multiple colors.*\n\n  Also make sure to end the sentence with a `.`.\n\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\n-->\n\nWhile trying to update some tests for compatibility with pytest 8.0.0rc1, I found that lists of warning types didn't work as the docstring suggested. Indeed, both the internal logic and type annotations are actually more strict, so I think just fixing the docstring is enough ?",
      "state": "MERGED",
      "createdAt": "2024-01-04T10:54:22Z",
      "updatedAt": "2024-01-04T12:45:52Z",
      "closedAt": "2024-01-04T12:27:50Z",
      "mergedAt": "2024-01-04T12:27:50Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "fix_warns_docstring",
      "author": {
        "login": "neutrinoceros"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Fix a mistake in pytest.warns' docstring (expect_warning accepts tuples, not any sequence)",
              "committedDate": "2024-01-04T10:51:12Z",
              "author": {
                "name": "Cl\u00e9ment Robert",
                "email": "cr52@protonmail.com",
                "user": {
                  "login": "neutrinoceros"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-04T12:27:19Z",
            "body": "That's right, thanks!"
          }
        ]
      }
    },
    {
      "number": 11768,
      "title": "[8.0.x] Update docstring of scripts/generate-gh-release-notes.py",
      "body": "Backport of PR #11767 to 8.0.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2024-01-04T10:29:43Z",
      "updatedAt": "2024-01-18T18:45:26Z",
      "closedAt": "2024-01-18T18:45:26Z",
      "mergedAt": "2024-01-18T18:45:26Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "8.0.x",
      "headRefName": "backport-11767-to-8.0.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[8.0.x] Update docstring of scripts/generate-gh-release-notes.py",
              "committedDate": "2024-01-04T10:29:41Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "nicoddemus@gmail.com",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-04T10:30:19Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11767,
      "title": "Update docstring of scripts/generate-gh-release-notes.py",
      "body": "Follow up to #11754.\r\n\r\n",
      "state": "MERGED",
      "createdAt": "2024-01-04T01:27:54Z",
      "updatedAt": "2024-01-04T10:29:27Z",
      "closedAt": "2024-01-04T10:29:21Z",
      "mergedAt": "2024-01-04T10:29:21Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "generate-notes-docs",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Update docstring of scripts/generate-gh-release-notes.py\n\nFollow up to #11754.",
              "committedDate": "2024-01-04T01:26:24Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-04T09:25:13Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11766,
      "title": "[8.0.x] Improve GitHub release workflow",
      "body": "Backport of PR #11754 to 8.0.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2024-01-03T23:15:20Z",
      "updatedAt": "2024-01-03T23:33:03Z",
      "closedAt": "2024-01-03T23:33:03Z",
      "mergedAt": "2024-01-03T23:33:03Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "8.0.x",
      "headRefName": "backport-11754-to-8.0.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[8.0.x] Improve GitHub release workflow",
              "committedDate": "2024-01-03T23:15:18Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "nicoddemus@gmail.com",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-03T23:15:47Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11764,
      "title": "[8.0.x] Fix teardown error reporting when `--maxfail=1`",
      "body": "Backport of PR #11721 to 8.0.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2024-01-03T17:39:52Z",
      "updatedAt": "2024-01-04T09:23:04Z",
      "closedAt": "2024-01-04T09:23:03Z",
      "mergedAt": "2024-01-04T09:23:03Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "8.0.x",
      "headRefName": "backport-11721-to-8.0.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[8.0.x] Fix teardown error reporting when `--maxfail=1`",
              "committedDate": "2024-01-03T17:39:50Z",
              "author": {
                "name": "Ben Brown",
                "email": "ben@beninter.net",
                "user": {
                  "login": "bbrown1867"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-03T17:41:37Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11763,
      "title": "[8.0.x] terminalwriter: fix crash trying to highlight empty source",
      "body": "Backport of PR #11760 to 8.0.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2024-01-03T07:39:15Z",
      "updatedAt": "2024-01-03T11:04:58Z",
      "closedAt": "2024-01-03T11:04:57Z",
      "mergedAt": "2024-01-03T11:04:57Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "8.0.x",
      "headRefName": "backport-11760-to-8.0.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[8.0.x] terminalwriter: fix crash trying to highlight empty source",
              "committedDate": "2024-01-03T07:39:13Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-03T07:40:50Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11760,
      "title": "terminalwriter: fix crash trying to highlight empty source",
      "body": "For quick checking I don't know how we can reach here with an empty source, so test just checks the function directly.\r\n\r\nFix #11758.",
      "state": "MERGED",
      "createdAt": "2024-01-02T17:37:50Z",
      "updatedAt": "2024-01-03T07:39:00Z",
      "closedAt": "2024-01-03T07:38:29Z",
      "mergedAt": "2024-01-03T07:38:29Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "fix-highlight-empty-source",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "needs backport"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "terminalwriter: fix crash trying to highlight empty source\n\nFor quick checking I don't know how we can reach here with an empty\nsource, so test just checks the function directly.\n\nFix #11758.",
              "committedDate": "2024-01-02T17:37:24Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-02T21:37:03Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11757,
      "title": "Remove pytest 8 deprecations",
      "body": "Per our deprecation policy, the 8.0.0 merely changes deprecation warnings to deprecation errors (which can still be ignored), with the actual removals in 8.1.0. Since main is now for 8.1, this is the time to do it.",
      "state": "MERGED",
      "createdAt": "2024-01-02T10:28:34Z",
      "updatedAt": "2024-03-04T12:41:22Z",
      "closedAt": "2024-01-03T14:53:10Z",
      "mergedAt": "2024-01-03T14:53:10Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "rm-removed-in-8",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "doc/deprecations: fix incorrect title level",
              "committedDate": "2024-01-03T12:29:45Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-02T19:28:08Z",
            "body": "Great work!\r\n\r\nForgot we had so many pending deprecations..."
          },
          {
            "author": {
              "login": "krassowski"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-03-04T11:51:08Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-03-04T12:04:39Z",
            "body": ""
          },
          {
            "author": {
              "login": "krassowski"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-03-04T12:10:32Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-03-04T12:41:22Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11756,
      "title": "Cherry pick 8.0.0rc1 release notes",
      "body": "(cherry picked from commit 665e4e58d3fba8319e922674c286e92f070e6ec3)",
      "state": "MERGED",
      "createdAt": "2024-01-02T09:00:31Z",
      "updatedAt": "2024-01-02T09:20:05Z",
      "closedAt": "2024-01-02T09:20:04Z",
      "mergedAt": "2024-01-02T09:20:04Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "cherry-pick-release",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Merge pull request #11744 from pytest-dev/release-8.0.0rc1\n\nPrepare release 8.0.0rc1\n\n(cherry picked from commit 665e4e58d3fba8319e922674c286e92f070e6ec3)",
              "committedDate": "2024-01-02T08:59:26Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11754,
      "title": "Improve GitHub release workflow",
      "body": "This changes the existing script to just generate the release notes and delegate the actual publishing to the `softprops/action-gh-release@v1` action.\r\n\r\nThis allows us to delete the custom code, which failed recently in https://github.com/pytest-dev/pytest/actions/runs/7370258570/job/20056477756.\r\n\r\nIn addition, the 2nd commit enables type checking in `scripts/` for additional safety.\r\n\r\nI will remove the secrets that are no longer needed from the repository after this is merged.\r\n",
      "state": "MERGED",
      "createdAt": "2023-12-31T13:27:01Z",
      "updatedAt": "2024-01-03T23:15:01Z",
      "closedAt": "2024-01-03T23:14:48Z",
      "mergedAt": "2024-01-03T23:14:48Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "release-notes",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Enable type-checking in scripts/",
              "committedDate": "2024-01-03T22:47:56Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-12-31T14:15:17Z",
            "body": "LGTM! Just one question"
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-02T09:03:38Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-02T12:12:54Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-02T12:13:48Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-02T13:21:16Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-02T13:48:34Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-02T16:20:23Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-02T16:22:05Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-02T16:23:57Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-02T21:38:21Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-02T21:44:11Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11753,
      "title": "Cherry-pick 7.4.4 release notes",
      "body": "(cherry picked from commit 18dcd9d38d18fc01bf1f7f5f60db69f785957101)",
      "state": "MERGED",
      "createdAt": "2023-12-31T12:17:10Z",
      "updatedAt": "2023-12-31T12:26:54Z",
      "closedAt": "2023-12-31T12:26:50Z",
      "mergedAt": "2023-12-31T12:26:50Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "cherry-pick-release",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Merge pull request #11752 from pytest-dev/release-7.4.4\n\nPrepare release 7.4.4\n\n(cherry picked from commit 18dcd9d38d18fc01bf1f7f5f60db69f785957101)",
              "committedDate": "2023-12-31T12:15:46Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11752,
      "title": "Prepare release 7.4.4",
      "body": "Created by the [prepare release pr](https://github.com/pytest-dev/pytest/actions/workflows/prepare-release-pr.yml) workflow.\n\nOnce all builds pass and it has been **approved** by one or more maintainers, start the [deploy](https://github.com/pytest-dev/pytest/actions/workflows/deploy.yml) workflow, using these parameters:\n\n* `Use workflow from`: `release-7.4.4`.\n* `Release version`: `7.4.4`.\n\nOr execute on the command line:\n\n```console\ngh workflow run deploy.yml -r release-7.4.4 -f version=7.4.4\n```\n\nAfter the workflow has been approved by a core maintainer, the package will be uploaded to PyPI automatically.\n",
      "state": "MERGED",
      "createdAt": "2023-12-31T10:17:29Z",
      "updatedAt": "2024-01-09T23:24:48Z",
      "closedAt": "2023-12-31T12:10:58Z",
      "mergedAt": "2023-12-31T12:10:58Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "7.4.x",
      "headRefName": "release-7.4.4",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Prepare release version 7.4.4",
              "committedDate": "2023-12-31T10:17:27Z",
              "author": {
                "name": "pytest bot",
                "email": "pytestbot@gmail.com",
                "user": {
                  "login": "pytestbot"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-12-31T10:22:08Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11751,
      "title": "[7.4.x] Ensure the docstring is a string",
      "body": "(cherry picked from commit 084d756ae6a03bba7a257ebae3c83095b228988f)\r\n\r\n[ran: adapted to 7.4.x, fixed changelog issue number]\r\n\r\n<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "MERGED",
      "createdAt": "2023-12-31T09:48:15Z",
      "updatedAt": "2024-01-09T23:25:10Z",
      "closedAt": "2023-12-31T10:12:34Z",
      "mergedAt": "2023-12-31T10:12:34Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "7.4.x",
      "headRefName": "backport-11143-to-7.4.x",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Merge pull request #11143 from tushar-deepsource/patch-1\n\n(cherry picked from commit 084d756ae6a03bba7a257ebae3c83095b228988f)\n\n[ran: adapted to 7.4.x, fixed changelog issue number]",
              "committedDate": "2023-12-31T09:53:19Z",
              "author": {
                "name": "Zac Hatfield-Dodds",
                "email": "zac.hatfield.dodds@gmail.com",
                "user": {
                  "login": "Zac-HD"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11750,
      "title": "[7.4.x] #11091: documentation should use hypthonated properties",
      "body": "Backport of PR #11490 to 7.4.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2023-12-31T09:30:39Z",
      "updatedAt": "2023-12-31T09:50:39Z",
      "closedAt": "2023-12-31T09:50:39Z",
      "mergedAt": "2023-12-31T09:50:39Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "7.4.x",
      "headRefName": "backport-11490-to-7.4.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Update 11091.doc.rst",
              "committedDate": "2023-12-31T09:33:54Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-12-31T09:49:57Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11749,
      "title": "[7.4.x] Improve reporting from __iter__ exceptions",
      "body": "Backport of PR #11308 to 7.4.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2023-12-31T09:28:10Z",
      "updatedAt": "2023-12-31T10:11:03Z",
      "closedAt": "2023-12-31T10:11:02Z",
      "mergedAt": "2023-12-31T10:11:02Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "7.4.x",
      "headRefName": "backport-11308-to-7.4.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Update 7966.bugfix.rst",
              "committedDate": "2023-12-31T09:49:23Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-12-31T09:32:46Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11748,
      "title": "[7.4.x] Fix handling empty values of NO_COLOR and FORCE_COLOR",
      "body": "Backport of PR #11712 to 7.4.x branch. PR created by backport workflow.",
      "state": "CLOSED",
      "createdAt": "2023-12-31T09:26:36Z",
      "updatedAt": "2024-01-01T20:46:20Z",
      "closedAt": "2023-12-31T09:32:22Z",
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "7.4.x",
      "headRefName": "backport-11712-to-7.4.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[7.4.x] Fix handling empty values of NO_COLOR and FORCE_COLOR",
              "committedDate": "2023-12-31T09:26:34Z",
              "author": {
                "name": "Micha\u0142 G\u00f3rny",
                "email": "mgorny@gentoo.org",
                "user": {
                  "login": "mgorny"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11747,
      "title": "[7.4.x] nodes: fix tracebacks from collection errors are not getting pruned",
      "body": "Backport of PR #11711 to 7.4.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2023-12-31T08:14:57Z",
      "updatedAt": "2024-01-09T23:25:38Z",
      "closedAt": "2023-12-31T09:15:22Z",
      "mergedAt": "2023-12-31T09:15:22Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "7.4.x",
      "headRefName": "backport-11711-to-7.4.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[7.4.x] nodes: fix tracebacks from collection errors are not getting pruned",
              "committedDate": "2023-12-31T08:14:55Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-12-31T08:16:08Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11746,
      "title": "[automated] Update plugin list",
      "body": "[automated] Update plugin list",
      "state": "MERGED",
      "createdAt": "2023-12-31T00:20:32Z",
      "updatedAt": "2023-12-31T08:26:35Z",
      "closedAt": "2023-12-31T08:26:34Z",
      "mergedAt": "2023-12-31T08:26:34Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "update-plugin-list/patch-acd445a3f",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[automated] Update plugin list",
              "committedDate": "2023-12-31T00:20:30Z",
              "author": {
                "name": "pytest bot",
                "email": "pytestbot@users.noreply.github.com",
                "user": {
                  "login": "pytestbot"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-12-31T08:10:57Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11745,
      "title": "Change \"Marks applied to fixtures\" removal from 8 to 9",
      "body": "The deprecation has only been added in 8.0, so can't be removed in 8. That will have to wait for 9.",
      "state": "MERGED",
      "createdAt": "2023-12-30T20:16:37Z",
      "updatedAt": "2023-12-31T08:10:24Z",
      "closedAt": "2023-12-31T08:10:21Z",
      "mergedAt": "2023-12-31T08:10:21Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "change-marked-fixture-removal",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Change \"Marks applied to fixtures\" removal from 8 to 9\n\nThe deprecation has only been added in 8.0, so can't be removed in 8.\nThat will have to wait for 9.",
              "committedDate": "2023-12-30T20:14:40Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2023-12-31T06:16:12Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11744,
      "title": "Prepare release 8.0.0rc1",
      "body": "Created by the [prepare release pr](https://github.com/pytest-dev/pytest/actions/workflows/prepare-release-pr.yml) workflow.\n\nOnce all builds pass and it has been **approved** by one or more maintainers, start the [deploy](https://github.com/pytest-dev/pytest/actions/workflows/deploy.yml) workflow, using these parameters:\n\n* `Use workflow from`: `release-8.0.0rc1`.\n* `Release version`: `8.0.0rc1`.\n\nOr execute on the command line:\n\n```console\ngh workflow run deploy.yml -r release-8.0.0rc1 -f version=8.0.0rc1\n```\n\nAfter the workflow has been approved by a core maintainer, the package will be uploaded to PyPI automatically.\n",
      "state": "MERGED",
      "createdAt": "2023-12-30T14:16:13Z",
      "updatedAt": "2024-01-02T08:58:22Z",
      "closedAt": "2024-01-02T08:58:21Z",
      "mergedAt": "2024-01-02T08:58:21Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "8.0.x",
      "headRefName": "release-8.0.0rc1",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": [
          {
            "login": "bluetech"
          }
        ]
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Prepare release version 8.0.0rc1",
              "committedDate": "2023-12-31T12:40:46Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-12-31T12:55:55Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11739,
      "title": "Clarified `markers` ini property. Fix #11738",
      "body": "Clarified `markers` ini property. Fix #11738\r\n\r\n- [x] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [x] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "MERGED",
      "createdAt": "2023-12-26T10:57:50Z",
      "updatedAt": "2024-01-03T12:20:54Z",
      "closedAt": "2024-01-03T12:20:54Z",
      "mergedAt": "2024-01-03T12:20:54Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "clarify-markers-ini-property-11738",
      "author": {
        "login": "MarcBresson"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Add Marc Bresson to authors",
              "committedDate": "2024-01-03T09:45:14Z",
              "author": {
                "name": "Marc Bresson",
                "email": "50196352+MarcBresson@users.noreply.github.com",
                "user": {
                  "login": "MarcBresson"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2023-12-26T11:00:09Z",
            "body": "thanks"
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "CHANGES_REQUESTED",
            "submittedAt": "2023-12-30T10:34:28Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-03T11:04:30Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-03T12:20:28Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11737,
      "title": "[pre-commit.ci] pre-commit autoupdate",
      "body": "<!--pre-commit.ci start-->\nupdates:\n- [github.com/psf/black: 23.12.0 \u2192 23.12.1](https://github.com/psf/black/compare/23.12.0...23.12.1)\n- [github.com/pre-commit/mirrors-mypy: v1.7.1 \u2192 v1.8.0](https://github.com/pre-commit/mirrors-mypy/compare/v1.7.1...v1.8.0)\n<!--pre-commit.ci end-->",
      "state": "MERGED",
      "createdAt": "2023-12-25T20:43:19Z",
      "updatedAt": "2023-12-30T10:35:33Z",
      "closedAt": "2023-12-30T10:35:32Z",
      "mergedAt": "2023-12-30T10:35:32Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "pre-commit-ci-update-config",
      "author": {
        "login": "pre-commit-ci"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[pre-commit.ci] pre-commit autoupdate\n\nupdates:\n- [github.com/psf/black: 23.12.0 \u2192 23.12.1](https://github.com/psf/black/compare/23.12.0...23.12.1)\n- [github.com/pre-commit/mirrors-mypy: v1.7.1 \u2192 v1.8.0](https://github.com/pre-commit/mirrors-mypy/compare/v1.7.1...v1.8.0)",
              "committedDate": "2023-12-25T20:43:18Z",
              "author": {
                "name": "pre-commit-ci[bot]",
                "email": "66853113+pre-commit-ci[bot]@users.noreply.github.com",
                "user": {
                  "login": "pre-commit-ci[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2023-12-26T09:32:18Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11736,
      "title": "[automated] Update plugin list",
      "body": "[automated] Update plugin list",
      "state": "MERGED",
      "createdAt": "2023-12-24T00:20:10Z",
      "updatedAt": "2023-12-30T10:49:18Z",
      "closedAt": "2023-12-30T10:49:17Z",
      "mergedAt": "2023-12-30T10:49:17Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "update-plugin-list/patch-52db918a2",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[automated] Update plugin list",
              "committedDate": "2023-12-24T00:20:08Z",
              "author": {
                "name": "pytest bot",
                "email": "pytestbot@users.noreply.github.com",
                "user": {
                  "login": "pytestbot"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-12-30T10:34:56Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11735,
      "title": "Add tracebacks and output for xfail and xpass with -rxX option",
      "body": "This is builds off of @sturmf #11574  which closes #11233\r\n\r\nI tried to push changes to Fabian's branch and I think I totally mucked it up. \r\nSo I'm starting fresh.\r\n\r\nChangs over Fabian's work:\r\n* add tests\r\n* change bottom summary line for xfail to include the assert line\r\n\r\nI think that's it.",
      "state": "CLOSED",
      "createdAt": "2023-12-23T04:37:22Z",
      "updatedAt": "2024-01-02T18:01:22Z",
      "closedAt": "2024-01-02T18:01:21Z",
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "okken_report_xfail",
      "author": {
        "login": "okken"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Merge branch 'main' into okken_report_xfail",
              "committedDate": "2023-12-26T00:16:37Z",
              "author": {
                "name": "Brian Okken",
                "email": "1568356+okken@users.noreply.github.com",
                "user": {
                  "login": "okken"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": [
          {
            "requestedReviewer": {
              "login": "nicoddemus"
            }
          }
        ]
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11732,
      "title": "Some minor typing tweaks",
      "body": "",
      "state": "MERGED",
      "createdAt": "2023-12-22T10:30:37Z",
      "updatedAt": "2023-12-22T11:00:55Z",
      "closedAt": "2023-12-22T11:00:52Z",
      "mergedAt": "2023-12-22T11:00:52Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "typing-tweaks",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Some minor typing tweaks",
              "committedDate": "2023-12-19T21:29:27Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2023-12-22T10:40:00Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11725,
      "title": "Adding a non regression test for #9765",
      "body": "Non regression test for #9765\r\n\r\nThe test is expected to fail here, and to be fixed in https://github.com/pytest-dev/pytest/pull/11708 .\r\n\r\nNote that the test does not reproduce directly the cause of #9765 but is a best effort at reproducing the mechanism. In #9765 we were surprised of the formatting of `mod.__file__` because it differs from `str(conftestpath)` although `str(conftestpath)` has not been altered.\r\n\r\nHere we trigger an issue by submitting an altered `conftestpath` although `mod.__file__`  most likely would have the expected value. It does not reproduce the crash linked to double loading, but instead highlights that modules that should have been the same are in fact different.\r\n\r\nI haven't found any documentation or PEP that says how `mod.__file__` can be expected to be formatted, so in fact we could expect it to have any weird formatting as long as it resolves to `str(conftestpath)` so I think it is correct to run `_importconftest` once more with the original input like proposed in this PR.",
      "state": "CLOSED",
      "createdAt": "2023-12-19T12:57:16Z",
      "updatedAt": "2024-02-17T09:50:45Z",
      "closedAt": "2024-02-17T09:50:45Z",
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "CONFLICTING",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "FIX/add_non_regression_test_for_9765",
      "author": {
        "login": "fcharras"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Adds similar test with differents paths that resolves identically",
              "committedDate": "2023-12-19T13:46:46Z",
              "author": {
                "name": "Franck Charras",
                "email": "29153872+fcharras@users.noreply.github.com",
                "user": {
                  "login": "fcharras"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11722,
      "title": "[pre-commit.ci] pre-commit autoupdate",
      "body": "<!--pre-commit.ci start-->\nupdates:\n- [github.com/psf/black: 23.11.0 \u2192 23.12.0](https://github.com/psf/black/compare/23.11.0...23.12.0)\n<!--pre-commit.ci end-->",
      "state": "MERGED",
      "createdAt": "2023-12-18T21:01:13Z",
      "updatedAt": "2023-12-18T21:43:28Z",
      "closedAt": "2023-12-18T21:43:28Z",
      "mergedAt": "2023-12-18T21:43:27Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "main",
      "headRefName": "pre-commit-ci-update-config",
      "author": {
        "login": "pre-commit-ci"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[pre-commit.ci] pre-commit autoupdate\n\nupdates:\n- [github.com/psf/black: 23.11.0 \u2192 23.12.0](https://github.com/psf/black/compare/23.11.0...23.12.0)",
              "committedDate": "2023-12-18T21:01:12Z",
              "author": {
                "name": "pre-commit-ci[bot]",
                "email": "66853113+pre-commit-ci[bot]@users.noreply.github.com",
                "user": {
                  "login": "pre-commit-ci[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2023-12-18T21:12:29Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11721,
      "title": "Fix teardown error reporting when `--maxfail=1`",
      "body": "Closes #11706.\r\n\r\n\r\n",
      "state": "MERGED",
      "createdAt": "2023-12-18T16:32:29Z",
      "updatedAt": "2024-01-03T18:29:52Z",
      "closedAt": "2024-01-03T17:39:25Z",
      "mergedAt": "2024-01-03T17:39:25Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "bbrown/11706/fix-teardown-reporting",
      "author": {
        "login": "bbrown1867"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 4
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Some tweaks",
              "committedDate": "2024-01-03T17:04:12Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2023-12-19T10:05:54Z",
            "body": "this looks good for dealing with a number of edge cases\r\n\r\nshould we backport it?"
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "CHANGES_REQUESTED",
            "submittedAt": "2023-12-22T07:57:39Z",
            "body": "Thanks for send a PR @bbrown1867.\r\n\r\nI left a couple of comments on the diff, but here are the high level comments:\r\n\r\n- Similar to `session.shouldfail`, there is `session.shouldstop`, which we should handle as well. You should be able to test it by using `pytest.exit` instead of `pytest.fail`.\r\n\r\n- You've put the `nextitem` check in `runner.py`'s `pytest_runtest_teardown` hook implementation, but I think it should be done in `runtestprotocol`, such that other hook impls in other plugins get `nextitem=None` as well.\r\n\r\n- I am still somewhat worried about this being quite subtle and other plugins might mess with with `shouldfail`/`shouldstop` which will then cause very confusing situations. Currently I can't come up with a better fix, so I think we should do it. But I'd like to mitigate the risk a bit: Let's turn `shouldstop` and `shouldfail` into properties, with setters which prevent true -> false state transitions.\r\n\r\nAs for backporting, I think this is too risky for that. And considering that it is not a regression but has been this way forever AFAICT, I think we shouldn't backport."
          },
          {
            "author": {
              "login": "bbrown1867"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-02T16:29:38Z",
            "body": "Thanks for the feedback @bluetech! I think I've implemented all of your feedback."
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-02T17:08:23Z",
            "body": ""
          },
          {
            "author": {
              "login": "bbrown1867"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-02T18:43:51Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-03T17:06:46Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-03T17:07:01Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11719,
      "title": "build(deps): Bump actions/download-artifact from 3 to 4",
      "body": "Bumps [actions/download-artifact](https://github.com/actions/download-artifact) from 3 to 4.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/actions/download-artifact/releases\">actions/download-artifact's releases</a>.</em></p>\n<blockquote>\n<h2>v4.0.0</h2>\n<h2>What's Changed</h2>\n<p>The release of upload-artifact@v4 and download-artifact@v4 are major changes to the backend architecture of Artifacts. They have numerous performance and behavioral improvements.</p>\n<p>For more information, see the <a href=\"https://github.com/actions/toolkit/tree/main/packages/artifact\"><code>@\u200bactions/artifact</code></a> documentation.</p>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/bflad\"><code>@\u200bbflad</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/download-artifact/pull/194\">actions/download-artifact#194</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/download-artifact/compare/v3...v4.0.0\">https://github.com/actions/download-artifact/compare/v3...v4.0.0</a></p>\n<h2>v3.0.2</h2>\n<ul>\n<li>Bump <code>@actions/artifact</code> to v1.1.1 - <a href=\"https://redirect.github.com/actions/download-artifact/pull/195\">actions/download-artifact#195</a></li>\n<li>Fixed a bug in Node16 where if an HTTP download finished too quickly (&lt;1ms, e.g. when it's mocked) we attempt to delete a temp file that has not been created yet <a href=\"hhttps://redirect.github.com/actions/toolkit/pull/1278\">actions/toolkit#1278</a></li>\n</ul>\n<h2>v3.0.1</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/download-artifact/pull/178\">Bump <code>@\u200bactions/core</code> to 1.10.0</a></li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/actions/download-artifact/commit/7a1cd3216ca9260cd8022db641d960b1db4d1be4\"><code>7a1cd32</code></a> Merge pull request <a href=\"https://redirect.github.com/actions/download-artifact/issues/246\">#246</a> from actions/v4-beta</li>\n<li><a href=\"https://github.com/actions/download-artifact/commit/8f32874a49903ea488c5e7d476a9173e8706f409\"><code>8f32874</code></a> licensed cache</li>\n<li><a href=\"https://github.com/actions/download-artifact/commit/b5ff8444b1c4fcec8131f3cb1ddade813ddfacb1\"><code>b5ff844</code></a> Merge pull request <a href=\"https://redirect.github.com/actions/download-artifact/issues/245\">#245</a> from actions/robherley/v4-documentation</li>\n<li><a href=\"https://github.com/actions/download-artifact/commit/f07a0f73f51b3f1d41667c782c821b9667da9d19\"><code>f07a0f7</code></a> Update README.md</li>\n<li><a href=\"https://github.com/actions/download-artifact/commit/7226129829bb686fdff47bd63bbd0d1373993a84\"><code>7226129</code></a> update test workflow to use different artifact names for matrix</li>\n<li><a href=\"https://github.com/actions/download-artifact/commit/ada9446619b84dd8a557aaaec3b79b58c4986cdf\"><code>ada9446</code></a> update docs and bump <code>@\u200bactions/artifact</code></li>\n<li><a href=\"https://github.com/actions/download-artifact/commit/7eafc8b729ba790ce8f2cee54be8ad6257af4c7c\"><code>7eafc8b</code></a> Merge pull request <a href=\"https://redirect.github.com/actions/download-artifact/issues/244\">#244</a> from actions/robherley/bump-toolkit</li>\n<li><a href=\"https://github.com/actions/download-artifact/commit/3132d12662b5915f20cdbf449465896962101abf\"><code>3132d12</code></a> consume latest toolkit</li>\n<li><a href=\"https://github.com/actions/download-artifact/commit/5be1d3867182a382bc59f2775e002595f487aa88\"><code>5be1d38</code></a> Merge pull request <a href=\"https://redirect.github.com/actions/download-artifact/issues/243\">#243</a> from actions/robherley/v4-beta-updates</li>\n<li><a href=\"https://github.com/actions/download-artifact/commit/465b526e63559575a64716cdbb755bc78dfb263b\"><code>465b526</code></a> consume latest <code>@\u200bactions/toolkit</code></li>\n<li>Additional commits viewable in <a href=\"https://github.com/actions/download-artifact/compare/v3...v4\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/download-artifact&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "CLOSED",
      "createdAt": "2023-12-18T03:29:58Z",
      "updatedAt": "2024-01-09T19:45:24Z",
      "closedAt": "2024-01-09T19:45:22Z",
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "dependabot/github_actions/actions/download-artifact-4",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "github_actions"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump actions/download-artifact from 3 to 4\n\nBumps [actions/download-artifact](https://github.com/actions/download-artifact) from 3 to 4.\n- [Release notes](https://github.com/actions/download-artifact/releases)\n- [Commits](https://github.com/actions/download-artifact/compare/v3...v4)\n\n---\nupdated-dependencies:\n- dependency-name: actions/download-artifact\n  dependency-type: direct:production\n  update-type: version-update:semver-major\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2023-12-18T03:29:58Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11718,
      "title": "build(deps): Bump hynek/build-and-inspect-python-package from 1.5.4 to 2.0.0",
      "body": "Bumps [hynek/build-and-inspect-python-package](https://github.com/hynek/build-and-inspect-python-package) from 1.5.4 to 2.0.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/hynek/build-and-inspect-python-package/releases\">hynek/build-and-inspect-python-package's releases</a>.</em></p>\n<blockquote>\n<h2>v2.0.0</h2>\n<p>This release switches to <a href=\"https://github.com/actions/upload-artifact\"><em>actions/<strong>upload</strong>-artifact</em></a> v4, which is incompatible with older versions of <a href=\"https://github.com/actions/upload-artifact\"><em>actions/<strong>download</strong>-artifact</em></a> (and vice versa).</p>\n<ul>\n<li>If you're using <code>download-artifact@v3</code>, do <strong>not</strong> upgrade.</li>\n<li>If you want to use <code>download-artifact@v4</code>, you <strong>must</strong> upgrade.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/hynek/build-and-inspect-python-package/blob/main/CHANGELOG.md\">hynek/build-and-inspect-python-package's changelog</a>.</em></p>\n<blockquote>\n<h2><a href=\"https://github.com/hynek/build-and-inspect-python-package/compare/v1.5.4...2.0.0\">2.0.0</a> - 2023-12-15</h2>\n<h3>Changed</h3>\n<ul>\n<li>Switched to using v4 of <code>actions/upload-artifact</code>.\nThis version is incompatible with older versions of <code>actions/download-artifact</code> -- hence the major version bump.\nSee also <a href=\"https://github.blog/changelog/2023-12-14-github-actions-artifacts-v4-is-now-generally-available/\">GitHub's announcement</a>.\n<a href=\"https://redirect.github.com/hynek/build-and-inspect-python-package/pull/78\">#78</a></li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/hynek/build-and-inspect-python-package/commit/c9fea028dc9c880c4d00d54727eff3fb1190d082\"><code>c9fea02</code></a> v2.0.0</li>\n<li><a href=\"https://github.com/hynek/build-and-inspect-python-package/commit/2385bede3021f7223c7a46a953df125acf9a51c2\"><code>2385bed</code></a> Switch to upload-artifact v4 (<a href=\"https://redirect.github.com/hynek/build-and-inspect-python-package/issues/78\">#78</a>)</li>\n<li><a href=\"https://github.com/hynek/build-and-inspect-python-package/commit/337438e007e4b7b68733b23b09ae6d989b16c99e\"><code>337438e</code></a> Automated dependency upgrades (<a href=\"https://redirect.github.com/hynek/build-and-inspect-python-package/issues/77\">#77</a>)</li>\n<li><a href=\"https://github.com/hynek/build-and-inspect-python-package/commit/36fb41da824c06586b7996b863191ff60767dab4\"><code>36fb41d</code></a> New cycle</li>\n<li>See full diff in <a href=\"https://github.com/hynek/build-and-inspect-python-package/compare/v1.5.4...v2.0.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=hynek/build-and-inspect-python-package&package-manager=github_actions&previous-version=1.5.4&new-version=2.0.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2023-12-18T03:29:55Z",
      "updatedAt": "2024-01-27T22:10:47Z",
      "closedAt": "2024-01-09T19:44:43Z",
      "mergedAt": "2024-01-09T19:44:43Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/github_actions/hynek/build-and-inspect-python-package-2.0.0",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "github_actions"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump actions/download-artifact from 3 to 4\n\nBumps [actions/download-artifact](https://github.com/actions/download-artifact) from 3 to 4.\n- [Release notes](https://github.com/actions/download-artifact/releases)\n- [Commits](https://github.com/actions/download-artifact/compare/v3...v4)\n\n---\nupdated-dependencies:\n- dependency-name: actions/download-artifact\n  dependency-type: direct:production\n  update-type: version-update:semver-major\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2024-01-09T19:12:42Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-09T19:44:35Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11717,
      "title": "build(deps): Bump anyio[curio,trio] from 4.1.0 to 4.2.0 in /testing/plugins_integration",
      "body": "Bumps [anyio[curio,trio]](https://github.com/agronholm/anyio) from 4.1.0 to 4.2.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/agronholm/anyio/releases\">anyio[curio,trio]'s releases</a>.</em></p>\n<blockquote>\n<h2>4.2.0</h2>\n<ul>\n<li>\n<p>Add support for <code>byte</code>-based paths in <code>connect_unix</code>, <code>create_unix_listeners</code>, <code>create_unix_datagram_socket</code>, and <code>create_connected_unix_datagram_socket</code>. (PR by Lura Skye)</p>\n</li>\n<li>\n<p>Enabled the <code>Event</code> and <code>CapacityLimiter</code> classes to be instantiated outside an event loop thread</p>\n</li>\n<li>\n<p>Broadly improved/fixed the type annotations. Among other things, many functions and methods that take variadic positional arguments now make use of PEP 646 <code>TypeVarTuple</code> to allow the positional arguments to be validated by static type checkers. These changes affected numerous methods and functions, including:</p>\n<ul>\n<li><code>anyio.run()</code></li>\n<li><code>TaskGroup.start_soon()</code></li>\n<li><code>anyio.from_thread.run()</code></li>\n<li><code>anyio.from_thread.run_sync()</code></li>\n<li><code>anyio.to_thread.run_sync()</code></li>\n<li><code>anyio.to_process.run_sync()</code></li>\n<li><code>BlockingPortal.call()</code></li>\n<li><code>BlockingPortal.start_task_soon()</code></li>\n<li><code>BlockingPortal.start_task()</code></li>\n</ul>\n<p>(also resolves <a href=\"https://redirect.github.com/agronholm/anyio/issues/560\">#560</a>)</p>\n</li>\n<li>\n<p>Fixed various type annotations of <code>anyio.Path</code> to match Typeshed:</p>\n<ul>\n<li><code>anyio.Path.__lt__()</code></li>\n<li><code>anyio.Path.__le__()</code></li>\n<li><code>anyio.Path.__gt__()</code></li>\n<li><code>anyio.Path.__ge__()</code></li>\n<li><code>anyio.Path.__truediv__()</code></li>\n<li><code>anyio.Path.__rtruediv__()</code></li>\n<li><code>anyio.Path.hardlink_to()</code></li>\n<li><code>anyio.Path.samefile()</code></li>\n<li><code>anyio.Path.symlink_to()</code></li>\n<li><code>anyio.Path.with_segments()</code></li>\n</ul>\n<p>(PR by Ganden Schaffner)</p>\n</li>\n<li>\n<p>Fixed adjusting the total number of tokens in a <code>CapacityLimiter</code> on asyncio failing to wake up tasks waiting to acquire the limiter in certain edge cases (fixed with help from Egor Blagov)</p>\n</li>\n<li>\n<p>Fixed <code>loop_factory</code> and <code>use_uvloop</code> options not being used on the asyncio backend (<a href=\"https://redirect.github.com/agronholm/anyio/issues/643\">#643</a>)</p>\n</li>\n<li>\n<p>Fixed cancellation propagating on asyncio from a task group to child tasks if the task hosting the task group is in a shielded cancel scope (<a href=\"https://redirect.github.com/agronholm/anyio/issues/642\">#642</a>)</p>\n</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/agronholm/anyio/blob/master/docs/versionhistory.rst\">anyio[curio,trio]'s changelog</a>.</em></p>\n<blockquote>\n<h1>Version history</h1>\n<p>This library adheres to <code>Semantic Versioning 2.0 &lt;http://semver.org/&gt;</code>_.</p>\n<p><strong>4.2.0</strong></p>\n<ul>\n<li>\n<p>Add support for <code>byte</code>-based paths in <code>connect_unix</code>, <code>create_unix_listeners</code>,\n<code>create_unix_datagram_socket</code>, and <code>create_connected_unix_datagram_socket</code>. (PR by\nLura Skye)</p>\n</li>\n<li>\n<p>Enabled the <code>Event</code> and <code>CapacityLimiter</code> classes to be instantiated outside an\nevent loop thread</p>\n</li>\n<li>\n<p>Broadly improved/fixed the type annotations. Among other things, many functions and\nmethods that take variadic positional arguments now make use of PEP 646\n<code>TypeVarTuple</code> to allow the positional arguments to be validated by static type\ncheckers. These changes affected numerous methods and functions, including:</p>\n<ul>\n<li><code>anyio.run()</code></li>\n<li><code>TaskGroup.start_soon()</code></li>\n<li><code>anyio.from_thread.run()</code></li>\n<li><code>anyio.from_thread.run_sync()</code></li>\n<li><code>anyio.to_thread.run_sync()</code></li>\n<li><code>anyio.to_process.run_sync()</code></li>\n<li><code>BlockingPortal.call()</code></li>\n<li><code>BlockingPortal.start_task_soon()</code></li>\n<li><code>BlockingPortal.start_task()</code></li>\n</ul>\n<p>(also resolves <code>[#560](https://github.com/agronholm/anyio/issues/560) &lt;https://github.com/agronholm/anyio/issues/560&gt;</code>_)</p>\n</li>\n<li>\n<p>Fixed various type annotations of <code>anyio.Path</code> to match Typeshed:</p>\n<ul>\n<li><code>anyio.Path.__lt__()</code></li>\n<li><code>anyio.Path.__le__()</code></li>\n<li><code>anyio.Path.__gt__()</code></li>\n<li><code>anyio.Path.__ge__()</code></li>\n<li><code>anyio.Path.__truediv__()</code></li>\n<li><code>anyio.Path.__rtruediv__()</code></li>\n<li><code>anyio.Path.hardlink_to()</code></li>\n<li><code>anyio.Path.samefile()</code></li>\n<li><code>anyio.Path.symlink_to()</code></li>\n<li><code>anyio.Path.with_segments()</code></li>\n</ul>\n<p>(PR by Ganden Schaffner)</p>\n</li>\n<li>\n<p>Fixed adjusting the total number of tokens in a <code>CapacityLimiter</code> on asyncio failing\nto wake up tasks waiting to acquire the limiter in certain edge cases (fixed with help\nfrom Egor Blagov)</p>\n</li>\n<li>\n<p>Fixed <code>loop_factory</code> and <code>use_uvloop</code> options not being used on the asyncio\nbackend (<code>[#643](https://github.com/agronholm/anyio/issues/643) &lt;https://github.com/agronholm/anyio/issues/643&gt;</code>_)</p>\n</li>\n<li>\n<p>Fixed cancellation propagating on asyncio from a task group to child tasks if the task\nhosting the task group is in a shielded cancel scope\n(<code>[#642](https://github.com/agronholm/anyio/issues/642) &lt;https://github.com/agronholm/anyio/issues/642&gt;</code>_)</p>\n</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/agronholm/anyio/commit/f757314f8925682311e768bc586ec41e046e0f36\"><code>f757314</code></a> Bumped up the version</li>\n<li><a href=\"https://github.com/agronholm/anyio/commit/fe31dd5ba3fd18209039d20e4cf971ebfe4116e7\"><code>fe31dd5</code></a> Added Litestar to the downstream test suite</li>\n<li><a href=\"https://github.com/agronholm/anyio/commit/b7be1900c0028d0b157c0f648fc4732757a19def\"><code>b7be190</code></a> Updated GitHub actions</li>\n<li><a href=\"https://github.com/agronholm/anyio/commit/45b9ece3078122710491cee9a076860d02ada810\"><code>45b9ece</code></a> Rearranged the changelog</li>\n<li><a href=\"https://github.com/agronholm/anyio/commit/0b669944e748cd20b939fbb1a6641b444c58ef32\"><code>0b66994</code></a> Fix more <code>Path</code> typing that doesn't match Typeshed (<a href=\"https://redirect.github.com/agronholm/anyio/issues/653\">#653</a>)</li>\n<li><a href=\"https://github.com/agronholm/anyio/commit/e5fadb3181b7f3d48e2404e4a89706b004869668\"><code>e5fadb3</code></a> Added mention of anyio.from_thread.run_sync() to the changelog</li>\n<li><a href=\"https://github.com/agronholm/anyio/commit/89795b9cf2a35a6b8972ffc7f01f00f87a899d66\"><code>89795b9</code></a> Used TypeVarTuple and ParamSpec in several places (<a href=\"https://redirect.github.com/agronholm/anyio/issues/652\">#652</a>)</li>\n<li><a href=\"https://github.com/agronholm/anyio/commit/3a4ec4799a9b1db0f89d4117805a5217bd224a9c\"><code>3a4ec47</code></a> Removed the pyright version pin</li>\n<li><a href=\"https://github.com/agronholm/anyio/commit/28516e21a0cace7492ccce3fbd73da8953a33bfb\"><code>28516e2</code></a> Enabled Event and CapacityLimiter to be instantiated outside an event loop (#...</li>\n<li><a href=\"https://github.com/agronholm/anyio/commit/44ca5eab5499afd567c5cf1f840346326e07de1d\"><code>44ca5ea</code></a> Fixed cancellation propagation when task group host is in a shielded scope (#...</li>\n<li>Additional commits viewable in <a href=\"https://github.com/agronholm/anyio/compare/4.1.0...4.2.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=anyio[curio,trio]&package-manager=pip&previous-version=4.1.0&new-version=4.2.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2023-12-18T03:04:19Z",
      "updatedAt": "2023-12-18T05:34:00Z",
      "closedAt": "2023-12-18T05:33:59Z",
      "mergedAt": "2023-12-18T05:33:59Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/pip/testing/plugins_integration/anyio-curiotrio--4.2.0",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "python"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump anyio[curio,trio] in /testing/plugins_integration\n\nBumps [anyio[curio,trio]](https://github.com/agronholm/anyio) from 4.1.0 to 4.2.0.\n- [Release notes](https://github.com/agronholm/anyio/releases)\n- [Changelog](https://github.com/agronholm/anyio/blob/master/docs/versionhistory.rst)\n- [Commits](https://github.com/agronholm/anyio/compare/4.1.0...4.2.0)\n\n---\nupdated-dependencies:\n- dependency-name: anyio[curio,trio]\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2023-12-18T03:04:18Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2023-12-18T05:33:49Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11715,
      "title": "[automated] Update plugin list",
      "body": "[automated] Update plugin list",
      "state": "MERGED",
      "createdAt": "2023-12-17T00:20:44Z",
      "updatedAt": "2023-12-21T15:16:30Z",
      "closedAt": "2023-12-21T15:16:29Z",
      "mergedAt": "2023-12-21T15:16:29Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "update-plugin-list/patch-047ba83da",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[automated] Update plugin list",
              "committedDate": "2023-12-17T00:20:43Z",
              "author": {
                "name": "pytest bot",
                "email": "pytestbot@users.noreply.github.com",
                "user": {
                  "login": "pytestbot"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-12-21T15:01:51Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11712,
      "title": "Fix handling empty values of NO_COLOR and FORCE_COLOR",
      "body": "Fix handling NO_COLOR and FORCE_COLOR environment variables to correctly be ignored when they are set to an empty value, as defined in the specification:\r\n\r\n> Command-line software which adds ANSI color to its output by default\r\n> should check for a NO_COLOR environment variable that, when present\r\n> *and not an empty string* (regardless of its value), prevents\r\n> the addition of ANSI color.\r\n\r\n(emphasis mine, https://no-color.org/)\r\n\r\nThe same is true of FORCE_COLOR, https://force-color.org/.\r\n\r\n----\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [x] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [x] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [x] Add yourself to `AUTHORS` in alphabetical order.\r\n",
      "state": "MERGED",
      "createdAt": "2023-12-16T18:26:07Z",
      "updatedAt": "2023-12-31T09:26:18Z",
      "closedAt": "2023-12-23T08:12:13Z",
      "mergedAt": "2023-12-23T08:12:13Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "no-color-correct",
      "author": {
        "login": "mgorny"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Streamline testing for FORCE_COLOR and NO_COLOR\n\nStreamline the tests for FORCE_COLOR and NO_COLOR variables, and cover\nall possible cases (unset, set to empty, set to \"1\").  Combine the two\nassert functions into one taking boolean parameters.  Mock file.isatty\nin all circumstances to ensure that the environment variables take\nprecedence over the fallback value resulting from isatty check (or that\nthe fallback is actually used, in the case of both FORCE_COLOR\nand NO_COLOR being unset).",
              "committedDate": "2023-12-17T11:21:03Z",
              "author": {
                "name": "Micha\u0142 G\u00f3rny",
                "email": "mgorny@gentoo.org",
                "user": {
                  "login": "mgorny"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-12-17T09:44:52Z",
            "body": "Good catch, thanks for ensuring we match the spec\n\nPlease ensure the tests actually cover the cases"
          },
          {
            "author": {
              "login": "mgorny"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-12-17T11:21:34Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-12-23T08:11:43Z",
            "body": "Thanks!"
          }
        ]
      }
    },
    {
      "number": 11711,
      "title": "nodes: fix tracebacks from collection errors are not getting pruned",
      "body": "Fix #11710.",
      "state": "MERGED",
      "createdAt": "2023-12-16T15:47:08Z",
      "updatedAt": "2023-12-31T08:14:32Z",
      "closedAt": "2023-12-31T08:14:23Z",
      "mergedAt": "2023-12-31T08:14:23Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "fix-collect-tb-prune",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "needs backport"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[pre-commit.ci] auto fixes from pre-commit.com hooks\n\nfor more information, see https://pre-commit.ci",
              "committedDate": "2023-12-16T15:47:50Z",
              "author": {
                "name": "pre-commit-ci[bot]",
                "email": "66853113+pre-commit-ci[bot]@users.noreply.github.com",
                "user": {
                  "login": "pre-commit-ci[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11708,
      "title": "FIX key formating divergence when inspecting plugin dictionary.",
      "body": "Fixes https://github.com/pytest-dev/pytest/issues/9765\r\n\r\nWhat happens is that `str(conftestpath)` is not necessarily equal to `mod.__file__`, which is the key that is really used in `self._name2plugin`. For instance I've noticed that on windows, the `module.__file__` string for some modules is sometimes small cased (`c:\\\\users...`), while `str(conftestpath)` is not (`C:\\\\Users...`). For my particular reproducer of https://github.com/pytest-dev/pytest/issues/9765, it causes some plugins loaded from conftest to be double loaded, since the preliminary lookup fails because the key is wrong. And double-loading leads to a crash.\r\n\r\nThis might not be a good fix if there are other direct calls to `self.register` in other areas of the code base that would risk to format the keys differently when it's crafted from paths to conftest files, but I've not found any evidences of that.\r\n",
      "state": "MERGED",
      "createdAt": "2023-12-15T16:11:04Z",
      "updatedAt": "2024-01-16T12:32:24Z",
      "closedAt": "2024-01-13T19:45:36Z",
      "mergedAt": "2024-01-13T19:45:36Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "FIX/crash_during_conftest_collection",
      "author": {
        "login": "fcharras"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 30
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Fix `assert mod not in mods` crash\n\nFix #27806.\n\nCo-authored-by: Lo\u00efc Est\u00e8ve <loic.esteve@ymail.com>\nCo-authored-by: Ran Benita <ran@unusedvar.com>\nCo-authored-by: Bruno Oliveira <nicoddemus@gmail.com>",
              "committedDate": "2024-01-13T18:19:28Z",
              "author": {
                "name": "Franck Charras",
                "email": "29153872+fcharras@users.noreply.github.com",
                "user": {
                  "login": "fcharras"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-12-18T12:41:56Z",
            "body": ""
          },
          {
            "author": {
              "login": "fcharras"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-12-18T13:24:38Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-12-18T14:25:03Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-12-23T20:19:48Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-09T09:24:52Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-09T09:26:12Z",
            "body": ""
          },
          {
            "author": {
              "login": "lesteve"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-09T09:39:40Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-10T11:00:18Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-10T19:07:26Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-10T19:22:06Z",
            "body": ""
          },
          {
            "author": {
              "login": "lesteve"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-13T04:49:51Z",
            "body": ""
          },
          {
            "author": {
              "login": "lesteve"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-13T04:55:14Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-13T12:30:57Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-13T12:34:25Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-13T19:26:51Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-13T19:37:26Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11702,
      "title": "[7.4.x] Improves clarity in Sphinx documentation for function signature.",
      "body": "Backport of PR #11698 to 7.4.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2023-12-14T11:15:01Z",
      "updatedAt": "2024-01-09T23:25:57Z",
      "closedAt": "2023-12-14T11:19:41Z",
      "mergedAt": "2023-12-14T11:19:41Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "7.4.x",
      "headRefName": "backport-11698-to-7.4.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[7.4.x] Improves clarity in Sphinx documentation for function signature.",
              "committedDate": "2023-12-14T11:14:59Z",
              "author": {
                "name": "Arthur Richard",
                "email": "arthur.richard2299@gmail.com",
                "user": {
                  "login": "arthuRHD"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-12-14T11:16:10Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11700,
      "title": "Resolving Issue #11666",
      "body": "Hello,\r\n\r\nThis PR resolves https://github.com/pytest-dev/pytest/issues/11666.\r\n\r\n<h1>Description: </h1>\r\nPytest is currently using the TerminalFormatter class from the Pygments library as the application\u2019s universal terminal formatter. This issue focuses on using newer terminal formatters from Pygments which would improve the richness of color and the styling quality. \r\n\r\n<h1>Solution:</h1>\r\nWe addressed the issue by implementing the Terminal256Formatter and the TerminalTrueColorFormatter classes, and selected one of the three formatters based on the user\u2019s operating system capabilities.\r\n\r\n![image](https://github.com/pytest-dev/pytest/assets/117669511/74f69093-162e-41dd-a758-9f6bb1f5041d)\r\n\r\nSince the dark styling used in the TerminalFormatter class is not an option for either of the new formatters, we also created a new styling to closely match the dark Pytest design. \r\n\r\n![image](https://github.com/pytest-dev/pytest/assets/117669511/8902fd7b-5596-4e11-afc6-f68e4f6096ff)\r\n\r\nThis gives us the following results:\r\n\r\n![image](https://github.com/pytest-dev/pytest/assets/117669511/d1585c78-1681-4c32-b1ac-34beb9c6d25c)\r\n![image](https://github.com/pytest-dev/pytest/assets/117669511/e84dbb8e-2bbe-44fc-b49e-31eab3f05b01)\r\n\r\n<h1>Information</h1>\r\nHead-fork: tyyan03/pytest\r\ncompare: issue11666\r\n\r\nbase-fork: pytest-dev/pytest\r\nbase: main\r\n\r\nThanks,\r\nTyler and Rowan",
      "state": "CLOSED",
      "createdAt": "2023-12-13T20:40:49Z",
      "updatedAt": "2024-02-17T09:55:17Z",
      "closedAt": "2024-02-17T09:55:16Z",
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "issue11666",
      "author": {
        "login": "TyYan03"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 6
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[pre-commit.ci] auto fixes from pre-commit.com hooks\n\nfor more information, see https://pre-commit.ci",
              "committedDate": "2023-12-13T20:41:31Z",
              "author": {
                "name": "pre-commit-ci[bot]",
                "email": "66853113+pre-commit-ci[bot]@users.noreply.github.com",
                "user": {
                  "login": "pre-commit-ci[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11699,
      "title": "Typo in fixtures.rst",
      "body": "<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "MERGED",
      "createdAt": "2023-12-13T11:37:14Z",
      "updatedAt": "2023-12-13T12:24:43Z",
      "closedAt": "2023-12-13T12:24:43Z",
      "mergedAt": "2023-12-13T12:24:43Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "main",
      "headRefName": "patch-1",
      "author": {
        "login": "morty"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Typo in fixtures.rst",
              "committedDate": "2023-12-13T11:35:52Z",
              "author": {
                "name": "Tom Mortimer-Jones",
                "email": "tom@morty.co.uk",
                "user": {
                  "login": "morty"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2023-12-13T12:24:31Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11698,
      "title": "Improves clarity in Sphinx documentation for function signature.",
      "body": "<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [X] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n\r\ncloses #11695.\r\n",
      "state": "MERGED",
      "createdAt": "2023-12-13T11:31:47Z",
      "updatedAt": "2023-12-14T15:09:32Z",
      "closedAt": "2023-12-14T11:14:37Z",
      "mergedAt": "2023-12-14T11:14:37Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "main",
      "author": {
        "login": "arthuRHD"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Update src/_pytest/outcomes.py",
              "committedDate": "2023-12-14T11:09:42Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-12-14T11:07:04Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-12-14T11:11:37Z",
            "body": "Thanks @arthuRHD! "
          }
        ]
      }
    },
    {
      "number": 11696,
      "title": "Adding whitespace escaping on difference display",
      "body": "<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\nSolves #10704.\r\n\r\nResolved issue of terminal output showing unhelpful messages if the differentiating symbols are whitespaces. \r\n\r\nSolution in util.py/_diff_text:\r\n```python\r\ndiffspace = False\r\nfor i in range(min(len(left), len(right))):\r\n        if left[i] != right[i]:\r\n            if left[i].isspace() and right[i].isspace():\r\n                diffspace = True  # Check if difference in strings is whitespace symbol\r\n                break\r\n    if left.isspace() or right.isspace():\r\n        left = repr(str(left))\r\n        right = repr(str(right))\r\n        explanation += [\"Strings contain only whitespace, escaping them using repr()\"]\r\n    elif diffspace:\r\n        left = repr(str(left))\r\n        right = repr(str(right))\r\n        explanation += [\r\n            \"Strings are different by whitespaces, escaping them using repr()\"\r\n        ]\r\n```\r\nWe go through the compared strings, checking if any differentiating symbols are both whitespaces,\r\nafter which, unless the strings are already fully escaped due being just whitespace, we escape them using\r\nrepr() adding explanation why that's happening.\r\n\r\nTesting:\r\n```python\r\npytest.param(\r\n        \"\"\"\r\n        def test_this():\r\n            assert \"word\\t\" == \"word    \"\r\n        \"\"\",\r\n        \"\"\"\r\n        >       assert \"word\\t\" == \"word    \"\r\n        E       AssertionError: assert 'word\\\\t' == 'word    '\r\n        E         Strings are different by whitespaces, escaping them using repr()\r\n        E         - 'word    '\r\n        E         + 'word\\\\t'\r\n        \"\"\",\r\n        id=\"Compare whitespaces\",\r\n    )\r\n```\r\nAdding new parameter to test_error_diffs which tests the behaviour of displaying whitespaces correctly.\r\nOutput of test in the terminal:\r\n![image](https://github.com/pytest-dev/pytest/assets/143562498/1728784e-f4bd-41cb-9dd8-bea4f398831c)\r\n",
      "state": "OPEN",
      "createdAt": "2023-12-11T22:33:26Z",
      "updatedAt": "2023-12-11T22:53:17Z",
      "closedAt": null,
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "whitespacediff",
      "author": {
        "login": "OlegP-andrew"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Merge branch 'main' into whitespacediff",
              "committedDate": "2023-12-11T22:49:53Z",
              "author": {
                "name": "OlegP-andrew",
                "email": "143562498+OlegP-andrew@users.noreply.github.com",
                "user": {
                  "login": "OlegP-andrew"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11693,
      "title": "build(deps): Bump pytest-asyncio from 0.23.1 to 0.23.2 in /testing/plugins_integration",
      "body": "Bumps [pytest-asyncio](https://github.com/pytest-dev/pytest-asyncio) from 0.23.1 to 0.23.2.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pytest-dev/pytest-asyncio/releases\">pytest-asyncio's releases</a>.</em></p>\n<blockquote>\n<h2>pytest-asyncio 0.23.2</h2>\n<h1>0.23.2 (2023-12-04)</h1>\n<ul>\n<li>Fixes a bug that caused an internal pytest error when collecting .txt files <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/issues/703\">#703</a></li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/b614c77dec6df7414fba78d2fbe7989c6ee16828\"><code>b614c77</code></a> [fix] Fixes a bug that caused an internal pytest error when collecting .txt f...</li>\n<li>See full diff in <a href=\"https://github.com/pytest-dev/pytest-asyncio/compare/v0.23.1...v0.23.2\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pytest-asyncio&package-manager=pip&previous-version=0.23.1&new-version=0.23.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2023-12-11T03:35:54Z",
      "updatedAt": "2023-12-11T08:24:53Z",
      "closedAt": "2023-12-11T08:24:52Z",
      "mergedAt": "2023-12-11T08:24:52Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/pip/testing/plugins_integration/pytest-asyncio-0.23.2",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "python"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump pytest-asyncio in /testing/plugins_integration\n\nBumps [pytest-asyncio](https://github.com/pytest-dev/pytest-asyncio) from 0.23.1 to 0.23.2.\n- [Release notes](https://github.com/pytest-dev/pytest-asyncio/releases)\n- [Commits](https://github.com/pytest-dev/pytest-asyncio/compare/v0.23.1...v0.23.2)\n\n---\nupdated-dependencies:\n- dependency-name: pytest-asyncio\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2023-12-11T03:35:53Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2023-12-11T08:24:45Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11692,
      "title": "build(deps): Bump django from 4.2.7 to 5.0 in /testing/plugins_integration",
      "body": "Bumps [django](https://github.com/django/django) from 4.2.7 to 5.0.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/django/django/commit/617bcf611f3daa796e4054ba041089ece30a32fc\"><code>617bcf6</code></a> [5.0.x] Bumped version for 5.0 release.</li>\n<li><a href=\"https://github.com/django/django/commit/94914b550db70176963c9b941635a3d9dd87f3a5\"><code>94914b5</code></a> [5.0.x]  Finalized release notes for Django 5.0.</li>\n<li><a href=\"https://github.com/django/django/commit/8e1b820fa10d16664beb5d1ca2f5671891da1704\"><code>8e1b820</code></a> [5.0.x] Updated translations from Transifex.</li>\n<li><a href=\"https://github.com/django/django/commit/e4d7cc3eae3b6b04866ed5874f5d285b8e083ba0\"><code>e4d7cc3</code></a> [5.0.x] Added release date for 4.2.8.</li>\n<li><a href=\"https://github.com/django/django/commit/cb013fc7d9be5faf59f79b6e59ab04e751d05a16\"><code>cb013fc</code></a> [5.0.x] Fixed <a href=\"https://redirect.github.com/django/django/issues/35002\">#35002</a> -- Made UniqueConstraints with fields respect nulls_dist...</li>\n<li><a href=\"https://github.com/django/django/commit/6c502734a0395c3c937a827716e3c02697f53f9b\"><code>6c50273</code></a> [5.0.x] Fixed <a href=\"https://redirect.github.com/django/django/issues/35001\">#35001</a> -- Fixed position of related widget action icons in admi...</li>\n<li><a href=\"https://github.com/django/django/commit/b8a476b7455868c627fd6cab18d6a5f5da49233e\"><code>b8a476b</code></a> [5.0.x] Improved wording in auth.models.User field docs.</li>\n<li><a href=\"https://github.com/django/django/commit/471fa926eaa1bb9270e0b0ad0cd8bdd93ea6f88f\"><code>471fa92</code></a> [5.0.x] Fixed <a href=\"https://redirect.github.com/django/django/issues/34995\">#34995</a> -- Improved position of related widget's add link on adm...</li>\n<li><a href=\"https://github.com/django/django/commit/9fe12b0f364b18926ef52587d4dbe2b2901b2b98\"><code>9fe12b0</code></a> [5.0.x] Refs <a href=\"https://redirect.github.com/django/django/issues/34995\">#34995</a> -- Made Selenium tests more robust for admin_views and ad...</li>\n<li><a href=\"https://github.com/django/django/commit/7f1dc67f53c0d7a79031852603b8c8445bca65ac\"><code>7f1dc67</code></a> [5.0.x] Fixed <a href=\"https://redirect.github.com/django/django/issues/35006\">#35006</a> -- Fixed migrations crash when altering Meta.db_table_co...</li>\n<li>Additional commits viewable in <a href=\"https://github.com/django/django/compare/4.2.7...5.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=django&package-manager=pip&previous-version=4.2.7&new-version=5.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2023-12-11T03:35:50Z",
      "updatedAt": "2023-12-11T14:18:44Z",
      "closedAt": "2023-12-11T14:18:43Z",
      "mergedAt": "2023-12-11T14:18:43Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/pip/testing/plugins_integration/django-5.0",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "python"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Merge branch 'main' into dependabot/pip/testing/plugins_integration/django-5.0",
              "committedDate": "2023-12-11T14:04:09Z",
              "author": {
                "name": "Pierre Sassoulas",
                "email": "pierre.sassoulas@gmail.com",
                "user": {
                  "login": "Pierre-Sassoulas"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2023-12-11T14:04:18Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11691,
      "title": "build(deps): Bump actions/stale from 8 to 9",
      "body": "Bumps [actions/stale](https://github.com/actions/stale) from 8 to 9.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/actions/stale/releases\">actions/stale's releases</a>.</em></p>\n<blockquote>\n<h2>v9.0.0</h2>\n<h2>Breaking Changes</h2>\n<ol>\n<li>Action is now stateful: If the action ends because of <a href=\"https://github.com/actions/stale#operations-per-run\">operations-per-run</a> then the next run will start from the first unprocessed issue skipping the issues processed during the previous run(s). The state is reset when all the issues are processed. This should be considered for scheduling workflow runs.</li>\n<li>Version 9 of this action updated the runtime to Node.js 20. All scripts are now run with Node.js 20 instead of Node.js 16 and are affected by any breaking changes between Node.js 16 and 20.</li>\n</ol>\n<h2>What Else Changed</h2>\n<ol>\n<li>Performance optimization that removes unnecessary API calls by <a href=\"https://github.com/dsame\"><code>@\u200bdsame</code></a> <a href=\"https://redirect.github.com/actions/stale/pull/1033/\">#1033</a> fixes <a href=\"https://redirect.github.com/actions/stale/issues/792\">#792</a></li>\n<li>Logs displaying current github API rate limit by <a href=\"https://github.com/dsame\"><code>@\u200bdsame</code></a> <a href=\"https://redirect.github.com/actions/stale/pull/1032\">#1032</a> addresses <a href=\"https://redirect.github.com/actions/stale/issues/1029\">#1029</a></li>\n</ol>\n<p>For more information, please read the <a href=\"https://github.com/actions/stale#readme\">action documentation</a> and its <a href=\"https://github.com/actions/stale#statefulness\">section about statefulness</a></p>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/jmeridth\"><code>@\u200bjmeridth</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/stale/pull/984\">actions/stale#984</a></li>\n<li><a href=\"https://github.com/nikolai-laevskii\"><code>@\u200bnikolai-laevskii</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/stale/pull/1020\">actions/stale#1020</a></li>\n<li><a href=\"https://github.com/dusan-trickovic\"><code>@\u200bdusan-trickovic</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/stale/pull/1056\">actions/stale#1056</a></li>\n<li><a href=\"https://github.com/aparnajyothi-y\"><code>@\u200baparnajyothi-y</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/stale/pull/1110\">actions/stale#1110</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/stale/compare/v8...v9.0.0\">https://github.com/actions/stale/compare/v8...v9.0.0</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/actions/stale/blob/main/CHANGELOG.md\">actions/stale's changelog</a>.</em></p>\n<blockquote>\n<h1>Changelog</h1>\n<h1>[7.0.0]</h1>\n<p>:warning: Breaking change :warning:</p>\n<ul>\n<li>Allow daysBeforeStale options to be float by <a href=\"https://github.com/irega\"><code>@\u200birega</code></a> in <a href=\"https://redirect.github.com/actions/stale/pull/841\">actions/stale#841</a></li>\n<li>Use cache in check-dist.yml by <a href=\"https://github.com/jongwooo\"><code>@\u200bjongwooo</code></a> in <a href=\"https://redirect.github.com/actions/stale/pull/876\">actions/stale#876</a></li>\n<li>fix print outputs step in existing workflows by <a href=\"https://github.com/irega\"><code>@\u200birega</code></a> in <a href=\"https://redirect.github.com/actions/stale/pull/859\">actions/stale#859</a></li>\n<li>Update issue and PR templates, add/delete workflow files by <a href=\"https://github.com/IvanZosimov\"><code>@\u200bIvanZosimov</code></a> in <a href=\"https://redirect.github.com/actions/stale/pull/880\">actions/stale#880</a></li>\n<li>Update how stale handles exempt items by <a href=\"https://github.com/johnsudol\"><code>@\u200bjohnsudol</code></a> in <a href=\"https://redirect.github.com/actions/stale/pull/874\">actions/stale#874</a></li>\n</ul>\n<h1>[6.0.1]</h1>\n<p>Update <code>@\u200bactions/core</code> to v1.10.0 (<a href=\"https://redirect.github.com/actions/stale/pull/839\">#839</a>)</p>\n<h1>[6.0.0]</h1>\n<p>:warning: Breaking change :warning:</p>\n<p>Issues/PRs default <code>close-issue-reason</code> is now <code>not_planned</code>(<a href=\"https://redirect.github.com/actions/stale/issues/789\">#789</a>)</p>\n<h1>[5.1.0]</h1>\n<p><a href=\"https://redirect.github.com/actions/stale/issues/696\">Don't process stale issues right after they're marked stale</a>\n[Add close-issue-reason option]<a href=\"https://redirect.github.com/actions/stale/pull/764\">#764</a><a href=\"https://redirect.github.com/actions/stale/pull/772\">#772</a>\nVarious dependabot/dependency updates</p>\n<h2><a href=\"https://github.com/actions/stale/compare/v3.0.19...v4.1.0\">4.1.0</a> (2021-07-14)</h2>\n<h2>Features</h2>\n<ul>\n<li><a href=\"https://github.com/actions/stale/commit/9912fa74d1c01b5d6187793d97441019cbe325d0\">Ability to exempt draft PRs</a></li>\n</ul>\n<h2><a href=\"https://github.com/actions/stale/compare/v3.0.19...v4.0.0\">4.0.0</a> (2021-07-14)</h2>\n<h3>Features</h3>\n<ul>\n<li><strong>options:</strong> simplify config by removing skip stale message options (<a href=\"https://redirect.github.com/actions/stale/issues/457\">#457</a>) (<a href=\"https://github.com/actions/stale/commit/6ec637d238067ab8cc96c9289dcdac280bbd3f4a\">6ec637d</a>), closes <a href=\"https://redirect.github.com/actions/stale/issues/405\">#405</a> <a href=\"https://redirect.github.com/actions/stale/issues/455\">#455</a></li>\n<li><strong>output:</strong> print output parameters (<a href=\"https://redirect.github.com/actions/stale/issues/458\">#458</a>) (<a href=\"https://github.com/actions/stale/commit/3e6d35b685f0b2fa1a69be893fa07d3d85e05ee0\">3e6d35b</a>)</li>\n</ul>\n<h3>Bug Fixes</h3>\n<ul>\n<li><strong>dry-run:</strong> forbid mutations in dry-run (<a href=\"https://redirect.github.com/actions/stale/issues/500\">#500</a>) (<a href=\"https://github.com/actions/stale/commit/f1017f33dd159ea51366375120c3e6981d7c3097\">f1017f3</a>), closes <a href=\"https://redirect.github.com/actions/stale/issues/499\">#499</a></li>\n<li><strong>logs:</strong> coloured logs (<a href=\"https://redirect.github.com/actions/stale/issues/465\">#465</a>) (<a href=\"https://github.com/actions/stale/commit/5fbbfba142860ea6512549e96e36e3540c314132\">5fbbfba</a>)</li>\n<li><strong>operations:</strong> fail fast the current batch to respect the operations limit (<a href=\"https://redirect.github.com/actions/stale/issues/474\">#474</a>) (<a href=\"https://github.com/actions/stale/commit/5f6f311ca6aa75babadfc7bac6edf5d85fa3f35d\">5f6f311</a>), closes <a href=\"https://redirect.github.com/actions/stale/issues/466\">#466</a></li>\n<li><strong>label comparison</strong>: make label comparison case insensitive <a href=\"https://redirect.github.com/actions/stale/pull/517\">#517</a>, closes <a href=\"https://redirect.github.com/actions/stale/pull/516\">#516</a></li>\n<li><strong>filtering comments by actor could have strange behavior</strong>: &quot;stale&quot; comments are now detected based on if the message is the stale message not <em>who</em> made the comment(<a href=\"https://redirect.github.com/actions/stale/pull/519\">#519</a>), fixes <a href=\"https://redirect.github.com/actions/stale/pull/441\">#441</a>, <a href=\"https://redirect.github.com/actions/stale/pull/509\">#509</a>, <a href=\"https://redirect.github.com/actions/stale/pull/518\">#518</a></li>\n</ul>\n<h3>Breaking Changes</h3>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/actions/stale/commit/28ca1036281a5e5922ead5184a1bbf96e5fc984e\"><code>28ca103</code></a> Upgrade Node to v20 (<a href=\"https://redirect.github.com/actions/stale/issues/1110\">#1110</a>)</li>\n<li><a href=\"https://github.com/actions/stale/commit/b69b346013879cedbf50c69f572cd85439a41936\"><code>b69b346</code></a> build(deps-dev): bump <code>@\u200btypes/node</code> from 18.16.18 to 20.5.1 (<a href=\"https://redirect.github.com/actions/stale/issues/1079\">#1079</a>)</li>\n<li><a href=\"https://github.com/actions/stale/commit/88a6f4f6cbe6984b66da80d3d448d5f0c4d1a42d\"><code>88a6f4f</code></a> build(deps-dev): bump typescript from 5.1.3 to 5.2.2 (<a href=\"https://redirect.github.com/actions/stale/issues/1083\">#1083</a>)</li>\n<li><a href=\"https://github.com/actions/stale/commit/796531a7b39835671cd9f436d7205b1556bbcff6\"><code>796531a</code></a> Merge pull request <a href=\"https://redirect.github.com/actions/stale/issues/1080\">#1080</a> from akv-platform/fix-delete-cache</li>\n<li><a href=\"https://github.com/actions/stale/commit/8986f6218b4935e254d5b844e8c36b4d953f2643\"><code>8986f62</code></a> Don not try to delete cache if it does not exists</li>\n<li><a href=\"https://github.com/actions/stale/commit/cab99b362baa5afbbd8c7c78234e6b071b80687d\"><code>cab99b3</code></a> fix typo proceeded/processed</li>\n<li><a href=\"https://github.com/actions/stale/commit/184e7afe930f6b5c7ce52c4b3f087692c6e912f3\"><code>184e7af</code></a> Merge pull request <a href=\"https://redirect.github.com/actions/stale/issues/1064\">#1064</a> from actions/dependabot/npm_and_yarn/typescript-esli...</li>\n<li><a href=\"https://github.com/actions/stale/commit/523885cf3c115dcdcbed573c7eaf0f5621f124e2\"><code>523885c</code></a> chore: update eslint-plugin, parser and eslint-plugin-jest</li>\n<li><a href=\"https://github.com/actions/stale/commit/2487a1dc2b501176ca975d2d8b4d3293d72180a2\"><code>2487a1d</code></a> build(deps-dev): bump <code>@\u200btypescript-eslint/eslint-plugin</code></li>\n<li><a href=\"https://github.com/actions/stale/commit/60c722ee97faafece819a7c41b03ec113f99717d\"><code>60c722e</code></a> Merge pull request <a href=\"https://redirect.github.com/actions/stale/issues/1063\">#1063</a> from actions/dependabot/npm_and_yarn/jest-29.6.2</li>\n<li>Additional commits viewable in <a href=\"https://github.com/actions/stale/compare/v8...v9\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/stale&package-manager=github_actions&previous-version=8&new-version=9)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2023-12-11T03:16:25Z",
      "updatedAt": "2023-12-11T08:28:51Z",
      "closedAt": "2023-12-11T08:28:50Z",
      "mergedAt": "2023-12-11T08:28:50Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/github_actions/actions/stale-9",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "github_actions"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump actions/stale from 8 to 9\n\nBumps [actions/stale](https://github.com/actions/stale) from 8 to 9.\n- [Release notes](https://github.com/actions/stale/releases)\n- [Changelog](https://github.com/actions/stale/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/actions/stale/compare/v8...v9)\n\n---\nupdated-dependencies:\n- dependency-name: actions/stale\n  dependency-type: direct:production\n  update-type: version-update:semver-major\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2023-12-11T03:16:24Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2023-12-11T08:28:43Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11690,
      "title": "build(deps): Bump actions/setup-python from 4 to 5",
      "body": "Bumps [actions/setup-python](https://github.com/actions/setup-python) from 4 to 5.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/actions/setup-python/releases\">actions/setup-python's releases</a>.</em></p>\n<blockquote>\n<h2>v5.0.0</h2>\n<h2>What's Changed</h2>\n<p>In scope of this release, we update node version runtime from node16 to node20 (<a href=\"https://redirect.github.com/actions/setup-python/pull/772\">actions/setup-python#772</a>). Besides, we update dependencies to the latest versions.</p>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/setup-python/compare/v4.8.0...v5.0.0\">https://github.com/actions/setup-python/compare/v4.8.0...v5.0.0</a></p>\n<h2>v4.8.0</h2>\n<h2>What's Changed</h2>\n<p>In scope of this release we added support for GraalPy (<a href=\"https://redirect.github.com/actions/setup-python/pull/694\">actions/setup-python#694</a>). You can use this snippet to set up GraalPy:</p>\n<pre lang=\"yaml\"><code>steps:\n- uses: actions/checkout@v4\n- uses: actions/setup-python@v4 \n  with:\n    python-version: 'graalpy-22.3' \n- run: python my_script.py\n</code></pre>\n<p>Besides, the release contains such changes as:</p>\n<ul>\n<li>Trim python version when reading from file by <a href=\"https://github.com/FerranPares\"><code>@\u200bFerranPares</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/628\">actions/setup-python#628</a></li>\n<li>Use non-deprecated versions in examples by <a href=\"https://github.com/jeffwidman\"><code>@\u200bjeffwidman</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/724\">actions/setup-python#724</a></li>\n<li>Change deprecation comment to past tense by <a href=\"https://github.com/jeffwidman\"><code>@\u200bjeffwidman</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/723\">actions/setup-python#723</a></li>\n<li>Bump <code>@\u200bbabel/traverse</code> from 7.9.0 to 7.23.2 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/743\">actions/setup-python#743</a></li>\n<li>advanced-usage.md: Encourage the use actions/checkout@v4 by <a href=\"https://github.com/cclauss\"><code>@\u200bcclauss</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/729\">actions/setup-python#729</a></li>\n<li>Examples now use checkout@v4 by <a href=\"https://github.com/simonw\"><code>@\u200bsimonw</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/738\">actions/setup-python#738</a></li>\n<li>Update actions/checkout to v4 by <a href=\"https://github.com/dmitry-shibanov\"><code>@\u200bdmitry-shibanov</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/761\">actions/setup-python#761</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/FerranPares\"><code>@\u200bFerranPares</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/setup-python/pull/628\">actions/setup-python#628</a></li>\n<li><a href=\"https://github.com/timfel\"><code>@\u200btimfel</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/setup-python/pull/694\">actions/setup-python#694</a></li>\n<li><a href=\"https://github.com/jeffwidman\"><code>@\u200bjeffwidman</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/setup-python/pull/724\">actions/setup-python#724</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/setup-python/compare/v4...v4.8.0\">https://github.com/actions/setup-python/compare/v4...v4.8.0</a></p>\n<h2>v4.7.1</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Bump word-wrap from 1.2.3 to 1.2.4 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/702\">actions/setup-python#702</a></li>\n<li>Add range validation for toml files by <a href=\"https://github.com/dmitry-shibanov\"><code>@\u200bdmitry-shibanov</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/726\">actions/setup-python#726</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/setup-python/compare/v4...v4.7.1\">https://github.com/actions/setup-python/compare/v4...v4.7.1</a></p>\n<h2>v4.7.0</h2>\n<p>In scope of this release, the support for reading python version from pyproject.toml was added (<a href=\"https://redirect.github.com/actions/setup-python/pull/669\">actions/setup-python#669</a>).</p>\n<pre lang=\"yaml\"><code>      - name: Setup Python\n        uses: actions/setup-python@v4\n&lt;/tr&gt;&lt;/table&gt; \n</code></pre>\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/actions/setup-python/commit/0a5c61591373683505ea898e09a3ea4f39ef2b9c\"><code>0a5c615</code></a> Update action to node20 (<a href=\"https://redirect.github.com/actions/setup-python/issues/772\">#772</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/0ae58361cdfd39e2950bed97a1e26aa20c3d8955\"><code>0ae5836</code></a> Add example of GraalPy to docs (<a href=\"https://redirect.github.com/actions/setup-python/issues/773\">#773</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/b64ffcaf5b410884ad320a9cfac8866006a109aa\"><code>b64ffca</code></a> update actions/checkout to v4 (<a href=\"https://redirect.github.com/actions/setup-python/issues/761\">#761</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/8d2896179abf658742de432b3f203d2c2d86a587\"><code>8d28961</code></a> Examples now use checkout@v4 (<a href=\"https://redirect.github.com/actions/setup-python/issues/738\">#738</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/7bc6abb01e0555719edc2dbca70a2fde309e5e56\"><code>7bc6abb</code></a> advanced-usage.md: Encourage the use actions/checkout@v4 (<a href=\"https://redirect.github.com/actions/setup-python/issues/729\">#729</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/e8111cec9d3dc15220d8a3b638f08419f57b906a\"><code>e8111ce</code></a> Bump <code>@\u200bbabel/traverse</code> from 7.9.0 to 7.23.2 (<a href=\"https://redirect.github.com/actions/setup-python/issues/743\">#743</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/a00ea43da65e7c04d2bdae58b3afecd77057eb9e\"><code>a00ea43</code></a> add fix for graalpy ci (<a href=\"https://redirect.github.com/actions/setup-python/issues/741\">#741</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/8635b1ccc5934e73ed3510980fd2e7790b85839b\"><code>8635b1c</code></a> Change deprecation comment to past tense (<a href=\"https://redirect.github.com/actions/setup-python/issues/723\">#723</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/f6cc428f535856f9c23558d01765a42a4d6cf758\"><code>f6cc428</code></a> Use non-deprecated versions in examples (<a href=\"https://redirect.github.com/actions/setup-python/issues/724\">#724</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/5f2af211d616f86005883b44826180b21abb4060\"><code>5f2af21</code></a> Add GraalPy support (<a href=\"https://redirect.github.com/actions/setup-python/issues/694\">#694</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/actions/setup-python/compare/v4...v5\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/setup-python&package-manager=github_actions&previous-version=4&new-version=5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2023-12-11T03:16:22Z",
      "updatedAt": "2023-12-11T08:46:15Z",
      "closedAt": "2023-12-11T08:46:14Z",
      "mergedAt": "2023-12-11T08:46:14Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/github_actions/actions/setup-python-5",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "github_actions"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump actions/setup-python from 4 to 5\n\nBumps [actions/setup-python](https://github.com/actions/setup-python) from 4 to 5.\n- [Release notes](https://github.com/actions/setup-python/releases)\n- [Commits](https://github.com/actions/setup-python/compare/v4...v5)\n\n---\nupdated-dependencies:\n- dependency-name: actions/setup-python\n  dependency-type: direct:production\n  update-type: version-update:semver-major\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2023-12-11T03:16:22Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2023-12-11T08:45:59Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11689,
      "title": "[automated] Update plugin list",
      "body": "[automated] Update plugin list",
      "state": "MERGED",
      "createdAt": "2023-12-10T00:20:39Z",
      "updatedAt": "2023-12-10T07:59:07Z",
      "closedAt": "2023-12-10T07:59:06Z",
      "mergedAt": "2023-12-10T07:59:06Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "update-plugin-list/patch-d1675646f",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[automated] Update plugin list",
              "committedDate": "2023-12-10T00:20:38Z",
              "author": {
                "name": "pytest bot",
                "email": "pytestbot@users.noreply.github.com",
                "user": {
                  "login": "pytestbot"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-12-10T07:43:45Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11688,
      "title": "Full diff issue",
      "body": "<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n\r\nCloses #10863 \r\n\r\nResolved issue in Full DIff Output with string lists where strings that were implicitly concatenated/long strings were treated broken up into multiple strings, causing the output format to be misleading. Now, implicitly concatenated strings/long strings are treated as one string, and the output is consistent with other scenarios involving strings.\r\n\r\nTest case:\r\n ```\r\ndef test() -> None:\r\n  // Implicit concatenated string \r\n  ex = [\r\n      \"This is some dummy test which shows the strange way in which Pycharm\"\r\n      \" displays the full diff.\"\r\n  ]\r\n  assert ex == []\r\n```\r\n\r\nBefore:\r\n<img width=\"576\" alt=\"Screenshot 2023-12-07 at 7 51 56 PM\" src=\"https://github.com/pytest-dev/pytest/assets/87912177/29cc2b4a-9d66-405d-b116-67703321a2a6\">\r\n\r\nstring in ex is output as two strings.\r\n\r\nAfter:\r\n<img width=\"746\" alt=\"Screenshot 2023-12-07 at 7 52 42 PM\" src=\"https://github.com/pytest-dev/pytest/assets/87912177/d7fc170b-2ded-4bb8-95e7-f64ba60b0928\">\r\n\r\nstring in ex is now output as one string.\r\n\r\nWorked with @kayliny02.\r\n\r\n",
      "state": "OPEN",
      "createdAt": "2023-12-08T00:59:25Z",
      "updatedAt": "2023-12-08T01:21:12Z",
      "closedAt": null,
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "full_diff_issue",
      "author": {
        "login": "JamieC2002"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Re-added _surrounding_parens_on_own_lines(), and fixed test cases related to issue #10863 to account for new changes from main",
              "committedDate": "2023-12-08T01:21:04Z",
              "author": {
                "name": "JamieC2002",
                "email": "jamiech2002@gmail.com",
                "user": {
                  "login": "JamieC2002"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11684,
      "title": "docs: enable Sphinx nitpicky mode",
      "body": "See:\r\nhttps://www.sphinx-doc.org/en/master/usage/configuration.html#confval-nitpicky\r\n\r\nThis ensures we have no more broken references.",
      "state": "MERGED",
      "createdAt": "2023-12-07T09:53:30Z",
      "updatedAt": "2023-12-10T07:42:34Z",
      "closedAt": "2023-12-10T07:42:31Z",
      "mergedAt": "2023-12-10T07:42:31Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "docs-nitpicky",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "doc: enable Sphinx nitpicky mode\n\nSee:\nhttps://www.sphinx-doc.org/en/master/usage/configuration.html#confval-nitpicky\n\nThis ensures we have no more broken references.",
              "committedDate": "2023-12-07T10:14:45Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2023-12-07T12:45:28Z",
            "body": "Just learned about something today \ud83d\ude04 The removal of ``_non_numeric_type_error`` seems unrelated to sphinx nitpickyness, right ?"
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-12-07T17:53:21Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11683,
      "title": "Resolving Issue #10825",
      "body": "Hello,\r\n\r\nThis PR resolves #10825 issue. It is related to the new versions of PyTest and not reproducible on the main branch.\r\n\r\n# Description #\r\nIf the user adds doctest to a test file, if there is a function in the code `setup()` or `teardown()` that is not used for test, they would be automatically called. This would basically cause a very long error message which is not even related to the actual test:\r\n![Screenshot from 2023-12-07 00-17-52](https://github.com/pytest-dev/pytest/assets/79033602/dcc62b49-ee71-452c-a48c-2f0dd81c13d2)\r\n\r\n# Solution #\r\nTo avoid this long error message, I have added code for this edge case to basically ignore the error caused by it. A warning message is also added to inform the user about using a function name (setup or teardown) that might cause problem. Here is the new outcome for the same test:\r\n![Screenshot from 2023-12-07 00-12-38](https://github.com/pytest-dev/pytest/assets/79033602/e802b302-bb71-4598-a7cd-5c0e137e47e8)\r\nThis would make the API report only the actual test which is the other function, have a much cleaner output and inform the user about possible bugs that having a function in the specific name might have.\r\n\r\nI hope it would come in handy.\r\n\r\nThanks,\r\nArdavan\r\n",
      "state": "CLOSED",
      "createdAt": "2023-12-07T05:54:01Z",
      "updatedAt": "2023-12-14T22:05:28Z",
      "closedAt": "2023-12-14T22:05:27Z",
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "7.4.x",
      "headRefName": "issue10825",
      "author": {
        "login": "ardavan34"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Added edge case code for solving issue 10825",
              "committedDate": "2023-12-07T05:30:35Z",
              "author": {
                "name": "Ardavan Alaei Fard",
                "email": "ardavanalaei@gmail.com",
                "user": {
                  "login": "ardavan34"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11682,
      "title": "Make use of `-I` in all Python invocations",
      "body": "This helps prevent testing the non-installed source. Additionally, the patch updates the docs to demonstrate a more predictable runpy-style invocation method.\r\n",
      "state": "OPEN",
      "createdAt": "2023-12-07T01:12:53Z",
      "updatedAt": "2024-06-21T21:09:46Z",
      "closedAt": null,
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "maintenance/isolated-runpy-invocations",
      "author": {
        "login": "webknjaz"
      },
      "assignees": {
        "nodes": [
          {
            "login": "webknjaz"
          }
        ]
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Make use of `-I` in all Python invocations\n\nThis helps prevent testing the non-installed source.\nAdditionally, the patch updates the docs to demonstrate a more\npredictable runpy-style invocation method.",
              "committedDate": "2023-12-07T02:04:43Z",
              "author": {
                "name": "Sviatoslav Sydorenko",
                "email": "wk@sydorenko.org.ua",
                "user": {
                  "login": "webknjaz"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "CHANGES_REQUESTED",
            "submittedAt": "2023-12-07T07:40:02Z",
            "body": "Thanks @webknjaz.\r\n\r\nI think the changes in CI are good (the `pip`/`venv` invocations).\r\n\r\nFor user documentation, I think we should keep without the `-I`, we can't guess what the user wants, for example it will break many of my works projects to use `-I`. We can perhaps add a note somewhere about it.\r\n\r\nFor our test suites, it will break a few things we do in tox.ini, for example setting `PYTHONWARNDEFAULTENCODING=1`"
          }
        ]
      }
    },
    {
      "number": 11679,
      "title": "Adding stdio option for show-capture",
      "body": "<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\nCloses #11037\r\n\r\nThis issue resolves the inability to output stderr and stdout without log messages. We added a new choice called stdio which follows similar formatting to the other options and does what was requested in #11037. We added conditionals in the functions and confirmed with testing cases that showed no errors.",
      "state": "OPEN",
      "createdAt": "2023-12-07T00:16:02Z",
      "updatedAt": "2023-12-12T01:40:51Z",
      "closedAt": null,
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "issue-11037",
      "author": {
        "login": "ihindi1111"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Added author names",
              "committedDate": "2023-12-07T00:19:18Z",
              "author": {
                "name": "Itamar Hindi",
                "email": "itamarhindi@Itamars-Air.fios-router.home",
                "user": null
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11678,
      "title": "doc: fix some broken Sphinx references",
      "body": "Some work toward enabling Sphinx's [`nitpicky` mode](https://www.sphinx-doc.org/en/master/usage/configuration.html#confval-nitpicky)",
      "state": "MERGED",
      "createdAt": "2023-12-06T22:34:32Z",
      "updatedAt": "2023-12-07T07:40:53Z",
      "closedAt": "2023-12-07T07:40:52Z",
      "mergedAt": "2023-12-07T07:40:52Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "doc-nitpicks",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "doc: fix some broken Sphinx references",
              "committedDate": "2023-12-06T22:30:35Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-12-06T23:34:36Z",
            "body": "Nice, thanks for tackling this. \ud83d\udc4d "
          }
        ]
      }
    },
    {
      "number": 11677,
      "title": "nodes,python: mark abstract node classes as ABCs",
      "body": "Fixes #11676",
      "state": "MERGED",
      "createdAt": "2023-12-06T17:15:37Z",
      "updatedAt": "2023-12-10T07:41:50Z",
      "closedAt": "2023-12-10T07:41:47Z",
      "mergedAt": "2023-12-10T07:41:47Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "nodes-abc",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "nodes,python: mark abstract node classes as ABCs\n\nFixes #11676",
              "committedDate": "2023-12-07T14:41:07Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2023-12-07T07:51:04Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-12-07T11:40:08Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-12-07T14:43:43Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-12-07T16:30:05Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11671,
      "title": "Initial implementation of RaisesGroup",
      "body": "This is an alternative implementation to #11656, to fix #11538\r\n\r\nInstead of doing\r\n```python\r\npytest.raises(ExpectedExceptionGroup(ValueError)):\r\n  ...\r\n```\r\nthis condenses it to\r\n```python\r\npytest.RaisesGroup(ValueError):\r\n  ...\r\n```\r\nwhich also means it doesn't do any modifications to `pytest.raises` or `RaisesContext`\r\n\r\n\r\nTODO:\r\n* [ ] also fix `pytest.mark.xfail(raises=RaisesGroup(...))` #12504",
      "state": "CLOSED",
      "createdAt": "2023-12-05T14:11:31Z",
      "updatedAt": "2025-02-08T08:26:20Z",
      "closedAt": "2025-02-04T12:29:43Z",
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "raisesgroup",
      "author": {
        "login": "jakkdl"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "bot:chronographer:provided"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 24
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "add changelog. helpful suggestion if check would pass on sub-exception. export raises_group as a convenience alias.",
              "committedDate": "2025-01-29T16:23:30Z",
              "author": {
                "name": "jakkdl",
                "email": "h6+github@pm.me",
                "user": {
                  "login": "jakkdl"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Tusenka"
            },
            "state": "COMMENTED",
            "submittedAt": "2025-02-07T04:53:18Z",
            "body": ""
          },
          {
            "author": {
              "login": "Tusenka"
            },
            "state": "COMMENTED",
            "submittedAt": "2025-02-07T05:24:57Z",
            "body": ""
          },
          {
            "author": {
              "login": "jakkdl"
            },
            "state": "COMMENTED",
            "submittedAt": "2025-02-07T10:47:04Z",
            "body": ""
          },
          {
            "author": {
              "login": "jakkdl"
            },
            "state": "COMMENTED",
            "submittedAt": "2025-02-07T10:51:53Z",
            "body": ""
          },
          {
            "author": {
              "login": "Tusenka"
            },
            "state": "COMMENTED",
            "submittedAt": "2025-02-08T03:58:06Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11670,
      "title": "Improve error message when using @pytest.fixture twice",
      "body": "While obvious in hindsight, this error message confused me. I thought my fixture function was used in a test function twice, since the wording is ambiguous.\r\n\r\nAlso, the error does not tell me *which* function is the culprit.\r\n\r\nFinally, this adds a test, which wasn't done in\r\ncfd16d0dac1c935952b892bfbc225978c9b25de3 where this was originally implemented.",
      "state": "MERGED",
      "createdAt": "2023-12-05T12:41:45Z",
      "updatedAt": "2024-02-09T13:59:12Z",
      "closedAt": "2024-02-09T13:59:04Z",
      "mergedAt": "2024-02-09T13:59:04Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "The-Compiler"
      },
      "baseRefName": "main",
      "headRefName": "improve-double-fixture-error",
      "author": {
        "login": "The-Compiler"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "needs backport"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[pre-commit.ci] auto fixes from pre-commit.com hooks\n\nfor more information, see https://pre-commit.ci",
              "committedDate": "2023-12-05T12:42:28Z",
              "author": {
                "name": "pre-commit-ci[bot]",
                "email": "66853113+pre-commit-ci[bot]@users.noreply.github.com",
                "user": {
                  "login": "pre-commit-ci[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-12-05T15:28:16Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11669,
      "title": "Resolving Issue #11457",
      "body": "Hello,\r\n\r\nThis PR resolves #11457.\r\n\r\n## Description:\r\n\r\nEssentially, the issue is that when the user calls .fail() and the test case has an internal error, they will receive the reason for failing passed to .fail() as well as the internal error context. The figure below was the test given to produce this behaviour:\r\n\r\n![TestToReplicateIssue](https://github.com/pytest-dev/pytest/assets/112140775/6a66ef6b-701e-49d8-9f75-32176865b8f7)\r\n\r\nAnd the following figure is the behaviour itself:\r\n\r\n![ErroneousResult](https://github.com/pytest-dev/pytest/assets/112140775/9fcc93b9-3840-413f-90ca-15f4d516a61b)\r\n\r\n## Solution:\r\n\r\nThis was described as unfavourable, so to prevent this behaviour, I added a suppress context parameter to the .fail() function to allow users to choose whether they want to internal error context to be printed. Now, with running the same test, we choose to suppress the context:\r\n\r\n![TestWithNewFunctionality](https://github.com/pytest-dev/pytest/assets/112140775/4c429c8a-3eec-4fe4-b498-7aae42d7ff8e)\r\n\r\nThis gives us the following result:\r\n\r\n\r\n![UpdatedResult](https://github.com/pytest-dev/pytest/assets/112140775/36805f25-1a66-49c4-9b3e-ad53841b35cb)\r\n\r\n\r\nI believe this is an apt fix as suppress_context is set to False by default, meaning that it would not change the default behaviour, but gives the user more overall control of their text outputs.\r\n\r\n\r\n## Information\r\n\r\nHead-fork: seanpourgoutzidis/pytest\r\ncompare: issue11457\r\n\r\nbase-fork: pytest-dev/pytest\r\nbase: main\r\n\r\nThanks,\r\nSean\r\n\r\n\r\n\r\n\r\n",
      "state": "OPEN",
      "createdAt": "2023-12-05T03:37:39Z",
      "updatedAt": "2023-12-05T05:59:24Z",
      "closedAt": null,
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "issue11457",
      "author": {
        "login": "seanpourgoutzidis"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Applied fix to Issue 11457 by adding a suppress context field to fail function",
              "committedDate": "2023-12-05T03:14:35Z",
              "author": {
                "name": "Sean Pourgoutzidis",
                "email": "seanpourgoutzidis@Seans-MacBook-Air.local",
                "user": null
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11668,
      "title": "Remove `setup.py`",
      "body": "Fix #11667.",
      "state": "MERGED",
      "createdAt": "2023-12-04T20:46:38Z",
      "updatedAt": "2023-12-05T15:29:47Z",
      "closedAt": "2023-12-05T15:29:43Z",
      "mergedAt": "2023-12-05T15:29:43Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "rm-setup-py",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Remove `setup.py`\n\nFix #11667.",
              "committedDate": "2023-12-04T20:45:59Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2023-12-04T21:08:11Z",
            "body": ":tada: "
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-12-05T00:06:50Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11665,
      "title": "build(deps): Bump pytest-bdd from 7.0.0 to 7.0.1 in /testing/plugins_integration",
      "body": "Bumps [pytest-bdd](https://github.com/pytest-dev/pytest-bdd) from 7.0.0 to 7.0.1.\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/pytest-dev/pytest-bdd/blob/master/CHANGES.rst\">pytest-bdd's changelog</a>.</em></p>\n<blockquote>\n<h2>7.0.1</h2>\n<ul>\n<li>Fix errors occurring if <code>pytest_unconfigure</code> is called before <code>pytest_configure</code>. <code>[#362](https://github.com/pytest-dev/pytest-bdd/issues/362) &lt;https://github.com/pytest-dev/pytest-bdd/issues/362&gt;</code>_ <code>[#641](https://github.com/pytest-dev/pytest-bdd/issues/641) &lt;https://github.com/pytest-dev/pytest-bdd/pull/641&gt;</code>_</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pytest-dev/pytest-bdd/commit/206530bfa5291d2fb711f94093afd05fe8b20d9e\"><code>206530b</code></a> Bump version 7.0.1</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-bdd/commit/da53c5f567bb0bc429ab71a088ad1fcb4d231472\"><code>da53c5f</code></a> Add cahngelog entry</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-bdd/commit/716314dc9937e76d375712fc07a3dd81c40f7353\"><code>716314d</code></a> Merge pull request <a href=\"https://redirect.github.com/pytest-dev/pytest-bdd/issues/652\">#652</a> from pytest-dev/pre-commit-ci-update-config</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-bdd/commit/fb9af04f365c4a53183ff5ea5f5499b148485b96\"><code>fb9af04</code></a> [pre-commit.ci] pre-commit autoupdate</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-bdd/commit/cf679a9c603fc47bf16beae8632e7d75d0d5a43c\"><code>cf679a9</code></a> Merge pull request <a href=\"https://redirect.github.com/pytest-dev/pytest-bdd/issues/649\">#649</a> from pytest-dev/sourcery/master</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-bdd/commit/f1ba44ca3e69e2e31ffa92ebd83b07e11a37fd3b\"><code>f1ba44c</code></a> 'Refactored by Sourcery'</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-bdd/commit/fead99df73f510c2392ef42715ae15c1c5de9ecb\"><code>fead99d</code></a> Merge pull request <a href=\"https://redirect.github.com/pytest-dev/pytest-bdd/issues/650\">#650</a> from pytest-dev/ab/sourcery-config</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-bdd/commit/034b6dc96fb4226717c13fc72a08ccb70b7a2d17\"><code>034b6dc</code></a> Remove useless var</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-bdd/commit/b5941c454dd32fa87ad6ce6fa6496573c11365c1\"><code>b5941c4</code></a> Do not use next instead of for-loops with return statement</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-bdd/commit/8f5d70808fd4bfeb1a8e14c07fd615f70f5c2163\"><code>8f5d708</code></a> Simplify method</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pytest-dev/pytest-bdd/compare/7.0.0...7.0.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pytest-bdd&package-manager=pip&previous-version=7.0.0&new-version=7.0.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2023-12-04T03:58:11Z",
      "updatedAt": "2023-12-04T13:58:20Z",
      "closedAt": "2023-12-04T13:58:19Z",
      "mergedAt": "2023-12-04T13:58:19Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/pip/testing/plugins_integration/pytest-bdd-7.0.1",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "python"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Merge branch 'main' into dependabot/pip/testing/plugins_integration/pytest-bdd-7.0.1",
              "committedDate": "2023-12-04T13:42:07Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "nicoddemus@gmail.com",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-12-04T13:42:23Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11664,
      "title": "build(deps): Bump pytest-asyncio from 0.21.1 to 0.23.1 in /testing/plugins_integration",
      "body": "Bumps [pytest-asyncio](https://github.com/pytest-dev/pytest-asyncio) from 0.21.1 to 0.23.1.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pytest-dev/pytest-asyncio/releases\">pytest-asyncio's releases</a>.</em></p>\n<blockquote>\n<h2>pytest-asyncio 0.23.1</h2>\n<h1>0.23.1 (2023-12-03)</h1>\n<ul>\n<li>Fixes a bug that caused an internal pytest error when using module-level skips <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/issues/701\">#701</a></li>\n</ul>\n<h2>pytest-asyncio 0.23.0</h2>\n<p>This release is backwards-compatible with v0.21. Changes are\nnon-breaking, unless you upgrade from v0.22.</p>\n<ul>\n<li>BREAKING: The <em>asyncio_event_loop</em> mark has been removed. Event\nloops with class, module, package, and session scopes can be\nrequested via the <em>scope</em> keyword argument to the <em>asyncio</em>\nmark.</li>\n<li>Introduces the <em>event_loop_policy</em> fixture which allows testing with\nnon-default or multiple event loops <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/pull/662\">#662</a></li>\n<li>Introduces <code>pytest_asyncio.is_async_test</code> which returns whether a\ntest item is managed by pytest-asyncio <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/issues/376\">#376</a></li>\n<li>Removes and <em>pytest-trio,</em> <em>mypy,</em> and <em>flaky</em> from the test\ndependencies  <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/pull/620\">#620</a>, <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/pull/674\">#674</a>, <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/pull/678\">#678</a></li>\n</ul>\n<h2>pytest-asyncio 0.23.0b0</h2>\n<h1>0.23.0 (UNRELEASED)</h1>\n<p>This release is backwards-compatible with v0.21.\nChanges are non-breaking, unless you upgrade from v0.22.</p>\n<ul>\n<li>BREAKING: The <em>asyncio_event_loop</em> mark has been removed. Event loops with class, module, package, and session scopes can be requested via the <em>scope</em> keyword argument to the <em>asyncio</em> mark.</li>\n<li>Introduces the <em>event_loop_policy</em> fixture which allows testing with non-default or multiple event loops  <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/pull/662\">#662</a></li>\n<li>Removes pytest-trio from the test dependencies <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/pull/620\">#620</a></li>\n</ul>\n<h2>pytest-asyncio 0.23.0a1</h2>\n<h1>0.23.0 (UNRELEASED)</h1>\n<p>This release is backwards-compatible with v0.21.\nChanges are non-breaking, unless you upgrade from v0.22.</p>\n<ul>\n<li>BREAKING: The <em>asyncio_event_loop</em> mark has been removed. Event loops with class, module, package, and session scopes can be requested via the <em>scope</em> keyword argument to the <em>asyncio</em> mark.</li>\n<li>Introduces the <em>event_loop_policy</em> fixture which allows testing with non-default or multiple event loops  <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/pull/662\">#662</a></li>\n<li>Removes pytest-trio from the test dependencies <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/pull/620\">#620</a></li>\n</ul>\n<h2>pytest-asyncio 0.23.0a0</h2>\n<h1>0.23.0 (UNRELEASED)</h1>\n<p>This release is backwards-compatible with v0.21.\nChanges are non-breaking, unless you upgrade from v0.22.</p>\n<ul>\n<li>BREAKING: The <em>asyncio_event_loop</em> mark has been removed. Event loops with class, module, package, and session scopes can be requested via the <em>scope</em> keyword argument to the <em>asyncio</em> mark.</li>\n<li>Introduces the <em>event_loop_policy</em> fixture which allows testing with non-default or multiple event loops  <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/pull/662\">#662</a></li>\n<li>Removes pytest-trio from the test dependencies <a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/pull/620\">#620</a></li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/a214c3e77149608d427ccab69140edb509c67697\"><code>a214c3e</code></a> [fix] Fixes a bug that caused an internal pytest error when using module-leve...</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/176d558ebbf5df4450c91ae21c6a009b73aac87c\"><code>176d558</code></a> [refactor] Extracted test for pytest.skip into a separate test module.</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/0b34e8e55bfe7037515df95db5f8f5c180be6699\"><code>0b34e8e</code></a> [chore] Prepare release of v0.23.0</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/3c2691df55553598d1d72790fbf59d14d156cfac\"><code>3c2691d</code></a> [docs] Remove badge which points out that the project uses Black as a code fo...</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/349c152d1149a9fb7011296292107a90eaa3ca91\"><code>349c152</code></a> [docs] Mention the #pytest-asyncio:matrix.org chat room in README and for get...</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/533b886aab96df047e58377104ce90b0a27575ce\"><code>533b886</code></a> Build(deps): Bump hypothesis in /dependencies/default</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/9a8b431ff1b2c994c7966b2b2d3684d1e79fa6c3\"><code>9a8b431</code></a> Build(deps): Bump exceptiongroup in /dependencies/default</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/540426d2316e68c8bbd3073a3dbcb40d97b35b9c\"><code>540426d</code></a> Build(deps): Bump pygments from 2.17.1 to 2.17.2 in /dependencies/docs</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/ee23a658f4e591ae25ea547a824fd1ee7572ed57\"><code>ee23a65</code></a> Build(deps): Bump idna from 3.4 to 3.6 in /dependencies/docs</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/1c98ec39869df40ae407b62a52af027153538c26\"><code>1c98ec3</code></a> Build(deps): Bump deadsnakes/action from 3.0.1 to 3.1.0</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pytest-dev/pytest-asyncio/compare/v0.21.1...v0.23.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pytest-asyncio&package-manager=pip&previous-version=0.21.1&new-version=0.23.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2023-12-04T03:58:08Z",
      "updatedAt": "2023-12-04T13:41:36Z",
      "closedAt": "2023-12-04T13:41:35Z",
      "mergedAt": "2023-12-04T13:41:35Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/pip/testing/plugins_integration/pytest-asyncio-0.23.1",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "python"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump pytest-asyncio in /testing/plugins_integration\n\nBumps [pytest-asyncio](https://github.com/pytest-dev/pytest-asyncio) from 0.21.1 to 0.23.1.\n- [Release notes](https://github.com/pytest-dev/pytest-asyncio/releases)\n- [Commits](https://github.com/pytest-dev/pytest-asyncio/compare/v0.21.1...v0.23.1)\n\n---\nupdated-dependencies:\n- dependency-name: pytest-asyncio\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2023-12-04T03:58:07Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11663,
      "title": "build(deps): Bump pypa/gh-action-pypi-publish from 1.8.10 to 1.8.11",
      "body": "Bumps [pypa/gh-action-pypi-publish](https://github.com/pypa/gh-action-pypi-publish) from 1.8.10 to 1.8.11.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pypa/gh-action-pypi-publish/releases\">pypa/gh-action-pypi-publish's releases</a>.</em></p>\n<blockquote>\n<h2>v1.8.11</h2>\n<h2>:nail_care: Cosmetic output improvements</h2>\n<p><a href=\"https://github.com/woodruffw\"><code>@\u200bwoodruffw</code></a> added a nudge suggesting the users storing passwords in a GitHub Actions repository secrets to switch to using secretless publishing in <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/190\">pypa/gh-action-pypi-publish#190</a>. This also reminds people that PyPI will start mandating two-factor authentication to perform uploads in 2024.</p>\n<h2>:memo: What's Documented</h2>\n<p><a href=\"https://github.com/di\"><code>@\u200bdi</code></a> linked the configuration docs for Trusted Publishing in README via <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/179\">pypa/gh-action-pypi-publish#179</a>.</p>\n<h2>:hammer_and_wrench: Internal dependencies</h2>\n<ul>\n<li>Cryptography was bumped from 41.0.3 to 41.0.6 @ <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/194\">pypa/gh-action-pypi-publish#194</a></li>\n<li>Pip was bumped from 22.3.1 to 23.3 @ <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/189\">pypa/gh-action-pypi-publish#189</a></li>\n<li>pre-commit linters got autoupdated @ <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/184\">pypa/gh-action-pypi-publish#184</a></li>\n<li>Urllib3 was bumped from 2.0.3 to 2.0.7 @ <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/183\">pypa/gh-action-pypi-publish#183</a> and <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/185\">pypa/gh-action-pypi-publish#185</a></li>\n</ul>\n<h2>:muscle: New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/di\"><code>@\u200bdi</code></a> made their first contribution in <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/179\">pypa/gh-action-pypi-publish#179</a></li>\n</ul>\n<p><strong>:mirror: Full Diff</strong>: <a href=\"https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.10...v1.8.11\">https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.10...v1.8.11</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/2f6f737ca5f74c637829c0f5c3acd0e29ea5e8bf\"><code>2f6f737</code></a> Merge commit PR <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/184\">#184</a> into unstable/v1</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/2fa448ab0cb5d361fc9e7faa3d0046366bd2db64\"><code>2fa448a</code></a> Merge PRs <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/190\">#190</a>, <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/184\">#184</a>, <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/185\">#185</a>, <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/189\">#189</a> and <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/194\">#194</a> into unstable/v1</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/824ad317867cf757fa348a46a1a430cd9bd7ef28\"><code>824ad31</code></a> Revert flake8 to v4.0.1 for WPS</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/41f3f53c7540cba18712b77660518afd98e0b65a\"><code>41f3f53</code></a> Bump cryptography from 41.0.3 to 41.0.6 in /requirements</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/2319287e0a60524271d7d771003e897075162148\"><code>2319287</code></a> twine-upload: ::error, switch nudge order</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/254a0d4ec4eacf3fd4c21bdd327fdd72c45213d9\"><code>254a0d4</code></a> twine-upload: add a nudge for password auth</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/70a33caeb93cb7e19240fbec59f10b44df0c20ce\"><code>70a33ca</code></a> Bump pip from 22.3.1 to 23.3 in /requirements</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/102f507b758434b11f3a302e53c72ebad30ebef8\"><code>102f507</code></a> Bump urllib3 from 2.0.6 to 2.0.7 in /requirements</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/79739dc2f2bf6bcfd21ecf9af9f06bd643dbeeae\"><code>79739dc</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/183\">#183</a> from pypa/dependabot/pip/requirements/urllib3-2.0.6</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/9a3f9ad5bc96111f11d014e047f1ac7dc644ff56\"><code>9a3f9ad</code></a> [pre-commit.ci] pre-commit autoupdate</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.10...v1.8.11\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pypa/gh-action-pypi-publish&package-manager=github_actions&previous-version=1.8.10&new-version=1.8.11)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2023-12-04T03:44:24Z",
      "updatedAt": "2023-12-04T13:41:22Z",
      "closedAt": "2023-12-04T13:41:21Z",
      "mergedAt": "2023-12-04T13:41:21Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/github_actions/pypa/gh-action-pypi-publish-1.8.11",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "github_actions"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump pypa/gh-action-pypi-publish from 1.8.10 to 1.8.11\n\nBumps [pypa/gh-action-pypi-publish](https://github.com/pypa/gh-action-pypi-publish) from 1.8.10 to 1.8.11.\n- [Release notes](https://github.com/pypa/gh-action-pypi-publish/releases)\n- [Commits](https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.10...v1.8.11)\n\n---\nupdated-dependencies:\n- dependency-name: pypa/gh-action-pypi-publish\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2023-12-04T03:44:23Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11661,
      "title": "Add syntactic highlights to the error explanations",
      "body": "## Description\r\n\r\nThis is part of https://github.com/pytest-dev/pytest/issues/11520\r\n\r\nThis adds colors to the normal explanations outputted by pytest whenever it shows python code in order to make it more readable amongst the sea of red text. It only affects the output when Pygments in present.\r\n\r\n<details>\r\n<summary>Example</summary>\r\n\r\n### Previously\r\n\r\n![image](https://github.com/pytest-dev/pytest/assets/1672192/17d5c105-7c69-40ea-86db-0d761ee17188)\r\n\r\n### Now\r\n\r\n![image](https://github.com/pytest-dev/pytest/assets/1672192/03b4a6aa-2b4a-41f7-8e97-2758df49b50c)\r\n\r\n</details>\r\n\r\n## Questions\r\n\r\n- Not sure how and how much to test this. Making this change barely broke any tests. What would you recommend/want?\r\n\r\n- The `{reset}` color that we add at the start should technically be added on every line to be extra safe, but does currently work. Do we want to be stricter about checking those?\r\n\r\n- The output that we have is actually not exactly valid python, as `repr` can generate an output that is not python. As such, this breaks the lexer in subtle ways, which might lead the colors to be off. For example:\r\n\r\n![image](https://github.com/pytest-dev/pytest/assets/1672192/31e68cb1-282d-4299-9c94-211e244fbbfd)\r\n\r\nI personally don't think it affects the readability much, and is still better than before\r\n\r\n![image](https://github.com/pytest-dev/pytest/assets/1672192/0d89ff86-0d0b-4a43-af3a-81611cc67c79)\r\n\r\nAs such I think it is still worth, but we can not do this if there are any concerns",
      "state": "MERGED",
      "createdAt": "2023-12-03T16:41:57Z",
      "updatedAt": "2023-12-21T17:12:01Z",
      "closedAt": "2023-12-21T17:11:56Z",
      "mergedAt": "2023-12-21T17:11:56Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "BenjaminSchubert"
      },
      "baseRefName": "main",
      "headRefName": "bschubert/more-dict-highlights",
      "author": {
        "login": "BenjaminSchubert"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Merge branch 'main' into bschubert/more-dict-highlights",
              "committedDate": "2023-12-21T16:33:45Z",
              "author": {
                "name": "Benjamin Schubert",
                "email": "bschubert15@bloomberg.net",
                "user": {
                  "login": "BenjaminSchubert"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-12-04T11:45:27Z",
            "body": "Thanks @BenjaminSchubert, another nice improvement. I left some comments, though I still want to look into the reset thing.\r\n\r\n>  Not sure how and how much to test this. Making this change barely broke any tests. What would you recommend/want?\r\n\r\nFor such things I really like snapshot testing (see e.g. [pytest-snapshot](https://github.com/joseph-roitman/pytest-snapshot)) but we don't have snapshots currently. So I suppose the answer is: if you can add tests (or maybe even one big test if it's too much hassle), that'd be nice.\r\n\r\n\r\n> The {reset} color that we add at the start should technically be added on every line to be extra safe, but does currently work. Do we want to be stricter about checking those?\r\n\r\nI'll try to look into it and give a better informed answer later.\r\n\r\n> The output that we have is actually not exactly valid python, as repr can generate an output that is not python. As such, this breaks the lexer in subtle ways, which might lead the colors to be off.\r\n\r\nThis reminds me of the `isreadable` thing from pprint.\r\n\r\nIf you can find a way to improve this that'd be great, otherwise I think we can live with it if the alternative is no highlighting at all (but be ready for some complaints/questions...)"
          },
          {
            "author": {
              "login": "BenjaminSchubert"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-12-06T13:08:11Z",
            "body": ""
          },
          {
            "author": {
              "login": "BenjaminSchubert"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-12-06T13:08:19Z",
            "body": ""
          },
          {
            "author": {
              "login": "BenjaminSchubert"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-12-06T13:09:47Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-12-14T13:33:50Z",
            "body": ""
          },
          {
            "author": {
              "login": "BenjaminSchubert"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-12-20T13:21:49Z",
            "body": "Apologies for the delay. I believe I have addressed all comments and I extended tests to cover most of the changes, I think this is ready for re-review"
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-12-21T15:11:46Z",
            "body": "Thanks for the update! Only a few minor comments, feel free to merge after resolving them."
          },
          {
            "author": {
              "login": "BenjaminSchubert"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-12-21T16:33:34Z",
            "body": "Thanks for the review! I've addressed the comments, will merge the main branch in and squash merge once it passes tests"
          }
        ]
      }
    },
    {
      "number": 11660,
      "title": "Remove more unused pprint features",
      "body": "The vendored version of pprint doesn't use all those features, we can simplify and reduce the amount of code we have to handle.\r\n\r\nSince the module has already quite diverged from upstream, it doesn't really make sense to keep those in",
      "state": "MERGED",
      "createdAt": "2023-12-03T13:54:54Z",
      "updatedAt": "2023-12-18T09:04:41Z",
      "closedAt": "2023-12-18T09:04:36Z",
      "mergedAt": "2023-12-18T09:04:36Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "BenjaminSchubert"
      },
      "baseRefName": "main",
      "headRefName": "bschubert/simplify-pprint",
      "author": {
        "login": "BenjaminSchubert"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 4
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "pprint: Remove conversion to int, we only accept those",
              "committedDate": "2023-12-18T08:35:57Z",
              "author": {
                "name": "Benjamin Schubert",
                "email": "bschubert15@bloomberg.net",
                "user": {
                  "login": "BenjaminSchubert"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-12-03T14:45:28Z",
            "body": "Thanks!\r\n\r\nRemoving `format` and removing conversion to `int` LGTM.\r\n\r\nRegarding dict sorting and underscore numbers, let's make sure it's the behavior we want before removing.\r\n\r\ncc @nicoddemus @RonnyPfannschmidt @The-Compiler If you have any opinions on the below. This is about the vendored `pprint` implementation we use for displaying diffs.\r\n\r\n### Sort dicts\r\n\r\npprint by default prints dicts sorted. This was obviously the better choice before dicts were ordered, but now it's not so obvious. Should pprint print the keys sorted or in the dict order?\r\n\r\nArguments for sorted:\r\n- Easier to find keys\r\n- Diffs become more aligned\r\n- Dict comparison doesn't care about order anyway\r\n\r\nArguments for ordered:\r\n- If the order matters for the dict, it's preserved, not \"misleading\" the user\r\n- If the diff is order dependent it may end up better\r\n\r\nMy opinion: \"Dict comparison doesn't care about order anyway\" wins, let's keep it sorted.\r\n\r\n### Underscore numbers\r\n\r\npprint can print numbers with underscores i.e. `1000000` -> `1_000_000`. Currently it doesn't. Do we want to do turn it on?\r\n\r\nMy opinion: I can think of situations I'd want it, and situation I don't. So I think we probably shouldn't add them."
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-12-10T07:45:00Z",
            "body": "I think this is good to go!"
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-12-11T18:56:46Z",
            "body": ""
          },
          {
            "author": {
              "login": "BenjaminSchubert"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-12-13T19:19:04Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-12-13T19:34:49Z",
            "body": ""
          },
          {
            "author": {
              "login": "BenjaminSchubert"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-12-13T20:17:02Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2023-12-13T20:27:33Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11659,
      "title": "Separate the various parts of the error report with newlines",
      "body": "## Description\r\n\r\nThis is part of https://github.com/pytest-dev/pytest/issues/11520.\r\n\r\nPreviously the error report would have all sections glued together:\r\n\r\n- The assertion representation\r\n- The error explanation\r\n- The full diff\r\n\r\nThis makes it hard to see at a glance where which one starts and ends.\r\n\r\nOne of the representation (dataclasses, tuples, attrs) does display a newlines at the start already.\r\n\r\nLet's add a newlines before the error explanation and before the full diff, so we get an easier to read report.\r\n\r\nThis has one disadvantage: we get one line less in the least verbose mode, where the output gets truncated (outside CI).\r\n\r\n## Examples\r\n\r\n<details>\r\n<summary>Without pygments installed</summary>\r\n\r\n### Before\r\n\r\n![image](https://github.com/pytest-dev/pytest/assets/1672192/57846d94-cf04-4e8e-964b-f125ad6a1579)\r\n\r\n### After\r\n\r\n![image](https://github.com/pytest-dev/pytest/assets/1672192/e986e0b6-66c1-4d26-9b0a-5b78f2b19d1d)\r\n\r\n</details>\r\n\r\n\r\n<details>\r\n<summary>With pygments installed</summary>\r\n\r\n### Before\r\n\r\n![image](https://github.com/pytest-dev/pytest/assets/1672192/71b03f65-cc95-4a3d-90da-c2bafa64323c)\r\n\r\n### After\r\n\r\n![image](https://github.com/pytest-dev/pytest/assets/1672192/f97de617-7fb7-4107-8d2f-68066cf32064)\r\n\r\n</details>\r\n\r\n## Questions\r\n\r\n- The non-verbose mode is now slightly worse (outside CI), with the output being truncated. Do we want to cater for that case and not add the newline in that case?\r\n- This improvement is part of an issue that already has a changelog entry. Should I merge both or how should the file be named? (I currently added a `.2` to it)",
      "state": "MERGED",
      "createdAt": "2023-12-03T13:17:20Z",
      "updatedAt": "2023-12-06T09:25:00Z",
      "closedAt": "2023-12-06T09:25:00Z",
      "mergedAt": "2023-12-06T09:25:00Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "BenjaminSchubert"
      },
      "baseRefName": "main",
      "headRefName": "bschubert/separate-diff-report",
      "author": {
        "login": "BenjaminSchubert"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Merge branch 'main' into bschubert/separate-diff-report",
              "committedDate": "2023-12-06T09:10:50Z",
              "author": {
                "name": "Benjamin Schubert",
                "email": "bschubert15@bloomberg.net",
                "user": {
                  "login": "BenjaminSchubert"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-12-03T14:20:08Z",
            "body": "I like it! Just one question.\r\n\r\n> The non-verbose mode is now slightly worse (outside CI), with the output being truncated. Do we want to cater for that case and not add the newline in that case?\r\n\r\nIt seems OK to me, i.e. no need to special case.\r\n\r\n> This improvement is part of an issue that already has a changelog entry. Should I merge both or how should the file be named? (I currently added a .2 to it)\r\n\r\nYou can add it to the previous changelog entry, or you can add a new one. I plan to hand-edit the pytest 8 release notes anyway to make them more coherent so we can merge them then."
          },
          {
            "author": {
              "login": "BenjaminSchubert"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-12-03T14:24:38Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-12-03T14:51:07Z",
            "body": "Thanks @BenjaminSchubert, LGTM.\r\n\r\n(Note: when a PR is approved you're free to merge, but let's keep this open for a couple of days to let others review if they'd like)"
          },
          {
            "author": {
              "login": "BenjaminSchubert"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-12-03T15:00:07Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-12-03T16:40:59Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11658,
      "title": "[automated] Update plugin list",
      "body": "[automated] Update plugin list",
      "state": "MERGED",
      "createdAt": "2023-12-03T00:20:09Z",
      "updatedAt": "2023-12-03T14:49:37Z",
      "closedAt": "2023-12-03T14:49:36Z",
      "mergedAt": "2023-12-03T14:49:36Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "update-plugin-list/patch-5689d806c",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[automated] Update plugin list",
              "committedDate": "2023-12-03T00:20:07Z",
              "author": {
                "name": "pytest bot",
                "email": "pytestbot@users.noreply.github.com",
                "user": {
                  "login": "pytestbot"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11656,
      "title": "Draft proposal for ExpectedExceptionGroup",
      "body": "Proposal for fixing #11538\r\n\r\n \r\n\r\n- [ ] TODO: Include documentation when adding new features.\r\n- [X] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n- [ ] TODO: add a changelog\r\n- [ ] TODO: clean up some messy code\r\n- [ ] TODO: Add yourself to `AUTHORS` in alphabetical order.\r\n<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n\r\n-->\r\n",
      "state": "CLOSED",
      "createdAt": "2023-12-01T17:06:51Z",
      "updatedAt": "2024-11-15T13:53:23Z",
      "closedAt": "2024-01-24T14:03:34Z",
      "mergedAt": null,
      "isDraft": true,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "expected_exception_group",
      "author": {
        "login": "jakkdl"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "type->Type",
              "committedDate": "2023-12-01T17:28:12Z",
              "author": {
                "name": "jakkdl",
                "email": "h6+github@pm.me",
                "user": {
                  "login": "jakkdl"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11654,
      "title": "testing: remove a no longer necessary skip",
      "body": "pytest-xdist was released at 2019-02-15, seems enough time.\r\n\r\n<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "MERGED",
      "createdAt": "2023-11-30T17:54:53Z",
      "updatedAt": "2023-11-30T22:28:24Z",
      "closedAt": "2023-11-30T22:28:23Z",
      "mergedAt": "2023-11-30T22:28:23Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "testing-unnecessary-skip",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "testing: remove a no longer necessary skip\n\npytest-xdist was released at 2019-02-15, seems enough time.",
              "committedDate": "2023-11-30T17:53:31Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2023-11-30T20:09:38Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11653,
      "title": "Test case verbosity",
      "body": "<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [X] Include documentation when adding new features.\r\n- [X] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [X] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [X] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\nAllow for the output of test case execution to be controlled independently from the application verbosity level. `verbosity_test_case` is the new ini setting to adjust this functionality.\r\n\r\nAddresses #11639",
      "state": "MERGED",
      "createdAt": "2023-11-30T13:25:07Z",
      "updatedAt": "2024-02-24T21:52:43Z",
      "closedAt": "2024-02-24T19:27:54Z",
      "mergedAt": "2024-02-24T19:27:54Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "test-case-verbosity",
      "author": {
        "login": "plannigan"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 13
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[pre-commit.ci] auto fixes from pre-commit.com hooks\n\nfor more information, see https://pre-commit.ci",
              "committedDate": "2024-02-24T16:04:29Z",
              "author": {
                "name": "pre-commit-ci[bot]",
                "email": "66853113+pre-commit-ci[bot]@users.noreply.github.com",
                "user": {
                  "login": "pre-commit-ci[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "CHANGES_REQUESTED",
            "submittedAt": "2023-12-02T11:36:48Z",
            "body": "Thanks @plannigan for following up with this. \ud83d\udc4d \r\n\r\nPlease take a look at my comments.\r\n\r\nOne thing I'm not entirely happy is with the \"test cases\" name, as that IMHO does not convey at all what the flag does. On the other hand I don't have a good suggestion to provide. Would really like some input from other maintainers here (@bluetech @RonnyPfannschmidt @The-Compiler)."
          },
          {
            "author": {
              "login": "plannigan"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-12-03T02:26:34Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-12-14T11:02:20Z",
            "body": "LGTM!\r\n\r\nWill leave it open for a few days to give others a chance to chime in -- perhaps someone will come up with a great suggestion for the option name. \ud83d\ude4f "
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-02-24T19:26:45Z",
            "body": "Again thanks @plannigan for all the work on this. \ud83d\udc4d "
          }
        ]
      }
    },
    {
      "number": 11652,
      "title": "Fix: fix the \"Customizing Colors\" documentation section",
      "body": "<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->Close #11573 \r\nHello,\r\nThe initialisation of logging-plugin is done with the option \"trylast=True\".\r\n\r\n\r\nhttps://github.com/pytest-dev/pytest/blob/81c06b3955b542280e801c2627266425f00ccbc9/src/_pytest/logging.py#L624-L627\r\n\r\nThe problem is solved when I add also \"trylast=True\" to make it run after the initialisation.",
      "state": "MERGED",
      "createdAt": "2023-11-30T12:54:06Z",
      "updatedAt": "2023-12-01T14:25:01Z",
      "closedAt": "2023-12-01T14:25:01Z",
      "mergedAt": "2023-12-01T14:25:01Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "fix-logging-doc",
      "author": {
        "login": "touilleWoman"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Fix: fix the \"Customizing Colors\" documentation section",
              "committedDate": "2023-11-30T12:36:36Z",
              "author": {
                "name": "touilleWoman",
                "email": "jie.zhou.ac@gmail.com",
                "user": {
                  "login": "touilleWoman"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-11-30T14:00:45Z",
            "body": ""
          },
          {
            "author": {
              "login": "touilleWoman"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-12-01T09:08:42Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-12-01T14:24:38Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11650,
      "title": "testing: fix isolation issue in `tr` fixture",
      "body": "The default for `_prepareconfig` is to use `sys.argv`, which in this case are the flags passed to (top-level) `pytest`. This is not the intention, the tests themselves should not be affected by it.",
      "state": "MERGED",
      "createdAt": "2023-11-28T17:59:49Z",
      "updatedAt": "2023-11-28T18:14:23Z",
      "closedAt": "2023-11-28T18:14:20Z",
      "mergedAt": "2023-11-28T18:14:20Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "tr-test-isolation",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "testing: fix isolation issue in `tr` fixture\n\nThe default for `_prepareconfig` is to use `sys.argv`, which in this\ncase are the flags passed to (top-level) `pytest`. This is not the\nintention, the tests themselves should not be affected by it.",
              "committedDate": "2023-11-28T17:54:24Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2023-11-28T18:02:05Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11648,
      "title": "pytester: avoid EncodingWarning from `locale.getpreferredencoding`",
      "body": "When running `tox -e py-lsof` I get a deluge of this warning:\r\n\r\n```\r\nsrc/pytest/.tox/py-lsof-numpy-pexpect/lib/python3.11/site-packages/_pytest/pytester.py:130: EncodingWarning: UTF-8 Mode affects locale.getpreferredencoding(). Consider locale.getencoding() instead.\r\n```\r\n\r\nUse `locale.getencoding` instead.\r\n\r\n<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "MERGED",
      "createdAt": "2023-11-28T15:49:11Z",
      "updatedAt": "2023-11-28T16:12:33Z",
      "closedAt": "2023-11-28T16:12:29Z",
      "mergedAt": "2023-11-28T16:12:29Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "fix-locale-encoding",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "pytester: avoid EncodingWarning from `locale.getpreferredencoding`\n\nWhen running `tox -e py-lsof` I get a deluge of this warning:\n\n```\nsrc/pytest/.tox/py-lsof-numpy-pexpect/lib/python3.11/site-packages/_pytest/pytester.py:130: EncodingWarning: UTF-8 Mode affects locale.getpreferredencoding(). Consider locale.getencoding() instead.\n```\n\nUse `locale.getencoding` instead.",
              "committedDate": "2023-11-28T15:40:58Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2023-11-28T15:51:56Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-11-28T16:06:45Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-11-28T16:09:25Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11646,
      "title": "Rework Session and Package collection ",
      "body": "This PR implements the proposals in #7777. ",
      "state": "MERGED",
      "createdAt": "2023-11-27T21:47:19Z",
      "updatedAt": "2024-01-06T12:12:45Z",
      "closedAt": "2023-12-30T10:51:48Z",
      "mergedAt": "2023-12-30T10:51:48Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "pkg-collect",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": {
        "title": "8.0",
        "dueOn": null
      },
      "comments": {
        "totalCount": 9
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Different fix for conftest loading\n\n--- Current main\n\nIn current main (before pervious commit), calls to gethookproxy/ihook\nare the trigger for loading non-initial conftests. This basically means\nthat conftest loading is done almost as a random side-effect,\nuncontrolled and very non-obvious. And it also dashes any hope of making\ngethookproxy faster (gethookproxy shows up prominently in pytest\nprofiles).\n\nI've wanted to improve this for a while, #11268 was the latest step\ntowards that.\n\n--- PR before change\n\nIn this PR, I ran into a problem.\n\nPreviously, Session and Package did all of the directory traversals\ninside of their collect, which loaded the conftests as a side effect. If\nthe conftest loading failed, it will occur inside of the collect() and\ncause it to be reported as a failure.\n\nNow I've changed things such that Session.collect and Package.collect no\nlonger recurse, but just collect their immediate descendants, and\ngenitems does the recursive expansion work.\n\nThe problem though is that genitems() doesn't run inside of specific\ncollector's collect context. So when it loads a conftest, and the\nconftest loading fails, the exception isn't handled by any CollectReport\nand causes an internal error instead.\n\nThe way I've fixed this problem is by loading the conftests eagerly in a\npytest_collect_directory post-wrapper, but only during genitems to make\nsure the directory is actually selected.\n\nThis solution in turn caused the conftests to be collected too early;\nspecifically, the plugins are loaded during the parent's collect(), one\nafter the other as the directory entries are collected. So when the\nihook is hoisted out of the loop, new plugins are loaded inside the\nloop, and due to the way the hook proxy works, they are added to the\nihook even though they're supposed to be scoped to the child collectors.\nSo no hoisting.\n\n--- PR after change\n\nNow I've come up with a better solution: since now the collection tree\nactually reflects the filesystem tree, what we really want is to load\nthe conftest of a directory right before we run its collect(). A\nconftest can affect a directory's collect() (e.g. with a\npytest_ignore_collect hookimpl), but it cannot affect how the directory\nnode itself is collected. So I just moved the conftest loading to be\ndone right before calling collect, but still inside the CollectReport\ncontext.\n\nThis allows the hoisting, and also removes conftest loading from\ngethookproxy since it's no longer necessary. And it will probably enable\nfurther cleanups. So I'm happy with it.",
              "committedDate": "2023-12-10T15:01:39Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": [
          {
            "requestedReviewer": {
              "login": "RonnyPfannschmidt"
            }
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "CHANGES_REQUESTED",
            "submittedAt": "2023-11-29T22:12:09Z",
            "body": "its amazing to see this massive undertaking take shape\r\n\r\nthere are some detail devils and i noted 2 nitpicks\r\n\r\ni will try to do some deeper digging into the python collector changes\r\n\r\ni'll avoid bikesheding the Dir/Directory naming - naming rights for the implementor !"
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-11-30T18:08:33Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-11-30T18:17:29Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-11-30T18:26:20Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-11-30T18:41:15Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-11-30T18:42:10Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-11-30T18:43:50Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-11-30T18:45:49Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-11-30T18:59:27Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-11-30T22:31:01Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-11-30T22:41:02Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-12-01T05:45:17Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-12-01T05:46:20Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "CHANGES_REQUESTED",
            "submittedAt": "2023-12-01T14:23:53Z",
            "body": "Awesome work @bluetech! Thanks a lot for working on this. \ud83d\udc4d \r\n\r\nLeft a bunch of minor suggestions, please take a look. "
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-12-02T21:29:01Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-12-02T21:33:34Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-12-02T21:34:18Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-12-02T22:00:15Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-12-02T22:02:10Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-12-02T22:14:58Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11645,
      "title": "[pre-commit.ci] pre-commit autoupdate",
      "body": "<!--pre-commit.ci start-->\nupdates:\n- [github.com/pre-commit/mirrors-mypy: v1.7.0 \u2192 v1.7.1](https://github.com/pre-commit/mirrors-mypy/compare/v1.7.0...v1.7.1)\n<!--pre-commit.ci end-->",
      "state": "MERGED",
      "createdAt": "2023-11-27T20:21:13Z",
      "updatedAt": "2023-11-27T20:55:07Z",
      "closedAt": "2023-11-27T20:55:06Z",
      "mergedAt": "2023-11-27T20:55:06Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "main",
      "headRefName": "pre-commit-ci-update-config",
      "author": {
        "login": "pre-commit-ci"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[pre-commit.ci] pre-commit autoupdate\n\nupdates:\n- [github.com/pre-commit/mirrors-mypy: v1.7.0 \u2192 v1.7.1](https://github.com/pre-commit/mirrors-mypy/compare/v1.7.0...v1.7.1)",
              "committedDate": "2023-11-27T20:21:12Z",
              "author": {
                "name": "pre-commit-ci[bot]",
                "email": "66853113+pre-commit-ci[bot]@users.noreply.github.com",
                "user": {
                  "login": "pre-commit-ci[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2023-11-27T20:37:10Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11644,
      "title": "Various cleanups of the vendored pprint module",
      "body": "After vendoring and refactoring how we use the pprint module, there is quite a lot of code that can be simplified.\r\n\r\nThis is a first stab at it for various simple cleanups.\r\n\r\nI was not sure if that's worth adding a changelog entry for it, please let me know what category it should be if you think it is",
      "state": "MERGED",
      "createdAt": "2023-11-27T18:39:15Z",
      "updatedAt": "2023-12-02T10:48:37Z",
      "closedAt": "2023-11-27T22:54:47Z",
      "mergedAt": "2023-11-27T22:54:46Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "BenjaminSchubert"
      },
      "baseRefName": "main",
      "headRefName": "bschubert/pprint-cleanup",
      "author": {
        "login": "BenjaminSchubert"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 5
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "pprint: use a set instead of a dict for the context\n\nThis is really what the context is doing, we don't need to use a dict\nfor it",
              "committedDate": "2023-11-27T22:40:09Z",
              "author": {
                "name": "Benjamin Schubert",
                "email": "bschubert15@bloomberg.net",
                "user": {
                  "login": "BenjaminSchubert"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-11-27T19:44:56Z",
            "body": "Nice!"
          },
          {
            "author": {
              "login": "BenjaminSchubert"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-11-27T19:50:35Z",
            "body": ""
          },
          {
            "author": {
              "login": "BenjaminSchubert"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-11-27T19:50:42Z",
            "body": ""
          },
          {
            "author": {
              "login": "BenjaminSchubert"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-11-27T19:51:30Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11642,
      "title": "build(deps): Bump anyio[curio,trio] from 4.0.0 to 4.1.0 in /testing/plugins_integration",
      "body": "Bumps [anyio[curio,trio]](https://github.com/agronholm/anyio) from 4.0.0 to 4.1.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/agronholm/anyio/releases\">anyio[curio,trio]'s releases</a>.</em></p>\n<blockquote>\n<h2>4.1.0</h2>\n<ul>\n<li>Adapted to API changes made in Trio v0.23:\n<ul>\n<li>Call <code>trio.to_thread.run_sync()</code> using the <code>abandon_on_cancel</code> keyword argument instead of <code>cancellable</code></li>\n<li>Removed a checkpoint when exiting a task group</li>\n<li>Renamed the <code>cancellable</code> argument in <code>anyio.to_thread.run_sync()</code> to <code>abandon_on_cancel</code> (and deprecated the old parameter name)</li>\n<li>Bumped minimum version of Trio to v0.23</li>\n</ul>\n</li>\n<li>Added support for voluntary thread cancellation via <code>anyio.from_thread.check_cancelled()</code></li>\n<li>Bumped minimum version of trio to v0.23</li>\n<li>Exposed the <code>ResourceGuard</code> class in the public API (<a href=\"https://redirect.github.com/agronholm/anyio/issues/627\">#627</a>)</li>\n<li>Fixed <code>RuntimeError: Runner is closed</code> when running higher-scoped async generator fixtures in some cases (<a href=\"https://redirect.github.com/agronholm/anyio/issues/619\">#619</a>)</li>\n<li>Fixed discrepancy between <code>asyncio</code> and <code>trio</code> where reraising a cancellation exception in an <code>except*</code> block would incorrectly bubble out of its cancel scope (<a href=\"https://redirect.github.com/agronholm/anyio/issues/634\">#634</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/agronholm/anyio/blob/master/docs/versionhistory.rst\">anyio[curio,trio]'s changelog</a>.</em></p>\n<blockquote>\n<h1>Version history</h1>\n<p>This library adheres to <code>Semantic Versioning 2.0 &lt;http://semver.org/&gt;</code>_.</p>\n<p><strong>UNRELEASED</strong></p>\n<ul>\n<li>Add support for <code>byte</code>-based paths in <code>connect_unix</code>, <code>create_unix_listeners</code>,\n<code>create_unix_datagram_socket</code>, and <code>create_connected_unix_datagram_socket</code>. (PR by\nLura Skye.)</li>\n</ul>\n<p><strong>4.1.0</strong></p>\n<ul>\n<li>\n<p>Adapted to API changes made in Trio v0.23:</p>\n<ul>\n<li>Call <code>trio.to_thread.run_sync()</code> using the <code>abandon_on_cancel</code> keyword argument\ninstead of <code>cancellable</code></li>\n<li>Removed a checkpoint when exiting a task group</li>\n<li>Renamed the <code>cancellable</code> argument in <code>anyio.to_thread.run_sync()</code> to\n<code>abandon_on_cancel</code> (and deprecated the old parameter name)</li>\n<li>Bumped minimum version of Trio to v0.23</li>\n</ul>\n</li>\n<li>\n<p>Added support for voluntary thread cancellation via\n<code>anyio.from_thread.check_cancelled()</code></p>\n</li>\n<li>\n<p>Bumped minimum version of trio to v0.23</p>\n</li>\n<li>\n<p>Exposed the <code>ResourceGuard</code> class in the public API\n(<code>[#627](https://github.com/agronholm/anyio/issues/627) &lt;https://github.com/agronholm/anyio/issues/627&gt;</code>_)</p>\n</li>\n<li>\n<p>Fixed <code>RuntimeError: Runner is closed</code> when running higher-scoped async generator\nfixtures in some cases (<code>[#619](https://github.com/agronholm/anyio/issues/619) &lt;https://github.com/agronholm/anyio/issues/619&gt;</code>_)</p>\n</li>\n<li>\n<p>Fixed discrepancy between <code>asyncio</code> and <code>trio</code> where reraising a cancellation\nexception in an <code>except*</code> block would incorrectly bubble out of its cancel scope\n(<code>[#634](https://github.com/agronholm/anyio/issues/634) &lt;https://github.com/agronholm/anyio/issues/634&gt;</code>_)</p>\n</li>\n</ul>\n<p><strong>4.0.0</strong></p>\n<ul>\n<li>\n<p><strong>BACKWARDS INCOMPATIBLE</strong> Replaced AnyIO's own <code>ExceptionGroup</code> class with the PEP\n654 <code>BaseExceptionGroup</code> and <code>ExceptionGroup</code></p>\n</li>\n<li>\n<p><strong>BACKWARDS INCOMPATIBLE</strong> Changes to cancellation semantics:</p>\n<ul>\n<li>Any exceptions raising out of a task groups are now nested inside an\n<code>ExceptionGroup</code> (or <code>BaseExceptionGroup</code> if one or more <code>BaseException</code> were\nincluded)</li>\n<li>Fixed task group not raising a cancellation exception on asyncio at exit if no child\ntasks were spawned and an outer cancellation scope had been cancelled before</li>\n<li>Ensured that exiting a <code>TaskGroup</code> always hits a yield point, regardless of\nwhether there are running child tasks to be waited on</li>\n<li>On asyncio, cancel scopes will defer cancelling tasks that are scheduled to resume\nwith a finished future</li>\n<li>On asyncio and Python 3.9/3.10, cancel scopes now only suppress cancellation\nexceptions if the cancel message matches the scope</li>\n<li>Task groups on all backends now raise a single cancellation exception when an outer</li>\n</ul>\n</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/agronholm/anyio/commit/46a45c7454e4d87ab5671b158f746a2b3beaaae9\"><code>46a45c7</code></a> Bumped up the version</li>\n<li><a href=\"https://github.com/agronholm/anyio/commit/8079a229aced4851b034deb99802a5f0bcf61269\"><code>8079a22</code></a> Added links to closed issues</li>\n<li><a href=\"https://github.com/agronholm/anyio/commit/3a0179377def4b766e037f11db500fd064a447a5\"><code>3a01793</code></a> Added a &quot;Queues&quot; section to the docs for anyone looking for queues</li>\n<li><a href=\"https://github.com/agronholm/anyio/commit/3186fb98cc6622f0784ecee088100925a5599e98\"><code>3186fb9</code></a> Implemented voluntary cancellation in worker threads (<a href=\"https://redirect.github.com/agronholm/anyio/issues/629\">#629</a>)</li>\n<li><a href=\"https://github.com/agronholm/anyio/commit/c360b99cf132bde5b0cd7f7c8564638ebf648c42\"><code>c360b99</code></a> Fixed asyncio <code>CancelScope</code> not recognizing its own cancellation exception (#...</li>\n<li><a href=\"https://github.com/agronholm/anyio/commit/523381a131e5dd040d7e86fcf83286c3e6abf315\"><code>523381a</code></a> Install uvloop on Python 3.12 too for tests</li>\n<li><a href=\"https://github.com/agronholm/anyio/commit/f0707cdde864933694cd9f058a42072614e4520b\"><code>f0707cd</code></a> Fixed <code>RuntimeError: Runner is closed</code> in the pytest plugin (<a href=\"https://redirect.github.com/agronholm/anyio/issues/635\">#635</a>)</li>\n<li><a href=\"https://github.com/agronholm/anyio/commit/97b7b082ec4a48e0eea6c6f9e9543f940654cd09\"><code>97b7b08</code></a> Fixed ExceptionGroup example (<a href=\"https://redirect.github.com/agronholm/anyio/issues/637\">#637</a>)</li>\n<li><a href=\"https://github.com/agronholm/anyio/commit/0eab46a06f78a599116091b8e4ca4cbb5dc87093\"><code>0eab46a</code></a> [pre-commit.ci] pre-commit autoupdate (<a href=\"https://redirect.github.com/agronholm/anyio/issues/636\">#636</a>)</li>\n<li><a href=\"https://github.com/agronholm/anyio/commit/019835a57c6db9b0dd7f2e36aaf2d00a7423a12f\"><code>019835a</code></a> Updated pre-commit modules</li>\n<li>Additional commits viewable in <a href=\"https://github.com/agronholm/anyio/compare/4.0.0...4.1.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=anyio[curio,trio]&package-manager=pip&previous-version=4.0.0&new-version=4.1.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2023-11-27T03:05:25Z",
      "updatedAt": "2023-11-27T08:22:46Z",
      "closedAt": "2023-11-27T08:22:45Z",
      "mergedAt": "2023-11-27T08:22:45Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/pip/testing/plugins_integration/anyio-curiotrio--4.1.0",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "python"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump anyio[curio,trio] in /testing/plugins_integration\n\nBumps [anyio[curio,trio]](https://github.com/agronholm/anyio) from 4.0.0 to 4.1.0.\n- [Release notes](https://github.com/agronholm/anyio/releases)\n- [Changelog](https://github.com/agronholm/anyio/blob/master/docs/versionhistory.rst)\n- [Commits](https://github.com/agronholm/anyio/compare/4.0.0...4.1.0)\n\n---\nupdated-dependencies:\n- dependency-name: anyio[curio,trio]\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2023-11-27T03:05:25Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-11-27T08:22:39Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11641,
      "title": "build(deps): Bump pytest-rerunfailures from 12.0 to 13.0 in /testing/plugins_integration",
      "body": "Bumps [pytest-rerunfailures](https://github.com/pytest-dev/pytest-rerunfailures) from 12.0 to 13.0.\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/pytest-dev/pytest-rerunfailures/blob/master/CHANGES.rst\">pytest-rerunfailures's changelog</a>.</em></p>\n<blockquote>\n<h2>13.0 (2023-11-22)</h2>\n<p>Breaking changes\n++++++++++++++++</p>\n<ul>\n<li>Drop support for pytest &lt; 7.0.</li>\n</ul>\n<p>Features\n++++++++</p>\n<ul>\n<li>Add support for Python 3.12.</li>\n</ul>\n<p>Bug fixes\n+++++++++</p>\n<ul>\n<li>\n<p>Fix crashitem names mismatch between client and server.\n(<code>[#172](https://github.com/pytest-dev/pytest-rerunfailures/issues/172) &lt;https://github.com/pytest-dev/pytest-rerunfailures/issues/172&gt;</code>_)</p>\n</li>\n<li>\n<p>Fix crash when setup fails with --rerun-except flag.\n(<code>[#230](https://github.com/pytest-dev/pytest-rerunfailures/issues/230) &lt;https://github.com/pytest-dev/pytest-rerunfailures/issues/230&gt;</code>_)</p>\n</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pytest-dev/pytest-rerunfailures/commit/6300466b50d017a8460a2e1b057d5840b247708a\"><code>6300466</code></a> Preparing release 13.0</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-rerunfailures/commit/fa7b4e41e90b57d61e477a1bedf63149f74c3d1e\"><code>fa7b4e4</code></a> Add support for Python 3.12. (<a href=\"https://redirect.github.com/pytest-dev/pytest-rerunfailures/issues/245\">#245</a>)</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-rerunfailures/commit/f3ef8b3f57d2351b669bc766be3562a72c216d39\"><code>f3ef8b3</code></a> Fix crash with setup errors and --rerun-except flag (<a href=\"https://redirect.github.com/pytest-dev/pytest-rerunfailures/issues/244\">#244</a>)</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-rerunfailures/commit/17657723580ae8423af69b6cb5c7a056fc6be89c\"><code>1765772</code></a> Fix Issue <a href=\"https://redirect.github.com/pytest-dev/pytest-rerunfailures/issues/239\">#239</a> (<a href=\"https://redirect.github.com/pytest-dev/pytest-rerunfailures/issues/240\">#240</a>)</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-rerunfailures/commit/1069ae51507184ec5480d0feacf6e58b38e64d92\"><code>1069ae5</code></a> Update pre-commit versions. (<a href=\"https://redirect.github.com/pytest-dev/pytest-rerunfailures/issues/243\">#243</a>)</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-rerunfailures/commit/96bbc4fd81e81216205eb7662da7ef234077569a\"><code>96bbc4f</code></a> Fix crashitem names mismatch between client and server. (<a href=\"https://redirect.github.com/pytest-dev/pytest-rerunfailures/issues/173\">#173</a>)</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-rerunfailures/commit/df664dd8ccca89d30134d36f60310612aad4c4de\"><code>df664dd</code></a> MAINT: remove workaround for old, unsupported pytest versions (<a href=\"https://redirect.github.com/pytest-dev/pytest-rerunfailures/issues/233\">#233</a>)</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-rerunfailures/commit/abbce9ec644b7db735f607b89214fb1236849a8b\"><code>abbce9e</code></a> Improve docstrings (<a href=\"https://redirect.github.com/pytest-dev/pytest-rerunfailures/issues/229\">#229</a>)</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-rerunfailures/commit/c6ff082a36e927b27fd8418737f49e116d03a22a\"><code>c6ff082</code></a> Merge pull request <a href=\"https://redirect.github.com/pytest-dev/pytest-rerunfailures/issues/227\">#227</a> from pytest-dev/release-12.0</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-rerunfailures/commit/73affc8b79da21a6e1933c0d2e359e2011fe15f7\"><code>73affc8</code></a> Back to development: 12.1</li>\n<li>See full diff in <a href=\"https://github.com/pytest-dev/pytest-rerunfailures/compare/12.0...13.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pytest-rerunfailures&package-manager=pip&previous-version=12.0&new-version=13.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2023-11-27T03:05:21Z",
      "updatedAt": "2023-11-27T08:20:10Z",
      "closedAt": "2023-11-27T08:20:09Z",
      "mergedAt": "2023-11-27T08:20:09Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/pip/testing/plugins_integration/pytest-rerunfailures-13.0",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "python"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump pytest-rerunfailures in /testing/plugins_integration\n\nBumps [pytest-rerunfailures](https://github.com/pytest-dev/pytest-rerunfailures) from 12.0 to 13.0.\n- [Changelog](https://github.com/pytest-dev/pytest-rerunfailures/blob/master/CHANGES.rst)\n- [Commits](https://github.com/pytest-dev/pytest-rerunfailures/compare/12.0...13.0)\n\n---\nupdated-dependencies:\n- dependency-name: pytest-rerunfailures\n  dependency-type: direct:production\n  update-type: version-update:semver-major\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2023-11-27T03:05:20Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-11-27T08:20:01Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11640,
      "title": "[automated] Update plugin list",
      "body": "[automated] Update plugin list",
      "state": "MERGED",
      "createdAt": "2023-11-26T00:19:54Z",
      "updatedAt": "2023-11-26T14:09:04Z",
      "closedAt": "2023-11-26T14:09:03Z",
      "mergedAt": "2023-11-26T14:09:03Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "update-plugin-list/patch-acab13fcc",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[automated] Update plugin list",
              "committedDate": "2023-11-26T00:19:52Z",
              "author": {
                "name": "pytest bot",
                "email": "pytestbot@users.noreply.github.com",
                "user": {
                  "login": "pytestbot"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11638,
      "title": "Reset color-related envvars for testing",
      "body": "Reset color-related environment variables in a fixture to prevent them from affecting test results.  Otherwise, some of the tests fail e.g. if NO_COLOR is set in the calling environment.\r\n\r\n--------\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [x] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n",
      "state": "MERGED",
      "createdAt": "2023-11-25T11:01:59Z",
      "updatedAt": "2023-11-26T14:56:04Z",
      "closedAt": "2023-11-26T14:09:18Z",
      "mergedAt": "2023-11-26T14:09:18Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "color-test",
      "author": {
        "login": "mgorny"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Reset color-related envvars for testing\n\nReset color-related environment variables in a fixture to prevent them\nfrom affecting test results.  Otherwise, some of the tests fail\ne.g. if NO_COLOR is set in the calling environment.",
              "committedDate": "2023-11-25T11:03:22Z",
              "author": {
                "name": "Micha\u0142 G\u00f3rny",
                "email": "mgorny@gentoo.org",
                "user": {
                  "login": "mgorny"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-11-26T01:22:54Z",
            "body": "Sounds reasonable. \ud83d\udc4d "
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-11-26T01:23:06Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11635,
      "title": "docs changes about limitations with hook function ordering",
      "body": "This PR is to address the issue in https://github.com/pytest-dev/pytest/issues/11307. \r\n\r\nApproach 2 is taken, where a link to the limitations is added to hook function ordering, so users will be aware of the limitations even when not declaring new hooks. The limitations were previously only in the `Declaring New Hooks` section. \r\n\r\n",
      "state": "OPEN",
      "createdAt": "2023-11-24T16:09:42Z",
      "updatedAt": "2024-06-20T14:00:34Z",
      "closedAt": null,
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "main",
      "author": {
        "login": "jack-zj-liu"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "status: needs information"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "changed _pytest to pytest_",
              "committedDate": "2023-12-03T20:21:48Z",
              "author": {
                "name": "Leeds9z",
                "email": "jack.liuzijia@gmail.com",
                "user": {
                  "login": "jack-zj-liu"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "CHANGES_REQUESTED",
            "submittedAt": "2023-11-27T08:30:05Z",
            "body": "Thanks @jack-zj-liu, please see my comment."
          }
        ]
      }
    },
    {
      "number": 11631,
      "title": "[7.4.x] Fix for operation on closed file in faulthandler teardown",
      "body": "Backport of PR #11584 to 7.4.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2023-11-22T20:05:46Z",
      "updatedAt": "2023-11-22T20:25:30Z",
      "closedAt": "2023-11-22T20:25:29Z",
      "mergedAt": "2023-11-22T20:25:29Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "7.4.x",
      "headRefName": "backport-11584-to-7.4.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[7.4.x] Fix for operation on closed file in faulthandler teardown",
              "committedDate": "2023-11-22T20:05:44Z",
              "author": {
                "name": "Simon Blanchard",
                "email": "bnomis@gmail.com",
                "user": {
                  "login": "bnomis"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-11-22T20:11:20Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11628,
      "title": "use name-independent github actions badge",
      "body": "if we were ever to change the `name:` field in `test.yml` this would suddenly break -- this references the workflow file directly (and is what github generates now for badges)\r\n",
      "state": "MERGED",
      "createdAt": "2023-11-19T16:04:55Z",
      "updatedAt": "2023-11-19T16:19:31Z",
      "closedAt": "2023-11-19T16:19:31Z",
      "mergedAt": "2023-11-19T16:19:31Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "asottile-patch-1",
      "author": {
        "login": "asottile"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "use name-independent github actions badge\n\nif we were ever to change the `name:` field in `test.yml` this would suddenly break -- this references the workflow file directly (and is what github generates now for badges)",
              "committedDate": "2023-11-19T16:04:41Z",
              "author": {
                "name": "Anthony Sottile",
                "email": "asottile@umich.edu",
                "user": {
                  "login": "asottile"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-11-19T16:19:22Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11627,
      "title": "[automated] Update plugin list",
      "body": "[automated] Update plugin list",
      "state": "MERGED",
      "createdAt": "2023-11-19T00:20:03Z",
      "updatedAt": "2023-11-19T14:57:26Z",
      "closedAt": "2023-11-19T14:57:25Z",
      "mergedAt": "2023-11-19T14:57:25Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "update-plugin-list/patch-80442ae2f",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[automated] Update plugin list",
              "committedDate": "2023-11-19T00:20:01Z",
              "author": {
                "name": "pytest bot",
                "email": "pytestbot@users.noreply.github.com",
                "user": {
                  "login": "pytestbot"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11626,
      "title": "Vendor in and absorb the pprint module from upstream",
      "body": "## Overview\r\n\r\nAs part of #11571, where lots of changes are added to how diffs are pretty printed, we need to vendor in the pprint module from cpython.\r\n\r\nThis is a separate PR to do just that for easier reviews.\r\n\r\n## Notes for maintainers\r\n\r\nI was not sure if we should keep the original 'Author' from CPython in the comment at the top of the module or if we should put another type of heading.\r\n\r\nI have also added some tests (adapted from #11571) to ensure this functionality was working for when we get there.\r\n\r\n@bluetech I ended up splitting it in more commits than you requested as I believed it would make it easier to review. I am happy to squash some of them back if you wish \r\n\r\nAnd finally, I believe there are some cleanups I believe we can do later on on the pprint module (adding types, cleaning up data structures). Is that something you would like or would you rather keep it closer to upstream? I can make a PR once both this one and #11571 are done if you wish",
      "state": "MERGED",
      "createdAt": "2023-11-18T09:35:18Z",
      "updatedAt": "2023-11-20T16:42:48Z",
      "closedAt": "2023-11-20T16:13:34Z",
      "mergedAt": "2023-11-20T16:13:34Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "bschubert/vendored-pprint",
      "author": {
        "login": "BenjaminSchubert"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Add some tests for the pprint module",
              "committedDate": "2023-11-20T13:00:08Z",
              "author": {
                "name": "Benjamin Schubert",
                "email": "bschubert15@bloomberg.net",
                "user": {
                  "login": "BenjaminSchubert"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-11-18T21:39:30Z",
            "body": "Thanks! LGTM, and was very easy to review. I'll merge this in a couple of days to give others a chance to review.\r\n\r\n> And finally, I believe there are some cleanups I believe we can do later on on the pprint module (adding types, cleaning up data structures). Is that something you would like or would you rather keep it closer to upstream? I can make a PR once both this one and https://github.com/pytest-dev/pytest/pull/11571 are done if you wish\r\n\r\nI think we can diverge from upstream. So :+1: on further cleanups/typings from me."
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-11-20T12:48:51Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-11-20T12:48:58Z",
            "body": "Great work!"
          }
        ]
      }
    },
    {
      "number": 11625,
      "title": "Add new filtering() context manager to LogCaptureFixture class",
      "body": "<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\nCloses #11610 \r\n\r\nPlease note that I also added a `versionadded:: 7.5` to the method\u2019s docstring, though I\u2019m not exactly sure how you guys handle the version number.\r\n\r\nAlso, regarding typing of the fixture args please note the recent change https://github.com/python/typeshed/pull/11018 and how with Python 3.12 the return type of the filter has changed. I am not sure how you\u2019d like to handle that, please advise.",
      "state": "MERGED",
      "createdAt": "2023-11-18T05:22:14Z",
      "updatedAt": "2023-11-24T12:38:34Z",
      "closedAt": "2023-11-24T12:38:34Z",
      "mergedAt": "2023-11-24T12:38:34Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "add-set-filter-to-caplog",
      "author": {
        "login": "jenstroeger"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Add new filtering() method to LogCaptureFixture class",
              "committedDate": "2023-11-18T05:17:42Z",
              "author": {
                "name": "Jens Troeger",
                "email": "jens.troeger@light-speed.de",
                "user": {
                  "login": "jenstroeger"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-11-20T12:53:22Z",
            "body": "Looks great, thanks!"
          }
        ]
      }
    },
    {
      "number": 11616,
      "title": "[7.4.x] XFAIL TestLocalPath.test_make_numbered_dir_multiprocess_safe",
      "body": "Backport of PR #11611 to 7.4.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2023-11-14T14:41:59Z",
      "updatedAt": "2023-11-14T15:08:30Z",
      "closedAt": "2023-11-14T15:08:29Z",
      "mergedAt": "2023-11-14T15:08:29Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "7.4.x",
      "headRefName": "backport-11611-to-7.4.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[7.4.x] XFAIL TestLocalPath.test_make_numbered_dir_multiprocess_safe",
              "committedDate": "2023-11-14T14:41:57Z",
              "author": {
                "name": "Miro Hron\u010dok",
                "email": "miro@hroncok.cz",
                "user": {
                  "login": "hroncok"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-11-14T14:42:36Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11614,
      "title": "type-ify nodes",
      "body": "this is a initial prepare to mitigate the \"smart ctors\" for node types\n",
      "state": "OPEN",
      "createdAt": "2023-11-14T09:32:04Z",
      "updatedAt": "2024-06-22T10:31:33Z",
      "closedAt": null,
      "mergedAt": null,
      "isDraft": true,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "ronny/nodes-type-ify",
      "author": {
        "login": "RonnyPfannschmidt"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "expand marker test debugging and restore maker discovery when obj is passed trough",
              "committedDate": "2024-06-22T10:30:22Z",
              "author": {
                "name": "Ronny Pfannschmidt",
                "email": "opensource@ronnypfannschmidt.de",
                "user": {
                  "login": "RonnyPfannschmidt"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11613,
      "title": "[pre-commit.ci] pre-commit autoupdate",
      "body": "<!--pre-commit.ci start-->\nupdates:\n- [github.com/psf/black: 23.10.1 \u2192 23.11.0](https://github.com/psf/black/compare/23.10.1...23.11.0)\n- [github.com/pre-commit/mirrors-mypy: v1.6.1 \u2192 v1.7.0](https://github.com/pre-commit/mirrors-mypy/compare/v1.6.1...v1.7.0)\n<!--pre-commit.ci end-->",
      "state": "MERGED",
      "createdAt": "2023-11-13T21:00:53Z",
      "updatedAt": "2023-11-14T10:51:01Z",
      "closedAt": "2023-11-14T10:51:00Z",
      "mergedAt": "2023-11-14T10:51:00Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "pre-commit-ci-update-config",
      "author": {
        "login": "pre-commit-ci"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Explicitly export error and path from py\n\nRequired by mypy 1.7.0",
              "committedDate": "2023-11-14T10:29:40Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-11-14T10:31:08Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11611,
      "title": "XFAIL TestLocalPath.test_make_numbered_dir_multiprocess_safe",
      "body": "The tested py.path.local.make_numbered_dir function is *not* multiprocess safe, because is uses os.listdir which itself is not.\r\n\r\nThe os.listdir documentation explicitly states that:\r\n\r\n> If a file is removed from or added to the directory during the call\r\n> of this function, whether a name for that file be included is unspecified.\r\n\r\nThis can lead to a race when:\r\n\r\n 1. process A attempts to create directory N\r\n 2. the creation fails, as another process already created it in the meantime\r\n 3. process A calls listdir to determine a more recent maxnum\r\n 4. processes B+ repeatedly create newer directories and they delete directory N\r\n 5. process A doesn't have directory N or any newer directory in listdir result\r\n 6. process A attempts to create directory N again and raises\r\n\r\nFor details, see https://github.com/pytest-dev/pytest/issues/11603#issuecomment-1805708144 and bellow.\r\n\r\nAdditionally, the test itself has a race in batch_make_numbered_dirs. When this function attempts to write to repro-N/foo, repro-N may have already been removed by another process.\r\n\r\nFor details, see https://github.com/pytest-dev/pytest/issues/11603#issuecomment-1804714313 and bellow.\r\n\r\n---\r\n\r\nThe tested py.path.local.make_numbered_dir function is not used in pytest. There is a different implementation in _pytest.pathlib.\r\n\r\nWe plan to remove this function in pytest 8.x.\r\n\r\nCloses https://github.com/pytest-dev/pytest/issues/11603\r\n\r\n<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [x] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [x] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [x] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "MERGED",
      "createdAt": "2023-11-13T09:03:30Z",
      "updatedAt": "2023-11-14T14:41:43Z",
      "closedAt": "2023-11-14T14:41:36Z",
      "mergedAt": "2023-11-14T14:41:36Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "xfail_test_make_numbered_dir_multiprocess_safe",
      "author": {
        "login": "hroncok"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "XFAIL TestLocalPath.test_make_numbered_dir_multiprocess_safe\n\nThe tested py.path.local.make_numbered_dir function is *not*\nmultiprocess safe, because is uses os.listdir which itself is not.\n\nThe os.listdir documentation explicitly states that:\n\n> If a file is removed from or added to the directory during the call\n> of this function, whether a name for that file be included is unspecified.\n\nThis can lead to a race when:\n\n 1. process A attempts to create directory N\n 2. the creation fails, as another process already created it in the meantime\n 3. process A calls listdir to determine a more recent maxnum\n 4. processes B+ repeatedly create newer directories and they delete directory N\n 5. process A doesn't have directory N or any newer directory in listdir result\n 6. process A attempts to create directory N again and raises\n\nFor details, see https://github.com/pytest-dev/pytest/issues/11603#issuecomment-1805708144\nand bellow.\n\nAdditionally, the test itself has a race in batch_make_numbered_dirs.\nWhen this functions attempts to write to repro-N/foo,\nrepro-N may have already been removed by another process.\n\nFor details, see https://github.com/pytest-dev/pytest/issues/11603#issuecomment-1804714313\nand bellow.\n\n---\n\nThe tested py.path.local.make_numbered_dir function is not used in pytest.\nThere is a different implementation in _pytest.pathlib.\n\nWe plan to remove this module eventually anyway.\n\nCloses https://github.com/pytest-dev/pytest/issues/11603",
              "committedDate": "2023-11-14T10:18:17Z",
              "author": {
                "name": "Miro Hron\u010dok",
                "email": "miro@hroncok.cz",
                "user": {
                  "login": "hroncok"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-11-13T13:01:06Z",
            "body": "Thanks @hroncok!"
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-11-13T13:02:00Z",
            "body": ""
          },
          {
            "author": {
              "login": "hroncok"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-11-14T10:15:25Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-11-14T10:18:45Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11609,
      "title": "build(deps): Bump pytest-django from 4.6.0 to 4.7.0 in /testing/plugins_integration",
      "body": "[//]: # (dependabot-start)\n\u26a0\ufe0f  **Dependabot is rebasing this PR** \u26a0\ufe0f \n\nRebasing might not happen immediately, so don't worry if this takes some time.\n\nNote: if you make any changes to this PR yourself, they will take precedence over the rebase.\n\n---\n\n[//]: # (dependabot-end)\n\nBumps [pytest-django](https://github.com/pytest-dev/pytest-django) from 4.6.0 to 4.7.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pytest-dev/pytest-django/releases\">pytest-django's releases</a>.</em></p>\n<blockquote>\n<h2>4.7.0</h2>\n<p><a href=\"https://pytest-django.readthedocs.io/en/latest/changelog.html#v4-7-0-2023-11-08\">https://pytest-django.readthedocs.io/en/latest/changelog.html#v4-7-0-2023-11-08</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/pytest-dev/pytest-django/blob/master/docs/changelog.rst\">pytest-django's changelog</a>.</em></p>\n<blockquote>\n<h2>v4.7.0 (2023-11-08)</h2>\n<p>Compatibility\n^^^^^^^^^^^^^</p>\n<ul>\n<li>\n<p>Official Django 5.0 support.</p>\n</li>\n<li>\n<p>Official Python 3.12 support.</p>\n</li>\n</ul>\n<p>Improvements\n^^^^^^^^^^^^</p>\n<ul>\n<li>\n<p>The Django test tags from the previous release now works on any\n:class:<code>~django.test.SimpleTestCase</code> (i.e. any Django test framework test\nclass), not just :class:<code>~django.test.TransactionTestCase</code> classes.</p>\n</li>\n<li>\n<p>Some improvements for those of us who like to type their tests:</p>\n<ul>\n<li>\n<p>Add <code>pytest_django.DjangoAssertNumQueries</code> for typing\n:fixture:<code>django_assert_num_queries</code> and\n:fixture:<code>django_assert_max_num_queries</code>.</p>\n</li>\n<li>\n<p>Add <code>pytest_django.DjangoCaptureOnCommitCallbacks</code> for typing\n:fixture:<code>django_capture_on_commit_callbacks</code>.</p>\n</li>\n<li>\n<p>Add <code>pytest_django.DjangoDbBlocker</code> for typing\n:fixture:<code>django_db_blocker</code>.</p>\n</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pytest-dev/pytest-django/commit/baaafd8ceefeb8600bd47bdc1075d9393448eb5e\"><code>baaafd8</code></a> Update changelog</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-django/commit/16ee779d7abeb77e91bc98e9e3ea78f98c3a5d76\"><code>16ee779</code></a> Add <code>pytest_django.DjangoAssertNumQueries</code> for typing purposes</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-django/commit/28484f46115f8d5124c8e82c19d6533e315b8fe8\"><code>28484f4</code></a> Add <code>pytest_django.DjangoCaptureOnCommitCallbacks</code> for typing purposes</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-django/commit/017bd77ef6505998a3958d8a3325c08b277a9512\"><code>017bd77</code></a> tests: type <code>django_db_blocker</code> fixtures</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-django/commit/d599fdbd0fb890dc3ce364c585056c537768441f\"><code>d599fdb</code></a> Move docs to use Sphinx's minimal Makefile</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-django/commit/fa6bb3439d0c6a0e9e1e8f7ab2a13b81a03ceecc\"><code>fa6bb34</code></a> Run non-test workflows with Python 3.12</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-django/commit/2414995ce468a6f7d4def0122e1f9f60a462d375\"><code>2414995</code></a> Avoid <code>_blocking_manager</code> mutable global</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-django/commit/d93631fbe27be1eedadc8d690b8e0b1bcfd200e4\"><code>d93631f</code></a> Export <code>pytest_django.DjangoDbBlocker</code> for typing purposes</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-django/commit/53eead4a9fc04907d9874bc376e3169e10d07d9d\"><code>53eead4</code></a> Maybe fix readthedocs build failures</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-django/commit/c5eeb37d95492709a6591cc47ad26569d5a3d014\"><code>c5eeb37</code></a> Checks for tags on any <code>SimpleTestCase</code> not just <code>TransactionTestCase</code></li>\n<li>Additional commits viewable in <a href=\"https://github.com/pytest-dev/pytest-django/compare/v4.6.0...v4.7.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pytest-django&package-manager=pip&previous-version=4.6.0&new-version=4.7.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2023-11-13T03:51:42Z",
      "updatedAt": "2023-11-13T08:29:22Z",
      "closedAt": "2023-11-13T08:29:21Z",
      "mergedAt": "2023-11-13T08:29:21Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/pip/testing/plugins_integration/pytest-django-4.7.0",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "python"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump pytest-django in /testing/plugins_integration\n\nBumps [pytest-django](https://github.com/pytest-dev/pytest-django) from 4.6.0 to 4.7.0.\n- [Release notes](https://github.com/pytest-dev/pytest-django/releases)\n- [Changelog](https://github.com/pytest-dev/pytest-django/blob/master/docs/changelog.rst)\n- [Commits](https://github.com/pytest-dev/pytest-django/compare/v4.6.0...v4.7.0)\n\n---\nupdated-dependencies:\n- dependency-name: pytest-django\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2023-11-13T03:51:41Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2023-11-13T08:29:15Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11608,
      "title": "build(deps): Bump pytest-html from 4.1.0 to 4.1.1 in /testing/plugins_integration",
      "body": "Bumps [pytest-html](https://github.com/pytest-dev/pytest-html) from 4.1.0 to 4.1.1.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pytest-dev/pytest-html/releases\">pytest-html's releases</a>.</em></p>\n<blockquote>\n<h2>4.1.1</h2>\n<h2>Changes</h2>\n<ul>\n<li>fix: Latest eslint is broken (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/769\">#769</a>) <a href=\"https://github.com/BeyondEvil\"><code>@\u200bBeyondEvil</code></a></li>\n<li>fix: original sort order (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/768\">#768</a>) <a href=\"https://github.com/BeyondEvil\"><code>@\u200bBeyondEvil</code></a></li>\n<li>[pre-commit.ci] pre-commit autoupdate (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/763\">#763</a>) <a href=\"https://github.com/pre-commit-ci\"><code>@\u200bpre-commit-ci</code></a></li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/pytest-dev/pytest-html/blob/master/docs/changelog.rst\">pytest-html's changelog</a>.</em></p>\n<blockquote>\n<p>4.1.1 (2023-11-07)</p>\n<pre><code>\n* Fix original initial sort INI-setting.\n<ul>\n<li>Thanks to <code>@sturmf &amp;lt;https://github.com/sturmf&amp;gt;</code>_ for reporting.\n</code></pre></li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pytest-dev/pytest-html/commit/cfd32d08488e2c6fb72f0617db94ab41d3fca8d0\"><code>cfd32d0</code></a> Release v4.1.1 (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/770\">#770</a>)</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-html/commit/736591734c22367afd5fced0c5e2a939bea46047\"><code>7365917</code></a> fix: Latest eslint is broken (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/769\">#769</a>)</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-html/commit/4ee12c42ccdf0274bed2a6fac14811658c7f9d49\"><code>4ee12c4</code></a> fix: original sort order (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/768\">#768</a>)</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-html/commit/e48a649247dca4d1bf55bd5a4fe345a2ba90239a\"><code>e48a649</code></a> [pre-commit.ci] pre-commit autoupdate (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/763\">#763</a>)</li>\n<li>See full diff in <a href=\"https://github.com/pytest-dev/pytest-html/compare/4.1.0...4.1.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pytest-html&package-manager=pip&previous-version=4.1.0&new-version=4.1.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2023-11-13T03:51:39Z",
      "updatedAt": "2023-11-13T08:28:55Z",
      "closedAt": "2023-11-13T08:28:55Z",
      "mergedAt": "2023-11-13T08:28:55Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/pip/testing/plugins_integration/pytest-html-4.1.1",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "python"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump pytest-html in /testing/plugins_integration\n\nBumps [pytest-html](https://github.com/pytest-dev/pytest-html) from 4.1.0 to 4.1.1.\n- [Release notes](https://github.com/pytest-dev/pytest-html/releases)\n- [Changelog](https://github.com/pytest-dev/pytest-html/blob/master/docs/changelog.rst)\n- [Commits](https://github.com/pytest-dev/pytest-html/compare/4.1.0...4.1.1)\n\n---\nupdated-dependencies:\n- dependency-name: pytest-html\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2023-11-13T03:51:38Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2023-11-13T08:28:49Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11607,
      "title": "[automated] Update plugin list",
      "body": "[automated] Update plugin list",
      "state": "MERGED",
      "createdAt": "2023-11-12T00:19:32Z",
      "updatedAt": "2023-11-12T13:41:09Z",
      "closedAt": "2023-11-12T13:41:08Z",
      "mergedAt": "2023-11-12T13:41:08Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "update-plugin-list/patch-7c7bdf457",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[automated] Update plugin list",
              "committedDate": "2023-11-12T00:19:30Z",
              "author": {
                "name": "pytest bot",
                "email": "pytestbot@users.noreply.github.com",
                "user": {
                  "login": "pytestbot"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11600,
      "title": "Use `False`, instead of `None` as default for `_XfailMarkDecorator`'s `condition` param and update doc",
      "body": "Thanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [x] Include documentation when adding new features.\r\n- [N/A] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [x] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nFixes comments https://github.com/pypa/setuptools/pull/3979#discussion_r1367963793 and https://github.com/pytest-dev/pytest/issues/10094#issuecomment-1774215699  \r\n\r\nThis makes it explicit that `None` is not a contractually supported value (even if it \"works\" because it's falsy). See https://github.com/pytest-dev/pytest/pull/11565#issuecomment-1801655848\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [x] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [x] Add yourself to `AUTHORS` in alphabetical order.\r\n",
      "state": "MERGED",
      "createdAt": "2023-11-08T20:02:10Z",
      "updatedAt": "2023-11-17T16:05:01Z",
      "closedAt": "2023-11-17T08:42:05Z",
      "mergedAt": "2023-11-17T08:42:05Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "pytest.mark.xfail.condition",
      "author": {
        "login": "Avasam"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[pre-commit.ci] auto fixes from pre-commit.com hooks\n\nfor more information, see https://pre-commit.ci",
              "committedDate": "2023-11-08T20:02:52Z",
              "author": {
                "name": "pre-commit-ci[bot]",
                "email": "66853113+pre-commit-ci[bot]@users.noreply.github.com",
                "user": {
                  "login": "pre-commit-ci[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-11-08T20:12:05Z",
            "body": "Thanks @Avasam, LGTM! \ud83d\udc4d \r\n\r\n@RonnyPfannschmidt can you take a look too please? "
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-11-17T08:41:44Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11594,
      "title": "Sanitize ini-options default handling #11282",
      "body": "**Overview**\r\nThis PR fixes #11282. As per the issue, if an option is created with default value as None and a value for the option is not set in the ini file, then trying to get the option value in code with config.getini() returns an empty list [] instead of None as expected.\r\n\r\n**Analysis**\r\nOn investigating it was found that the logic to return a default value for a configuration option is as follows:\r\nif a default value is set during the creation of the option, then the set default value is returned\r\nif a default value is NOT set during the option creation but the type for the option is provided, then return an empty list\r\nif neither a default value nor type is provided while creating the option, then assume its a string type and return an empty string\r\n\r\nThe above logic did not seem right. Also, the logic above did not honor None as an explicit default value to return.\r\n\r\n**Solution**\r\nThe solution provided in this PR will change the behavior in the following way:\r\nif a default value is NOT set during the option creation but the type for the option is provided, then a type specific default will be returned. That is as follows:\r\n\t\"paths\", \"pathlist\", \"args\", \"linelist\" types will have a default empty list [] as these are all lists\r\n\t\"bool\" will have False as default\r\n\t\"string\" will have empty string \"\" as default\r\n\tlogically there can't be any other type as the code checks for valid types before hand. However, just as a fail safe for future,        any other types will have a default of None\r\n\r\nif a default value is set explicitly as **None** during the option creation, then **None** will be returned as the default value irrespective of the type\r\nif neither a default value nor type is provided while creating the option, assume its a string type and return an empty string. (This assumption stays as it is from the existing code)\r\n\r\n**Checklist**\r\n- [ ] Include documentation when adding new features.\r\n- [X] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.",
      "state": "MERGED",
      "createdAt": "2023-11-07T13:01:20Z",
      "updatedAt": "2024-01-01T19:24:14Z",
      "closedAt": "2023-11-11T16:08:19Z",
      "mergedAt": "2023-11-11T16:08:19Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "main",
      "author": {
        "login": "SharadNair7"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 7
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Unit-test get_init_default_for_type",
              "committedDate": "2023-11-07T21:37:29Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "CHANGES_REQUESTED",
            "submittedAt": "2023-11-07T14:54:01Z",
            "body": "Looks great, left some suggestions please take a look!"
          },
          {
            "author": {
              "login": "SharadNair7"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-11-07T18:10:19Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-11-07T21:38:08Z",
            "body": "Thanks @SharadNair7!\r\n\r\nFYI I did some more tweaks in the code. \ud83d\udc4d  "
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2023-11-10T10:51:36Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11592,
      "title": "build(deps): Bump pytest-django from 4.5.2 to 4.6.0 in /testing/plugins_integration",
      "body": "Bumps [pytest-django](https://github.com/pytest-dev/pytest-django) from 4.5.2 to 4.6.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pytest-dev/pytest-django/releases\">pytest-django's releases</a>.</em></p>\n<blockquote>\n<h2>4.6.0</h2>\n<p><a href=\"https://github.com/pytest-dev/pytest-django/blob/master/docs/changelog.rst#v460-2023-10-30\">https://github.com/pytest-dev/pytest-django/blob/master/docs/changelog.rst#v460-2023-10-30</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/pytest-dev/pytest-django/blob/master/docs/changelog.rst\">pytest-django's changelog</a>.</em></p>\n<blockquote>\n<h2>v4.6.0 (2023-10-30)</h2>\n<p>Compatibility\n^^^^^^^^^^^^^</p>\n<ul>\n<li>\n<p>Official Django 4.1 &amp; 4.2 support.</p>\n</li>\n<li>\n<p>Official Python 3.11 support.</p>\n</li>\n<li>\n<p>Drop support for Python version 3.5, 3.6 &amp; 3.7.</p>\n</li>\n<li>\n<p>Drop official support for Django 4.0.</p>\n</li>\n<li>\n<p>Drop support for pytest &lt; 7.</p>\n</li>\n</ul>\n<p>Improvements\n^^^^^^^^^^^^</p>\n<ul>\n<li>\n<p>Add support for setting :py:attr:<code>available_apps &lt;django.test.TransactionTestCase.available_apps&gt;</code> in the :func:<code>django_db &lt;pytest.mark.django_db&gt;</code> marker.</p>\n</li>\n<li>\n<p>Convert Django :ref:<code>test tags &lt;django:topics-tagging-tests&gt;</code> to :ref:<code>Pytest markers &lt;pytest:mark examples&gt;</code>.</p>\n</li>\n<li>\n<p>Show Django's version in the pytest <code>django</code> report header.</p>\n</li>\n<li>\n<p>Add precise <code>pytest_django.asserts.assertQuerySetEqual</code> typing.</p>\n</li>\n</ul>\n<p>Bugfixes\n^^^^^^^^</p>\n<ul>\n<li>Fix bug where the effect of :func:<code>@pytest.mark.ignore_template_errors &lt;pytest.mark.ignore_template_errors&gt;</code> was not reset when using\n<code>--fail-on-template-vars</code>.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pytest-dev/pytest-django/commit/a703c8fa864b8e64bd4435476d906cdf1cbc8541\"><code>a703c8f</code></a> Release 4.6.0</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-django/commit/c3434f65bd4858d94d570345c1f49773597a860b\"><code>c3434f6</code></a> Update changelog</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-django/commit/b578262dfc0b0fdab4f4d787bd76630dcfe0a635\"><code>b578262</code></a> pyproject.toml: point to license file</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-django/commit/93e49a9a118e885ad70f710b243d77a276e366cb\"><code>93e49a9</code></a> Excise mentions of setup.py</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-django/commit/8d188d775af338d862284c2dbe0c70a22b329eee\"><code>8d188d7</code></a> Move setup.cfg/setuptools to pyproject.toml</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-django/commit/3bfcbb9baf2ab0dcd0bad15251e36f96efd9f7bd\"><code>3bfcbb9</code></a> tox: remove unused readme target</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-django/commit/c3effd1e0385e70a2ff3e1dce850747f01595cee\"><code>c3effd1</code></a> Add .git-blame-ignore-revs file</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-django/commit/6939b232a4b204deb3464615d9868db56eb5384a\"><code>6939b23</code></a> Format code with Ruff</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-django/commit/8a499b21f76d8e5c3478d841e2a70e6c6c2c9208\"><code>8a499b2</code></a> Replace flake8, isort with ruff</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-django/commit/56c181eb09bea70fdbfd8b3a0f5dc9cc2ffbef10\"><code>56c181e</code></a> Remove requirements.txt, some Makefile rules</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pytest-dev/pytest-django/compare/v4.5.2...v4.6.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pytest-django&package-manager=pip&previous-version=4.5.2&new-version=4.6.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2023-11-06T03:59:02Z",
      "updatedAt": "2023-11-06T08:26:11Z",
      "closedAt": "2023-11-06T08:26:10Z",
      "mergedAt": "2023-11-06T08:26:10Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/pip/testing/plugins_integration/pytest-django-4.6.0",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "python"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump pytest-django in /testing/plugins_integration\n\nBumps [pytest-django](https://github.com/pytest-dev/pytest-django) from 4.5.2 to 4.6.0.\n- [Release notes](https://github.com/pytest-dev/pytest-django/releases)\n- [Changelog](https://github.com/pytest-dev/pytest-django/blob/master/docs/changelog.rst)\n- [Commits](https://github.com/pytest-dev/pytest-django/compare/v4.5.2...v4.6.0)\n\n---\nupdated-dependencies:\n- dependency-name: pytest-django\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2023-11-06T06:51:25Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2023-11-06T08:25:59Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11591,
      "title": "build(deps): Bump twisted from 23.8.0 to 23.10.0 in /testing/plugins_integration",
      "body": "Bumps [twisted](https://github.com/twisted/twisted) from 23.8.0 to 23.10.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/twisted/twisted/releases\">twisted's releases</a>.</em></p>\n<blockquote>\n<h1>Twisted 23.10.0 (2023-10-31)</h1>\n<p>No changes since 23.10.0.rc1.</p>\n<h2>Features</h2>\n<ul>\n<li>twisted.python.filepath.FilePath and related classes (twisted.python.filepath.IFilepath, twisted.python.filepath.AbstractFilePath, twisted.python.zippath.ZipPath, and twisted.python.zippath.ZipArchive) now have type annotations.  Additionally, FilePath is now generic, describing its mode, so you can annotate variables as FilePath[str] or FilePath[bytes] depending on the types that you wish to get back from the 'path' attribute and related methods like 'basename'. (<a href=\"https://redirect.github.com/twisted/twisted/issues/11822\">#11822</a>)</li>\n<li>When using <code>CPython</code>, functions wrapped by <code>twisted.internet.defer.inlineCallbacks</code> can have their arguments and return values freed immediately after completion (due to there no longer being circular references). (<a href=\"https://redirect.github.com/twisted/twisted/issues/11885\">#11885</a>)</li>\n</ul>\n<h2>Bugfixes</h2>\n<ul>\n<li>Fix TypeError on t.i.cfreactor due to 3.10 type annotation syntax (<a href=\"https://redirect.github.com/twisted/twisted/issues/11965\">#11965</a>)</li>\n<li>Fix the type annotations of DeferredLock.run, DeferredSemaphore.run, maybeDeferred, ensureDeferred, inlineCallbacks and fromCoroutine that used to return Deferred[Any] to return the result of the passed Coroutine/Coroutine function (<a href=\"https://redirect.github.com/twisted/twisted/issues/11985\">#11985</a>)</li>\n<li>Fixed significant performance overhead (CPU and bandwidth) when doing small writes to a TLS transport. Specifically, small writes to a TLS transport are now buffered until the next reactor iteration. (<a href=\"https://redirect.github.com/twisted/twisted/issues/11989\">#11989</a>)</li>\n<li>fix mypy due to hypothesis 6.85 (<a href=\"https://redirect.github.com/twisted/twisted/issues/11995\">#11995</a>)</li>\n</ul>\n<h2>Improved Documentation</h2>\n<ul>\n<li>The search and version navigation for the documentation hosted on\nRead The Docs was fixed.\nThis was a regression introduced with 23.8.0. (<a href=\"https://redirect.github.com/twisted/twisted/issues/12012\">#12012</a>)</li>\n</ul>\n<h2>Deprecations and Removals</h2>\n<ul>\n<li>Drop support for Python 3.7. Remove twisted[contextvars] extra (contextvars are always available in Python 3.7+) (<a href=\"https://redirect.github.com/twisted/twisted/issues/11913\">#11913</a>)</li>\n</ul>\n<h2>Misc</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/twisted/twisted/issues/5206\">#5206</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/11583\">#11583</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/11787\">#11787</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/11871\">#11871</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/11912\">#11912</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/11921\">#11921</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/11922\">#11922</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/11926\">#11926</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/11932\">#11932</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/11934\">#11934</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/11936\">#11936</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/11938\">#11938</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/11940\">#11940</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/11942\">#11942</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/11945\">#11945</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/11948\">#11948</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/11952\">#11952</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/11953\">#11953</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/11955\">#11955</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/11957\">#11957</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/11959\">#11959</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/11961\">#11961</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/11964\">#11964</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/11973\">#11973</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/11977\">#11977</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/11980\">#11980</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/11982\">#11982</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/11993\">#11993</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/11999\">#11999</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/12004\">#12004</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/12005\">#12005</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/12009\">#12009</a></li>\n</ul>\n<h2>Conch</h2>\n<p>No significant changes.</p>\n<h2>Web</h2>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/twisted/twisted/blob/trunk/NEWS.rst\">twisted's changelog</a>.</em></p>\n<blockquote>\n<h1>Twisted 23.10.0 (2023-10-31)</h1>\n<p>No changes since 23.10.0.rc1.</p>\n<h2>Features</h2>\n<ul>\n<li>twisted.python.filepath.FilePath and related classes (twisted.python.filepath.IFilepath, twisted.python.filepath.AbstractFilePath, twisted.python.zippath.ZipPath, and twisted.python.zippath.ZipArchive) now have type annotations.  Additionally, FilePath is now generic, describing its mode, so you can annotate variables as FilePath[str] or FilePath[bytes] depending on the types that you wish to get back from the 'path' attribute and related methods like 'basename'. (<a href=\"https://redirect.github.com/twisted/twisted/issues/11822\">#11822</a>)</li>\n<li>When using <code>CPython</code>, functions wrapped by <code>twisted.internet.defer.inlineCallbacks</code> can have their arguments and return values freed immediately after completion (due to there no longer being circular references). (<a href=\"https://redirect.github.com/twisted/twisted/issues/11885\">#11885</a>)</li>\n</ul>\n<h2>Bugfixes</h2>\n<ul>\n<li>Fix TypeError on t.i.cfreactor due to 3.10 type annotation syntax (<a href=\"https://redirect.github.com/twisted/twisted/issues/11965\">#11965</a>)</li>\n<li>Fix the type annotations of DeferredLock.run, DeferredSemaphore.run, maybeDeferred, ensureDeferred, inlineCallbacks and fromCoroutine that used to return Deferred[Any] to return the result of the passed Coroutine/Coroutine function (<a href=\"https://redirect.github.com/twisted/twisted/issues/11985\">#11985</a>)</li>\n<li>Fixed significant performance overhead (CPU and bandwidth) when doing small writes to a TLS transport. Specifically, small writes to a TLS transport are now buffered until the next reactor iteration. (<a href=\"https://redirect.github.com/twisted/twisted/issues/11989\">#11989</a>)</li>\n<li>fix mypy due to hypothesis 6.85 (<a href=\"https://redirect.github.com/twisted/twisted/issues/11995\">#11995</a>)</li>\n</ul>\n<h2>Improved Documentation</h2>\n<ul>\n<li>The search and version navigation for the documentation hosted on\nRead The Docs was fixed.\nThis was a regression introduced with 23.8.0. (<a href=\"https://redirect.github.com/twisted/twisted/issues/12012\">#12012</a>)</li>\n</ul>\n<h2>Deprecations and Removals</h2>\n<ul>\n<li>Drop support for Python 3.7. Remove twisted[contextvars] extra (contextvars are always available in Python 3.7+) (<a href=\"https://redirect.github.com/twisted/twisted/issues/11913\">#11913</a>)</li>\n</ul>\n<h2>Misc</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/twisted/twisted/issues/5206\">#5206</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/11583\">#11583</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/11787\">#11787</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/11871\">#11871</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/11912\">#11912</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/11921\">#11921</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/11922\">#11922</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/11926\">#11926</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/11932\">#11932</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/11934\">#11934</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/11936\">#11936</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/11938\">#11938</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/11940\">#11940</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/11942\">#11942</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/11945\">#11945</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/11948\">#11948</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/11952\">#11952</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/11953\">#11953</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/11955\">#11955</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/11957\">#11957</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/11959\">#11959</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/11961\">#11961</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/11964\">#11964</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/11973\">#11973</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/11977\">#11977</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/11980\">#11980</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/11982\">#11982</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/11993\">#11993</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/11999\">#11999</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/12004\">#12004</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/12005\">#12005</a>, <a href=\"https://redirect.github.com/twisted/twisted/issues/12009\">#12009</a></li>\n</ul>\n<h2>Conch</h2>\n<p>No significant changes.</p>\n<h2>Web</h2>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/twisted/twisted/commit/f3f3389b1ee2605fb6d4c6d9dfb3913e84b11cde\"><code>f3f3389</code></a> python -m incremental.update Twisted --newversion</li>\n<li><a href=\"https://github.com/twisted/twisted/commit/2d15c00ba2d0cc82eb0b0901bdbc24793329ca13\"><code>2d15c00</code></a> Add CVE id to bug.</li>\n<li><a href=\"https://github.com/twisted/twisted/commit/61c46d40eb65e7aaeaf4f2b10f6696427d1401b3\"><code>61c46d4</code></a> tox -e towncrier</li>\n<li><a href=\"https://github.com/twisted/twisted/commit/650c59df32840918fd3fd1027302ce2a4d421d72\"><code>650c59d</code></a> python -m incremental.update Twisted --rc</li>\n<li><a href=\"https://github.com/twisted/twisted/commit/157cd8e659705940e895d321339d467e76ae9d0a\"><code>157cd8e</code></a> <a href=\"https://redirect.github.com/twisted/twisted/issues/11985\">#11985</a> fix DeferredLock.run/Semaphore.run/maybeDeferred/ensureDeferred/inline...</li>\n<li><a href=\"https://github.com/twisted/twisted/commit/ed25d4ad078822de32eeaf36eafbf30ee3a3d3ed\"><code>ed25d4a</code></a> [pre-commit.ci] auto fixes from pre-commit.com hooks</li>\n<li><a href=\"https://github.com/twisted/twisted/commit/5eb20781105a39f1e482ca2e09d9824d4fb039c0\"><code>5eb2078</code></a> Merge branch 'trunk' into fix-concurrency-primative-type</li>\n<li><a href=\"https://github.com/twisted/twisted/commit/2df4c76a41e831202261cfe7254b6590f5a34345\"><code>2df4c76</code></a> Update src/twisted/test/test_defer.py</li>\n<li><a href=\"https://github.com/twisted/twisted/commit/105a9f5a2e9c68845aa1a9b20c24cff65fe94401\"><code>105a9f5</code></a> <a href=\"https://redirect.github.com/twisted/twisted/issues/11989\">#11989</a> Lots of small writes to the TLS transport use a lot of cpu (<a href=\"https://redirect.github.com/twisted/twisted/issues/11996\">#11996</a>)</li>\n<li><a href=\"https://github.com/twisted/twisted/commit/524a2fae10b77405847d025dd0158e0c59fdb2a4\"><code>524a2fa</code></a> Fix lint</li>\n<li>Additional commits viewable in <a href=\"https://github.com/twisted/twisted/compare/twisted-23.8.0...twisted-23.10.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=twisted&package-manager=pip&previous-version=23.8.0&new-version=23.10.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2023-11-06T03:58:58Z",
      "updatedAt": "2023-11-08T07:29:19Z",
      "closedAt": "2023-11-08T07:29:18Z",
      "mergedAt": "2023-11-08T07:29:18Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/pip/testing/plugins_integration/twisted-23.10.0",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "python"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump twisted in /testing/plugins_integration\n\nBumps [twisted](https://github.com/twisted/twisted) from 23.8.0 to 23.10.0.\n- [Release notes](https://github.com/twisted/twisted/releases)\n- [Changelog](https://github.com/twisted/twisted/blob/trunk/NEWS.rst)\n- [Commits](https://github.com/twisted/twisted/compare/twisted-23.8.0...twisted-23.10.0)\n\n---\nupdated-dependencies:\n- dependency-name: twisted\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2023-11-06T03:58:57Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-11-08T07:29:03Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11590,
      "title": "build(deps): Bump pytest-html from 4.0.2 to 4.1.0 in /testing/plugins_integration",
      "body": "Bumps [pytest-html](https://github.com/pytest-dev/pytest-html) from 4.0.2 to 4.1.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pytest-dev/pytest-html/releases\">pytest-html's releases</a>.</em></p>\n<blockquote>\n<h2>4.1.0</h2>\n<h2>Changes</h2>\n<ul>\n<li>Release v4.1.0 (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/761\">#761</a>) <a href=\"https://github.com/BeyondEvil\"><code>@\u200bBeyondEvil</code></a></li>\n<li>fix: Escaping HTML in log (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/757\">#757</a>) <a href=\"https://github.com/BeyondEvil\"><code>@\u200bBeyondEvil</code></a></li>\n<li>test: Add UTF8 test (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/760\">#760</a>) <a href=\"https://github.com/BeyondEvil\"><code>@\u200bBeyondEvil</code></a></li>\n<li>[pre-commit.ci] pre-commit autoupdate (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/563\">#563</a>) <a href=\"https://github.com/pre-commit-ci\"><code>@\u200bpre-commit-ci</code></a></li>\n<li>fix: Only run npm when building from source (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/758\">#758</a>) <a href=\"https://github.com/BeyondEvil\"><code>@\u200bBeyondEvil</code></a></li>\n<li>Fix results table modification documentation (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/749\">#749</a>) <a href=\"https://github.com/michalkaptur\"><code>@\u200bmichalkaptur</code></a></li>\n<li>fix: Add collections errors to report (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/756\">#756</a>) <a href=\"https://github.com/BeyondEvil\"><code>@\u200bBeyondEvil</code></a></li>\n<li>fix: Revert report generation to full run (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/754\">#754</a>) <a href=\"https://github.com/BeyondEvil\"><code>@\u200bBeyondEvil</code></a></li>\n<li>fix: Broken duration (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/753\">#753</a>) <a href=\"https://github.com/BeyondEvil\"><code>@\u200bBeyondEvil</code></a></li>\n<li>Pytest html fix reload button typo (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/738\">#738</a>) <a href=\"https://github.com/jeffwright13\"><code>@\u200bjeffwright13</code></a></li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/pytest-dev/pytest-html/blob/master/docs/changelog.rst\">pytest-html's changelog</a>.</em></p>\n<blockquote>\n<p>4.1.0 (2023-11-04)</p>\n<pre><code>\n* Fix typo (&quot;ge&quot; instead of &quot;get&quot;) in green Reload button in report file.\n<ul>\n<li>\n<p>Fix results table modification documentation.</p>\n<ul>\n<li>Thanks to <code>@michalkaptur &amp;lt;https://github.com/michalkaptur&amp;gt;</code>_ for the reporting and PR.</li>\n</ul>\n</li>\n<li>\n<p>Fix broken duration.</p>\n</li>\n<li>\n<p>Revert report generation to full run.</p>\n</li>\n<li>\n<p>Add collections errors to report.</p>\n</li>\n<li>\n<p>Fix escaping HTML in the log.\n</code></pre></p>\n</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pytest-dev/pytest-html/commit/13484304bec3d71b70098d732760f5ad02b85c1c\"><code>1348430</code></a> Release v4.1.0 (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/761\">#761</a>)</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-html/commit/82762a2ffc384966c25c306941fef031bbb8dab1\"><code>82762a2</code></a> fix: Escaping HTML in log (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/757\">#757</a>)</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-html/commit/84a1f6882e94cc2a25924d40d86636ac51bb8c4d\"><code>84a1f68</code></a> test: Add UTF8 test (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/760\">#760</a>)</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-html/commit/71b74083f54878c72b7ce22d9c55117f7153e870\"><code>71b7408</code></a> [pre-commit.ci] pre-commit autoupdate (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/563\">#563</a>)</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-html/commit/f6d34545f9a8457f1d362268dd0ba8b47b8f6666\"><code>f6d3454</code></a> fix: Only run npm when building from source (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/758\">#758</a>)</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-html/commit/e4070567db8baed0a33d12b8deca78b0015e2f1d\"><code>e407056</code></a> replace hardcoded string with actual report data (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/749\">#749</a>)</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-html/commit/cbb3b3982a0f36cbf4bcd3e2a61e5c621e86794d\"><code>cbb3b39</code></a> fix: Add collections errors to report (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/756\">#756</a>)</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-html/commit/bf19498c5c02b02cc790cb96429c95a968133ecb\"><code>bf19498</code></a> fix: Revert report generation to full run (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/754\">#754</a>)</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-html/commit/263c1c620ae12d888341d6e4c6f162b0329a83b0\"><code>263c1c6</code></a> fix: Broken duration (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/753\">#753</a>)</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-html/commit/8523105209346a508cc188aef6546f217f6870da\"><code>8523105</code></a> Pytest html fix reload button typo (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/738\">#738</a>)</li>\n<li>See full diff in <a href=\"https://github.com/pytest-dev/pytest-html/compare/4.0.2...4.1.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pytest-html&package-manager=pip&previous-version=4.0.2&new-version=4.1.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2023-11-06T03:58:55Z",
      "updatedAt": "2023-11-06T06:49:55Z",
      "closedAt": "2023-11-06T06:49:54Z",
      "mergedAt": "2023-11-06T06:49:54Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/pip/testing/plugins_integration/pytest-html-4.1.0",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "python"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump pytest-html in /testing/plugins_integration\n\nBumps [pytest-html](https://github.com/pytest-dev/pytest-html) from 4.0.2 to 4.1.0.\n- [Release notes](https://github.com/pytest-dev/pytest-html/releases)\n- [Changelog](https://github.com/pytest-dev/pytest-html/blob/master/docs/changelog.rst)\n- [Commits](https://github.com/pytest-dev/pytest-html/compare/4.0.2...4.1.0)\n\n---\nupdated-dependencies:\n- dependency-name: pytest-html\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2023-11-06T03:58:54Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2023-11-06T06:49:48Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11589,
      "title": "build(deps): Bump hynek/build-and-inspect-python-package from 1.5.3 to 1.5.4",
      "body": "Bumps [hynek/build-and-inspect-python-package](https://github.com/hynek/build-and-inspect-python-package) from 1.5.3 to 1.5.4.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/hynek/build-and-inspect-python-package/releases\">hynek/build-and-inspect-python-package's releases</a>.</em></p>\n<blockquote>\n<h2>v1.5.4</h2>\n<h3>Fixed</h3>\n<ul>\n<li>Stop trying to cache.\nFixes <code>Error: No file in /home/runner/work/pytest-cpp/pytest-cpp matched to [**/requirements.txt or **/pyproject.toml], make sure you have checked out the target repository</code>\n<a href=\"https://redirect.github.com/hynek/build-and-inspect-python-package/pull/76\">#76</a></li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/hynek/build-and-inspect-python-package/blob/main/CHANGELOG.md\">hynek/build-and-inspect-python-package's changelog</a>.</em></p>\n<blockquote>\n<h2><a href=\"https://github.com/hynek/build-and-inspect-python-package/compare/v1.5.3...v1.5.4\">1.5.4</a> - 2023-11-01</h2>\n<h3>Fixed</h3>\n<ul>\n<li>Stop trying to cache.\nFixes <code>Error: No file in /home/runner/work/pytest-cpp/pytest-cpp matched to [**/requirements.txt or **/pyproject.toml], make sure you have checked out the target repository</code>\n<a href=\"https://redirect.github.com/hynek/build-and-inspect-python-package/pull/76\">#76</a></li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/hynek/build-and-inspect-python-package/commit/97459e619f4682e828e732eb7b6eceb0c8c35c59\"><code>97459e6</code></a> v1.5.4</li>\n<li><a href=\"https://github.com/hynek/build-and-inspect-python-package/commit/d3afbdcb2e3582389a03994cd76eb496b951f20c\"><code>d3afbdc</code></a> Stop trying to cache</li>\n<li><a href=\"https://github.com/hynek/build-and-inspect-python-package/commit/2e6cfbf8138b3f098371dade5a4c33c897a9746d\"><code>2e6cfbf</code></a> Bump actions/checkout from 3 to 4 (<a href=\"https://redirect.github.com/hynek/build-and-inspect-python-package/issues/74\">#74</a>)</li>\n<li><a href=\"https://github.com/hynek/build-and-inspect-python-package/commit/625769bac10aa2e4484034f34b594403aeefc168\"><code>625769b</code></a> Bump actions/setup-python from 3 to 4 (<a href=\"https://redirect.github.com/hynek/build-and-inspect-python-package/issues/75\">#75</a>)</li>\n<li><a href=\"https://github.com/hynek/build-and-inspect-python-package/commit/971d8bdbe5c8571fcec61e3d7cad9b73ace9d4e2\"><code>971d8bd</code></a> Automated dependency upgrades (<a href=\"https://redirect.github.com/hynek/build-and-inspect-python-package/issues/73\">#73</a>)</li>\n<li><a href=\"https://github.com/hynek/build-and-inspect-python-package/commit/fd14e7488b23e2965e285c50ead27d634ea438d6\"><code>fd14e74</code></a> Start new cycle</li>\n<li>See full diff in <a href=\"https://github.com/hynek/build-and-inspect-python-package/compare/v1.5.3...v1.5.4\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=hynek/build-and-inspect-python-package&package-manager=github_actions&previous-version=1.5.3&new-version=1.5.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2023-11-06T03:06:40Z",
      "updatedAt": "2023-11-06T06:50:50Z",
      "closedAt": "2023-11-06T06:50:49Z",
      "mergedAt": "2023-11-06T06:50:49Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/github_actions/hynek/build-and-inspect-python-package-1.5.4",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "github_actions"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump hynek/build-and-inspect-python-package\n\nBumps [hynek/build-and-inspect-python-package](https://github.com/hynek/build-and-inspect-python-package) from 1.5.3 to 1.5.4.\n- [Release notes](https://github.com/hynek/build-and-inspect-python-package/releases)\n- [Changelog](https://github.com/hynek/build-and-inspect-python-package/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/hynek/build-and-inspect-python-package/compare/v1.5.3...v1.5.4)\n\n---\nupdated-dependencies:\n- dependency-name: hynek/build-and-inspect-python-package\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2023-11-06T03:06:39Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2023-11-06T06:50:43Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11587,
      "title": "[automated] Update plugin list",
      "body": "[automated] Update plugin list",
      "state": "MERGED",
      "createdAt": "2023-11-05T00:19:28Z",
      "updatedAt": "2023-11-06T21:40:45Z",
      "closedAt": "2023-11-06T21:40:44Z",
      "mergedAt": "2023-11-06T21:40:44Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "update-plugin-list/patch-70f03dbc3",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[automated] Update plugin list",
              "committedDate": "2023-11-05T00:19:26Z",
              "author": {
                "name": "pytest bot",
                "email": "pytestbot@users.noreply.github.com",
                "user": {
                  "login": "pytestbot"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11586,
      "title": "Adjustments to assert raises docs",
      "body": "Followup of #11578.\r\n\r\n<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "MERGED",
      "createdAt": "2023-11-04T15:34:55Z",
      "updatedAt": "2023-11-04T15:47:14Z",
      "closedAt": "2023-11-04T15:37:47Z",
      "mergedAt": "2023-11-04T15:37:47Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "followup-11578",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Adjustments to assert raises docs\n\nFollowup from #11578.",
              "committedDate": "2023-11-04T15:34:15Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11584,
      "title": "Fix for operation on closed file in faulthandler teardown",
      "body": "Closes #11572 \r\n\r\nremember stderr fileno in config.stash to be restored on faulthandler teardown",
      "state": "MERGED",
      "createdAt": "2023-11-03T20:41:09Z",
      "updatedAt": "2023-11-22T20:05:22Z",
      "closedAt": "2023-11-22T20:05:01Z",
      "mergedAt": "2023-11-22T20:05:01Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "fix-operation-on-closed-file-11572",
      "author": {
        "login": "bnomis"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "add more comments and combine stash keys",
              "committedDate": "2023-11-21T18:37:51Z",
              "author": {
                "name": "Simon Blanchard",
                "email": "bnomis@gmail.com",
                "user": {
                  "login": "bnomis"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-11-03T22:44:47Z",
            "body": ""
          },
          {
            "author": {
              "login": "bnomis"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-11-04T08:55:19Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-11-04T11:26:26Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-11-07T22:42:01Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-11-07T22:42:37Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-11-07T22:44:05Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-11-08T07:42:44Z",
            "body": "I think this is a good change :+1: .\r\n\r\nI think we should simplify a bit by combining `fault_handler_original_stderr_fd_key` and `fault_handler_originally_enabled_key`; specifically, scrape `fault_handler_originally_enabled_key` and use `fault_handler_original_stderr_fd_key` to see if faulthandler was enabled before or not.\r\n\r\nAlso agree with @RonnyPfannschmidt that a comment explaining that, in case the faulthandler is already enabled, the faulthandler api doesn't provide a way to get the FD that was previously passed to `enable()`, so we assume it was the default (stderr)."
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-11-22T20:04:46Z",
            "body": "Thanks @bnomis!"
          }
        ]
      }
    },
    {
      "number": 11582,
      "title": "Created link to PEP-8 in documentation",
      "body": "<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "MERGED",
      "createdAt": "2023-11-03T17:21:36Z",
      "updatedAt": "2023-11-03T18:05:06Z",
      "closedAt": "2023-11-03T18:05:06Z",
      "mergedAt": "2023-11-03T18:05:06Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "main",
      "author": {
        "login": "neilmartin2000"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Update CONTRIBUTING.rst",
              "committedDate": "2023-11-03T18:03:41Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-11-03T18:03:36Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-11-03T18:04:36Z",
            "body": "Thanks!"
          }
        ]
      }
    },
    {
      "number": 11579,
      "title": "build(deps): Bump django from 4.2.6 to 4.2.7 in /testing/plugins_integration",
      "body": "Bumps [django](https://github.com/django/django) from 4.2.6 to 4.2.7.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/django/django/commit/d254a54e7f65e83d8971bd817031bc6af32a7a46\"><code>d254a54</code></a> [4.2.x] Bumped version for 4.2.7 release.</li>\n<li><a href=\"https://github.com/django/django/commit/048a9ebb6ea468426cb4e57c71572cbbd975517f\"><code>048a9eb</code></a> [4.2.x] Fixed CVE-2023-46695 -- Fixed potential DoS in UsernameField on Windows.</li>\n<li><a href=\"https://github.com/django/django/commit/3fae5d92da84382483fe48cc62c1f57789b47196\"><code>3fae5d9</code></a> [4.2.x] Refs <a href=\"https://redirect.github.com/django/django/issues/30601\">#30601</a> -- Fixed typos in docs/topics/db/transactions.txt.</li>\n<li><a href=\"https://github.com/django/django/commit/a8aa94062b108bfca473e3263473ca926fee2f42\"><code>a8aa940</code></a> [4.2.x] Refs <a href=\"https://redirect.github.com/django/django/issues/15578\">#15578</a> -- Made cosmetic edits to fixtures docs.</li>\n<li><a href=\"https://github.com/django/django/commit/109f39a38bf62e350171d8e342788160af95d21a\"><code>109f39a</code></a> [4.2.x] Fixed <a href=\"https://redirect.github.com/django/django/issues/34932\">#34932</a> -- Restored varchar_pattern_ops/text_pattern_ops index c...</li>\n<li><a href=\"https://github.com/django/django/commit/61612990d8c31ec1d9a9e9e48ae642a6f8d88120\"><code>6161299</code></a> [4.2.x] Fixed typos in docs/ref/models/expressions.txt.</li>\n<li><a href=\"https://github.com/django/django/commit/696fbc32d6185283859b3a84277f49937a3012fc\"><code>696fbc3</code></a> [4.2.x] Fixed <a href=\"https://redirect.github.com/django/django/issues/30601\">#30601</a> -- Doc'd the need to manually revert all app state on tr...</li>\n<li><a href=\"https://github.com/django/django/commit/ffba63180c86a73527b7af4b31564c62788d60cd\"><code>ffba631</code></a> [4.2.x] Fixed typo in docs/ref/contrib/gis/geos.txt.</li>\n<li><a href=\"https://github.com/django/django/commit/43a36460703dfcf90dd309f0ff7306589b371e61\"><code>43a3646</code></a> [4.2.x] Fixed <a href=\"https://redirect.github.com/django/django/issues/15578\">#15578</a> -- Stated the processing order of fixtures in the fixtur...</li>\n<li><a href=\"https://github.com/django/django/commit/0cd8b867a000624d27776e195a05dd7fe0a438bd\"><code>0cd8b86</code></a> [4.2.x] Added stub release notes and release date for 4.2.7, 4.1.13, and 3.2.23.</li>\n<li>Additional commits viewable in <a href=\"https://github.com/django/django/compare/4.2.6...4.2.7\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=django&package-manager=pip&previous-version=4.2.6&new-version=4.2.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/pytest-dev/pytest/network/alerts).\n\n</details>",
      "state": "MERGED",
      "createdAt": "2023-11-02T22:00:47Z",
      "updatedAt": "2023-11-03T11:27:48Z",
      "closedAt": "2023-11-03T11:27:47Z",
      "mergedAt": "2023-11-03T11:27:47Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/pip/testing/plugins_integration/django-4.2.7",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "python"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump django in /testing/plugins_integration\n\nBumps [django](https://github.com/django/django) from 4.2.6 to 4.2.7.\n- [Commits](https://github.com/django/django/compare/4.2.6...4.2.7)\n\n---\nupdated-dependencies:\n- dependency-name: django\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2023-11-02T22:00:46Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11578,
      "title": "Improve pytest.raises docs",
      "body": "* Mention that subclassse are also matched.\r\n* Improve some formatting and add some cross referencing.\r\n* Add warning about using `pytest.raises(Exception)` (#4475)\r\n\r\n\r\nFix #11577\r\n",
      "state": "MERGED",
      "createdAt": "2023-11-02T21:20:52Z",
      "updatedAt": "2023-11-04T18:34:23Z",
      "closedAt": "2023-11-04T10:24:58Z",
      "mergedAt": "2023-11-04T10:24:58Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Zac-HD"
      },
      "baseRefName": "main",
      "headRefName": "improve-pytest-raises",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "needs backport"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Add warning about using pytest.raises(Exception)\n\nRelated to #4475",
              "committedDate": "2023-11-03T11:45:29Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Zac-HD"
            },
            "state": "APPROVED",
            "submittedAt": "2023-11-03T14:33:40Z",
            "body": "Looks great!  Thanks Nicodemus \ud83d\ude03"
          },
          {
            "author": {
              "login": "dhruvk12"
            },
            "state": "APPROVED",
            "submittedAt": "2023-11-04T10:09:18Z",
            "body": "Looks good"
          },
          {
            "author": {
              "login": "The-Compiler"
            },
            "state": "CHANGES_REQUESTED",
            "submittedAt": "2023-11-04T10:25:55Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11574,
      "title": "Add summary for xfails with -rxX option",
      "body": "This is an early implementation which closes #11233.\r\n\r\nIt duplicates the code of the passes and failures summary implementation right now but I didn't want to refactor it before I know if something like this could be accepted.\r\n\r\n<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "MERGED",
      "createdAt": "2023-11-01T15:02:42Z",
      "updatedAt": "2024-01-06T01:11:03Z",
      "closedAt": "2024-01-05T12:59:19Z",
      "mergedAt": "2024-01-05T12:59:19Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "report_xfails",
      "author": {
        "login": "sturmf"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 15
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[pre-commit.ci] auto fixes from pre-commit.com hooks\n\nfor more information, see https://pre-commit.ci",
              "committedDate": "2024-01-05T12:47:13Z",
              "author": {
                "name": "pre-commit-ci[bot]",
                "email": "66853113+pre-commit-ci[bot]@users.noreply.github.com",
                "user": {
                  "login": "pre-commit-ci[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "CHANGES_REQUESTED",
            "submittedAt": "2024-01-03T11:18:27Z",
            "body": "Looks good, thanks folks for working on this.\r\n\r\nBesides my comments, I think what is missing is a CHANGELOG `feature` entry describing this feature."
          },
          {
            "author": {
              "login": "okken"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-03T23:35:21Z",
            "body": ""
          },
          {
            "author": {
              "login": "okken"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-03T23:39:46Z",
            "body": ""
          },
          {
            "author": {
              "login": "okken"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-03T23:43:24Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-05T12:44:08Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-05T12:46:26Z",
            "body": "Thanks folks, looks great!"
          }
        ]
      }
    },
    {
      "number": 11571,
      "title": "Improve the full diff by having more consistent indentation in the PrettyPrinter",
      "body": "## Overview\r\n\r\n**Note**: This is an alternative implementation to #11537, and vendors pprint in\r\n\r\nThe normal default pretty printer is not great when objects are nested  it can get hard to read the diffs produced.\r\n\r\nInstead, provide a pretty printer that behaves more like when json get  which allows for smaller, more meaningful differences, at the  expense of a slightly longer diff.\r\n\r\nThis also has the nice side effect of making diffs stable across python versions, which it was not previously, as, for example, dataclass support was added in python3.9\r\n\r\nFix #1531 \r\n\r\n## Alternatives/Potential improvements\r\n\r\nThis has the disadvantage that diffs are now longer, even for small changes (like `[1, 2] == [1, 3]`). We could potentially still keep the previous implementation for the case where the diff is the same length AND has a single line. This would take care of trivial cases. It would however make some diffs harder to read again, like `[1, 2, 3] == [2, 3, 4]`, which would now show 3 differences.\r\n\r\nThis is however not generalisable to deeply nested payloads.\r\n\r\n## Notes for maintainers\r\n\r\nThis is the requested alternative to #11537, which vendors the pprint module in, and then modifies the class in place.\r\n\r\nThe first commit vendors the module in, and makes it pass linting. Note that only the required part of the module are imported.\r\n\r\nThe second commit makes the modification and adds the same tests as #11537.\r\n\r\nIt is possible that we could still simplify the logic (e.g. always computing the indentation based on the level, instead of passing both). I believe this might be easier as a subsequent PR if requested, but happy to try and simplify this one if wanted.\r\n\r\n## Examples\r\n\r\n### Basic\r\n\r\n<details>\r\n  <summary>Generated using the following script</summary>\r\n  \r\n  ```python\r\nfrom collections import Counter, defaultdict, deque\r\nfrom dataclasses import dataclass\r\nfrom functools import partial\r\nimport pprint\r\nfrom types import SimpleNamespace\r\nfrom typing import Optional, Dict, Any, IO, List\r\nimport difflib\r\n\r\nfrom _pytest._io.pprint import PrettyPrinter\r\n\r\n\r\n###\r\n# Original pytest diff, copied in\r\n###\r\nclass AlwaysDispatchingPrettyPrinter(pprint.PrettyPrinter):\r\n    \"\"\"PrettyPrinter that always dispatches (regardless of width).\"\"\"\r\n\r\n    def _format(\r\n        self,\r\n        object: object,\r\n        stream: IO[str],\r\n        indent: int,\r\n        allowance: int,\r\n        context: Dict[int, Any],\r\n        level: int,\r\n    ) -> None:\r\n        # Type ignored because _dispatch is private.\r\n        p = self._dispatch.get(type(object).__repr__, None)  # type: ignore[attr-defined]\r\n\r\n        objid = id(object)\r\n        if objid in context or p is None:\r\n            # Type ignored because _format is private.\r\n            super()._format(  # type: ignore[misc]\r\n                object,\r\n                stream,\r\n                indent,\r\n                allowance,\r\n                context,\r\n                level,\r\n            )\r\n            return\r\n\r\n        context[objid] = 1\r\n        p(self, object, stream, indent, allowance, context, level + 1)\r\n        del context[objid]\r\n\r\n\r\ndef _pformat_dispatch_original(\r\n    object: object,\r\n    indent: int = 1,\r\n    width: int = 80,\r\n    depth: Optional[int] = None,\r\n    *,\r\n    compact: bool = False,\r\n) -> str:\r\n    return AlwaysDispatchingPrettyPrinter(\r\n        indent=indent, width=width, depth=depth, compact=compact\r\n    ).pformat(object)\r\n\r\n\r\ndef _surrounding_parens_on_own_lines(lines: List[str]) -> None:\r\n    \"\"\"Move opening/closing parenthesis/bracket to own lines.\"\"\"\r\n    opening = lines[0][:1]\r\n    if opening in [\"(\", \"[\", \"{\"]:\r\n        lines[0] = \" \" + lines[0][1:]\r\n        lines[:] = [opening] + lines\r\n    closing = lines[-1][-1:]\r\n    if closing in [\")\", \"]\", \"}\"]:\r\n        lines[-1] = lines[-1][:-1] + \",\"\r\n        lines[:] = lines + [closing]\r\n\r\n\r\ndef original_diff(left, right):\r\n    left_formatting = pprint.pformat(left).splitlines()\r\n    right_formatting = pprint.pformat(right).splitlines()\r\n\r\n    # Re-format for different output lengths.\r\n    lines_left = len(left_formatting)\r\n    lines_right = len(right_formatting)\r\n    if lines_left != lines_right:\r\n        left_formatting = _pformat_dispatch_original(left).splitlines()\r\n        right_formatting = _pformat_dispatch_original(right).splitlines()\r\n\r\n    if lines_left > 1 or lines_right > 1:\r\n        _surrounding_parens_on_own_lines(left_formatting)\r\n        _surrounding_parens_on_own_lines(right_formatting)\r\n\r\n    return left_formatting, right_formatting\r\n\r\n\r\n###\r\n# Script to generate the diffs\r\n###\r\n\r\nTABLE = \"\"\"\r\n<table>\r\n<tr>\r\n<th>Test</th>\r\n<th>Main</th>\r\n<th>Proposal</th>\r\n</tr>\r\n{rows}\r\n</table>\r\n\"\"\"\r\n\r\nROW = \"\"\"\r\n<tr>\r\n<td colspan=2>\r\n\r\n\\`\\`\\`python\r\n{python}\r\n\\`\\`\\`\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n\r\n\\`\\`\\`diff\r\n{diff_original}\r\n\\`\\`\\`\r\n</td>\r\n\r\n<td>\r\n\r\n\\`\\`\\`diff\r\n{diff_new}\r\n\\`\\`\\`\r\n</td>\r\n</tr>\r\n\"\"\"\r\n\r\n\r\ndef get_row(left, right):\r\n    original = \"\\n\".join(\r\n        line.rstrip() for line in difflib.ndiff(*original_diff(left, right))\r\n    )\r\n    new = \"\\n\".join(\r\n        line.rstrip()\r\n        for line in difflib.ndiff(\r\n            PrettyPrinter().pformat(left).splitlines(), PrettyPrinter().pformat(right).splitlines()\r\n        )\r\n    )\r\n\r\n    fmt = partial(pprint.pformat, indent=2, width=60)\r\n    return f\"{fmt(left)} \\\\ \\n == {fmt(right)}\", original, new\r\n\r\n\r\n@dataclass\r\nclass DataclassWithTwoItems:\r\n    foo: str\r\n    bar: str\r\n\r\n\r\nrows = [\r\n    get_row(left, right)\r\n    for left, right in [\r\n        [{\"one\": 1, \"two\": 2}, {\"three\": 1, \"two\": 3}],\r\n        [[1, 2], [1, 3]],\r\n        [(1,), (2,)],\r\n        [(1, 2), (1, 3)],\r\n        [{1, 2}, {1, 3}],\r\n        [SimpleNamespace(one=1, two=2), SimpleNamespace(one=2, three=2)],\r\n        [\r\n            defaultdict(str, {\"one\": \"1\", \"two\": \"2\"}),\r\n            defaultdict(str, {\"one\": \"1\", \"two\": \"3\"}),\r\n        ],\r\n        [Counter(\"121\"), Counter(\"122\")],\r\n        [deque([1, 2]), deque([1, 3])],\r\n        [deque([1, 2], maxlen=3), deque([1, 3], maxlen=4)],\r\n        [\r\n            {\r\n                \"counter\": Counter(\"122\"),\r\n                \"dataclass\": DataclassWithTwoItems(foo=\"foo\", bar=\"bar\"),\r\n                \"defaultdict\": defaultdict(str, {\"one\": \"1\", \"two\": \"2\"}),\r\n                \"deque\": deque([1, 2], maxlen=3),\r\n                \"dict\": {\"one\": 1, \"two\": 2},\r\n                \"list\": [1, 2],\r\n                \"set\": {1, 2},\r\n                \"simplenamespace\": SimpleNamespace(one=1, two=2),\r\n                \"tuple\": (1, 2),\r\n            },\r\n            {\r\n                \"counter\": Counter(\"121\"),\r\n                \"dataclass\": DataclassWithTwoItems(foo=\"foo\", bar=\"baz\"),\r\n                \"defaultdict\": defaultdict(str, {\"three\": \"1\", \"two\": \"3\"}),\r\n                \"deque\": deque([1, 3], maxlen=3),\r\n                \"dict\": {\"one\": 1, \"two\": 3},\r\n                \"list\": [1, 2, 3],\r\n                \"set\": {1, 3},\r\n                \"simplenamespace\": SimpleNamespace(one=1, two=2, three=3),\r\n                \"tuple\": (1,),\r\n            },\r\n        ],\r\n    ]\r\n]\r\n\r\nprint(\r\n    TABLE.format(\r\n        rows=\"\\n\".join(\r\n            [\r\n                ROW.format(python=row[0], diff_original=row[1], diff_new=row[2])\r\n                for row in rows\r\n            ]\r\n        )\r\n    )\r\n)\r\n  ```\r\n</details>\r\n\r\n\r\n<details>\r\n  <summary>We get the following differences on small entries:</summary>\r\n\r\n\r\n<table>\r\n<tr>\r\n<th>Test</th>\r\n<th>Main</th>\r\n<th>Proposal</th>\r\n</tr>\r\n\r\n<tr>\r\n<td colspan=2>\r\n\r\n```python\r\n{'one': 1, 'two': 2} \\ \r\n == {'three': 1, 'two': 3}\r\n```\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n\r\n```diff\r\n- {'one': 1, 'two': 2}\r\n?   ^^              ^\r\n+ {'three': 1, 'two': 3}\r\n?   ^^^^              ^\r\n```\r\n</td>\r\n\r\n<td>\r\n\r\n```diff\r\n  {\r\n-     'one': 1,\r\n?      ^^\r\n+     'three': 1,\r\n?      ^^^^\r\n-     'two': 2,\r\n?            ^\r\n+     'two': 3,\r\n?            ^\r\n  }\r\n```\r\n</td>\r\n</tr>\r\n\r\n\r\n<tr>\r\n<td colspan=2>\r\n\r\n```python\r\n[1, 2] \\ \r\n == [1, 3]\r\n```\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n\r\n```diff\r\n- [1, 2]\r\n?     ^\r\n+ [1, 3]\r\n?     ^\r\n```\r\n</td>\r\n\r\n<td>\r\n\r\n```diff\r\n  [\r\n      1,\r\n-     2,\r\n?     ^\r\n+     3,\r\n?     ^\r\n  ]\r\n```\r\n</td>\r\n</tr>\r\n\r\n\r\n<tr>\r\n<td colspan=2>\r\n\r\n```python\r\n(1,) \\ \r\n == (2,)\r\n```\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n\r\n```diff\r\n- (1,)\r\n?  ^\r\n+ (2,)\r\n?  ^\r\n```\r\n</td>\r\n\r\n<td>\r\n\r\n```diff\r\n  (\r\n-     1,\r\n?     ^\r\n+     2,\r\n?     ^\r\n  )\r\n```\r\n</td>\r\n</tr>\r\n\r\n\r\n<tr>\r\n<td colspan=2>\r\n\r\n```python\r\n(1, 2) \\ \r\n == (1, 3)\r\n```\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n\r\n```diff\r\n- (1, 2)\r\n?     ^\r\n+ (1, 3)\r\n?     ^\r\n```\r\n</td>\r\n\r\n<td>\r\n\r\n```diff\r\n  (\r\n      1,\r\n-     2,\r\n?     ^\r\n+     3,\r\n?     ^\r\n  )\r\n```\r\n</td>\r\n</tr>\r\n\r\n\r\n<tr>\r\n<td colspan=2>\r\n\r\n```python\r\n{1, 2} \\ \r\n == {1, 3}\r\n```\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n\r\n```diff\r\n- {1, 2}\r\n?     ^\r\n+ {1, 3}\r\n?     ^\r\n```\r\n</td>\r\n\r\n<td>\r\n\r\n```diff\r\n  {\r\n      1,\r\n-     2,\r\n?     ^\r\n+     3,\r\n?     ^\r\n  }\r\n```\r\n</td>\r\n</tr>\r\n\r\n\r\n<tr>\r\n<td colspan=2>\r\n\r\n```python\r\nnamespace(one=1, two=2) \\ \r\n == namespace(one=2, three=2)\r\n```\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n\r\n```diff\r\n- namespace(one=1, two=2)\r\n?               ^   ^^\r\n+ namespace(one=2, three=2)\r\n?               ^   ^^^^\r\n```\r\n</td>\r\n\r\n<td>\r\n\r\n```diff\r\n  namespace(\r\n-     one=1,\r\n?         ^\r\n+     one=2,\r\n?         ^\r\n-     two=2,\r\n+     three=2,\r\n  )\r\n```\r\n</td>\r\n</tr>\r\n\r\n\r\n<tr>\r\n<td colspan=2>\r\n\r\n```python\r\ndefaultdict(<class 'str'>, {'one': '1', 'two': '2'}) \\ \r\n == defaultdict(<class 'str'>, {'one': '1', 'two': '3'})\r\n```\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n\r\n```diff\r\n- defaultdict(<class 'str'>, {'one': '1', 'two': '2'})\r\n?                                                 ^\r\n+ defaultdict(<class 'str'>, {'one': '1', 'two': '3'})\r\n?                                                 ^\r\n```\r\n</td>\r\n\r\n<td>\r\n\r\n```diff\r\n  defaultdict(<class 'str'>, {\r\n      'one': '1',\r\n-     'two': '2',\r\n?             ^\r\n+     'two': '3',\r\n?             ^\r\n  })\r\n```\r\n</td>\r\n</tr>\r\n\r\n\r\n<tr>\r\n<td colspan=2>\r\n\r\n```python\r\nCounter({'1': 2, '2': 1}) \\ \r\n == Counter({'2': 2, '1': 1})\r\n```\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n\r\n```diff\r\n- Counter({'1': 2, '2': 1})\r\n+ Counter({'2': 2, '1': 1})\r\n```\r\n</td>\r\n\r\n<td>\r\n\r\n```diff\r\n  Counter({\r\n-     '1': 2,\r\n?      ^\r\n+     '2': 2,\r\n?      ^\r\n-     '2': 1,\r\n?      ^\r\n+     '1': 1,\r\n?      ^\r\n  })\r\n```\r\n</td>\r\n</tr>\r\n\r\n\r\n<tr>\r\n<td colspan=2>\r\n\r\n```python\r\ndeque([1, 2]) \\ \r\n == deque([1, 3])\r\n```\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n\r\n```diff\r\n- deque([1, 2])\r\n?           ^\r\n+ deque([1, 3])\r\n?           ^\r\n```\r\n</td>\r\n\r\n<td>\r\n\r\n```diff\r\n  deque([\r\n      1,\r\n-     2,\r\n?     ^\r\n+     3,\r\n?     ^\r\n  ])\r\n```\r\n</td>\r\n</tr>\r\n\r\n\r\n<tr>\r\n<td colspan=2>\r\n\r\n```python\r\ndeque([1, 2], maxlen=3) \\ \r\n == deque([1, 3], maxlen=4)\r\n```\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n\r\n```diff\r\n- deque([1, 2], maxlen=3)\r\n?           ^          ^\r\n+ deque([1, 3], maxlen=4)\r\n?           ^          ^\r\n```\r\n</td>\r\n\r\n<td>\r\n\r\n```diff\r\n- deque(maxlen=3, [\r\n?              ^\r\n+ deque(maxlen=4, [\r\n?              ^\r\n      1,\r\n-     2,\r\n?     ^\r\n+     3,\r\n?     ^\r\n  ])\r\n```\r\n</td>\r\n</tr>\r\n\r\n\r\n<tr>\r\n<td colspan=2>\r\n\r\n```python\r\n{ 'counter': Counter({'2': 2, '1': 1}),\r\n  'dataclass': DataclassWithTwoItems(foo='foo', bar='bar'),\r\n  'defaultdict': defaultdict(<class 'str'>,\r\n                             { 'one': '1',\r\n                               'two': '2'}),\r\n  'deque': deque([1, 2], maxlen=3),\r\n  'dict': {'one': 1, 'two': 2},\r\n  'list': [1, 2],\r\n  'set': {1, 2},\r\n  'simplenamespace': namespace(one=1, two=2),\r\n  'tuple': (1, 2)} \\ \r\n == { 'counter': Counter({'1': 2, '2': 1}),\r\n  'dataclass': DataclassWithTwoItems(foo='foo', bar='baz'),\r\n  'defaultdict': defaultdict(<class 'str'>,\r\n                             { 'three': '1',\r\n                               'two': '3'}),\r\n  'deque': deque([1, 3], maxlen=3),\r\n  'dict': {'one': 1, 'two': 3},\r\n  'list': [1, 2, 3],\r\n  'set': {1, 3},\r\n  'simplenamespace': namespace(one=1, two=2, three=3),\r\n  'tuple': (1,)}\r\n```\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n\r\n```diff\r\n  {\r\n-  'counter': Counter({'2': 2, '1': 1}),\r\n?                          --------\r\n+  'counter': Counter({'1': 2, '2': 1}),\r\n?                       ++++++++\r\n-  'dataclass': DataclassWithTwoItems(foo='foo', bar='bar'),\r\n?                                                       ^\r\n+  'dataclass': DataclassWithTwoItems(foo='foo', bar='baz'),\r\n?                                                       ^\r\n-  'defaultdict': defaultdict(<class 'str'>, {'one': '1', 'two': '2'}),\r\n?                                              ^^                 ^\r\n+  'defaultdict': defaultdict(<class 'str'>, {'three': '1', 'two': '3'}),\r\n?                                              ^^^^                 ^\r\n-  'deque': deque([1, 2], maxlen=3),\r\n?                     ^\r\n+  'deque': deque([1, 3], maxlen=3),\r\n?                     ^\r\n-  'dict': {'one': 1, 'two': 2},\r\n?                            ^\r\n+  'dict': {'one': 1, 'two': 3},\r\n?                            ^\r\n-  'list': [1, 2],\r\n+  'list': [1, 2, 3],\r\n?               +++\r\n-  'set': {1, 2},\r\n?             ^\r\n+  'set': {1, 3},\r\n?             ^\r\n-  'simplenamespace': namespace(one=1, two=2),\r\n+  'simplenamespace': namespace(one=1, two=2, three=3),\r\n?                                           +++++++++\r\n-  'tuple': (1, 2),\r\n?              --\r\n+  'tuple': (1,),\r\n  }\r\n```\r\n</td>\r\n\r\n<td>\r\n\r\n```diff\r\n  {\r\n      'counter': Counter({\r\n-         '2': 2,\r\n?          ^\r\n+         '1': 2,\r\n?          ^\r\n-         '1': 1,\r\n?          ^\r\n+         '2': 1,\r\n?          ^\r\n      }),\r\n      'dataclass': DataclassWithTwoItems(\r\n          foo='foo',\r\n-         bar='bar',\r\n?                ^\r\n+         bar='baz',\r\n?                ^\r\n      ),\r\n      'defaultdict': defaultdict(<class 'str'>, {\r\n-         'one': '1',\r\n?          ^^\r\n+         'three': '1',\r\n?          ^^^^\r\n-         'two': '2',\r\n?                 ^\r\n+         'two': '3',\r\n?                 ^\r\n      }),\r\n      'deque': deque(maxlen=3, [\r\n          1,\r\n-         2,\r\n?         ^\r\n+         3,\r\n?         ^\r\n      ]),\r\n      'dict': {\r\n          'one': 1,\r\n-         'two': 2,\r\n?                ^\r\n+         'two': 3,\r\n?                ^\r\n      },\r\n      'list': [\r\n          1,\r\n          2,\r\n+         3,\r\n      ],\r\n      'set': {\r\n          1,\r\n-         2,\r\n?         ^\r\n+         3,\r\n?         ^\r\n      },\r\n      'simplenamespace': namespace(\r\n          one=1,\r\n          two=2,\r\n+         three=3,\r\n      ),\r\n      'tuple': (\r\n          1,\r\n-         2,\r\n      ),\r\n  }\r\n```\r\n</td>\r\n</tr>\r\n\r\n</table>\r\n\r\n\r\n\r\n</details>\r\n\r\n\r\n### Full example\r\n\r\nTaking the example from https://github.com/lukaszb/pytest-dictsdiff, as in the issue:\r\n\r\n#### Previously:\r\n\r\n```diff\r\n- {\r\n-  'cell': '(056)-022-8631',\r\n-  'dob': {'age': 34,\r\n+ OrderedDict([('cell',\r\n+               '(056)-022-8631'),\r\n+              ('dob',\r\n+               {'age': 44,\r\n-          'date': '1953-11-04T01:21:04Z'},\r\n?                     ^              ^\r\n+                'date': '1983-11-04T01:21:14Z'}),\r\n? ++++++                    ^              ^    +\r\n-  'email': 'zeyneb.elfring@example.com',\r\n-  'gender': 'female',\r\n-  'id': {'name': 'BSN',\r\n+              ('email',\r\n+               'zeyneb.elfring@example.com'),\r\n+              ('gender',\r\n+               'female'),\r\n+              ('id',\r\n+               {'name': 'BSN',\r\n-         'value': '36180866'},\r\n+                'value': '36180866'}),\r\n? +++++++                            +\r\n-  'location': {'city': 'Tholen',\r\n+              ('location',\r\n+               {'city': 'tholen',\r\n-               'coordinates': {'latitude': '46.8823',\r\n+                'coordinates': {'latitude': '46.8823',\r\n? +\r\n-                               'longitude': '175.8856'},\r\n+                                'longitude': '175.8856'},\r\n? +\r\n-               'postcode': 64509,\r\n?                               ^\r\n+                'postcode': 64504,\r\n? +                              ^\r\n-               'state': 'groningen',\r\n+                'state': 'groningen',\r\n? +\r\n-               'street': '2074 adriaen van ostadelaan',\r\n+                'street': '2074 adriaen van ostadelaan',\r\n? +\r\n-               'timezone': {'description': 'Adelaide, Darwin',\r\n+                'timezone': {'description': 'Adelaide, Darwin',\r\n? +\r\n-                            'offset': '+9:30'}},\r\n+                             'offset': '+9:30'}}),\r\n? +                                              +\r\n+              ('login',\r\n-  'login': {'md5': 'bafe8cf9d37806a7b13edc218d5ff762',\r\n?  ^^^^^^^^\r\n+               {'md5': 'bafe8cf9d37806a7b13edc218d5ff762',\r\n?  ^^^^^^^^^^^^\r\n-            'password': 'ontario',\r\n+                'password': 'ontario',\r\n? ++++\r\n-            'salt': 'QVBKgEjy',\r\n+                'salt': 'QVBKgEjy',\r\n? ++++\r\n-            'sha1': 'cacef09ff61072d1c55732963766fa84e919aa7a',\r\n+                'sha1': 'cacef09ff61072d1c55732963766fa84e919aa7a',\r\n? ++++\r\n-            'sha256': 'cc86af47aedbdbb1de73ff10484996fe9785c47c0fc191b7c67eaf71e0782300',\r\n+                'sha256': 'cc86af47aedbdbb1de73ff10484996fe9785c47c0fc191b7c67eaf71e0782300',\r\n? ++++\r\n-            'username': 'smallgorilla897',\r\n+                'username': 'smallgorilla897',\r\n? ++++\r\n-            'uuid': '37e30c59-bc79-4172-aac6-e2c640e165fa'},\r\n+                'uuid': '37e30c59-bc79-4172-aac6-e2c640e165fa'}),\r\n? ++++                                                          +\r\n-  'name': {'first': 'Zeyneb',\r\n+              ('name',\r\n+               {'first': 'zeyneb',\r\n-           'last': 'Elfring',\r\n?                    ^\r\n+                'last': 'elfring',\r\n? +++++                   ^\r\n-           'title': 'mrs'},\r\n+                'title': 'mrs'}),\r\n? +++++                         +\r\n-  'nat': 'NL',\r\n-  'phone': '(209)-143-9697',\r\n+              ('nat',\r\n+               'NL'),\r\n+              ('phone',\r\n+               '(209)-143-9697'),\r\n+              ('picture',\r\n-  'picture': {'large': 'https://randomuser.me/api/portraits/women/37.jpg',\r\n?  ^^^^^^^^^^\r\n+               {'large': 'https://randomuser.me/api/portraits/women/37.jpg',\r\n?  ^^^^^^^^^^^^\r\n-              'medium': 'https://randomuser.me/api/portraits/med/women/37.jpg',\r\n+                'medium': 'https://randomuser.me/api/portraits/med/women/37.jpg',\r\n? ++\r\n-              'thumbnail': 'https://randomuser.me/api/portraits/thumb/women/37.jpg'},\r\n+                'thumbnail': 'https://randomuser.me/api/portraits/thumb/women/37.jpg'}),\r\n? ++                                                                                   +\r\n-  'registered': {'age': 3,\r\n+              ('registered',\r\n+               {'age': 3,\r\n-                 'date': '2014-12-07T06:54:14Z'},\r\n? -\r\n+                'date': '2014-12-07T06:54:14Z'})],\r\n?                                               ++\r\n- }\r\n```\r\n#### Now:\r\n\r\n```diff\r\n- {\r\n+ OrderedDict({\r\n      'cell': '(056)-022-8631',\r\n      'dob': {\r\n-         'age': 34,\r\n?                ^\r\n+         'age': 44,\r\n?                ^\r\n-         'date': '1953-11-04T01:21:04Z',\r\n?                    ^              ^\r\n+         'date': '1983-11-04T01:21:14Z',\r\n?                    ^              ^\r\n      },\r\n      'email': 'zeyneb.elfring@example.com',\r\n      'gender': 'female',\r\n      'id': {\r\n          'name': 'BSN',\r\n          'value': '36180866',\r\n      },\r\n      'location': {\r\n-         'city': 'Tholen',\r\n?                  ^\r\n+         'city': 'tholen',\r\n?                  ^\r\n          'coordinates': {\r\n              'latitude': '46.8823',\r\n              'longitude': '175.8856',\r\n          },\r\n-         'postcode': 64509,\r\n?                         ^\r\n+         'postcode': 64504,\r\n?                         ^\r\n          'state': 'groningen',\r\n          'street': '2074 adriaen van ostadelaan',\r\n          'timezone': {\r\n              'description': 'Adelaide, Darwin',\r\n              'offset': '+9:30',\r\n          },\r\n      },\r\n      'login': {\r\n          'md5': 'bafe8cf9d37806a7b13edc218d5ff762',\r\n          'password': 'ontario',\r\n          'salt': 'QVBKgEjy',\r\n          'sha1': 'cacef09ff61072d1c55732963766fa84e919aa7a',\r\n          'sha256': 'cc86af47aedbdbb1de73ff10484996fe9785c47c0fc191b7c67eaf71e0782300',\r\n          'username': 'smallgorilla897',\r\n          'uuid': '37e30c59-bc79-4172-aac6-e2c640e165fa',\r\n      },\r\n      'name': {\r\n-         'first': 'Zeyneb',\r\n?                   ^\r\n+         'first': 'zeyneb',\r\n?                   ^\r\n-         'last': 'Elfring',\r\n?                  ^\r\n+         'last': 'elfring',\r\n?                  ^\r\n          'title': 'mrs',\r\n      },\r\n      'nat': 'NL',\r\n      'phone': '(209)-143-9697',\r\n      'picture': {\r\n          'large': 'https://randomuser.me/api/portraits/women/37.jpg',\r\n          'medium': 'https://randomuser.me/api/portraits/med/women/37.jpg',\r\n          'thumbnail': 'https://randomuser.me/api/portraits/thumb/women/37.jpg',\r\n      },\r\n      'registered': {\r\n          'age': 3,\r\n          'date': '2014-12-07T06:54:14Z',\r\n      },\r\n- }\r\n+ })\r\n```",
      "state": "MERGED",
      "createdAt": "2023-10-30T22:51:04Z",
      "updatedAt": "2023-11-27T18:31:03Z",
      "closedAt": "2023-11-27T14:47:18Z",
      "mergedAt": "2023-11-27T14:47:18Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "bschubert/nicer-comparisons-vendor",
      "author": {
        "login": "BenjaminSchubert"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 8
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Re-print the ordered dict as a normal dict",
              "committedDate": "2023-11-27T13:55:46Z",
              "author": {
                "name": "Benjamin Schubert",
                "email": "bschubert15@bloomberg.net",
                "user": {
                  "login": "BenjaminSchubert"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-11-24T12:33:15Z",
            "body": "Great work! I did not review the code itself, only the changelog and the test outcomes. \ud83d\udc4d "
          },
          {
            "author": {
              "login": "BenjaminSchubert"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-11-25T10:33:03Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-11-25T20:43:44Z",
            "body": ""
          },
          {
            "author": {
              "login": "BenjaminSchubert"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-11-26T10:06:46Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "CHANGES_REQUESTED",
            "submittedAt": "2023-11-27T11:20:54Z",
            "body": "I left a few comments, please take a look.\r\n\r\nSome things for possible follow up:\r\n\r\n- There are some small mistakes in the initial typing I didn't notice before, but can be fixed separately.\r\n\r\n- I wonder if `sort_dicts=True` is still the right choice these days, when dicts are ordered. This is also a separate discussion.\r\n\r\n- The `context` can be simplified to a `set` if I'm not mistaken, seems like it's currently a `int -> 1` dict for legacy reasons (probably from before `set` existed...).\r\n\r\n- The `readable` stuff is now unused, we can perhaps drop it to simplify the code.\r\n\r\n- Since `compact` is now ignored, I think we ought to drop this parameter.\r\n\r\nSome ruminations on pprint after reading its code:\r\n\r\n- The pprint code has each `format` function care about the global indentation level. Intuitively if I were to design a pretty-printer I would have each formatter not care about the existing indentation level, i.e. format as if it's the top-level and only care about max width, and the machinery will insert the nesting indentation itself.\r\n\r\n    I wonder if there's a reason why it wasn't done, maybe performance?\r\n\r\n- I wonder why Python went with the `_dispatch` dict instead of an extensible `__pprint__` protocol, which would allow each type to handle its own pretty-printing instead of having it all in the pprint module. Maybe the protocol would be too complex."
          },
          {
            "author": {
              "login": "BenjaminSchubert"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-11-27T12:56:56Z",
            "body": "@bluetech thanks for the review! I addressed the comments with the last commit.\r\n\r\n> Some things for possible follow up:\r\n\r\nYou read my mind. I've got https://github.com/BenjaminSchubert/pytest/tree/bschubert/pprint-cleanup lined up with a lot of the requested clean ups already :)\r\n\r\n> The pprint code has each format function care about the global indentation level. Intuitively if I were to design a pretty-printer I would have each formatter not care about the existing indentation level, i.e. format as if it's the top-level and only care about max width, and the machinery will insert the nesting indentation itself.\r\n\r\nI don't think that's easy to do, as the `max width` depends on the indentation (the further you go, the least space you have). \r\n\r\nHowever, I think we can simplify this as we don't need to have both levels and indentations anymore, with consistent indentation per level. This is a follow up I intend to clean up"
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-11-27T14:46:51Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11570,
      "title": "[7.4.x] doc/reference: fix sidebar TOC depth",
      "body": "Backport of PR #11567 to 7.4.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2023-10-30T07:02:24Z",
      "updatedAt": "2023-10-30T07:26:37Z",
      "closedAt": "2023-10-30T07:26:36Z",
      "mergedAt": "2023-10-30T07:26:36Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "7.4.x",
      "headRefName": "backport-11567-to-7.4.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[7.4.x] doc/reference: fix sidebar TOC depth",
              "committedDate": "2023-10-30T07:02:22Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-10-30T07:02:55Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11568,
      "title": "doc: allow Sphinx 6.x and 7.x",
      "body": "They seem to work fine, let's allow them.",
      "state": "MERGED",
      "createdAt": "2023-10-29T20:17:44Z",
      "updatedAt": "2023-10-29T22:00:28Z",
      "closedAt": "2023-10-29T22:00:28Z",
      "mergedAt": "2023-10-29T22:00:28Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "main",
      "headRefName": "sphinx-6-7",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "doc: allow Sphinx 6.x and 7.x\n\nThey seem to work fine, let's allow them.",
              "committedDate": "2023-10-29T20:17:23Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2023-10-29T22:00:15Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11567,
      "title": "doc/reference: fix sidebar TOC depth",
      "body": "Previously, the sidebar TOC had unlimited depth, making it useless and interfering with the content. This seems to have regressed in pytest 7.2.x going by the RTD version selector.",
      "state": "MERGED",
      "createdAt": "2023-10-29T20:16:58Z",
      "updatedAt": "2023-10-30T19:35:55Z",
      "closedAt": "2023-10-30T07:01:54Z",
      "mergedAt": "2023-10-30T07:01:54Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "fix-ref-tocdepth",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "needs backport"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "doc/reference: fix sidebar TOC depth\n\nPreviously, the sidebar TOC had unlimited depth, making it useless and\ninterfering with the content. This seems to have regressed in pytest\n7.2.x going by the RTD version selector.",
              "committedDate": "2023-10-29T19:55:17Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-10-29T22:37:21Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11566,
      "title": "[automated] Update plugin list",
      "body": "[automated] Update plugin list",
      "state": "MERGED",
      "createdAt": "2023-10-29T00:19:08Z",
      "updatedAt": "2023-10-29T20:48:27Z",
      "closedAt": "2023-10-29T20:48:26Z",
      "mergedAt": "2023-10-29T20:48:26Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "update-plugin-list/patch-738ae2da9",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[automated] Update plugin list",
              "committedDate": "2023-10-29T00:19:06Z",
              "author": {
                "name": "pytest bot",
                "email": "pytestbot@users.noreply.github.com",
                "user": {
                  "login": "pytestbot"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-10-29T20:25:15Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11565,
      "title": "Accept `None` in `_XfailMarkDecorator`'s `condition`param and expose default value",
      "body": "Thanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [x] Include documentation when adding new features.\r\n- [N/A] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [x] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nFixes comments https://github.com/pypa/setuptools/pull/3979#discussion_r1367963793 and https://github.com/pytest-dev/pytest/issues/10094#issuecomment-1774215699  \r\nShould not conflict with #11501\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [x] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [x] Add yourself to `AUTHORS` in alphabetical order.\r\n",
      "state": "CLOSED",
      "createdAt": "2023-10-27T22:33:56Z",
      "updatedAt": "2023-11-08T11:03:31Z",
      "closedAt": "2023-11-08T11:03:31Z",
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "pytest.mark.xfail.condition",
      "author": {
        "login": "Avasam"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[pre-commit.ci] auto fixes from pre-commit.com hooks\n\nfor more information, see https://pre-commit.ci",
              "committedDate": "2023-10-27T22:35:06Z",
              "author": {
                "name": "pre-commit-ci[bot]",
                "email": "66853113+pre-commit-ci[bot]@users.noreply.github.com",
                "user": {
                  "login": "pre-commit-ci[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-10-28T04:42:43Z",
            "body": "I'm very torn on allowing this,\nMy personal preference is not to allow none there"
          }
        ]
      }
    },
    {
      "number": 11564,
      "title": "Fix crash using empty string for parametrized value more than once",
      "body": "Fixes #11563.\r\n",
      "state": "MERGED",
      "createdAt": "2023-10-27T20:25:11Z",
      "updatedAt": "2023-10-27T21:19:17Z",
      "closedAt": "2023-10-27T20:51:32Z",
      "mergedAt": "2023-10-27T20:51:32Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Zac-HD"
      },
      "baseRefName": "main",
      "headRefName": "empty-string-parametrize-11563",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Fix crash using empty string for parametrized value more than once\n\nFixes #11563.",
              "committedDate": "2023-10-27T20:26:12Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2023-10-27T20:39:21Z",
            "body": ""
          },
          {
            "author": {
              "login": "pllim"
            },
            "state": "APPROVED",
            "submittedAt": "2023-10-27T20:42:24Z",
            "body": "Thanks for the quick fix!"
          }
        ]
      }
    },
    {
      "number": 11562,
      "title": "[7.4.x] Update build-and-inspect-python-package action",
      "body": "This should fix the action for Python 3.12.\r\n\r\nRef: hynek/build-and-inspect-python-package#72\r\n(cherry picked from commit 247436819a49a4c21c0926ed0a12bfe7e8166237)\r\n",
      "state": "MERGED",
      "createdAt": "2023-10-27T11:34:20Z",
      "updatedAt": "2023-10-27T13:36:55Z",
      "closedAt": "2023-10-27T13:36:52Z",
      "mergedAt": "2023-10-27T13:36:52Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "7.4.x",
      "headRefName": "backport-11561-to-7.4.x",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Update build-and-inspect-python-package action (#11561)\n\nThis should fix the action for Python 3.12.\n\nRef: hynek/build-and-inspect-python-package#72\n(cherry picked from commit 247436819a49a4c21c0926ed0a12bfe7e8166237)",
              "committedDate": "2023-10-27T11:33:43Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "nicoddemus@gmail.com",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2023-10-27T12:33:25Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11561,
      "title": "Update build-and-inspect-python-package action",
      "body": "This should fix the action for Python 3.12.\r\n\r\nRef: hynek/build-and-inspect-python-package#72\r\n",
      "state": "MERGED",
      "createdAt": "2023-10-27T11:09:08Z",
      "updatedAt": "2023-10-27T11:34:50Z",
      "closedAt": "2023-10-27T11:32:03Z",
      "mergedAt": "2023-10-27T11:32:03Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "update-build-package-action",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Update build-and-inspect-python-package action\n\nThis should fix the action for Python 3.12.\n\nRef: hynek/build-and-inspect-python-package#72",
              "committedDate": "2023-10-27T11:07:40Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-10-27T11:30:04Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11560,
      "title": "Add denote test #11495",
      "body": "<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\nAdd denotation, users now can use annotation to denote a test:\r\n@pytest.mark.test\r\ndef hello():\r\nassert 5 == 5\r\n\r\ntest case could be found in testing/test_denotation.py\r\nthe relative issue url is: https://github.com/pytest-dev/pytest/issues/11495\r\n",
      "state": "CLOSED",
      "createdAt": "2023-10-27T04:17:11Z",
      "updatedAt": "2023-11-08T11:12:12Z",
      "closedAt": "2023-11-08T11:05:48Z",
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "7.4.x",
      "headRefName": "denoteTest-songpengLiu",
      "author": {
        "login": "SongpengLiu"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 8
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "change the log to correct position",
              "committedDate": "2023-10-29T06:02:50Z",
              "author": {
                "name": "Songpeng Liu",
                "email": "u7669411@anu.edu.au",
                "user": {
                  "login": "Songpeng-ANU"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "CHANGES_REQUESTED",
            "submittedAt": "2023-10-27T10:31:17Z",
            "body": "We need first decide how we want to mark tests.\r\n\r\nI like the idea, I also think being able to mark tests explicitly and use short names is a good one, similar to how it is done in Rust.\r\n\r\nI would prefer a `@pytest.test` decorator rather than a mark: a test is certainly a first class citizen, as fixtures are, so we should use `@pytest.test` directly.\r\n\r\nThe implementation for the decorator should be trivial: it can just add a `__pytest_test__` attribute to the function, and we can then check for this attribute during collection to identify test functions.\r\n\r\nOne downside is that there would be now two ways to declare a test, using the decorator or the traditional prefix, but I don't see this as a major problem.\r\n\r\nWe will also need to update the docs accordingly, showing the new-style, the rationale, and that the traditional style of using a `test_` prefix is never going anywhere.\r\n\r\n"
          },
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-10-27T12:47:25Z",
            "body": "> I would prefer a @pytest.test decorator rather than a mark: a test is certainly a first class citizen, as fixtures are, so we should use @pytest.test directly.\r\n\r\nAlso otherwise it's a \"breaking change\", the ``test`` mark would now be reserved by pytest.\r\n\r\nI'm not strongly against this, but it does create two ways to do thing. Also the problem from the initial issue (``can lead to regular functions being mistakenly identified as tests``) is not going to be fixed by adding another way to denote test because the ``test_``  based discovery is not going anywhere. Regarding ``the test outputs contain a lot of fluff making it harder to read``, we could remove the ``test_``prefix from pytest's output instead."
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-10-27T17:10:14Z",
            "body": "How instead of a obnoxious `pytest.test` using a name like force-collect/conditional-collect\n\nI'm currently not sure how to make this one fit nicely "
          }
        ]
      }
    },
    {
      "number": 11559,
      "title": "Add denotation, users now can use annotation to denote a test",
      "body": "<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\nAdd denotation, users now can use annotation to denote a test:\r\n@pytest.mark.test\r\ndef hello():\r\n    assert 5 == 5\r\n\r\ntest case could be found in testing/test_denotation.py\r\nthe relative issue url is: https://github.com/pytest-dev/pytest/issues/11495\r\n",
      "state": "CLOSED",
      "createdAt": "2023-10-27T03:37:45Z",
      "updatedAt": "2023-10-27T04:18:39Z",
      "closedAt": "2023-10-27T04:18:39Z",
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "issue11495-denoteTest-songpeng",
      "author": {
        "login": "SongpengLiu"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[pre-commit.ci] auto fixes from pre-commit.com hooks\n\nfor more information, see https://pre-commit.ci",
              "committedDate": "2023-10-27T03:38:27Z",
              "author": {
                "name": "pre-commit-ci[bot]",
                "email": "66853113+pre-commit-ci[bot]@users.noreply.github.com",
                "user": {
                  "login": "pre-commit-ci[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11558,
      "title": "Mention -q and -s in the docs",
      "body": "- Closes #11507.\r\n- Added references to command line options `-q (--quiet )` ,`--capture` and `-s (--capture)` in the output documentation.\r\n",
      "state": "MERGED",
      "createdAt": "2023-10-26T15:42:48Z",
      "updatedAt": "2023-10-27T18:32:02Z",
      "closedAt": "2023-10-27T17:35:46Z",
      "mergedAt": "2023-10-27T17:35:46Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "commandline-options-doc-fix",
      "author": {
        "login": "ziadk"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 4
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Delete changelog/11507.doc.rst",
              "committedDate": "2023-10-27T17:09:21Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-10-26T16:24:09Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "CHANGES_REQUESTED",
            "submittedAt": "2023-10-26T16:24:41Z",
            "body": "Please see comments."
          },
          {
            "author": {
              "login": "ziadk"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-10-26T17:07:12Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-10-26T17:49:55Z",
            "body": ""
          },
          {
            "author": {
              "login": "ziadk"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-10-26T18:15:38Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-10-27T17:09:12Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-10-27T17:10:02Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11557,
      "title": "Remove nullcontext + parametrize recommendation",
      "body": "- Closes #11556.\r\n- Removed recommendation about using nullcontext + parametrize in the documentation.",
      "state": "CLOSED",
      "createdAt": "2023-10-26T14:36:49Z",
      "updatedAt": "2023-11-07T22:54:26Z",
      "closedAt": "2023-11-07T22:54:25Z",
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "CONFLICTING",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "nullcontext-parametrize-docs",
      "author": {
        "login": "ziadk"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 5
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Merge branch 'main' into nullcontext-parametrize-docs",
              "committedDate": "2023-10-27T13:48:29Z",
              "author": {
                "name": "Ziad Kermadi",
                "email": "ziadkermadi@gmail.com",
                "user": {
                  "login": "ziad-kermadi"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": [
          {
            "requestedReviewer": {
              "login": "The-Compiler"
            }
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-10-26T15:21:56Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "CHANGES_REQUESTED",
            "submittedAt": "2023-11-01T13:43:25Z",
            "body": "Seems we do not have consensus this section should be removed from the docs. Waiting to see if others would like to comment on it, otherwise we should close this."
          }
        ]
      }
    },
    {
      "number": 11554,
      "title": "[7.4.x] Fix tag name generated by deploy workflow (#11550)",
      "body": "Traditionally pytest publishes tags in the form `X.Y.Z`, however the deploy workflow (copied from somewhere else) published tags in the form `vX.Y.Z`.\r\n\r\nThis is the root cause of #11548, because it tried to publish the release notes for tag `X.Y.Z` (which did not exist).\r\n\r\nFix #11548",
      "state": "MERGED",
      "createdAt": "2023-10-25T16:23:14Z",
      "updatedAt": "2023-10-25T16:28:26Z",
      "closedAt": "2023-10-25T16:28:23Z",
      "mergedAt": "2023-10-25T16:28:23Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "7.4.x",
      "headRefName": "backport-11550-to-7.4.x",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Fix tag name generated by deploy workflow (#11550)\n\nTraditionally pytest publishes tags in the form `X.Y.Z`, however the deploy workflow (copied from somewhere else) published tags in the form `vX.Y.Z`.\n\nThis is the root cause of #11548, because it tried to publish the release notes for tag `X.Y.Z` (which did not exist).\n\nFix #11548\n\n(cherry picked from commit c1728948ac7bcd807a40f9aaae63f2f09f5df5b7)",
              "committedDate": "2023-10-25T16:22:26Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "nicoddemus@gmail.com",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11553,
      "title": "[7.4.x] Add deploy instructions using the command-line",
      "body": "Backport of PR #11547 to 7.4.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2023-10-25T13:04:37Z",
      "updatedAt": "2023-10-25T13:37:57Z",
      "closedAt": "2023-10-25T13:37:56Z",
      "mergedAt": "2023-10-25T13:37:56Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "7.4.x",
      "headRefName": "backport-11547-to-7.4.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[7.4.x] Add deploy instructions using the command-line",
              "committedDate": "2023-10-25T13:04:35Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "nicoddemus@gmail.com",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-10-25T13:17:43Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11551,
      "title": "Context Manager",
      "body": "Added context-manager for github3.login() function. `.`.\r\n\r\n- [x] Add yourself to `AUTHORS` in alphabetical order.\r\n--> Leonardo \"Sveimoldr\" Carvalho\r\n",
      "state": "CLOSED",
      "createdAt": "2023-10-24T22:49:06Z",
      "updatedAt": "2023-10-24T22:50:36Z",
      "closedAt": "2023-10-24T22:50:36Z",
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "c-manager",
      "author": {
        "login": "Sveimoldr"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Merge pull request #1 from Sveimoldr/Sveimoldr-patch-1\n\nUpdate publish-gh-release-notes.py\r\nAdded context-manager for github3.login() function.",
              "committedDate": "2023-10-24T22:48:08Z",
              "author": {
                "name": "Leo Carvalho",
                "email": "38107116+Sveimoldr@users.noreply.github.com",
                "user": {
                  "login": "Sveimoldr"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11550,
      "title": "Fix tag name generated by deploy workflow",
      "body": "Traditionally pytest publishes tags in the form `X.Y.Z`, however the deploy workflow (copied from somewhere else) published tags in the form `vX.Y.Z`.\r\n\r\nThis is the root cause of #11548, because it tried to publish the release notes for tag `X.Y.Z` (which did not exist).\r\n\r\nFix #11548\r\n",
      "state": "MERGED",
      "createdAt": "2023-10-24T20:41:53Z",
      "updatedAt": "2023-10-25T16:19:57Z",
      "closedAt": "2023-10-25T16:19:48Z",
      "mergedAt": "2023-10-25T16:19:48Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "fix-prepare-release-script-tag",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Fix tag name generated by deploy workflow\n\nTraditionally pytest publishes tags in the form `X.Y.Z`, however the deploy workflow (copied from somewhere else) published tags in the form `vX.Y.Z`.\n\nThis is the root cause of #11548, because it tried to publish the release notes for tag `X.Y.Z` (which did not exist).\n\nFix #11548",
              "committedDate": "2023-10-24T20:37:57Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "CHANGES_REQUESTED",
            "submittedAt": "2023-10-24T20:50:24Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-10-24T21:02:06Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-10-25T04:36:43Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-10-25T12:37:38Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-10-25T12:37:49Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-10-25T13:05:00Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2023-10-25T16:11:36Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11549,
      "title": "Cherry pick 7.4.3 release",
      "body": "",
      "state": "MERGED",
      "createdAt": "2023-10-24T19:40:55Z",
      "updatedAt": "2023-10-24T19:50:17Z",
      "closedAt": "2023-10-24T19:50:14Z",
      "mergedAt": "2023-10-24T19:50:14Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "cherry-pick-release",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Merge pull request #11546 from pytest-dev/release-7.4.3\n\nPrepare release 7.4.3\n\n(cherry picked from commit 53df6164b44269f85334eace9c473c3f3a04aae7)",
              "committedDate": "2023-10-24T19:39:58Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "nicoddemus@gmail.com",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11547,
      "title": "Add deploy instructions using the command-line",
      "body": "Tested this to trigger the deploy of #11546.\r\n\r\n",
      "state": "MERGED",
      "createdAt": "2023-10-24T19:15:33Z",
      "updatedAt": "2023-10-25T13:04:13Z",
      "closedAt": "2023-10-25T13:04:06Z",
      "mergedAt": "2023-10-25T13:04:06Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "release-docs",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Add deploy instructions using the command-line\n\nTested this to trigger the deploy of #11546.",
              "committedDate": "2023-10-24T19:14:43Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-10-25T12:36:16Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11546,
      "title": "Prepare release 7.4.3",
      "body": "Created by the [prepare release pr](https://github.com/pytest-dev/pytest/actions/workflows/prepare-release-pr.yml) workflow.\r\n\r\nOnce all builds pass and it has been **approved** by one or more maintainers,\r\nstart the [deploy](https://github.com/pytest-dev/pytest/actions/workflows/deploy.yml) workflow, using these parameters:\r\n\r\n* `Use workflow from`: `release-7.4.3`.\r\n* `Release version`: `7.4.3`.\r\n\r\nAfter the `deploy` workflow has been approved by a core maintainer, the package will be uploaded to PyPI automatically.\r\n",
      "state": "MERGED",
      "createdAt": "2023-10-24T18:43:18Z",
      "updatedAt": "2023-10-24T20:43:54Z",
      "closedAt": "2023-10-24T19:38:09Z",
      "mergedAt": "2023-10-24T19:38:09Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "7.4.x",
      "headRefName": "release-7.4.3",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Tweak changelog.rst",
              "committedDate": "2023-10-24T18:45:08Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "nicoddemus@gmail.com",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11545,
      "title": "[7.4.x] fix #10447 - consider marks in reverse mro order to give base classes priority",
      "body": "Backport of PR #11155 to 7.4.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2023-10-24T14:27:31Z",
      "updatedAt": "2023-10-24T15:04:14Z",
      "closedAt": "2023-10-24T15:04:13Z",
      "mergedAt": "2023-10-24T15:04:13Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "7.4.x",
      "headRefName": "backport-11155-to-7.4.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[7.4.x] fix #10447 - consider marks in reverse mro order to give base classes priority",
              "committedDate": "2023-10-24T14:27:29Z",
              "author": {
                "name": "Ronny Pfannschmidt",
                "email": "opensource@ronnypfannschmidt.de",
                "user": {
                  "login": "RonnyPfannschmidt"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-10-24T14:28:50Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11543,
      "title": "[pre-commit.ci] pre-commit autoupdate",
      "body": "<!--pre-commit.ci start-->\nupdates:\n- [github.com/psf/black: 23.9.1 \u2192 23.10.1](https://github.com/psf/black/compare/23.9.1...23.10.1)\n- [github.com/pre-commit/mirrors-mypy: v1.6.0 \u2192 v1.6.1](https://github.com/pre-commit/mirrors-mypy/compare/v1.6.0...v1.6.1)\n<!--pre-commit.ci end-->",
      "state": "MERGED",
      "createdAt": "2023-10-23T20:52:37Z",
      "updatedAt": "2023-10-24T01:42:44Z",
      "closedAt": "2023-10-24T01:42:43Z",
      "mergedAt": "2023-10-24T01:42:43Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "main",
      "headRefName": "pre-commit-ci-update-config",
      "author": {
        "login": "pre-commit-ci"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[pre-commit.ci] pre-commit autoupdate\n\nupdates:\n- [github.com/psf/black: 23.9.1 \u2192 23.10.1](https://github.com/psf/black/compare/23.9.1...23.10.1)\n- [github.com/pre-commit/mirrors-mypy: v1.6.0 \u2192 v1.6.1](https://github.com/pre-commit/mirrors-mypy/compare/v1.6.0...v1.6.1)",
              "committedDate": "2023-10-23T20:52:36Z",
              "author": {
                "name": "pre-commit-ci[bot]",
                "email": "66853113+pre-commit-ci[bot]@users.noreply.github.com",
                "user": {
                  "login": "pre-commit-ci[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2023-10-24T01:42:38Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11542,
      "title": "Use pytestconfig instead of request.config in cache example",
      "body": "to be consistent with the API documentation.\r\n\r\nCloses #11065 \r\n\r\n",
      "state": "MERGED",
      "createdAt": "2023-10-23T18:41:37Z",
      "updatedAt": "2023-12-31T09:29:39Z",
      "closedAt": "2023-10-23T18:45:16Z",
      "mergedAt": "2023-10-23T18:45:16Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "update_cache_example",
      "author": {
        "login": "CarstenGrohmann"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Use pytestconfig instead of request.config in cache example\n\nto be consistent with the API documentation.",
              "committedDate": "2023-10-23T18:38:53Z",
              "author": {
                "name": "Carsten Grohmann",
                "email": "mail@carstengrohmann.de",
                "user": {
                  "login": "CarstenGrohmann"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-10-23T18:44:46Z",
            "body": "Thanks!"
          }
        ]
      }
    },
    {
      "number": 11541,
      "title": "[7.4.x] Ensure logging tests always cleanup after themselves",
      "body": "Backport of PR #11531 to 7.4.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2023-10-23T13:55:45Z",
      "updatedAt": "2023-10-23T14:28:06Z",
      "closedAt": "2023-10-23T14:28:05Z",
      "mergedAt": "2023-10-23T14:28:05Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "7.4.x",
      "headRefName": "backport-11531-to-7.4.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[7.4.x] Ensure logging tests always cleanup after themselves",
              "committedDate": "2023-10-23T13:55:43Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "nicoddemus@gmail.com",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-10-23T13:56:16Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11540,
      "title": "[7.4.x] Configure ReadTheDocs to fail on warnings",
      "body": "Backport of PR #11535 to 7.4.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2023-10-23T12:57:09Z",
      "updatedAt": "2023-10-23T13:23:19Z",
      "closedAt": "2023-10-23T13:23:18Z",
      "mergedAt": "2023-10-23T13:23:18Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "7.4.x",
      "headRefName": "backport-11535-to-7.4.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[7.4.x] Configure ReadTheDocs to fail on warnings",
              "committedDate": "2023-10-23T12:57:07Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "nicoddemus@gmail.com",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-10-23T12:57:49Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11539,
      "title": "build(deps): Bump pytest-mock from 3.11.1 to 3.12.0 in /testing/plugins_integration",
      "body": "Bumps [pytest-mock](https://github.com/pytest-dev/pytest-mock) from 3.11.1 to 3.12.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pytest-dev/pytest-mock/releases\">pytest-mock's releases</a>.</em></p>\n<blockquote>\n<h2>v3.12.0</h2>\n<ul>\n<li>Added support for Python 3.12.</li>\n<li>Dropped support for EOL Python 3.7.</li>\n<li><code>mocker.resetall()</code> now also resets mocks created by <code>mocker.create_autospec</code> (<a href=\"https://redirect.github.com/pytest-dev/pytest-mock/pull/390\">#390</a>).</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/pytest-dev/pytest-mock/blob/main/CHANGELOG.rst\">pytest-mock's changelog</a>.</em></p>\n<blockquote>\n<h2>3.12.0 (2023-10-19)</h2>\n<ul>\n<li>Added support for Python 3.12.</li>\n<li>Dropped support for EOL Python 3.7.</li>\n<li><code>mocker.resetall()</code> now also resets mocks created by <code>mocker.create_autospec</code> (<code>[#390](https://github.com/pytest-dev/pytest-mock/issues/390)</code>_).</li>\n</ul>\n<p>.. _<a href=\"https://redirect.github.com/pytest-dev/pytest-mock/issues/390\">#390</a>: <a href=\"https://redirect.github.com/pytest-dev/pytest-mock/pull/390\">pytest-dev/pytest-mock#390</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pytest-dev/pytest-mock/commit/69adc6f76c1a7baf4e7a728da9eec38741d5783e\"><code>69adc6f</code></a> Re-add norewrite tests</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-mock/commit/b905823ba6894f89b1ecd9aafcabf1e20612ac22\"><code>b905823</code></a> Drop Python 3.7 and add Python 3.12</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-mock/commit/2a71a0d6ab8719defc9309da20bd97b7b35262b6\"><code>2a71a0d</code></a> mocker.resetall now also resets mockers created by <code>create_autospec</code> (<a href=\"https://redirect.github.com/pytest-dev/pytest-mock/issues/390\">#390</a>)</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-mock/commit/e84f88501188504f1fa6e56e0d0e6604985298a1\"><code>e84f885</code></a> Merge pull request <a href=\"https://redirect.github.com/pytest-dev/pytest-mock/issues/391\">#391</a> from pytest-dev/pre-commit-ci-update-config</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-mock/commit/e0372217cdd057eb67ffe416177880c141cd3adf\"><code>e037221</code></a> [pre-commit.ci] pre-commit autoupdate</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-mock/commit/f019696e44adb0d6159bea78172ed8d0aeed10e5\"><code>f019696</code></a> Merge pull request <a href=\"https://redirect.github.com/pytest-dev/pytest-mock/issues/387\">#387</a> from pytest-dev/where-to-patch-link</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-mock/commit/09f18148a5b1a2109914f47198c8d8fb1f836307\"><code>09f1814</code></a> Merge pull request <a href=\"https://redirect.github.com/pytest-dev/pytest-mock/issues/388\">#388</a> from pytest-dev/pre-commit-ci-update-config</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-mock/commit/f55f17e73b469034dbb87e5fadbb3e103913826a\"><code>f55f17e</code></a> [pre-commit.ci] pre-commit autoupdate</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-mock/commit/cec59a0b444efc3f1fb03308460cad6bf5a81709\"><code>cec59a0</code></a> Update usage.rst</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-mock/commit/53cc0a550fb6dbb9c1eafc2c96cc5c2bf02c4185\"><code>53cc0a5</code></a> Update usage.rst</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pytest-dev/pytest-mock/compare/v3.11.1...v3.12.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pytest-mock&package-manager=pip&previous-version=3.11.1&new-version=3.12.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2023-10-23T03:38:58Z",
      "updatedAt": "2023-10-23T12:01:10Z",
      "closedAt": "2023-10-23T12:01:09Z",
      "mergedAt": "2023-10-23T12:01:09Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/pip/testing/plugins_integration/pytest-mock-3.12.0",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "python"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump pytest-mock in /testing/plugins_integration\n\nBumps [pytest-mock](https://github.com/pytest-dev/pytest-mock) from 3.11.1 to 3.12.0.\n- [Release notes](https://github.com/pytest-dev/pytest-mock/releases)\n- [Changelog](https://github.com/pytest-dev/pytest-mock/blob/main/CHANGELOG.rst)\n- [Commits](https://github.com/pytest-dev/pytest-mock/compare/v3.11.1...v3.12.0)\n\n---\nupdated-dependencies:\n- dependency-name: pytest-mock\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2023-10-23T03:38:57Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11537,
      "title": "Always use, and improve the AlwaysDispatchPrettyPrinter for diffs",
      "body": "## Overview\r\n\r\n**Note**: An alternative implementation has been made at #11571, following feedback.\r\n\r\nThe normal default pretty printer is not great when objects are nested  it can get hard to read the diffs produced.\r\n\r\nInstead, provide a pretty printer that behaves more like when json get  which allows for smaller, more meaningful differences, at the  expense of a slightly longer diff.\r\n\r\nFix #1531 \r\n\r\n## Alternatives/Potential improvements\r\n\r\nThis has the disadvantage that diffs are now longer, even for small changes (like `[1, 2] == [1, 3]`). We could potentially still keep the previous implementation for the case where the diff is the same length AND has a single line. This would take care of trivial cases. It would however make some diffs harder to read again, like `[1, 2, 3] == [2, 3, 4]`, which would now show 3 differences.\r\n\r\nThis is however not generalisable to deeply nested payloads.\r\n\r\n## Notes for maintainers\r\n\r\nThis needs to work a lot with private details of the pretty printer. There was already some of that happening, but this makes it much more tied to it. It would technically be possible to reimplement most of it without touching private methods, but that would require a lot of copying. this module has been quite stable over time so it might not be worth it.\r\n\r\nThe first commit contains the initial 'crude' implementation, which mostly copy pastes and adapts the code from the standard librarie's prettyprinter. The second commit (the !fixup) cleans up the interface and removes duplication.\r\n\r\nThe support for dataclasses and simplenamespaces is degraded before python 3.10 and 3.9 respectively. I believe we could backport the implementation, but not sure how important that is.\r\n\r\n## Examples\r\n\r\n### Basic\r\n\r\n<details>\r\n  <summary>Generated using the following script</summary>\r\n  \r\n  ```python\r\nfrom collections import Counter, defaultdict, deque\r\nfrom dataclasses import dataclass\r\nfrom functools import partial\r\nimport pprint\r\nfrom types import SimpleNamespace\r\nfrom typing import Optional, Dict, Any, IO, List\r\nimport difflib\r\n\r\nfrom _pytest._io.saferepr import _pformat_dispatch\r\n\r\n###\r\n# Original pytest diff, copied in\r\n###\r\nclass AlwaysDispatchingPrettyPrinter(pprint.PrettyPrinter):\r\n    \"\"\"PrettyPrinter that always dispatches (regardless of width).\"\"\"\r\n\r\n    def _format(\r\n        self,\r\n        object: object,\r\n        stream: IO[str],\r\n        indent: int,\r\n        allowance: int,\r\n        context: Dict[int, Any],\r\n        level: int,\r\n    ) -> None:\r\n        # Type ignored because _dispatch is private.\r\n        p = self._dispatch.get(type(object).__repr__, None)  # type: ignore[attr-defined]\r\n\r\n        objid = id(object)\r\n        if objid in context or p is None:\r\n            # Type ignored because _format is private.\r\n            super()._format(  # type: ignore[misc]\r\n                object,\r\n                stream,\r\n                indent,\r\n                allowance,\r\n                context,\r\n                level,\r\n            )\r\n            return\r\n\r\n        context[objid] = 1\r\n        p(self, object, stream, indent, allowance, context, level + 1)\r\n        del context[objid]\r\n\r\n\r\ndef _pformat_dispatch_original(\r\n    object: object,\r\n    indent: int = 1,\r\n    width: int = 80,\r\n    depth: Optional[int] = None,\r\n    *,\r\n    compact: bool = False,\r\n) -> str:\r\n    return AlwaysDispatchingPrettyPrinter(\r\n        indent=indent, width=width, depth=depth, compact=compact\r\n    ).pformat(object)\r\n\r\ndef _surrounding_parens_on_own_lines(lines: List[str]) -> None:\r\n    \"\"\"Move opening/closing parenthesis/bracket to own lines.\"\"\"\r\n    opening = lines[0][:1]\r\n    if opening in [\"(\", \"[\", \"{\"]:\r\n        lines[0] = \" \" + lines[0][1:]\r\n        lines[:] = [opening] + lines\r\n    closing = lines[-1][-1:]\r\n    if closing in [\")\", \"]\", \"}\"]:\r\n        lines[-1] = lines[-1][:-1] + \",\"\r\n        lines[:] = lines + [closing]\r\n\r\n\r\ndef original_diff(left, right):\r\n    left_formatting = pprint.pformat(left).splitlines()\r\n    right_formatting = pprint.pformat(right).splitlines()\r\n\r\n    # Re-format for different output lengths.\r\n    lines_left = len(left_formatting)\r\n    lines_right = len(right_formatting)\r\n    if lines_left != lines_right:\r\n        left_formatting = _pformat_dispatch_original(left).splitlines()\r\n        right_formatting = _pformat_dispatch_original(right).splitlines()\r\n\r\n    if lines_left > 1 or lines_right > 1:\r\n        _surrounding_parens_on_own_lines(left_formatting)\r\n        _surrounding_parens_on_own_lines(right_formatting)\r\n\r\n    return left_formatting, right_formatting\r\n\r\n\r\n###\r\n# Script to generate the diffs\r\n###\r\n\r\nTABLE = \"\"\"\r\n<table>\r\n<tr>\r\n<th>Test</th>\r\n<th>Main</th>\r\n<th>Proposal</th>\r\n</tr>\r\n{rows}\r\n</table>\r\n\"\"\"\r\n\r\nROW = \"\"\"\r\n<tr>\r\n<td colspan=2>\r\n\r\n\\`\\`\\`python\r\n{python}\r\n\\`\\`\\`\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n\r\n\\`\\`\\`diff\r\n{diff_original}\r\n\\`\\`\\`\r\n</td>\r\n\r\n<td>\r\n\r\n\\`\\`\\`diff\r\n{diff_new}\r\n\\`\\`\\`\r\n</td>\r\n</tr>\r\n\"\"\"\r\n\r\n\r\ndef get_row(left, right):\r\n    original = \"\\n\".join(\r\n        line.rstrip()\r\n        for line in difflib.ndiff(*original_diff(left, right))\r\n    )\r\n    new = \"\\n\".join(\r\n        line.rstrip()\r\n        for line in difflib.ndiff(_pformat_dispatch(left).splitlines(), _pformat_dispatch(right).splitlines())\r\n    )\r\n\r\n    fmt = partial(pprint.pformat, indent=2, width=60)\r\n    return f\"{fmt(left)} \\\\ \\n == {fmt(right)}\", original, new\r\n\r\n\r\n@dataclass\r\nclass DataclassWithTwoItems:\r\n    foo: str\r\n    bar: str\r\n\r\n\r\nrows = [\r\n    get_row(left, right)\r\n    for left, right in [\r\n        [{\"one\": 1, \"two\": 2}, {\"three\": 1, \"two\": 3}],\r\n        [[1, 2], [1, 3]],\r\n        [(1,), (2,)],\r\n        [(1, 2), (1, 3)],\r\n        [{1, 2}, {1, 3}],\r\n        [SimpleNamespace(one=1, two=2), SimpleNamespace(one=2, three=2)],\r\n        [\r\n            defaultdict(str, {\"one\": \"1\", \"two\": \"2\"}),\r\n            defaultdict(str, {\"one\": \"1\", \"two\": \"3\"}),\r\n        ],\r\n        [Counter(\"121\"), Counter(\"122\")],\r\n        [deque([1, 2]), deque([1, 3])],\r\n        [deque([1, 2], maxlen=3), deque([1, 3], maxlen=4)],\r\n        [\r\n            {\r\n                \"counter\": Counter(\"122\"),\r\n                \"dataclass\": DataclassWithTwoItems(foo=\"foo\", bar=\"bar\"),\r\n                \"defaultdict\": defaultdict(str, {\"one\": \"1\", \"two\": \"2\"}),\r\n                \"deque\": deque([1, 2], maxlen=3),\r\n                \"dict\": {\"one\": 1, \"two\": 2},\r\n                \"list\": [1, 2],\r\n                \"set\": {1, 2},\r\n                \"simplenamespace\": SimpleNamespace(one=1, two=2),\r\n                \"tuple\": (1, 2),\r\n            },\r\n            {\r\n                \"counter\": Counter(\"121\"),\r\n                \"dataclass\": DataclassWithTwoItems(foo=\"foo\", bar=\"baz\"),\r\n                \"defaultdict\": defaultdict(str, {\"three\": \"1\", \"two\": \"3\"}),\r\n                \"deque\": deque([1, 3], maxlen=3),\r\n                \"dict\": {\"one\": 1, \"two\": 3},\r\n                \"list\": [1, 2, 3],\r\n                \"set\": {1, 3},\r\n                \"simplenamespace\": SimpleNamespace(one=1, two=2, three=3),\r\n                \"tuple\": (1,),\r\n            },\r\n        ],\r\n    ]\r\n]\r\n\r\nprint(\r\n    TABLE.format(\r\n        rows=\"\\n\".join(\r\n            [\r\n                ROW.format(python=row[0], diff_original=row[1], diff_new=row[2])\r\n                for row in rows\r\n            ]\r\n        )\r\n    )\r\n)\r\n\r\n  ```\r\n</details>\r\n\r\n\r\n<details>\r\n  <summary>We get the following differences on small entries:</summary>\r\n\r\n<table>\r\n<tr>\r\n<th>Test</th>\r\n<th>Main</th>\r\n<th>Proposal</th>\r\n</tr>\r\n\r\n<tr>\r\n<td colspan=2>\r\n\r\n```python\r\n{'one': 1, 'two': 2} \\ \r\n == {'three': 1, 'two': 3}\r\n```\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n\r\n```diff\r\n- {'one': 1, 'two': 2}\r\n?   ^^              ^\r\n+ {'three': 1, 'two': 3}\r\n?   ^^^^              ^\r\n```\r\n</td>\r\n\r\n<td>\r\n\r\n```diff\r\n  {\r\n-     'one': 1,\r\n?      ^^\r\n+     'three': 1,\r\n?      ^^^^\r\n-     'two': 2,\r\n?            ^\r\n+     'two': 3,\r\n?            ^\r\n  }\r\n```\r\n</td>\r\n</tr>\r\n\r\n\r\n<tr>\r\n<td colspan=2>\r\n\r\n```python\r\n[1, 2] \\ \r\n == [1, 3]\r\n```\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n\r\n```diff\r\n- [1, 2]\r\n?     ^\r\n+ [1, 3]\r\n?     ^\r\n```\r\n</td>\r\n\r\n<td>\r\n\r\n```diff\r\n  [\r\n      1,\r\n-     2,\r\n?     ^\r\n+     3,\r\n?     ^\r\n  ]\r\n```\r\n</td>\r\n</tr>\r\n\r\n\r\n<tr>\r\n<td colspan=2>\r\n\r\n```python\r\n(1,) \\ \r\n == (2,)\r\n```\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n\r\n```diff\r\n- (1,)\r\n?  ^\r\n+ (2,)\r\n?  ^\r\n```\r\n</td>\r\n\r\n<td>\r\n\r\n```diff\r\n  (\r\n-     1,\r\n?     ^\r\n+     2,\r\n?     ^\r\n  )\r\n```\r\n</td>\r\n</tr>\r\n\r\n\r\n<tr>\r\n<td colspan=2>\r\n\r\n```python\r\n(1, 2) \\ \r\n == (1, 3)\r\n```\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n\r\n```diff\r\n- (1, 2)\r\n?     ^\r\n+ (1, 3)\r\n?     ^\r\n```\r\n</td>\r\n\r\n<td>\r\n\r\n```diff\r\n  (\r\n      1,\r\n-     2,\r\n?     ^\r\n+     3,\r\n?     ^\r\n  )\r\n```\r\n</td>\r\n</tr>\r\n\r\n\r\n<tr>\r\n<td colspan=2>\r\n\r\n```python\r\n{1, 2} \\ \r\n == {1, 3}\r\n```\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n\r\n```diff\r\n- {1, 2}\r\n?     ^\r\n+ {1, 3}\r\n?     ^\r\n```\r\n</td>\r\n\r\n<td>\r\n\r\n```diff\r\n  {\r\n      1,\r\n-     2,\r\n?     ^\r\n+     3,\r\n?     ^\r\n  }\r\n```\r\n</td>\r\n</tr>\r\n\r\n\r\n<tr>\r\n<td colspan=2>\r\n\r\n```python\r\nnamespace(one=1, two=2) \\ \r\n == namespace(one=2, three=2)\r\n```\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n\r\n```diff\r\n- namespace(one=1, two=2)\r\n?               ^   ^^\r\n+ namespace(one=2, three=2)\r\n?               ^   ^^^^\r\n```\r\n</td>\r\n\r\n<td>\r\n\r\n```diff\r\n  namespace(\r\n-     one=1,\r\n?         ^\r\n+     one=2,\r\n?         ^\r\n-     two=2,\r\n+     three=2,\r\n  )\r\n```\r\n</td>\r\n</tr>\r\n\r\n\r\n<tr>\r\n<td colspan=2>\r\n\r\n```python\r\ndefaultdict(<class 'str'>, {'one': '1', 'two': '2'}) \\ \r\n == defaultdict(<class 'str'>, {'one': '1', 'two': '3'})\r\n```\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n\r\n```diff\r\n- defaultdict(<class 'str'>, {'one': '1', 'two': '2'})\r\n?                                                 ^\r\n+ defaultdict(<class 'str'>, {'one': '1', 'two': '3'})\r\n?                                                 ^\r\n```\r\n</td>\r\n\r\n<td>\r\n\r\n```diff\r\n  defaultdict(<class 'str'>, {\r\n      'one': '1',\r\n-     'two': '2',\r\n?             ^\r\n+     'two': '3',\r\n?             ^\r\n  })\r\n```\r\n</td>\r\n</tr>\r\n\r\n\r\n<tr>\r\n<td colspan=2>\r\n\r\n```python\r\nCounter({'1': 2, '2': 1}) \\ \r\n == Counter({'2': 2, '1': 1})\r\n```\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n\r\n```diff\r\n- Counter({'1': 2, '2': 1})\r\n+ Counter({'2': 2, '1': 1})\r\n```\r\n</td>\r\n\r\n<td>\r\n\r\n```diff\r\n  Counter({\r\n-     '1': 2,\r\n?      ^\r\n+     '2': 2,\r\n?      ^\r\n-     '2': 1,\r\n?      ^\r\n+     '1': 1,\r\n?      ^\r\n  })\r\n```\r\n</td>\r\n</tr>\r\n\r\n\r\n<tr>\r\n<td colspan=2>\r\n\r\n```python\r\ndeque([1, 2]) \\ \r\n == deque([1, 3])\r\n```\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n\r\n```diff\r\n- deque([1, 2])\r\n?           ^\r\n+ deque([1, 3])\r\n?           ^\r\n```\r\n</td>\r\n\r\n<td>\r\n\r\n```diff\r\n  deque([\r\n      1,\r\n-     2,\r\n?     ^\r\n+     3,\r\n?     ^\r\n  ])\r\n```\r\n</td>\r\n</tr>\r\n\r\n\r\n<tr>\r\n<td colspan=2>\r\n\r\n```python\r\ndeque([1, 2], maxlen=3) \\ \r\n == deque([1, 3], maxlen=4)\r\n```\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n\r\n```diff\r\n- deque([1, 2], maxlen=3)\r\n?           ^          ^\r\n+ deque([1, 3], maxlen=4)\r\n?           ^          ^\r\n```\r\n</td>\r\n\r\n<td>\r\n\r\n```diff\r\n- deque(maxlen=3, [\r\n?              ^\r\n+ deque(maxlen=4, [\r\n?              ^\r\n      1,\r\n-     2,\r\n?     ^\r\n+     3,\r\n?     ^\r\n  ])\r\n```\r\n</td>\r\n</tr>\r\n\r\n\r\n<tr>\r\n<td colspan=2>\r\n\r\n```python\r\n{ 'counter': Counter({'2': 2, '1': 1}),\r\n  'dataclass': DataclassWithTwoItems(foo='foo', bar='bar'),\r\n  'defaultdict': defaultdict(<class 'str'>,\r\n                             { 'one': '1',\r\n                               'two': '2'}),\r\n  'deque': deque([1, 2], maxlen=3),\r\n  'dict': {'one': 1, 'two': 2},\r\n  'list': [1, 2],\r\n  'set': {1, 2},\r\n  'simplenamespace': namespace(one=1, two=2),\r\n  'tuple': (1, 2)} \\ \r\n == { 'counter': Counter({'1': 2, '2': 1}),\r\n  'dataclass': DataclassWithTwoItems(foo='foo', bar='baz'),\r\n  'defaultdict': defaultdict(<class 'str'>,\r\n                             { 'three': '1',\r\n                               'two': '3'}),\r\n  'deque': deque([1, 3], maxlen=3),\r\n  'dict': {'one': 1, 'two': 3},\r\n  'list': [1, 2, 3],\r\n  'set': {1, 3},\r\n  'simplenamespace': namespace(one=1, two=2, three=3),\r\n  'tuple': (1,)}\r\n```\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n\r\n```diff\r\n  {\r\n-  'counter': Counter({'2': 2, '1': 1}),\r\n?                          --------\r\n+  'counter': Counter({'1': 2, '2': 1}),\r\n?                       ++++++++\r\n-  'dataclass': DataclassWithTwoItems(foo='foo', bar='bar'),\r\n?                                                       ^\r\n+  'dataclass': DataclassWithTwoItems(foo='foo', bar='baz'),\r\n?                                                       ^\r\n-  'defaultdict': defaultdict(<class 'str'>, {'one': '1', 'two': '2'}),\r\n?                                              ^^                 ^\r\n+  'defaultdict': defaultdict(<class 'str'>, {'three': '1', 'two': '3'}),\r\n?                                              ^^^^                 ^\r\n-  'deque': deque([1, 2], maxlen=3),\r\n?                     ^\r\n+  'deque': deque([1, 3], maxlen=3),\r\n?                     ^\r\n-  'dict': {'one': 1, 'two': 2},\r\n?                            ^\r\n+  'dict': {'one': 1, 'two': 3},\r\n?                            ^\r\n-  'list': [1, 2],\r\n+  'list': [1, 2, 3],\r\n?               +++\r\n-  'set': {1, 2},\r\n?             ^\r\n+  'set': {1, 3},\r\n?             ^\r\n-  'simplenamespace': namespace(one=1, two=2),\r\n+  'simplenamespace': namespace(one=1, two=2, three=3),\r\n?                                           +++++++++\r\n-  'tuple': (1, 2),\r\n?              --\r\n+  'tuple': (1,),\r\n  }\r\n```\r\n</td>\r\n\r\n<td>\r\n\r\n```diff\r\n  {\r\n      'counter': Counter({\r\n-         '2': 2,\r\n?          ^\r\n+         '1': 2,\r\n?          ^\r\n-         '1': 1,\r\n?          ^\r\n+         '2': 1,\r\n?          ^\r\n      }),\r\n      'dataclass': DataclassWithTwoItems(\r\n          foo='foo',\r\n-         bar='bar',\r\n?                ^\r\n+         bar='baz',\r\n?                ^\r\n      ),\r\n      'defaultdict': defaultdict(<class 'str'>, {\r\n-         'one': '1',\r\n?          ^^\r\n+         'three': '1',\r\n?          ^^^^\r\n-         'two': '2',\r\n?                 ^\r\n+         'two': '3',\r\n?                 ^\r\n      }),\r\n      'deque': deque(maxlen=3, [\r\n          1,\r\n-         2,\r\n?         ^\r\n+         3,\r\n?         ^\r\n      ]),\r\n      'dict': {\r\n          'one': 1,\r\n-         'two': 2,\r\n?                ^\r\n+         'two': 3,\r\n?                ^\r\n      },\r\n      'list': [\r\n          1,\r\n          2,\r\n+         3,\r\n      ],\r\n      'set': {\r\n          1,\r\n-         2,\r\n?         ^\r\n+         3,\r\n?         ^\r\n      },\r\n      'simplenamespace': namespace(\r\n          one=1,\r\n          two=2,\r\n+         three=3,\r\n      ),\r\n      'tuple': (\r\n          1,\r\n-         2,\r\n      ),\r\n  }\r\n```\r\n</td>\r\n</tr>\r\n\r\n</table>\r\n\r\n</details>\r\n\r\n\r\n### Full example\r\n\r\nTaking the example from https://github.com/lukaszb/pytest-dictsdiff, as in the issue:\r\n\r\n#### Previously:\r\n\r\n```diff\r\n- {\r\n-  'cell': '(056)-022-8631',\r\n-  'dob': {'age': 34,\r\n+ OrderedDict([('cell',\r\n+               '(056)-022-8631'),\r\n+              ('dob',\r\n+               {'age': 44,\r\n-          'date': '1953-11-04T01:21:04Z'},\r\n?                     ^              ^\r\n+                'date': '1983-11-04T01:21:14Z'}),\r\n? ++++++                    ^              ^    +\r\n-  'email': 'zeyneb.elfring@example.com',\r\n-  'gender': 'female',\r\n-  'id': {'name': 'BSN',\r\n+              ('email',\r\n+               'zeyneb.elfring@example.com'),\r\n+              ('gender',\r\n+               'female'),\r\n+              ('id',\r\n+               {'name': 'BSN',\r\n-         'value': '36180866'},\r\n+                'value': '36180866'}),\r\n? +++++++                            +\r\n-  'location': {'city': 'Tholen',\r\n+              ('location',\r\n+               {'city': 'tholen',\r\n-               'coordinates': {'latitude': '46.8823',\r\n+                'coordinates': {'latitude': '46.8823',\r\n? +\r\n-                               'longitude': '175.8856'},\r\n+                                'longitude': '175.8856'},\r\n? +\r\n-               'postcode': 64509,\r\n?                               ^\r\n+                'postcode': 64504,\r\n? +                              ^\r\n-               'state': 'groningen',\r\n+                'state': 'groningen',\r\n? +\r\n-               'street': '2074 adriaen van ostadelaan',\r\n+                'street': '2074 adriaen van ostadelaan',\r\n? +\r\n-               'timezone': {'description': 'Adelaide, Darwin',\r\n+                'timezone': {'description': 'Adelaide, Darwin',\r\n? +\r\n-                            'offset': '+9:30'}},\r\n+                             'offset': '+9:30'}}),\r\n? +                                              +\r\n+              ('login',\r\n-  'login': {'md5': 'bafe8cf9d37806a7b13edc218d5ff762',\r\n?  ^^^^^^^^\r\n+               {'md5': 'bafe8cf9d37806a7b13edc218d5ff762',\r\n?  ^^^^^^^^^^^^\r\n-            'password': 'ontario',\r\n+                'password': 'ontario',\r\n? ++++\r\n-            'salt': 'QVBKgEjy',\r\n+                'salt': 'QVBKgEjy',\r\n? ++++\r\n-            'sha1': 'cacef09ff61072d1c55732963766fa84e919aa7a',\r\n+                'sha1': 'cacef09ff61072d1c55732963766fa84e919aa7a',\r\n? ++++\r\n-            'sha256': 'cc86af47aedbdbb1de73ff10484996fe9785c47c0fc191b7c67eaf71e0782300',\r\n+                'sha256': 'cc86af47aedbdbb1de73ff10484996fe9785c47c0fc191b7c67eaf71e0782300',\r\n? ++++\r\n-            'username': 'smallgorilla897',\r\n+                'username': 'smallgorilla897',\r\n? ++++\r\n-            'uuid': '37e30c59-bc79-4172-aac6-e2c640e165fa'},\r\n+                'uuid': '37e30c59-bc79-4172-aac6-e2c640e165fa'}),\r\n? ++++                                                          +\r\n-  'name': {'first': 'Zeyneb',\r\n+              ('name',\r\n+               {'first': 'zeyneb',\r\n-           'last': 'Elfring',\r\n?                    ^\r\n+                'last': 'elfring',\r\n? +++++                   ^\r\n-           'title': 'mrs'},\r\n+                'title': 'mrs'}),\r\n? +++++                         +\r\n-  'nat': 'NL',\r\n-  'phone': '(209)-143-9697',\r\n+              ('nat',\r\n+               'NL'),\r\n+              ('phone',\r\n+               '(209)-143-9697'),\r\n+              ('picture',\r\n-  'picture': {'large': 'https://randomuser.me/api/portraits/women/37.jpg',\r\n?  ^^^^^^^^^^\r\n+               {'large': 'https://randomuser.me/api/portraits/women/37.jpg',\r\n?  ^^^^^^^^^^^^\r\n-              'medium': 'https://randomuser.me/api/portraits/med/women/37.jpg',\r\n+                'medium': 'https://randomuser.me/api/portraits/med/women/37.jpg',\r\n? ++\r\n-              'thumbnail': 'https://randomuser.me/api/portraits/thumb/women/37.jpg'},\r\n+                'thumbnail': 'https://randomuser.me/api/portraits/thumb/women/37.jpg'}),\r\n? ++                                                                                   +\r\n-  'registered': {'age': 3,\r\n+              ('registered',\r\n+               {'age': 3,\r\n-                 'date': '2014-12-07T06:54:14Z'},\r\n? -\r\n+                'date': '2014-12-07T06:54:14Z'})],\r\n?                                               ++\r\n- }\r\n```\r\n#### Now:\r\n\r\n```diff\r\n- {\r\n+ OrderedDict({\r\n      'cell': '(056)-022-8631',\r\n      'dob': {\r\n-         'age': 34,\r\n?                ^\r\n+         'age': 44,\r\n?                ^\r\n-         'date': '1953-11-04T01:21:04Z',\r\n?                    ^              ^\r\n+         'date': '1983-11-04T01:21:14Z',\r\n?                    ^              ^\r\n      },\r\n      'email': 'zeyneb.elfring@example.com',\r\n      'gender': 'female',\r\n      'id': {\r\n          'name': 'BSN',\r\n          'value': '36180866',\r\n      },\r\n      'location': {\r\n-         'city': 'Tholen',\r\n?                  ^\r\n+         'city': 'tholen',\r\n?                  ^\r\n          'coordinates': {\r\n              'latitude': '46.8823',\r\n              'longitude': '175.8856',\r\n          },\r\n-         'postcode': 64509,\r\n?                         ^\r\n+         'postcode': 64504,\r\n?                         ^\r\n          'state': 'groningen',\r\n          'street': '2074 adriaen van ostadelaan',\r\n          'timezone': {\r\n              'description': 'Adelaide, Darwin',\r\n              'offset': '+9:30',\r\n          },\r\n      },\r\n      'login': {\r\n          'md5': 'bafe8cf9d37806a7b13edc218d5ff762',\r\n          'password': 'ontario',\r\n          'salt': 'QVBKgEjy',\r\n          'sha1': 'cacef09ff61072d1c55732963766fa84e919aa7a',\r\n          'sha256': 'cc86af47aedbdbb1de73ff10484996fe9785c47c0fc191b7c67eaf71e0782300',\r\n          'username': 'smallgorilla897',\r\n          'uuid': '37e30c59-bc79-4172-aac6-e2c640e165fa',\r\n      },\r\n      'name': {\r\n-         'first': 'Zeyneb',\r\n?                   ^\r\n+         'first': 'zeyneb',\r\n?                   ^\r\n-         'last': 'Elfring',\r\n?                  ^\r\n+         'last': 'elfring',\r\n?                  ^\r\n          'title': 'mrs',\r\n      },\r\n      'nat': 'NL',\r\n      'phone': '(209)-143-9697',\r\n      'picture': {\r\n          'large': 'https://randomuser.me/api/portraits/women/37.jpg',\r\n          'medium': 'https://randomuser.me/api/portraits/med/women/37.jpg',\r\n          'thumbnail': 'https://randomuser.me/api/portraits/thumb/women/37.jpg',\r\n      },\r\n      'registered': {\r\n          'age': 3,\r\n          'date': '2014-12-07T06:54:14Z',\r\n      },\r\n- }\r\n+ })\r\n```",
      "state": "CLOSED",
      "createdAt": "2023-10-22T12:54:21Z",
      "updatedAt": "2023-11-27T18:32:10Z",
      "closedAt": "2023-11-18T09:36:05Z",
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "bschubert/nicer-comparisons",
      "author": {
        "login": "BenjaminSchubert"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 8
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Add changelog entry",
              "committedDate": "2023-10-24T20:13:43Z",
              "author": {
                "name": "Benjamin Schubert",
                "email": "bschubert15@bloomberg.net",
                "user": {
                  "login": "BenjaminSchubert"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-10-25T13:21:30Z",
            "body": "Thanks @BenjaminSchubert, it'd be great to improve the diffs.\r\n\r\nThe pprint code is a bit hard to get into, before I/we do it, I think it would be helpful to show before/after examples on some common cases that are changed, both short and long.\r\n\r\n---\r\n\r\nRegarding the private implementation details, I wonder if we will now be changing enough things such that not much is left from the upstream PrettyPrinter? In that case, we can just copy pprint.py wholesale to pytest. My copy has 671 lines so it's not huge.\r\n\r\nAdvantages:\r\n\r\n- No risk of breakage due to using private stuff\r\n- Consistency between all Python versions\r\n- Can backport pprint functionality from new Python versions\r\n- Maybe can simplify/customize the code more directly?\r\n\r\nDisadvantages:\r\n- Maintenance overhead\r\n- Missing on upstream improvements (unless we continuously backport)"
          }
        ]
      }
    },
    {
      "number": 11535,
      "title": "Configure ReadTheDocs to fail on warnings",
      "body": "Important to catch broken links and references.",
      "state": "MERGED",
      "createdAt": "2023-10-22T02:45:52Z",
      "updatedAt": "2023-10-23T12:56:45Z",
      "closedAt": "2023-10-23T12:56:33Z",
      "mergedAt": "2023-10-23T12:56:33Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "docs-fail-on-warning",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Remove dead link to distutils configuration docs",
              "committedDate": "2023-10-22T02:52:33Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-10-23T12:50:35Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11534,
      "title": "[automated] Update plugin list",
      "body": "[automated] Update plugin list",
      "state": "MERGED",
      "createdAt": "2023-10-22T00:18:58Z",
      "updatedAt": "2023-10-22T02:43:15Z",
      "closedAt": "2023-10-22T02:43:15Z",
      "mergedAt": "2023-10-22T02:43:15Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "update-plugin-list/patch-cdddd6d69",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[automated] Update plugin list",
              "committedDate": "2023-10-22T00:18:56Z",
              "author": {
                "name": "pytest bot",
                "email": "pytestbot@users.noreply.github.com",
                "user": {
                  "login": "pytestbot"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11533,
      "title": "WIP: Rework fixture dependency graph calculation",
      "body": "This PR is the central part of the _first_ point proposed in #11532. \r\nIt adds the mechanisms to  shift from resolving fixtures strictly by name to building a proper fixture dependency graph.\r\nAll new objects and methods keep the interface of the objects/methods they are intended to eventually replace for now.\r\n\r\nAs mentioned  in the discusion thread I wish to get some feedback if this is a direction worth pursuing further and if it is how to implement proper error reporting during collection for cyclic dependencies errors and mis-scoped dependencies errors\r\n\r\n~~*__NOTE:__*  _The new mechanism are not used yet. Replacing `FuncFixtureInfo` and `FixtureManager.getfixtureinfo` by `FuncFictureInfo2` and `FixtureManager.gefixtureinfo2` should mostly work but I have not tested it yet._~~\r\n\r\n#### References:\r\nDavid J. Pearce and Paul H. J. Kelly. 2007. A dynamic topological sort algorithm for directed acyclic graphs. ACM J. Exp. Algorithmics 11 (2006), 1.7\u2013es. https://doi.org/10.1145/1187436.1210590",
      "state": "OPEN",
      "createdAt": "2023-10-21T19:59:59Z",
      "updatedAt": "2023-10-27T18:26:33Z",
      "closedAt": null,
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "fixtures-tweaks",
      "author": {
        "login": "jgersti"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Do not discard invalid fixture names for now",
              "committedDate": "2023-10-27T15:32:35Z",
              "author": {
                "name": "Janick Gerstenberger",
                "email": "janick.gerstenberger@gmail.com",
                "user": {
                  "login": "jgersti"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11531,
      "title": "Ensure logging tests always cleanup after themselves",
      "body": "Logging has many global states, and we did foresee this by creating a ``cleanup_disabled_logging`` fixture, however one might still forget to use it and failures leak later -- sometimes not even in the same PR, because the order of the tests might change in the future, specially when running under xdist.\r\n\r\nThis problem surfaced during pytest-dev/pytest#11530, where tests unrelated to the change started to fail.\r\n",
      "state": "MERGED",
      "createdAt": "2023-10-21T18:57:48Z",
      "updatedAt": "2023-10-23T13:55:30Z",
      "closedAt": "2023-10-23T13:55:19Z",
      "mergedAt": "2023-10-23T13:55:19Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "ensure-logging-cleanup",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Add full type annotations to logging/test_fixture.py",
              "committedDate": "2023-10-23T13:46:55Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "BenjaminSchubert"
            },
            "state": "APPROVED",
            "submittedAt": "2023-10-21T19:35:09Z",
            "body": "Thanks!"
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-10-23T13:16:57Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-10-23T13:47:34Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11530,
      "title": "Color the full diff that pytest shows as a diff",
      "body": "## Overview\r\n\r\nPreviously, it would get printed all in red, which makes it hard to read and actually understand.\r\n\r\nHowever, the diffs shown are standard and have a supported lexer in Pygments. As such, use this to color the output when pygments is available.\r\n\r\nThis is a step towards #11520 but does not address all the discussion points yet.\r\n\r\n## Visual changes\r\n\r\n### Previously\r\n\r\n![image](https://github.com/pytest-dev/pytest/assets/1672192/91ac0f75-86b3-4cef-b8f8-f67852a4bde6)\r\n\r\n### With this change\r\n\r\n![image](https://github.com/pytest-dev/pytest/assets/1672192/90c8dc7d-4cbb-4a8e-96c8-cf9ab8d9acc5)\r\n\r\n## Questions\r\n\r\nI am unsure about two things here:\r\n\r\n- How we expose the lexers on the terminal writer. Having to pass a string and hoping it will do the right thing is not ideal, I believe it is slightly better than providing one when doing the call as, that way, only the terminalwriter has to handle whether pygments is available or not\r\n- The testing might be a bit clunky and prone to breaking. If needed we could reduce the strictness of checks, let me know what you prefer",
      "state": "MERGED",
      "createdAt": "2023-10-21T10:34:21Z",
      "updatedAt": "2023-10-24T18:48:11Z",
      "closedAt": "2023-10-24T11:42:22Z",
      "mergedAt": "2023-10-24T11:42:22Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "bschubert/colored-diffs",
      "author": {
        "login": "BenjaminSchubert"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 14
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "fixup! fixup! Color the full diff that pytest shows as a diff",
              "committedDate": "2023-10-23T18:43:37Z",
              "author": {
                "name": "Benjamin Schubert",
                "email": "bschubert15@bloomberg.net",
                "user": {
                  "login": "BenjaminSchubert"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-10-23T13:40:45Z",
            "body": "I like this change a lot, thanks @BenjaminSchubert. The code looks good to me. As you said there are a few more places that can benefit from this, but can do it in follow up PRs."
          },
          {
            "author": {
              "login": "BenjaminSchubert"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-10-23T13:51:16Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-10-23T13:55:51Z",
            "body": ""
          },
          {
            "author": {
              "login": "BenjaminSchubert"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-10-23T18:32:20Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-10-24T11:40:52Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-10-24T11:41:03Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11524,
      "title": "gh-11523: add importorskip(exc=...) kwarg",
      "body": "Fixes #11523\r\n\r\n<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "OPEN",
      "createdAt": "2023-10-19T17:10:52Z",
      "updatedAt": "2023-10-19T17:31:57Z",
      "closedAt": null,
      "mergedAt": null,
      "isDraft": true,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "graingert-patch-1",
      "author": {
        "login": "graingert"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "docs",
              "committedDate": "2023-10-19T17:31:45Z",
              "author": {
                "name": "Thomas Grainger",
                "email": "tagrain@gmail.com",
                "user": {
                  "login": "graingert"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11510,
      "title": "[pre-commit.ci] pre-commit autoupdate",
      "body": "<!--pre-commit.ci start-->\nupdates:\n- [github.com/pre-commit/mirrors-mypy: v1.5.1 \u2192 v1.6.0](https://github.com/pre-commit/mirrors-mypy/compare/v1.5.1...v1.6.0)\n<!--pre-commit.ci end-->",
      "state": "MERGED",
      "createdAt": "2023-10-16T20:24:09Z",
      "updatedAt": "2023-10-23T11:05:41Z",
      "closedAt": "2023-10-23T11:05:40Z",
      "mergedAt": "2023-10-23T11:05:40Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "pre-commit-ci-update-config",
      "author": {
        "login": "pre-commit-ci"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Ignore two typing errors after updating to mypy 1.6.0",
              "committedDate": "2023-10-17T12:24:18Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-10-17T12:26:06Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11506,
      "title": "build(deps): Bump pytest-bdd from 6.1.1 to 7.0.0 in /testing/plugins_integration",
      "body": "Bumps [pytest-bdd](https://github.com/pytest-dev/pytest-bdd) from 6.1.1 to 7.0.0.\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/pytest-dev/pytest-bdd/blob/master/CHANGES.rst\">pytest-bdd's changelog</a>.</em></p>\n<blockquote>\n<h2>7.0.0</h2>\n<ul>\n<li>\u26a0\ufe0f Backwards incompatible: - <code>parsers.re</code> now does a <code>fullmatch &lt;https://docs.python.org/3/library/re.html#re.fullmatch&gt;</code>_ instead of a partial match. This is to make it work just like the other parsers, since they don't ignore non-matching characters at the end of the string. <code>[#539](https://github.com/pytest-dev/pytest-bdd/issues/539) &lt;https://github.com/pytest-dev/pytest-bdd/pull/539&gt;</code>_</li>\n<li>Drop python 3.7 compatibility, as it's no longer supported. <code>[#627](https://github.com/pytest-dev/pytest-bdd/issues/627) &lt;https://github.com/pytest-dev/pytest-bdd/pull/627&gt;</code>_</li>\n<li>Declare official support for python 3.12 <code>[#628](https://github.com/pytest-dev/pytest-bdd/issues/628) &lt;https://github.com/pytest-dev/pytest-bdd/pull/628&gt;</code>_</li>\n<li>Improve parser performance by 15% <code>[#623](https://github.com/pytest-dev/pytest-bdd/issues/623) &lt;https://github.com/pytest-dev/pytest-bdd/pull/623&gt;</code>_ by <code>@dcendents &lt;https://github.com/dcendents&gt;</code>_</li>\n<li>Add support for Scenarios and Scenario Outlines to have descriptions. <code>[#600](https://github.com/pytest-dev/pytest-bdd/issues/600) &lt;https://github.com/pytest-dev/pytest-bdd/pull/600&gt;</code>_</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pytest-dev/pytest-bdd/commit/30ba3f7ba151768f227613eb2a186d4bc5c262aa\"><code>30ba3f7</code></a> Merge pull request <a href=\"https://redirect.github.com/pytest-dev/pytest-bdd/issues/638\">#638</a> from pytest-dev/ab/py312</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-bdd/commit/3f424e790c1d6af47f229602a8df1f1bcc2e2852\"><code>3f424e7</code></a> Remove python 3.13-dev, as it's not available yet</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-bdd/commit/c182e1aad609368dff970125730501fa0044db4b\"><code>c182e1a</code></a> Update all dev dependencies</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-bdd/commit/9f152f51c6ba7c61fbbbf9ef0ac56d638e275d9d\"><code>9f152f5</code></a> Bump version to 7.0.0, update changelog</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-bdd/commit/82b84bd0306085e4ab88d94695603b76c2d5ac46\"><code>82b84bd</code></a> Update wording</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-bdd/commit/c6f44f7f60cc77a75b73d48c445aa58aed3f8174\"><code>c6f44f7</code></a> Test against python 3.13-dev too</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-bdd/commit/788818c963843aecf3385b9b64c4fc2f82650114\"><code>788818c</code></a> Python 3.12 is stable now, test against the stable version</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-bdd/commit/e36854faf32883889e53fb1ec795364290b62160\"><code>e36854f</code></a> Update poetry version and run <code>poetry lock --no-update</code></li>\n<li><a href=\"https://github.com/pytest-dev/pytest-bdd/commit/87bbd56bf4d586fb5cd92c05dc6622a5307d2fa5\"><code>87bbd56</code></a> Add python 3.12 to black targets</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-bdd/commit/f1c49c3027efe8ef582efa743548b7d75c94ff6e\"><code>f1c49c3</code></a> Merge pull request <a href=\"https://redirect.github.com/pytest-dev/pytest-bdd/issues/637\">#637</a> from pytest-dev/pre-commit-ci-update-config</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pytest-dev/pytest-bdd/compare/6.1.1...7.0.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pytest-bdd&package-manager=pip&previous-version=6.1.1&new-version=7.0.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2023-10-16T03:26:50Z",
      "updatedAt": "2023-10-16T11:08:52Z",
      "closedAt": "2023-10-16T11:08:51Z",
      "mergedAt": "2023-10-16T11:08:51Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/pip/testing/plugins_integration/pytest-bdd-7.0.0",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "python"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump pytest-bdd in /testing/plugins_integration\n\nBumps [pytest-bdd](https://github.com/pytest-dev/pytest-bdd) from 6.1.1 to 7.0.0.\n- [Release notes](https://github.com/pytest-dev/pytest-bdd/releases)\n- [Changelog](https://github.com/pytest-dev/pytest-bdd/blob/master/CHANGES.rst)\n- [Commits](https://github.com/pytest-dev/pytest-bdd/compare/6.1.1...7.0.0)\n\n---\nupdated-dependencies:\n- dependency-name: pytest-bdd\n  dependency-type: direct:production\n  update-type: version-update:semver-major\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2023-10-16T03:26:50Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11504,
      "title": "[automated] Update plugin list",
      "body": "[automated] Update plugin list",
      "state": "MERGED",
      "createdAt": "2023-10-15T00:19:06Z",
      "updatedAt": "2023-10-15T13:03:40Z",
      "closedAt": "2023-10-15T13:03:39Z",
      "mergedAt": "2023-10-15T13:03:39Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "update-plugin-list/patch-3ab70cd56",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[automated] Update plugin list",
              "committedDate": "2023-10-15T00:19:04Z",
              "author": {
                "name": "pytest bot",
                "email": "pytestbot@users.noreply.github.com",
                "user": {
                  "login": "pytestbot"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11501,
      "title": "Doc xfail",
      "body": "**Description:**\r\n\r\nThis pull request addresses discrepancies in the documentation for `pytest.mark.xfail()` and aligns it with the actual behavior in the code. The key points of this PR include:\r\n\r\n- Clarified the behavior of the `reason` argument, specifically addressing the use of `None`.\r\n- Updated the expected type for the `raises` argument to match the code, allowing for `None`.\r\n- Highlighted the dependency of the `strict` argument on the `xfail_strict` configuration.\r\n\r\n**Fixes:**\r\n\r\nThis PR resolves the issue #10094.\r\n\r\n**Documentation:**\r\n\r\n- Modified the documentation for `pytest.mark.xfail()` to accurately represent its behavior based on the code.\r\n\r\n**Tests:**\r\n\r\n- Added test cases to ensure that the documented behavior aligns with the actual code behavior.\r\n\r\n**Changelog:**\r\n\r\n- Created a new changelog file: `changelog/10094.improvement.rst` to document the improvement made in this PR.\r\n\r\n**Author:**\r\nTanya Agarwal",
      "state": "CLOSED",
      "createdAt": "2023-10-13T07:05:54Z",
      "updatedAt": "2024-02-23T07:23:55Z",
      "closedAt": "2024-02-23T07:23:55Z",
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "CONFLICTING",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "doc_xfail",
      "author": {
        "login": "TanyaAgarwal28"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Improvement #10094",
              "committedDate": "2023-10-13T07:05:37Z",
              "author": {
                "name": "TanyaAgarwal28",
                "email": "8979149361t@gmail.com",
                "user": {
                  "login": "TanyaAgarwal28"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "CHANGES_REQUESTED",
            "submittedAt": "2023-10-17T12:52:53Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11499,
      "title": "Make xpass failure again warning #11467",
      "body": "Problem:\r\n\r\nSome years ago, a change was made that caused xpass not to be considered a failure. However, there have been multiple cases where it was missed that a test was fixed, and this is not an acceptable default behavior.\r\n\r\nSolution:\r\n\r\nThis PR aims to address the issue by modifying the behavior of xpass in the following way: In order to ensure backward compatibility we cannot go straight from non-strict to strict instead we have to start by warning if strict was not set to true or false. The warning should indicate that a future major release of pytest will change the default from False to True and recommend to use strict=True as default and a plugin for actually flaky tests.\r\n\r\n\r\nChecklist:\r\n\r\n Include documentation for the proposed change.\r\n Include new tests or update existing tests, where applicable.\r\n Allow maintainers to push and squash when merging my commits.\r\nThis change closes issue https://github.com/pytest-dev/pytest/issues/11467.\r\n\r\nChangelog: Created a new changelog file named 11467.feature.rst and added the entry for this change.\r\n\r\nAuthor: Tanya Agarwal",
      "state": "CLOSED",
      "createdAt": "2023-10-12T09:55:35Z",
      "updatedAt": "2024-02-23T07:23:50Z",
      "closedAt": "2024-02-23T07:23:49Z",
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "CONFLICTING",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "make_xpass_failure_again",
      "author": {
        "login": "TanyaAgarwal28"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "make_xpass_failure_again_#11498",
              "committedDate": "2023-10-12T10:25:30Z",
              "author": {
                "name": "TanyaAgarwal28",
                "email": "8979149361t@gmail.com",
                "user": {
                  "login": "TanyaAgarwal28"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "CHANGES_REQUESTED",
            "submittedAt": "2024-01-27T22:44:35Z",
            "body": "Thanks for the work on this @TanyaAgarwal28.\r\n\r\nI think many test suites don't know or have no use for/of `xfail` and so I think we shouldn't bother them with the deprecation. Rather we should do something more like the plan outlined by @nicoddemus here: https://github.com/pytest-dev/pytest/issues/11467#issuecomment-1757669465"
          }
        ]
      }
    },
    {
      "number": 11498,
      "title": "Make xpass failure again",
      "body": "**Problem:**\r\n\r\nSome years ago, a change was made that caused `xpass` not to be considered a failure. However, there have been multiple cases where it was missed that a test was fixed, and this is not an acceptable default behavior.\r\n\r\n**Solution:**\r\n\r\nThis PR aims to address the issue by modifying the behavior of `xpass` in the following way: In this strict parameter of xfail is set to true by default and it will ensure xpass is either a warning or a failure in any case.\r\n\r\n**Checklist:**\r\n\r\n- [X] Include documentation for the proposed change.\r\n- [ ] Include new tests or update existing tests, where applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits.\r\n\r\nThis change closes issue #11467.\r\n\r\nChangelog: Created a new changelog file named `11467.feature.rst` and added the entry for this change.\r\n\r\nAuthor: Tanya Agarwal",
      "state": "CLOSED",
      "createdAt": "2023-10-12T07:57:39Z",
      "updatedAt": "2023-10-13T13:24:47Z",
      "closedAt": "2023-10-12T09:56:35Z",
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "make-xpass-failure-again",
      "author": {
        "login": "TanyaAgarwal28"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Make xpass a failure again #11467",
              "committedDate": "2023-10-12T09:22:54Z",
              "author": {
                "name": "TanyaAgarwal28",
                "email": "8979149361t@gmail.com",
                "user": {
                  "login": "TanyaAgarwal28"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "CHANGES_REQUESTED",
            "submittedAt": "2023-10-12T09:21:08Z",
            "body": "thank you for getting started on this\r\n\r\nunfortunately the need for backward compatibility makes it necessary to start with a warning and progress the change of the default on one of the next major releases"
          },
          {
            "author": {
              "login": "TanyaAgarwal28"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-10-12T09:25:05Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11496,
      "title": "Config.getini default none value #11282",
      "body": "PR Description:\r\nThis PR addresses the issue described in https://github.com/pytest-dev/pytest/issues/11282 (replace with the issue number) where the pytest.config.getini() method returns an empty list instead of None when an INI option is not provided. This change ensures that None is returned as the default value when an INI option is not found or has no default value provided by the developer.\r\n\r\nChanges Made:\r\n\r\nModified the getini method in config.py to return None as the default value when an INI option is not found or has no default value.\r\nAdded tests to cover this behavior, ensuring that None is returned when appropriate.\r\nTesting:\r\n\r\nAdded unit tests to verify the expected behavior of the getini method.\r\nRan the test suite to ensure that existing functionality is not affected by this change.\r\nChangelog:\r\n\r\nAdded a new feature to the config.py module: getini now returns None as the default value when an INI option is not provided or has no default value.\r\nChecklist:\r\n\r\n The code changes have been tested locally and work as expected.\r\n Documentation has been updated to reflect the changes.\r\n New tests have been added to cover the updated behavior.\r\n Maintain the ability to push and squash commits when merging.\r\nThis PR addresses issue https://github.com/pytest-dev/pytest/issues/11282.",
      "state": "CLOSED",
      "createdAt": "2023-10-11T06:38:01Z",
      "updatedAt": "2024-02-23T07:23:44Z",
      "closedAt": "2024-02-23T07:23:44Z",
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "CONFLICTING",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "config.getini_default_None_value",
      "author": {
        "login": "TanyaAgarwal28"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Bug Fix 11282: config.getini returns an empty list for an option of type string absent in INI file",
              "committedDate": "2023-10-11T10:02:25Z",
              "author": {
                "name": "TanyaAgarwal28",
                "email": "8979149361t@gmail.com",
                "user": {
                  "login": "TanyaAgarwal28"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-10-12T20:32:04Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11493,
      "title": "Config.getini returns none",
      "body": "PR Description:\r\nThis PR addresses the issue described in #11282 (replace with the issue number) where the `pytest.config.getini()` method returns an empty list instead of `None` when an INI option is not provided. This change ensures that `None` is returned as the default value when an INI option is not found or has no default value provided by the developer.\r\n\r\nChanges Made:\r\n- Modified the `getini` method in `config.py` to return `None` as the default value when an INI option is not found or has no default value.\r\n- Added tests to cover this behavior, ensuring that `None` is returned when appropriate.\r\n\r\nTesting:\r\n- Added unit tests to verify the expected behavior of the `getini` method.\r\n- Ran the test suite to ensure that existing functionality is not affected by this change.\r\n\r\nChangelog:\r\n- Added a new feature to the `config.py` module: `getini` now returns `None` as the default value when an INI option is not provided or has no default value.\r\n\r\nChecklist:\r\n- [x] The code changes have been tested locally and work as expected.\r\n- [x] Documentation has been updated to reflect the changes.\r\n- [x] New tests have been added to cover the updated behavior.\r\n- [x] Maintain the ability to push and squash commits when merging.\r\n\r\nThis PR addresses issue #11282.",
      "state": "CLOSED",
      "createdAt": "2023-10-10T12:43:42Z",
      "updatedAt": "2023-10-11T06:18:17Z",
      "closedAt": "2023-10-11T06:17:58Z",
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "config.getini_returns_none",
      "author": {
        "login": "TanyaAgarwal28"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 6
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Merge branch 'main' into config.getini_returns_none",
              "committedDate": "2023-10-11T06:14:40Z",
              "author": {
                "name": "Tanya Agarwal",
                "email": "8979149361t@gmail.com",
                "user": {
                  "login": "TanyaAgarwal28"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11492,
      "title": "[pre-commit.ci] pre-commit autoupdate",
      "body": "<!--pre-commit.ci start-->\nupdates:\n- [github.com/pre-commit/pre-commit-hooks: v4.4.0 \u2192 v4.5.0](https://github.com/pre-commit/pre-commit-hooks/compare/v4.4.0...v4.5.0)\n- [github.com/asottile/pyupgrade: v3.14.0 \u2192 v3.15.0](https://github.com/asottile/pyupgrade/compare/v3.14.0...v3.15.0)\n<!--pre-commit.ci end-->",
      "state": "MERGED",
      "createdAt": "2023-10-09T20:59:19Z",
      "updatedAt": "2023-10-10T04:33:26Z",
      "closedAt": "2023-10-10T04:33:25Z",
      "mergedAt": "2023-10-10T04:33:25Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "main",
      "headRefName": "pre-commit-ci-update-config",
      "author": {
        "login": "pre-commit-ci"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[pre-commit.ci] pre-commit autoupdate\n\nupdates:\n- [github.com/pre-commit/pre-commit-hooks: v4.4.0 \u2192 v4.5.0](https://github.com/pre-commit/pre-commit-hooks/compare/v4.4.0...v4.5.0)\n- [github.com/asottile/pyupgrade: v3.14.0 \u2192 v3.15.0](https://github.com/asottile/pyupgrade/compare/v3.14.0...v3.15.0)",
              "committedDate": "2023-10-09T20:59:17Z",
              "author": {
                "name": "pre-commit-ci[bot]",
                "email": "66853113+pre-commit-ci[bot]@users.noreply.github.com",
                "user": {
                  "login": "pre-commit-ci[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2023-10-10T04:33:20Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11491,
      "title": "build(deps): Bump django from 4.2.5 to 4.2.6 in /testing/plugins_integration",
      "body": "Bumps [django](https://github.com/django/django) from 4.2.5 to 4.2.6.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/django/django/commit/c22017bd1dddb5b57d8a179e6378ef0c8d7f5eeb\"><code>c22017b</code></a> [4.2.x] Bumped version for 4.2.6 release.</li>\n<li><a href=\"https://github.com/django/django/commit/be9c27c4d18c2e6a5be8af4e53c0797440794473\"><code>be9c27c</code></a> [4.2.x] Fixed CVE-2023-43665 -- Mitigated potential DoS in django.utils.text....</li>\n<li><a href=\"https://github.com/django/django/commit/39fc3f46a8777a499f6358c6f06b4bcfffabb137\"><code>39fc3f4</code></a> [4.2.x] Added stub release notes and release date for 4.2.6, 4.1.12, and 3.2.22.</li>\n<li><a href=\"https://github.com/django/django/commit/dd0bf63d3e76ce1e0bc5d6d43f8c853643396887\"><code>dd0bf63</code></a> [4.2.x] Added warning about flatpages and untrusted users.</li>\n<li><a href=\"https://github.com/django/django/commit/fec4ed0a250841f41066cbbc9581993ba378d268\"><code>fec4ed0</code></a> [4.2.x] Refs <a href=\"https://redirect.github.com/django/django/issues/34320\">#34320</a> -- Skipped SchemaTests.test_rename_field_with_check_to_tr...</li>\n<li><a href=\"https://github.com/django/django/commit/a148461f1fa7aceb2ea6c9dc203b67a170884445\"><code>a148461</code></a> [4.2.x] Fixed <a href=\"https://redirect.github.com/django/django/issues/34840\">#34840</a> -- Avoided casting string base fields on PostgreSQL.</li>\n<li><a href=\"https://github.com/django/django/commit/b08f53ff46238301431084b50762a40170d7869d\"><code>b08f53f</code></a> [4.2.x] Refs <a href=\"https://redirect.github.com/django/django/issues/34808\">#34808</a> -- Doc'd that aggregation functions on empty groups can r...</li>\n<li><a href=\"https://github.com/django/django/commit/c70f08c4aa55b097fceb53f68392887d9ac2fd16\"><code>c70f08c</code></a> [4.2.x] Added updating the Django release process on Trac to release steps.</li>\n<li><a href=\"https://github.com/django/django/commit/d485aa2732e4219756c99120a8326cc33b291e34\"><code>d485aa2</code></a> [4.2.x] Fixed typo in docs/howto/custom-file-storage.txt.</li>\n<li><a href=\"https://github.com/django/django/commit/ff26e6ad845e112d2ab76549ea740fb1d82d1c54\"><code>ff26e6a</code></a> [4.2.x] Corrected QuerySet.prefetch_related() note about GenericRelation().</li>\n<li>Additional commits viewable in <a href=\"https://github.com/django/django/compare/4.2.5...4.2.6\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=django&package-manager=pip&previous-version=4.2.5&new-version=4.2.6)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2023-10-09T03:53:11Z",
      "updatedAt": "2023-10-10T20:50:56Z",
      "closedAt": "2023-10-10T20:50:55Z",
      "mergedAt": "2023-10-10T20:50:55Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/pip/testing/plugins_integration/django-4.2.6",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "python"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump django in /testing/plugins_integration\n\nBumps [django](https://github.com/django/django) from 4.2.5 to 4.2.6.\n- [Commits](https://github.com/django/django/compare/4.2.5...4.2.6)\n\n---\nupdated-dependencies:\n- dependency-name: django\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2023-10-09T03:53:10Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11490,
      "title": "#11091: documentation should use hypthonated properties",
      "body": "Closes #11091 \r\n\r\nAdded a changelog\r\nUpdated documentation to always refer to hyphenated options\r\n * Replaced --junitxml with --junit-xml\r\n * Replaced --collectonly with --collect-only\r\n * Checked setupplan, setuponly, setupshow, collectonly, keepduplicates, junitxml, junitprefix, traceconfig",
      "state": "MERGED",
      "createdAt": "2023-10-08T18:27:56Z",
      "updatedAt": "2023-12-31T09:30:25Z",
      "closedAt": "2023-10-10T21:16:24Z",
      "mergedAt": "2023-10-10T21:16:24Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "11091",
      "author": {
        "login": "ryanpudd"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Update changelog/11091.doc.rst",
              "committedDate": "2023-10-10T20:53:33Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-10-10T20:53:26Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-10-10T20:53:45Z",
            "body": "Thanks @ryanpudd! "
          }
        ]
      }
    },
    {
      "number": 11489,
      "title": "Duplicated parameters in parametrize marker",
      "body": "## Problem Statement\r\n\r\n**What's the problem this feature will solve?**\r\nThe current behavior of pytest in handling duplicated values in parametrize can lead to confusion regarding the actual parameter values used in tests. This PR aims to address this issue by providing clear and unambiguous parameter identifiers.\r\n\r\n[maintainer edit to [link the issue](https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue): fixes #11456]\r\n\r\n## Solution Description\r\n\r\nThe proposed solution involves modifying the `make_unique_parameterset_ids` method in the `Python.py` class. This change will ensure that unique identifiers are generated for ParameterSets, eliminating any confusion caused by duplicated values.\r\n\r\n- When a parameter identifier ends in a digit, a new identifier will be generated in the format `\"{id}_{suffix}\"`, where `suffix` is a numeric counter.\r\n- If the new identifier is already present in the set of resolved identifiers, the counter will be incremented until a unique identifier is obtained.\r\n- This approach guarantees the uniqueness of identifiers, even when the original identifiers have digit endings.",
      "state": "MERGED",
      "createdAt": "2023-10-08T11:30:57Z",
      "updatedAt": "2023-10-27T20:03:50Z",
      "closedAt": "2023-10-08T17:26:32Z",
      "mergedAt": "2023-10-08T17:26:32Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Zac-HD"
      },
      "baseRefName": "main",
      "headRefName": "duplicated_parameters_in_parametrize_marker",
      "author": {
        "login": "TanyaAgarwal28"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[pre-commit.ci] auto fixes from pre-commit.com hooks\n\nfor more information, see https://pre-commit.ci",
              "committedDate": "2023-10-08T17:00:54Z",
              "author": {
                "name": "pre-commit-ci[bot]",
                "email": "66853113+pre-commit-ci[bot]@users.noreply.github.com",
                "user": {
                  "login": "pre-commit-ci[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Zac-HD"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-10-08T16:59:43Z",
            "body": "Thanks for you PR Tanya!"
          },
          {
            "author": {
              "login": "Zac-HD"
            },
            "state": "APPROVED",
            "submittedAt": "2023-10-08T17:26:31Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11487,
      "title": "[automated] Update plugin list",
      "body": "[automated] Update plugin list",
      "state": "MERGED",
      "createdAt": "2023-10-08T00:18:55Z",
      "updatedAt": "2023-10-09T11:32:50Z",
      "closedAt": "2023-10-09T11:32:49Z",
      "mergedAt": "2023-10-09T11:32:49Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "update-plugin-list/patch-54623f0f3",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[automated] Update plugin list",
              "committedDate": "2023-10-08T00:18:53Z",
              "author": {
                "name": "pytest bot",
                "email": "pytestbot@users.noreply.github.com",
                "user": {
                  "login": "pytestbot"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-10-09T11:32:13Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11486,
      "title": "Update CONTRIBUTING.rst to mention tag fetches",
      "body": "closes #11485\r\n\r\n<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "MERGED",
      "createdAt": "2023-10-07T13:55:22Z",
      "updatedAt": "2023-10-09T18:29:51Z",
      "closedAt": "2023-10-09T18:29:50Z",
      "mergedAt": "2023-10-09T18:29:50Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Zac-HD"
      },
      "baseRefName": "main",
      "headRefName": "RonnyPfannschmidt-contributing-tags",
      "author": {
        "login": "RonnyPfannschmidt"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Update CONTRIBUTING.rst\n\nCo-authored-by: Bruno Oliveira <nicoddemus@gmail.com>",
              "committedDate": "2023-10-07T14:16:18Z",
              "author": {
                "name": "Ronny Pfannschmidt",
                "email": "opensource@ronnypfannschmidt.de",
                "user": {
                  "login": "RonnyPfannschmidt"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-10-07T13:58:46Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-10-07T13:58:51Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11478,
      "title": "[pre-commit.ci] pre-commit autoupdate",
      "body": "<!--pre-commit.ci start-->\nupdates:\n- [github.com/asottile/reorder-python-imports: v3.11.0 \u2192 v3.12.0](https://github.com/asottile/reorder-python-imports/compare/v3.11.0...v3.12.0)\n- [github.com/asottile/pyupgrade: v3.13.0 \u2192 v3.14.0](https://github.com/asottile/pyupgrade/compare/v3.13.0...v3.14.0)\n- [github.com/asottile/setup-cfg-fmt: v2.4.0 \u2192 v2.5.0](https://github.com/asottile/setup-cfg-fmt/compare/v2.4.0...v2.5.0)\n<!--pre-commit.ci end-->",
      "state": "MERGED",
      "createdAt": "2023-10-03T10:48:30Z",
      "updatedAt": "2023-10-03T11:47:20Z",
      "closedAt": "2023-10-03T11:47:19Z",
      "mergedAt": "2023-10-03T11:47:19Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "main",
      "headRefName": "pre-commit-ci-update-config",
      "author": {
        "login": "pre-commit-ci"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[pre-commit.ci] pre-commit autoupdate\n\nupdates:\n- [github.com/asottile/reorder-python-imports: v3.11.0 \u2192 v3.12.0](https://github.com/asottile/reorder-python-imports/compare/v3.11.0...v3.12.0)\n- [github.com/asottile/pyupgrade: v3.13.0 \u2192 v3.14.0](https://github.com/asottile/pyupgrade/compare/v3.13.0...v3.14.0)\n- [github.com/asottile/setup-cfg-fmt: v2.4.0 \u2192 v2.5.0](https://github.com/asottile/setup-cfg-fmt/compare/v2.4.0...v2.5.0)",
              "committedDate": "2023-10-03T10:48:29Z",
              "author": {
                "name": "pre-commit-ci[bot]",
                "email": "66853113+pre-commit-ci[bot]@users.noreply.github.com",
                "user": {
                  "login": "pre-commit-ci[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2023-10-03T11:44:39Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11473,
      "title": "Add OuputVerbosity and use it in assertions",
      "body": "<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [X] Include documentation when adding new features.\r\n- [X] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [X] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [X] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n\r\n`OuputVerbosity` is a new class that allows for retrieving a verbosity level for a specific output type. If nothing is specifically configured, the application wide verbose value is used.\r\n\r\nThe first use of this functionality is `verbosity_assertions` which can be used to make the assertion reports output at the most verbose level while still showing a single character for each test case when progress is being reported.\r\n\r\n\r\nAddresses #11387\r\n\r\n",
      "state": "MERGED",
      "createdAt": "2023-10-01T14:22:47Z",
      "updatedAt": "2023-11-25T20:15:51Z",
      "closedAt": "2023-11-19T14:56:29Z",
      "mergedAt": "2023-11-19T14:56:29Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "fine-grain-verbosity",
      "author": {
        "login": "plannigan"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 12
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Restore whitespace changes",
              "committedDate": "2023-11-18T12:29:26Z",
              "author": {
                "name": "Patrick Lannigan",
                "email": "p.lannigan@gmail.com",
                "user": {
                  "login": "plannigan"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "plannigan"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-10-01T14:29:31Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "CHANGES_REQUESTED",
            "submittedAt": "2023-10-23T11:37:41Z",
            "body": "Great work @plannigan, and sorry again for the delay!\r\n\r\nThe implementation is good, however I think we might need some more interactions given this introduce a new API, which must be done carefully and with care. "
          },
          {
            "author": {
              "login": "plannigan"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-10-24T08:52:00Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-10-25T13:04:13Z",
            "body": "I'm not able to do a full review ATM, but left some quick comments."
          },
          {
            "author": {
              "login": "plannigan"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-11-05T20:43:32Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-11-07T22:05:50Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-11-07T22:19:41Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-11-07T22:26:46Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "CHANGES_REQUESTED",
            "submittedAt": "2023-11-08T07:28:30Z",
            "body": "Thanks for the update @plannigan, my comments:\r\n\r\n1. The `OutputVerbosity` and `VerbosityType` seem more complicated than necessary to me. What is the advantage over doing it the direct way, i.e. adding the ini directly and maybe adding a getter on `Config`?\r\n\r\n2. If we stick with `OutputVerbosity`, let's make it just `Verbosity` -- the `Output` part is entirely redundant IMO.\r\n\r\n3. We should have at least one end-to-end test (`pytester.runpytest` test) which shows this working, i.e. changing the output vs. not setting the ini."
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-11-11T15:22:47Z",
            "body": ""
          },
          {
            "author": {
              "login": "plannigan"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-11-12T00:05:06Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "CHANGES_REQUESTED",
            "submittedAt": "2023-11-12T21:51:50Z",
            "body": "Haven't had time for a full review again, but left some comments, please take a look."
          },
          {
            "author": {
              "login": "plannigan"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-11-13T13:57:41Z",
            "body": ""
          },
          {
            "author": {
              "login": "plannigan"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-11-13T14:00:17Z",
            "body": ""
          },
          {
            "author": {
              "login": "plannigan"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-11-13T14:01:32Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "CHANGES_REQUESTED",
            "submittedAt": "2023-11-17T08:56:48Z",
            "body": "Thanks for the update @plannigan, please see my comment on `_KNOWN_VERBOSITY_TYPES`. Other than that it looks good!"
          },
          {
            "author": {
              "login": "plannigan"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-11-17T12:58:05Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-11-17T16:35:32Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-11-18T21:42:42Z",
            "body": "LGTM! I know this feature will make a lot of people happy :)\r\n\r\nI'll let @nicoddemus do the final review/merge."
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-11-19T14:55:08Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11472,
      "title": "[automated] Update plugin list",
      "body": "[automated] Update plugin list",
      "state": "MERGED",
      "createdAt": "2023-10-01T00:20:18Z",
      "updatedAt": "2023-10-02T11:39:55Z",
      "closedAt": "2023-10-02T11:39:54Z",
      "mergedAt": "2023-10-02T11:39:54Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "update-plugin-list/patch-b73b4c464",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[automated] Update plugin list",
              "committedDate": "2023-10-01T00:20:16Z",
              "author": {
                "name": "pytest bot",
                "email": "pytestbot@users.noreply.github.com",
                "user": {
                  "login": "pytestbot"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11469,
      "title": "Add more set assertion rewrites e.g. ``>=``",
      "body": "<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\nThis resolves #10617 and adds more powerful set assertion rewrites for comparisons other than equality ``==``. Previously, only ``==`` was supported for sets. Now, the additional following operations are supported: ``!=``, ``<=``, ``>=``, ``<``, and ``>``.\r\n",
      "state": "MERGED",
      "createdAt": "2023-09-27T03:22:33Z",
      "updatedAt": "2023-10-02T22:01:10Z",
      "closedAt": "2023-10-02T21:37:52Z",
      "mergedAt": "2023-10-02T21:37:52Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "set-assertion",
      "author": {
        "login": "reaganjlee"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 4
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "remove redundant coverage test",
              "committedDate": "2023-10-02T20:27:38Z",
              "author": {
                "name": "Reagan Lee",
                "email": "96998476+reaganjlee@users.noreply.github.com",
                "user": {
                  "login": "reaganjlee"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-09-30T12:25:04Z",
            "body": "Thanks @reaganjlee, appreciate the contribution! "
          }
        ]
      }
    },
    {
      "number": 11468,
      "title": "[pre-commit.ci] pre-commit autoupdate",
      "body": "<!--pre-commit.ci start-->\nupdates:\n- [github.com/asottile/pyupgrade: v3.11.0 \u2192 v3.13.0](https://github.com/asottile/pyupgrade/compare/v3.11.0...v3.13.0)\n<!--pre-commit.ci end-->",
      "state": "MERGED",
      "createdAt": "2023-09-26T08:57:47Z",
      "updatedAt": "2023-09-26T09:31:40Z",
      "closedAt": "2023-09-26T09:31:39Z",
      "mergedAt": "2023-09-26T09:31:39Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "main",
      "headRefName": "pre-commit-ci-update-config",
      "author": {
        "login": "pre-commit-ci"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[pre-commit.ci] pre-commit autoupdate\n\nupdates:\n- [github.com/asottile/pyupgrade: v3.11.0 \u2192 v3.13.0](https://github.com/asottile/pyupgrade/compare/v3.11.0...v3.13.0)",
              "committedDate": "2023-09-26T08:57:45Z",
              "author": {
                "name": "pre-commit-ci[bot]",
                "email": "66853113+pre-commit-ci[bot]@users.noreply.github.com",
                "user": {
                  "login": "pre-commit-ci[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2023-09-26T09:04:51Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11464,
      "title": "[automated] Update plugin list",
      "body": "[automated] Update plugin list",
      "state": "MERGED",
      "createdAt": "2023-09-24T00:18:31Z",
      "updatedAt": "2023-09-24T13:03:47Z",
      "closedAt": "2023-09-24T13:03:46Z",
      "mergedAt": "2023-09-24T13:03:46Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "update-plugin-list/patch-d2b214220",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[automated] Update plugin list",
              "committedDate": "2023-09-24T00:18:30Z",
              "author": {
                "name": "pytest bot",
                "email": "pytestbot@users.noreply.github.com",
                "user": {
                  "login": "pytestbot"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-09-24T12:42:03Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11455,
      "title": "[7.4.x] fix for ValueError raised in faulthandler teardown code",
      "body": "Backport of PR #11453 to 7.4.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2023-09-20T12:07:07Z",
      "updatedAt": "2023-09-20T12:41:03Z",
      "closedAt": "2023-09-20T12:41:02Z",
      "mergedAt": "2023-09-20T12:41:02Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "7.4.x",
      "headRefName": "backport-11453-to-7.4.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[7.4.x] fix for ValueError raised in faulthandler teardown code",
              "committedDate": "2023-09-20T12:07:04Z",
              "author": {
                "name": "Simon Blanchard",
                "email": "bnomis@gmail.com",
                "user": {
                  "login": "bnomis"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-09-20T12:12:46Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2023-09-20T12:15:53Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11453,
      "title": "fix for ValueError raised in faulthandler teardown code",
      "body": "Closes #11439\r\n\r\nFix is to add ValueError to the caught exceptions in get_stderr_fileno().\r\n\r\nThe io.UnsupportedOperation exception inherits from ValueError so this has been removed.\r\n",
      "state": "MERGED",
      "createdAt": "2023-09-19T17:24:06Z",
      "updatedAt": "2023-09-20T12:06:48Z",
      "closedAt": "2023-09-20T12:06:43Z",
      "mergedAt": "2023-09-20T12:06:43Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "fix-valueerror-operation-on-closed-file-11439",
      "author": {
        "login": "bnomis"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Improve changelog",
              "committedDate": "2023-09-19T21:00:52Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-09-19T21:02:12Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11451,
      "title": "[pre-commit.ci] pre-commit autoupdate",
      "body": "<!--pre-commit.ci start-->\nupdates:\n- [github.com/asottile/reorder-python-imports: v3.10.0 \u2192 v3.11.0](https://github.com/asottile/reorder-python-imports/compare/v3.10.0...v3.11.0)\n- [github.com/asottile/pyupgrade: v3.10.1 \u2192 v3.11.0](https://github.com/asottile/pyupgrade/compare/v3.10.1...v3.11.0)\n<!--pre-commit.ci end-->",
      "state": "MERGED",
      "createdAt": "2023-09-19T08:40:01Z",
      "updatedAt": "2023-09-19T09:51:43Z",
      "closedAt": "2023-09-19T09:51:42Z",
      "mergedAt": "2023-09-19T09:51:42Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "main",
      "headRefName": "pre-commit-ci-update-config",
      "author": {
        "login": "pre-commit-ci"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[pre-commit.ci] pre-commit autoupdate\n\nupdates:\n- [github.com/asottile/reorder-python-imports: v3.10.0 \u2192 v3.11.0](https://github.com/asottile/reorder-python-imports/compare/v3.10.0...v3.11.0)\n- [github.com/asottile/pyupgrade: v3.10.1 \u2192 v3.11.0](https://github.com/asottile/pyupgrade/compare/v3.10.1...v3.11.0)",
              "committedDate": "2023-09-19T08:40:00Z",
              "author": {
                "name": "pre-commit-ci[bot]",
                "email": "66853113+pre-commit-ci[bot]@users.noreply.github.com",
                "user": {
                  "login": "pre-commit-ci[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2023-09-19T09:51:36Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11449,
      "title": "build(deps): Bump pytest-html from 4.0.1 to 4.0.2 in /testing/plugins_integration",
      "body": "Bumps [pytest-html](https://github.com/pytest-dev/pytest-html) from 4.0.1 to 4.0.2.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pytest-dev/pytest-html/releases\">pytest-html's releases</a>.</em></p>\n<blockquote>\n<h2>v4.0.2</h2>\n<h2>Changes</h2>\n<ul>\n<li>Fix: Use absolute path for the report (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/735\">#735</a>) <a href=\"https://github.com/adrien-berchet\"><code>@\u200badrien-berchet</code></a></li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/pytest-dev/pytest-html/blob/master/docs/changelog.rst\">pytest-html's changelog</a>.</em></p>\n<blockquote>\n<p>4.0.2 (2023-09-12)</p>\n<pre><code>\n* Use absolute path to the report file.\n<ul>\n<li>Thanks to <code>@adrien-berchet &amp;lt;https://github.com/adrien-berchet&amp;gt;</code>_ for reporting and for the PR.\n</code></pre></li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pytest-dev/pytest-html/commit/82d08c46c6e58209c460140bffb0ffaa80fec46b\"><code>82d08c4</code></a> Fix: Use absolute path for the report (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/735\">#735</a>)</li>\n<li>See full diff in <a href=\"https://github.com/pytest-dev/pytest-html/compare/4.0.1...4.0.2\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pytest-html&package-manager=pip&previous-version=4.0.1&new-version=4.0.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2023-09-18T03:16:06Z",
      "updatedAt": "2023-09-18T14:10:50Z",
      "closedAt": "2023-09-18T14:10:49Z",
      "mergedAt": "2023-09-18T14:10:49Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/pip/testing/plugins_integration/pytest-html-4.0.2",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "python"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump pytest-html in /testing/plugins_integration\n\nBumps [pytest-html](https://github.com/pytest-dev/pytest-html) from 4.0.1 to 4.0.2.\n- [Release notes](https://github.com/pytest-dev/pytest-html/releases)\n- [Changelog](https://github.com/pytest-dev/pytest-html/blob/master/docs/changelog.rst)\n- [Commits](https://github.com/pytest-dev/pytest-html/compare/4.0.1...4.0.2)\n\n---\nupdated-dependencies:\n- dependency-name: pytest-html\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2023-09-18T03:16:05Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11448,
      "title": "Add `FutureWarning` to `deprecated_call`",
      "body": "- [x] Updated documentation to include updated features.\r\n- [x] Include new tests or update existing tests when applicable.\r\n- [x] Allow maintainers to push and squash when merging my commits.\r\n- [x] Closes #11447\r\n- [x] Create a new changelog file in the `changelog` folder. \r\n- [x] Added yourself to `AUTHORS` in alphabetical order.\r\n- [ ] \r\n\r\nClose #11447",
      "state": "MERGED",
      "createdAt": "2023-09-18T01:27:13Z",
      "updatedAt": "2023-09-18T12:34:18Z",
      "closedAt": "2023-09-18T12:34:05Z",
      "mergedAt": "2023-09-18T12:34:05Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "add-FutureWarning-to-deprecated_call",
      "author": {
        "login": "chrimaho"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 5
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Improve changelog",
              "committedDate": "2023-09-18T12:00:41Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "CHANGES_REQUESTED",
            "submittedAt": "2023-09-18T05:56:07Z",
            "body": "As futurewarning doesn't relate to deprecation,its wrong to add it there "
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-09-18T11:02:40Z",
            "body": "changing back to comment after reading up on the details probided by @The-Compiler "
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2023-09-18T11:30:08Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-09-18T12:01:25Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11446,
      "title": "Improve pluggy-related typing",
      "body": "",
      "state": "MERGED",
      "createdAt": "2023-09-17T19:13:58Z",
      "updatedAt": "2023-09-24T12:43:01Z",
      "closedAt": "2023-09-24T12:42:58Z",
      "mergedAt": "2023-09-24T12:42:58Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "pluggy-typing",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Improve pluggy-related typing",
              "committedDate": "2023-09-17T18:32:55Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2023-09-18T06:37:22Z",
            "body": "We might want to follow this up with moving this to the path compat Plugin we eventually want to phase out "
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-09-18T10:37:50Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11444,
      "title": "Fixes issue #11314 - log_file_format does not default to log_format",
      "body": "**Overview**\r\nBefore this fix is applied, the current behavior when using CLI logging with the log_cli = true setting is as follows:\r\n1) If --log-cli-format is not specified but --log-format is provided as argument, then value provided in --log-format is used as fallback\r\n2) If --log-cli-date-format is not specified but --log-date-format is provided, then --log-date-format is used as fallback\r\n3) If --log-cli-level is not specified but --log-level is provided, then --log-level is used as fallback\r\n\r\nIf no options are provided (neither specific CLI ones nor the generic ones) then hardcoded default values for these options are used.\r\n\r\nThe above behavior is inline with the expected behavior.\r\nHowever, when using logging to file with the log_file option, the above behavior is not demonstrated. When logging to file, the generic --log-format, --log-date-format and --log-level are ignored even if provided as options.\r\n\r\nThis fix tries to make the behavior standardized as per the behavior demonstrated by the CLI logging options.\r\n\r\n**Points of Concern**\r\nWhile creating this fix, it was noted that one of the test cases (test_root_logger_affected) in [https://github.com/pytest-dev/pytest/blob/main/testing/logging/test_reporting.py] explicitly checks that the generic log_level is NOT considered by file logging.\r\nThis raises concern as to why this test would have been written. Could this be an oversight?\r\n\r\n**Disclaimers**\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n",
      "state": "MERGED",
      "createdAt": "2023-09-17T07:06:34Z",
      "updatedAt": "2023-10-09T12:52:18Z",
      "closedAt": "2023-09-18T16:50:04Z",
      "mergedAt": "2023-09-18T16:50:04Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Zac-HD"
      },
      "baseRefName": "main",
      "headRefName": "main",
      "author": {
        "login": "SharadNair7"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Update changelog/11314.improvement.rst\n\nCo-authored-by: Bruno Oliveira <bruno@soliv.dev>",
              "committedDate": "2023-09-18T16:28:42Z",
              "author": {
                "name": "Zac Hatfield-Dodds",
                "email": "zac.hatfield.dodds@gmail.com",
                "user": {
                  "login": "Zac-HD"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Zac-HD"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-09-17T07:53:10Z",
            "body": "This looks good to me, and I think that the previous behavior of `test_root_logger_affected` was probably just a mistake.\r\n\r\nCan you write some tests to ensure that we notice if this is accidentally broken or reverted, [add a changelog, and add yourself to the authors list](https://docs.pytest.org/en/stable/contributing.html#preparing-pull-requests)?"
          },
          {
            "author": {
              "login": "Zac-HD"
            },
            "state": "APPROVED",
            "submittedAt": "2023-09-18T13:28:08Z",
            "body": "Looks good to me - thanks again Sharad!\r\n\r\nI'll merge this in a few days if nobody else has comments."
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-09-18T16:17:30Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-09-18T16:19:12Z",
            "body": "Thanks @SharadNair7! "
          }
        ]
      }
    },
    {
      "number": 11443,
      "title": "[automated] Update plugin list",
      "body": "[automated] Update plugin list",
      "state": "MERGED",
      "createdAt": "2023-09-17T00:18:24Z",
      "updatedAt": "2023-09-18T16:20:49Z",
      "closedAt": "2023-09-18T16:20:48Z",
      "mergedAt": "2023-09-18T16:20:47Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "update-plugin-list/patch-6c2feb75d",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[automated] Update plugin list",
              "committedDate": "2023-09-17T00:18:23Z",
              "author": {
                "name": "pytest bot",
                "email": "pytestbot@users.noreply.github.com",
                "user": {
                  "login": "pytestbot"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11442,
      "title": "Closes #11314. Use log_format as default for log_file_format",
      "body": "The change fixes to use log_format if log_file_format is not provided.\r\nAlso fixes to use log_date_format if log_file_date_format is not provided.\r\nAlso fixes to use log_level if log_file_level is not provided. \r\nThis is also the existing behavior in case of log_cli too. \r\nHence, this fix makes the behavior standard for log_file and log_cli (format, date format and log level)\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\n",
      "state": "CLOSED",
      "createdAt": "2023-09-16T15:40:04Z",
      "updatedAt": "2023-09-16T17:35:11Z",
      "closedAt": "2023-09-16T17:35:11Z",
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "main",
      "author": {
        "login": "SharadNair7"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[pre-commit.ci] auto fixes from pre-commit.com hooks\n\nfor more information, see https://pre-commit.ci",
              "committedDate": "2023-09-16T15:40:43Z",
              "author": {
                "name": "pre-commit-ci[bot]",
                "email": "66853113+pre-commit-ci[bot]@users.noreply.github.com",
                "user": {
                  "login": "pre-commit-ci[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11436,
      "title": "Closes #11435",
      "body": "I add my plugin to the list manually.",
      "state": "MERGED",
      "createdAt": "2023-09-12T22:15:02Z",
      "updatedAt": "2023-09-12T22:21:14Z",
      "closedAt": "2023-09-12T22:17:21Z",
      "mergedAt": "2023-09-12T22:17:21Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "main",
      "author": {
        "login": "pomponchik"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Closes #11435",
              "committedDate": "2023-09-12T22:10:49Z",
              "author": {
                "name": "Evgeniy Blinov",
                "email": "zheni-b@yandex.ru",
                "user": {
                  "login": "pomponchik"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-09-12T22:16:54Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11434,
      "title": "[pre-commit.ci] pre-commit autoupdate",
      "body": "<!--pre-commit.ci start-->\nupdates:\n- [github.com/psf/black: 23.7.0 \u2192 23.9.1](https://github.com/psf/black/compare/23.7.0...23.9.1)\n<!--pre-commit.ci end-->",
      "state": "MERGED",
      "createdAt": "2023-09-12T09:32:01Z",
      "updatedAt": "2023-09-12T11:37:20Z",
      "closedAt": "2023-09-12T11:37:19Z",
      "mergedAt": "2023-09-12T11:37:19Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "pre-commit-ci-update-config",
      "author": {
        "login": "pre-commit-ci"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[pre-commit.ci] pre-commit autoupdate\n\nupdates:\n- [github.com/psf/black: 23.7.0 \u2192 23.9.1](https://github.com/psf/black/compare/23.7.0...23.9.1)",
              "committedDate": "2023-09-12T09:31:59Z",
              "author": {
                "name": "pre-commit-ci[bot]",
                "email": "66853113+pre-commit-ci[bot]@users.noreply.github.com",
                "user": {
                  "login": "pre-commit-ci[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2023-09-12T10:02:26Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11432,
      "title": "[7.4.x] Force terminal width when running tests (#11425)",
      "body": "Related to #11423\r\n\r\n(cherry picked from commit 241f2a890e3fb3f83eac807de0b4ad00510c7f65)\r\n",
      "state": "MERGED",
      "createdAt": "2023-09-11T12:25:45Z",
      "updatedAt": "2023-09-11T12:48:25Z",
      "closedAt": "2023-09-11T12:48:22Z",
      "mergedAt": "2023-09-11T12:48:22Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "7.4.x",
      "headRefName": "backport-11425-to-7.4.x",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Force terminal width when running tests (#11425)\n\nRelated to #11423\n\n(cherry picked from commit 241f2a890e3fb3f83eac807de0b4ad00510c7f65)",
              "committedDate": "2023-09-11T12:25:20Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "nicoddemus@gmail.com",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11431,
      "title": "build(deps): Bump pytest-html from 4.0.0 to 4.0.1 in /testing/plugins_integration",
      "body": "Bumps [pytest-html](https://github.com/pytest-dev/pytest-html) from 4.0.0 to 4.0.1.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pytest-dev/pytest-html/releases\">pytest-html's releases</a>.</em></p>\n<blockquote>\n<h2>v4.0.1</h2>\n<h2>Changes</h2>\n<ul>\n<li>fix: Incorrect label for xfailed (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/733\">#733</a>) <a href=\"https://github.com/BeyondEvil\"><code>@\u200bBeyondEvil</code></a></li>\n<li>chore: block commits to master (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/734\">#734</a>) <a href=\"https://github.com/BeyondEvil\"><code>@\u200bBeyondEvil</code></a></li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/pytest-dev/pytest-html/blob/master/docs/changelog.rst\">pytest-html's changelog</a>.</em></p>\n<blockquote>\n<p>4.0.1 (2023-09-10)</p>\n<pre><code>\n* Fix incorrectly labeled outcome.\n<ul>\n<li>Thanks to <code>@lodagro &amp;lt;https://github.com/lodagro&amp;gt;</code>_ for reporting\n</code></pre></li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pytest-dev/pytest-html/commit/ee21115b23a6c0e85c6d09bb7a12078c0c0fe4cd\"><code>ee21115</code></a> fix: Incorrect label for xfailed (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/733\">#733</a>)</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-html/commit/682d4d1c3bddd89093c8a1871ba40dccbaab9d1f\"><code>682d4d1</code></a> chore: block commits to master (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/734\">#734</a>)</li>\n<li>See full diff in <a href=\"https://github.com/pytest-dev/pytest-html/compare/4.0.0...4.0.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pytest-html&package-manager=pip&previous-version=4.0.0&new-version=4.0.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2023-09-11T03:31:23Z",
      "updatedAt": "2023-09-11T09:50:48Z",
      "closedAt": "2023-09-11T09:50:47Z",
      "mergedAt": "2023-09-11T09:50:47Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/pip/testing/plugins_integration/pytest-html-4.0.1",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "python"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump pytest-html in /testing/plugins_integration\n\nBumps [pytest-html](https://github.com/pytest-dev/pytest-html) from 4.0.0 to 4.0.1.\n- [Release notes](https://github.com/pytest-dev/pytest-html/releases)\n- [Changelog](https://github.com/pytest-dev/pytest-html/blob/master/docs/changelog.rst)\n- [Commits](https://github.com/pytest-dev/pytest-html/compare/4.0.0...4.0.1)\n\n---\nupdated-dependencies:\n- dependency-name: pytest-html\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2023-09-11T03:31:22Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11430,
      "title": "build(deps): Bump django from 4.2.4 to 4.2.5 in /testing/plugins_integration",
      "body": "Bumps [django](https://github.com/django/django) from 4.2.4 to 4.2.5.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/django/django/commit/b8b2f7451201f3ff60891b6ce55f177400700d7a\"><code>b8b2f74</code></a> [4.2.x] Bumped version for 4.2.5 release.</li>\n<li><a href=\"https://github.com/django/django/commit/9c51b4dcfa0cefcb48231f4d71cafa80821f87b9\"><code>9c51b4d</code></a> [4.2.x] Fixed CVE-2023-41164 -- Fixed potential DoS in django.utils.encoding....</li>\n<li><a href=\"https://github.com/django/django/commit/acfb42752259c3f920ffd20d6eef83b3c6f75cf7\"><code>acfb427</code></a> [4.2.x] Fixed <a href=\"https://redirect.github.com/django/django/issues/34803\">#34803</a> -- Fixed queryset crash when filtering againts deeply ne...</li>\n<li><a href=\"https://github.com/django/django/commit/55a0b9c32ebae957b95a9a55846692837e2ff39b\"><code>55a0b9c</code></a> [4.2.x] Added stub release notes and release date for 4.2.5, 4.1.11, and 3.2.21.</li>\n<li><a href=\"https://github.com/django/django/commit/8e8c3184496e229e26d4f8316ad8ed79f789c616\"><code>8e8c318</code></a> [4.2.x] Avoided counting exceptions in AsyncClient docs.</li>\n<li><a href=\"https://github.com/django/django/commit/dcb9d7a0e4b29a34c88969ab3fac8c345224c43b\"><code>dcb9d7a</code></a> [4.2.x] Improved formset docs by using a set instead of a list in the custom ...</li>\n<li><a href=\"https://github.com/django/django/commit/f55b420277083f2224fe5ef82ccdea66debaa3f3\"><code>f55b420</code></a> [4.2.x] Fixed <a href=\"https://redirect.github.com/django/django/issues/34781\">#34781</a> -- Updated logging ref docs for django.server's request ...</li>\n<li><a href=\"https://github.com/django/django/commit/46b2b08e4531012357dc359809588cbd61a38225\"><code>46b2b08</code></a> [4.2.x] Fixed <a href=\"https://redirect.github.com/django/django/issues/34779\">#34779</a> -- Avoided unnecessary selection of non-nullable m2m fie...</li>\n<li><a href=\"https://github.com/django/django/commit/d34db6602e89387ae9ddc9ae94defe5c838acb88\"><code>d34db66</code></a> [4.2.x] Fixed <a href=\"https://redirect.github.com/django/django/issues/34773\">#34773</a> -- Fixed syncing DEFAULT_FILE_STORAGE/STATICFILES_STORAG...</li>\n<li><a href=\"https://github.com/django/django/commit/a22aeef55551dc6827b11afcc994a342fca93453\"><code>a22aeef</code></a> [4.2.x] Fixed <a href=\"https://redirect.github.com/django/django/issues/15799\">#15799</a> -- Doc'd that Storage._open() should raise FileNotFoundE...</li>\n<li>Additional commits viewable in <a href=\"https://github.com/django/django/compare/4.2.4...4.2.5\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=django&package-manager=pip&previous-version=4.2.4&new-version=4.2.5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2023-09-11T03:31:20Z",
      "updatedAt": "2023-09-11T09:50:34Z",
      "closedAt": "2023-09-11T09:50:33Z",
      "mergedAt": "2023-09-11T09:50:33Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/pip/testing/plugins_integration/django-4.2.5",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "python"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump django in /testing/plugins_integration\n\nBumps [django](https://github.com/django/django) from 4.2.4 to 4.2.5.\n- [Commits](https://github.com/django/django/compare/4.2.4...4.2.5)\n\n---\nupdated-dependencies:\n- dependency-name: django\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2023-09-11T03:31:20Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11429,
      "title": "build(deps): Bump actions/checkout from 3 to 4",
      "body": "Bumps [actions/checkout](https://github.com/actions/checkout) from 3 to 4.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/actions/checkout/releases\">actions/checkout's releases</a>.</em></p>\n<blockquote>\n<h2>v4.0.0</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Update default runtime to node20 by <a href=\"https://github.com/takost\"><code>@\u200btakost</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1436\">actions/checkout#1436</a></li>\n<li>Support fetching without the --progress option by <a href=\"https://github.com/simonbaird\"><code>@\u200bsimonbaird</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1067\">actions/checkout#1067</a></li>\n<li>Release 4.0.0 by <a href=\"https://github.com/takost\"><code>@\u200btakost</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1447\">actions/checkout#1447</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/takost\"><code>@\u200btakost</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/checkout/pull/1436\">actions/checkout#1436</a></li>\n<li><a href=\"https://github.com/simonbaird\"><code>@\u200bsimonbaird</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/checkout/pull/1067\">actions/checkout#1067</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/checkout/compare/v3...v4.0.0\">https://github.com/actions/checkout/compare/v3...v4.0.0</a></p>\n<h2>v3.6.0</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Mark test scripts with Bash'isms to be run via Bash by <a href=\"https://github.com/dscho\"><code>@\u200bdscho</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1377\">actions/checkout#1377</a></li>\n<li>Add option to fetch tags even if fetch-depth &gt; 0 by <a href=\"https://github.com/RobertWieczoreck\"><code>@\u200bRobertWieczoreck</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/579\">actions/checkout#579</a></li>\n<li>Release 3.6.0 by <a href=\"https://github.com/luketomlinson\"><code>@\u200bluketomlinson</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1437\">actions/checkout#1437</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/RobertWieczoreck\"><code>@\u200bRobertWieczoreck</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/checkout/pull/579\">actions/checkout#579</a></li>\n<li><a href=\"https://github.com/luketomlinson\"><code>@\u200bluketomlinson</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/checkout/pull/1437\">actions/checkout#1437</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/checkout/compare/v3.5.3...v3.6.0\">https://github.com/actions/checkout/compare/v3.5.3...v3.6.0</a></p>\n<h2>v3.5.3</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Fix: Checkout Issue in self hosted runner due to faulty submodule check-ins by <a href=\"https://github.com/megamanics\"><code>@\u200bmegamanics</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1196\">actions/checkout#1196</a></li>\n<li>Fix typos found by codespell by <a href=\"https://github.com/DimitriPapadopoulos\"><code>@\u200bDimitriPapadopoulos</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1287\">actions/checkout#1287</a></li>\n<li>Add support for sparse checkouts by <a href=\"https://github.com/dscho\"><code>@\u200bdscho</code></a> and <a href=\"https://github.com/dfdez\"><code>@\u200bdfdez</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1369\">actions/checkout#1369</a></li>\n<li>Release v3.5.3 by <a href=\"https://github.com/TingluoHuang\"><code>@\u200bTingluoHuang</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1376\">actions/checkout#1376</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/megamanics\"><code>@\u200bmegamanics</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/checkout/pull/1196\">actions/checkout#1196</a></li>\n<li><a href=\"https://github.com/DimitriPapadopoulos\"><code>@\u200bDimitriPapadopoulos</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/checkout/pull/1287\">actions/checkout#1287</a></li>\n<li><a href=\"https://github.com/dfdez\"><code>@\u200bdfdez</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/checkout/pull/1369\">actions/checkout#1369</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/checkout/compare/v3...v3.5.3\">https://github.com/actions/checkout/compare/v3...v3.5.3</a></p>\n<h2>v3.5.2</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Fix: Use correct API url / endpoint in GHES by <a href=\"https://github.com/fhammerl\"><code>@\u200bfhammerl</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1289\">actions/checkout#1289</a> based on <a href=\"https://redirect.github.com/actions/checkout/issues/1286\">#1286</a> by <a href=\"https://github.com/1newsr\"><code>@\u200b1newsr</code></a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/checkout/compare/v3.5.1...v3.5.2\">https://github.com/actions/checkout/compare/v3.5.1...v3.5.2</a></p>\n<h2>v3.5.1</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Improve checkout performance on Windows runners by upgrading <code>@\u200bactions/github</code> dependency by <a href=\"https://github.com/BrettDong\"><code>@\u200bBrettDong</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1246\">actions/checkout#1246</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/BrettDong\"><code>@\u200bBrettDong</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/checkout/pull/1246\">actions/checkout#1246</a></li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/actions/checkout/blob/main/CHANGELOG.md\">actions/checkout's changelog</a>.</em></p>\n<blockquote>\n<h1>Changelog</h1>\n<h2>v4.0.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1067\">Support fetching without the --progress option</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1436\">Update to node20</a></li>\n</ul>\n<h2>v3.6.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1377\">Fix: Mark test scripts with Bash'isms to be run via Bash</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/579\">Add option to fetch tags even if fetch-depth &gt; 0</a></li>\n</ul>\n<h2>v3.5.3</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1196\">Fix: Checkout fail in self-hosted runners when faulty submodule are checked-in</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1287\">Fix typos found by codespell</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1369\">Add support for sparse checkouts</a></li>\n</ul>\n<h2>v3.5.2</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1289\">Fix api endpoint for GHES</a></li>\n</ul>\n<h2>v3.5.1</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1246\">Fix slow checkout on Windows</a></li>\n</ul>\n<h2>v3.5.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1237\">Add new public key for known_hosts</a></li>\n</ul>\n<h2>v3.4.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1209\">Upgrade codeql actions to v2</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1210\">Upgrade dependencies</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1225\">Upgrade <code>@\u200bactions/io</code></a></li>\n</ul>\n<h2>v3.3.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1045\">Implement branch list using callbacks from exec function</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1050\">Add in explicit reference to private checkout options</a></li>\n<li>[Fix comment typos (that got added in <a href=\"https://redirect.github.com/actions/checkout/issues/770\">#770</a>)](<a href=\"https://redirect.github.com/actions/checkout/pull/1057\">actions/checkout#1057</a>)</li>\n</ul>\n<h2>v3.2.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/942\">Add GitHub Action to perform release</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/967\">Fix status badge</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1002\">Replace datadog/squid with ubuntu/squid Docker image</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/964\">Wrap pipeline commands for submoduleForeach in quotes</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1029\">Update <code>@\u200bactions/io</code> to 1.1.2</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1039\">Upgrading version to 3.2.0</a></li>\n</ul>\n<h2>v3.1.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/939\">Use <code>@\u200bactions/core</code> <code>saveState</code> and <code>getState</code></a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/922\">Add <code>github-server-url</code> input</a></li>\n</ul>\n<h2>v3.0.2</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/770\">Add input <code>set-safe-directory</code></a></li>\n</ul>\n<h2>v3.0.1</h2>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/actions/checkout/commit/3df4ab11eba7bda6032a0b82a6bb43b11571feac\"><code>3df4ab1</code></a> Release 4.0.0 (<a href=\"https://redirect.github.com/actions/checkout/issues/1447\">#1447</a>)</li>\n<li><a href=\"https://github.com/actions/checkout/commit/8b5e8b768746b50394015010d25e690bfab9dfbc\"><code>8b5e8b7</code></a> Support fetching without the --progress option (<a href=\"https://redirect.github.com/actions/checkout/issues/1067\">#1067</a>)</li>\n<li><a href=\"https://github.com/actions/checkout/commit/97a652b80035363df47baee5031ec8670b8878ac\"><code>97a652b</code></a> Update default runtime to node20 (<a href=\"https://redirect.github.com/actions/checkout/issues/1436\">#1436</a>)</li>\n<li>See full diff in <a href=\"https://github.com/actions/checkout/compare/v3...v4\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/checkout&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2023-09-11T03:27:09Z",
      "updatedAt": "2023-09-11T09:50:10Z",
      "closedAt": "2023-09-11T09:50:09Z",
      "mergedAt": "2023-09-11T09:50:09Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/github_actions/actions/checkout-4",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "github_actions"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump actions/checkout from 3 to 4\n\nBumps [actions/checkout](https://github.com/actions/checkout) from 3 to 4.\n- [Release notes](https://github.com/actions/checkout/releases)\n- [Changelog](https://github.com/actions/checkout/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/actions/checkout/compare/v3...v4)\n\n---\nupdated-dependencies:\n- dependency-name: actions/checkout\n  dependency-type: direct:production\n  update-type: version-update:semver-major\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2023-09-11T03:27:08Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11428,
      "title": "Fix invalid signature in TestSorting tests",
      "body": "In the `testing/python/collect.py::TestSorting::test_ordered_by_definition_order` tests, self is not passed, this is an invalid signature of class functions.",
      "state": "MERGED",
      "createdAt": "2023-09-11T03:04:50Z",
      "updatedAt": "2023-09-11T07:30:46Z",
      "closedAt": "2023-09-11T07:30:46Z",
      "mergedAt": "2023-09-11T07:30:46Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "fix_tests_signature",
      "author": {
        "login": "ShurikMen"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "fix invalid signature",
              "committedDate": "2023-09-11T02:59:00Z",
              "author": {
                "name": "Aleksandr Brodin",
                "email": "sank.brodin@gmail.com",
                "user": {
                  "login": "ShurikMen"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2023-09-11T04:30:26Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11427,
      "title": "Add class docstring to NodeMeta",
      "body": "#### Overview\r\nI attempt to add a docstring for `NodeMeta` that contains a helpful summary of what it does and the reason for its existence, as well as a link to a project board that contains more information. The intention was to make the docstring helpful to new and experienced contributors alike.\r\n\r\nNote: I did a direct edit on the pytest repo but I am unsure if it came through. If the direct edit and this PR clash, then this PR is the authoritative contribution.\r\n\r\n#### Areas of Concern\r\n1) I am unsure whether my summary is accurate or current, so I'd be especially grateful if @RonnyPfannschmidt or others involved with detangling `Node` relationships could review this.\r\n\r\n2) I don't have much experience with Sphinx documentation. I tried to use directives but I am unsure if linking to a project board should be handled in a particular way.\r\n\r\n#### Housekeeping\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\n",
      "state": "MERGED",
      "createdAt": "2023-09-10T13:21:47Z",
      "updatedAt": "2023-09-20T12:08:07Z",
      "closedAt": "2023-09-20T12:08:07Z",
      "mergedAt": "2023-09-20T12:08:07Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "main",
      "author": {
        "login": "WarrenTheRabbit"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 7
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Merge branch 'main' into main",
              "committedDate": "2023-09-10T16:49:17Z",
              "author": {
                "name": "Warren Markham",
                "email": "rabbitsinwarrens@gmail.com",
                "user": {
                  "login": "WarrenTheRabbit"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-09-12T11:39:47Z",
            "body": "LGTM!\r\n\r\nLeaving to @RonnyPfannschmidt to do a final review/merge."
          },
          {
            "author": {
              "login": "WarrenTheRabbit"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-09-12T22:48:00Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-09-13T07:03:47Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2023-09-13T07:10:00Z",
            "body": "preliminary approve with the intent to add the link to a \"internals for people working on pytest\" part of the documentation\r\n\r\ndepending on the ease of adding such section we should either merge with a followup issue, or add a bare bones version of the section before\r\n\r\nthanks for getting this discussion started\r\n\r\nits always great to have someone new, not settled \"in the ways of the project\" come in and experiment with improvements and/or asking the questions that feel oblivious only when there is experience and bias - because it gives opportunity to turn things that ought to be obvious from \"obvious for the core-dev\" to \"obvious for everyone\""
          }
        ]
      }
    },
    {
      "number": 11426,
      "title": "[7.4.x] Fix --import-mode=importlib when root contains `__init__.py` file",
      "body": "Backport of PR #11420 to 7.4.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2023-09-10T12:58:04Z",
      "updatedAt": "2023-09-10T13:27:54Z",
      "closedAt": "2023-09-10T13:27:53Z",
      "mergedAt": "2023-09-10T13:27:53Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "7.4.x",
      "headRefName": "backport-11420-to-7.4.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[7.4.x] Fix --import-mode=importlib when root contains `__init__.py` file",
              "committedDate": "2023-09-10T12:58:03Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "nicoddemus@gmail.com",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-09-10T13:04:19Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11425,
      "title": "Force terminal width when running tests",
      "body": "Fixes #11423\r\n\r\n",
      "state": "MERGED",
      "createdAt": "2023-09-10T12:35:31Z",
      "updatedAt": "2023-09-11T12:23:22Z",
      "closedAt": "2023-09-11T12:22:56Z",
      "mergedAt": "2023-09-11T12:22:56Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "11423-term-width",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Force terminal width when running tests\n\nRelated to #11423",
              "committedDate": "2023-09-10T12:34:18Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2023-09-10T13:16:26Z",
            "body": "This might be slightly overboard,I wonder if that may hide possible issues "
          }
        ]
      }
    },
    {
      "number": 11424,
      "title": "Add new `ExceptionInfo.group_contains` assertion helper method",
      "body": "Tests if a captured exception group contains an expected exception. Will raise `AssertionError` if the wrapped exception is not an exception group. Supports recursive search into nested exception groups.\r\n\r\n(edit by Zac) Fixes #10441.",
      "state": "MERGED",
      "createdAt": "2023-09-10T11:29:20Z",
      "updatedAt": "2023-09-18T12:06:27Z",
      "closedAt": "2023-09-17T23:51:58Z",
      "mergedAt": "2023-09-17T23:51:58Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Zac-HD"
      },
      "baseRefName": "main",
      "headRefName": "exceptioninfo-groupcontains",
      "author": {
        "login": "lanzz"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 7
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Fix a minor mistake in docs (\"``match`` method\" is actually talking about the `match` keyword parameter)",
              "committedDate": "2023-09-17T21:28:32Z",
              "author": {
                "name": "Mihail Milushev",
                "email": "mihail@lanzz.org",
                "user": {
                  "login": "lanzz"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Zac-HD"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-09-15T10:13:09Z",
            "body": "This looks great Mihail - thanks so much!\r\n\r\nI've added some design comments below which I think will let us close the linked issue; your implementation and tests already look great so we should be able to merge pretty soon.  I'm also unsure what's happening with those failing tests, but rebasing on main might help?"
          },
          {
            "author": {
              "login": "Zac-HD"
            },
            "state": "APPROVED",
            "submittedAt": "2023-09-15T23:17:54Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11422,
      "title": "[automated] Update plugin list",
      "body": "[automated] Update plugin list",
      "state": "MERGED",
      "createdAt": "2023-09-10T00:18:15Z",
      "updatedAt": "2023-09-10T13:09:42Z",
      "closedAt": "2023-09-10T13:09:41Z",
      "mergedAt": "2023-09-10T13:09:41Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "The-Compiler"
      },
      "baseRefName": "main",
      "headRefName": "update-plugin-list/patch-71f265f1f",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[automated] Update plugin list",
              "committedDate": "2023-09-10T00:18:13Z",
              "author": {
                "name": "pytest bot",
                "email": "pytestbot@users.noreply.github.com",
                "user": {
                  "login": "pytestbot"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "The-Compiler"
            },
            "state": "APPROVED",
            "submittedAt": "2023-09-10T12:48:59Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11421,
      "title": "[7.4.x] fix: closes #11343's [attr-defined] type errors",
      "body": "Backport of PR #11345 to 7.4.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2023-09-09T12:34:07Z",
      "updatedAt": "2023-09-09T13:02:33Z",
      "closedAt": "2023-09-09T13:02:32Z",
      "mergedAt": "2023-09-09T13:02:32Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "7.4.x",
      "headRefName": "backport-11345-to-7.4.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[7.4.x] fix: closes #11343's [attr-defined] type errors",
              "committedDate": "2023-09-09T12:34:05Z",
              "author": {
                "name": "Warren Markham",
                "email": "rabbitsinwarrens@gmail.com",
                "user": {
                  "login": "WarrenTheRabbit"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-09-09T12:38:42Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11420,
      "title": "Fix --import-mode=importlib when root contains `__init__.py` file",
      "body": "We cannot have an empty module name when importing a `__init__.py` file that is at the rootdir.\r\n\r\nFixes #11417\r\n",
      "state": "MERGED",
      "createdAt": "2023-09-09T12:31:12Z",
      "updatedAt": "2023-09-10T12:57:48Z",
      "closedAt": "2023-09-10T12:57:41Z",
      "mergedAt": "2023-09-10T12:57:41Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "11417-root-as-package",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Fix --import-mode=importlib when root contains `__init__.py` file\n\nWe cannot have an empty module name when importing a `__init__.py` file that\nis at the rootdir.\n\nFixes #11417",
              "committedDate": "2023-09-09T12:29:55Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-09-10T07:19:03Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11419,
      "title": "[7.4.x] Fix assert rewriting with assignment expressions (#11414)",
      "body": "Fixes #11239\r\n\r\n(cherry picked from commit 7259e8db9844f6f973c1d0c0ce46cc68c8248abb)\r\n",
      "state": "MERGED",
      "createdAt": "2023-09-09T12:13:41Z",
      "updatedAt": "2023-09-09T13:08:44Z",
      "closedAt": "2023-09-09T13:08:41Z",
      "mergedAt": "2023-09-09T13:08:41Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "7.4.x",
      "headRefName": "backport-11414-to-7.4.x",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Skip test_assertion_walrus_different_test_cases on Python 3.7",
              "committedDate": "2023-09-09T12:43:15Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11418,
      "title": "Add hash comparison for pyc cache files",
      "body": "Compare pyc cache files by source hash.\r\n\r\nEspecially in CI environments, it's common for mtimes to be reset when restoring a cache. To work around that, fallback to a source hash comparison if both size and mtime didn't match.\r\n\r\nRelated:\r\n- https://docs.python.org/3/reference/import.html#pyc-invalidation\r\n- https://docs.python.org/3/library/importlib.html#importlib.util.source_hash\r\n- https://github.com/psf/black/pull/3821",
      "state": "OPEN",
      "createdAt": "2023-09-08T23:23:44Z",
      "updatedAt": "2024-04-27T22:22:16Z",
      "closedAt": null,
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "cache",
      "author": {
        "login": "cdce8p"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Add invalidation-mode option",
              "committedDate": "2024-04-25T14:44:42Z",
              "author": {
                "name": "Marc Mueller",
                "email": "30130371+cdce8p@users.noreply.github.com",
                "user": {
                  "login": "cdce8p"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "CHANGES_REQUESTED",
            "submittedAt": "2023-09-09T17:15:37Z",
            "body": "Thanks @cdce8p, I like this change. I left some comments."
          },
          {
            "author": {
              "login": "cdce8p"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-09-09T17:54:01Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-09-09T18:29:47Z",
            "body": ""
          },
          {
            "author": {
              "login": "cdce8p"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-09-09T18:41:03Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-09-09T19:24:43Z",
            "body": ""
          },
          {
            "author": {
              "login": "cdce8p"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-09-09T20:06:20Z",
            "body": ""
          },
          {
            "author": {
              "login": "cdce8p"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-09-10T16:11:25Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-09-11T08:12:47Z",
            "body": ""
          },
          {
            "author": {
              "login": "cdce8p"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-09-11T16:25:11Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-09-12T20:23:13Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11416,
      "title": "fixtures: more tweaks",
      "body": "A few more small fixture cleanups/improvements from looking at #11243.\r\n\r\nThe second commit is picked from #11243 authored by @sadra-barikbin. The idea is to make #11243 a bit smaller after it's rebased on top of this (which I'll be happy to do if @sadra-barikbin prefers).\r\n\r\nThe last commits are some doctest cleanups after checking its fixture handling. If we ever want to provide a proper interface for (non-`Function`) items to support fixtures, `DoctestItem` can be our model case.",
      "state": "MERGED",
      "createdAt": "2023-09-08T13:09:20Z",
      "updatedAt": "2023-09-08T21:08:00Z",
      "closedAt": "2023-09-08T17:48:35Z",
      "mergedAt": "2023-09-08T17:48:35Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "RonnyPfannschmidt"
      },
      "baseRefName": "main",
      "headRefName": "fixtures-getfixtureclosure",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "doctest: some missing type annotations",
              "committedDate": "2023-09-08T12:59:17Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-09-08T13:39:22Z",
            "body": "LGTM!"
          },
          {
            "author": {
              "login": "sadra-barikbin"
            },
            "state": "APPROVED",
            "submittedAt": "2023-09-08T15:39:14Z",
            "body": "Thanks @bluetech. Looks good to me. "
          }
        ]
      }
    },
    {
      "number": 11415,
      "title": "[7.4.x] Adjustments to the release process (#11410)",
      "body": "As discussed in #11408:\r\n\r\n* Improve documentation for the release process.\r\n* Fix the description for the PRs created by the `prepare release pr` workflow.\r\n* Fix pushing tag in the `deploy` workflow.\r\n\r\n(cherry picked from commit e5c81fa41aa437261009d2dcbed5f05bb2b86647)\r\n\r\n",
      "state": "MERGED",
      "createdAt": "2023-09-08T11:37:54Z",
      "updatedAt": "2023-09-08T11:42:56Z",
      "closedAt": "2023-09-08T11:42:55Z",
      "mergedAt": "2023-09-08T11:42:55Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "7.4.x",
      "headRefName": "backport-11410-to-7.4.x",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Adjustments to the release process (#11410)\n\nAs discussed in #11408:\n\n* Improve documentation for the release process.\n* Fix the description for the PRs created by the `prepare release pr` workflow.\n* Fix pushing tag in the `deploy` workflow.\n\n(cherry picked from commit e5c81fa41aa437261009d2dcbed5f05bb2b86647)",
              "committedDate": "2023-09-08T11:37:06Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "nicoddemus@gmail.com",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11414,
      "title": "Fix assert rewriting with assignment expressions",
      "body": "Fixes #11239\r\n\r\nTrack the rudimentary scope where `:=` are used to prevent replacing variables in other test cases. AFAICT it's not necessary to be precise and track every scope change as only `assert` nodes are visited anyway and those are not usually used in comprehensions, for example.\r\n",
      "state": "MERGED",
      "createdAt": "2023-09-08T10:42:49Z",
      "updatedAt": "2023-09-09T12:12:02Z",
      "closedAt": "2023-09-09T12:09:32Z",
      "mergedAt": "2023-09-09T12:09:32Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "fix-assert-rewriting-assignexpr",
      "author": {
        "login": "cdce8p"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 9
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Use sentinel value",
              "committedDate": "2023-09-08T22:39:53Z",
              "author": {
                "name": "Marc Mueller",
                "email": "30130371+cdce8p@users.noreply.github.com",
                "user": {
                  "login": "cdce8p"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-09-08T11:48:38Z",
            "body": "Thanks @cdce8p, appreciate the contribution!\r\n\r\nPlease take a look at my comments. \ud83d\udc4d  "
          },
          {
            "author": {
              "login": "cdce8p"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-09-08T12:45:37Z",
            "body": ""
          },
          {
            "author": {
              "login": "cdce8p"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-09-08T12:47:00Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-09-08T21:42:58Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-09-08T21:45:36Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11413,
      "title": "refactor: use division operator to join paths.",
      "body": "Starting with `resolve_package_path()` and its associated tests, this refactoring seeks to make path concatenation more readable and consistent.\r\n\r\nTo be consistent, all uses of `.joinpath()` need to be replaced with the `/` operator or the other way around. I have chosen to standardise the use of the `/` operator across `resolve_package_path()` and its tests because\r\n   1) it is already used in the tests\r\n   2) it is more succinct and readable\r\n   3) casual profiling with `%timeit` didn't reveal a performance loss\r\n           `/` operator: 273 \u00b5s \u00b1 86.6 \u00b5s\r\n                    `.joinpath()`: 269 \u00b5s \u00b1 99.4 \u00b5s\r\n\r\nEventual consistency within and across all files is the ultimate goal. This is achievable. There are currently 428 uses of `.joinpath()` across 45 files. Counting assignment expressions only, there are 111 uses of the `/` operator across 23 files. However, even if there is a usage pattern of 4:1 against the `/` operator, I do not think that makes standardising it an unwise choice. There\r\nare gains in readability.\r\n\r\n#### Profiling\r\n\r\n##### `/` operator\r\n```python\r\n#operator_profiling.ipynb\r\n\r\nfrom pathlib import Path\r\nfrom tempfile import TemporaryDirectory\r\n\r\nwith TemporaryDirectory() as tmp_dir:\r\n    tmp_dir = Path(tmp_dir)\r\n    (tmp_dir / '__init__.py').touch()\r\n    print(\"operator approach:\")\r\n    %timeit (tmp_dir / \"something/__init__.py\").is_file()\r\n```\r\n##### `joinpath()`\r\n```python\r\n#joinpath_profiling.ipynb\r\n\r\nfrom pathlib import Path\r\nfrom tempfile import TemporaryDirectory\r\n\r\nwith TemporaryDirectory() as tmp_dir:\r\n    tmp_dir = Path(tmp_dir)\r\n    (tmp_dir / '__init__.py').touch()\r\n    print(\".joinpath approach:\")\r\n    %timeit tmp_dir.joinpath(\"something/__init__.py\").is_file()\r\n\r\n```\r\n\r\n#### Housekeeping\r\n\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n",
      "state": "MERGED",
      "createdAt": "2023-09-08T05:35:46Z",
      "updatedAt": "2023-09-09T12:16:23Z",
      "closedAt": "2023-09-09T12:16:22Z",
      "mergedAt": "2023-09-09T12:16:22Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "refactor-path-concatenation",
      "author": {
        "login": "WarrenTheRabbit"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 6
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Merge branch 'main' into refactor-path-concatenation",
              "committedDate": "2023-09-08T22:52:51Z",
              "author": {
                "name": "Warren Markham",
                "email": "rabbitsinwarrens@gmail.com",
                "user": {
                  "login": "WarrenTheRabbit"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "CHANGES_REQUESTED",
            "submittedAt": "2023-09-08T05:41:12Z",
            "body": "When its not part of the attribute/variable name, using operator's instead of the method name actually makes it Harder to read "
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2023-09-09T04:07:24Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11410,
      "title": "Adjustments to the release process",
      "body": "As discussed in #11408:\r\n\r\n* Improve documentation for the release process.\r\n* Fix the description for the PRs created by the `prepare release pr` workflow.\r\n* Fix pushing tag in the `deploy` workflow.\r\n",
      "state": "MERGED",
      "createdAt": "2023-09-07T19:09:30Z",
      "updatedAt": "2023-09-08T10:22:32Z",
      "closedAt": "2023-09-08T10:22:17Z",
      "mergedAt": "2023-09-08T10:22:17Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "release-adjustemnts",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Adjustments to the release process\n\nAs discussed in #11408:\n\n* Improve documentation for the release process.\n* Fix the description for the PRs created by the `prepare release pr` workflow.\n* Fix pushing tag in the `deploy` workflow.",
              "committedDate": "2023-09-07T19:12:58Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-09-08T07:04:10Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11409,
      "title": "Cherry-pick release-7.4.2",
      "body": "\r\n(cherry picked from commit b0c4775a28aebcd3d3d6394ebb36838df01f809d)\r\n",
      "state": "MERGED",
      "createdAt": "2023-09-07T18:53:34Z",
      "updatedAt": "2023-09-07T19:10:22Z",
      "closedAt": "2023-09-07T19:10:19Z",
      "mergedAt": "2023-09-07T19:10:19Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "cherry-pick-release",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Merge pull request #11408 from pytest-dev/release-7.4.2\n\nPrepare release 7.4.2\n\n(cherry picked from commit b0c4775a28aebcd3d3d6394ebb36838df01f809d)",
              "committedDate": "2023-09-07T18:53:02Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "nicoddemus@gmail.com",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11408,
      "title": "Prepare release 7.4.2",
      "body": "Created automatically from manual trigger.\n\nOnce all builds pass and it has been **approved** by one or more maintainers, the build\ncan be released by pushing a tag `7.4.2` to this repository.\n",
      "state": "MERGED",
      "createdAt": "2023-09-07T17:21:52Z",
      "updatedAt": "2023-09-07T18:47:57Z",
      "closedAt": "2023-09-07T18:47:56Z",
      "mergedAt": "2023-09-07T18:47:56Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "7.4.x",
      "headRefName": "release-7.4.2",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 8
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Prepare release version 7.4.2",
              "committedDate": "2023-09-07T17:21:49Z",
              "author": {
                "name": "pytest bot",
                "email": "pytestbot@gmail.com",
                "user": {
                  "login": "pytestbot"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-09-07T17:46:04Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11407,
      "title": "[port from 7.4.x] Use _pytest.pathlib.safe_exists in get_dirs_from_args",
      "body": "When backporting #11404 to `7.4.x`, Python 3.7 builds uncovered more places where the same treatment should be applied.\r\n\r\nRelated to #11394",
      "state": "MERGED",
      "createdAt": "2023-09-07T17:17:17Z",
      "updatedAt": "2023-09-07T18:44:51Z",
      "closedAt": "2023-09-07T18:44:48Z",
      "mergedAt": "2023-09-07T18:44:48Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "port-11406",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Use _pytest.pathlib.safe_exists in get_dirs_from_args\n\nRelated to #11394",
              "committedDate": "2023-09-07T17:15:15Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-09-07T18:42:24Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11406,
      "title": "[7.4.x] Fix crash when passing a very long cmdline argument (#11404)",
      "body": "Fixes #11394\r\n\r\n(cherry picked from commit 28ccf476b91be32ffda303f0d7a8b57e475b465b)\r\n",
      "state": "MERGED",
      "createdAt": "2023-09-07T15:55:32Z",
      "updatedAt": "2023-09-07T17:14:41Z",
      "closedAt": "2023-09-07T17:14:41Z",
      "mergedAt": "2023-09-07T17:14:41Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "7.4.x",
      "headRefName": "backport-11404-to-7.4.x",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Use _pytest.pathlib.safe_exists in get_dirs_from_args\n\nRelated to #11394",
              "committedDate": "2023-09-07T16:50:02Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11404,
      "title": "Fix crash when passing a very long cmdline argument",
      "body": "Fixes #11394\r\n\r\n",
      "state": "MERGED",
      "createdAt": "2023-09-07T12:53:47Z",
      "updatedAt": "2023-09-07T15:49:34Z",
      "closedAt": "2023-09-07T15:49:25Z",
      "mergedAt": "2023-09-07T15:49:25Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "11394-long-cmdline",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "fixup! Fix crash when passing a very long cmdline argument",
              "committedDate": "2023-09-07T13:48:26Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-09-07T13:09:49Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-09-07T13:26:32Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-09-07T13:34:09Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-09-07T13:35:31Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-09-07T13:44:58Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2023-09-07T15:10:16Z",
            "body": "this one is a special kind of icky :face_exhaling: "
          }
        ]
      }
    },
    {
      "number": 11403,
      "title": "[7.4.x] Fix doctest collection of `functools.cached_property` objects.",
      "body": "Backport of PR #11317 to 7.4.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2023-09-07T12:44:00Z",
      "updatedAt": "2023-09-07T13:33:14Z",
      "closedAt": "2023-09-07T13:33:13Z",
      "mergedAt": "2023-09-07T13:33:13Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "7.4.x",
      "headRefName": "backport-11317-to-7.4.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Account for Python 3.7 in the 7.4.x branch",
              "committedDate": "2023-09-07T13:12:25Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2023-09-07T12:45:37Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-09-07T13:00:18Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11400,
      "title": "[7.4.x] doc: Remove done training",
      "body": "Backport of PR #11399 to 7.4.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2023-09-06T13:22:50Z",
      "updatedAt": "2023-09-06T13:50:01Z",
      "closedAt": "2023-09-06T13:50:00Z",
      "mergedAt": "2023-09-06T13:50:00Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "The-Compiler"
      },
      "baseRefName": "7.4.x",
      "headRefName": "backport-11399-to-7.4.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[7.4.x] doc: Remove done training",
              "committedDate": "2023-09-06T13:22:49Z",
              "author": {
                "name": "Florian Bruhin",
                "email": "me@the-compiler.org",
                "user": {
                  "login": "The-Compiler"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "The-Compiler"
            },
            "state": "APPROVED",
            "submittedAt": "2023-09-06T13:27:16Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11399,
      "title": "doc: Remove done training",
      "body": "Another 11 people with more pytest knowledge (and pytest stickers) :tada: ",
      "state": "MERGED",
      "createdAt": "2023-09-06T12:54:10Z",
      "updatedAt": "2023-09-06T13:22:32Z",
      "closedAt": "2023-09-06T13:22:27Z",
      "mergedAt": "2023-09-06T13:22:27Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "The-Compiler"
      },
      "baseRefName": "main",
      "headRefName": "training-update-2023-09",
      "author": {
        "login": "The-Compiler"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "needs backport"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "doc: Remove done training",
              "committedDate": "2023-09-06T12:53:45Z",
              "author": {
                "name": "Florian Bruhin",
                "email": "me@the-compiler.org",
                "user": {
                  "login": "The-Compiler"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-09-06T13:15:43Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11398,
      "title": "[7.4.x] improve plugin list disclaimer",
      "body": "Backport of PR #11397 to 7.4.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2023-09-06T10:35:02Z",
      "updatedAt": "2023-09-06T11:02:31Z",
      "closedAt": "2023-09-06T11:02:30Z",
      "mergedAt": "2023-09-06T11:02:30Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "7.4.x",
      "headRefName": "backport-11397-to-7.4.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[7.4.x] improve plugin list disclaimer",
              "committedDate": "2023-09-06T10:35:00Z",
              "author": {
                "name": "Stefaan Lippens",
                "email": "soxofaan@users.noreply.github.com",
                "user": {
                  "login": "soxofaan"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-09-06T10:42:08Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11397,
      "title": "improve plugin list disclaimer",
      "body": "Addresses the disclaimer issue discussed in #11391  \r\n\r\nCloses #11391\r\n\r\n",
      "state": "MERGED",
      "createdAt": "2023-09-06T07:49:11Z",
      "updatedAt": "2023-09-06T10:34:44Z",
      "closedAt": "2023-09-06T10:34:39Z",
      "mergedAt": "2023-09-06T10:34:39Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "issue11391-plugin-list",
      "author": {
        "login": "soxofaan"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[pre-commit.ci] auto fixes from pre-commit.com hooks\n\nfor more information, see https://pre-commit.ci",
              "committedDate": "2023-09-06T07:49:51Z",
              "author": {
                "name": "pre-commit-ci[bot]",
                "email": "66853113+pre-commit-ci[bot]@users.noreply.github.com",
                "user": {
                  "login": "pre-commit-ci[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-09-06T10:34:04Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11395,
      "title": "[7.4.x] Fix import_path for packages",
      "body": "Backport of PR #11390 to 7.4.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2023-09-05T22:43:08Z",
      "updatedAt": "2023-09-05T23:07:50Z",
      "closedAt": "2023-09-05T23:07:49Z",
      "mergedAt": "2023-09-05T23:07:49Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "7.4.x",
      "headRefName": "backport-11390-to-7.4.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[7.4.x] Fix import_path for packages",
              "committedDate": "2023-09-05T22:43:06Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "nicoddemus@gmail.com",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-09-05T22:47:42Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11393,
      "title": "Fixtures tweaks",
      "body": "These commits are some small improvements to the fixtures code that I've collected while looking at the code.",
      "state": "MERGED",
      "createdAt": "2023-09-05T19:37:36Z",
      "updatedAt": "2023-09-06T06:15:30Z",
      "closedAt": "2023-09-06T06:15:29Z",
      "mergedAt": "2023-09-06T06:15:29Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "fixtures-tweaks",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "python: avoid an Any",
              "committedDate": "2023-09-05T19:32:46Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-09-05T22:47:19Z",
            "body": "LGTM!"
          }
        ]
      }
    },
    {
      "number": 11390,
      "title": "Fix import_path for packages",
      "body": "For packages, `import_path` receives the path to the package's `__init__.py` file, however module names (as they live in `sys.modules`) should not include the `__init__` part.\r\n\r\nFor example, `app/core/__init__.py` should be imported as `app.core`, not as `app.core.__init__`.\r\n\r\nFix #11306\r\n",
      "state": "MERGED",
      "createdAt": "2023-09-05T12:34:22Z",
      "updatedAt": "2023-09-07T14:41:26Z",
      "closedAt": "2023-09-05T22:42:41Z",
      "mergedAt": "2023-09-05T22:42:41Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "11306-importlib-package-twice",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 5
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Fix import_path for packages\n\nFor packages, `import_path` receives the path to the package's `__init__.py` file, however module names (as they live in `sys.modules`) should not include the `__init__` part.\n\nFor example, `app/core/__init__.py` should be imported as `app.core`, not as `app.core.__init__`.\n\nFix #11306",
              "committedDate": "2023-09-05T13:59:15Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-09-05T13:24:37Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2023-09-05T13:24:48Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-09-05T13:36:56Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-09-05T13:59:40Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-09-05T16:54:36Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-09-05T19:39:34Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-09-05T20:01:19Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-09-05T20:07:39Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11389,
      "title": "[pre-commit.ci] pre-commit autoupdate",
      "body": "<!--pre-commit.ci start-->\nupdates:\n- [github.com/PyCQA/autoflake: v2.2.0 \u2192 v2.2.1](https://github.com/PyCQA/autoflake/compare/v2.2.0...v2.2.1)\n<!--pre-commit.ci end-->",
      "state": "MERGED",
      "createdAt": "2023-09-05T08:22:55Z",
      "updatedAt": "2023-09-05T13:09:34Z",
      "closedAt": "2023-09-05T13:09:33Z",
      "mergedAt": "2023-09-05T13:09:33Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "pre-commit-ci-update-config",
      "author": {
        "login": "pre-commit-ci"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[pre-commit.ci] pre-commit autoupdate\n\nupdates:\n- [github.com/PyCQA/autoflake: v2.2.0 \u2192 v2.2.1](https://github.com/PyCQA/autoflake/compare/v2.2.0...v2.2.1)",
              "committedDate": "2023-09-05T08:22:53Z",
              "author": {
                "name": "pre-commit-ci[bot]",
                "email": "66853113+pre-commit-ci[bot]@users.noreply.github.com",
                "user": {
                  "login": "pre-commit-ci[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2023-09-05T11:11:27Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11385,
      "title": "build(deps): Bump twisted from 22.8.0 to 23.8.0 in /testing/plugins_integration",
      "body": "Bumps [twisted](https://github.com/twisted/twisted) from 22.8.0 to 23.8.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/twisted/twisted/releases\">twisted's releases</a>.</em></p>\n<blockquote>\n<h1>Twisted 23.8.0. (2023-08-28)</h1>\n<p>This is the last release with support for Python 3.7.</p>\n<p>No changes since 23.8.0.rc1.</p>\n<h2>Features</h2>\n<ul>\n<li>reactor.spawnProcess() now uses posix_spawnp when possible, making it much more efficient (<a href=\"https://redirect.github.com/twisted/twisted/issues/5710\">#5710</a>)</li>\n<li>Twisted now officially supports Python 3.11. (<a href=\"https://redirect.github.com/twisted/twisted/issues/10343\">#10343</a>)</li>\n<li>twisted.internet.defer.Deferred.fromFuture now has a more precise type annotation. (<a href=\"https://redirect.github.com/twisted/twisted/issues/11753\">#11753</a>)</li>\n<li>twisted.internet.defer._ConcurrencyPrimitive.<strong>aexit</strong> now has a more precise type annotation. (<a href=\"https://redirect.github.com/twisted/twisted/issues/11795\">#11795</a>)</li>\n<li><code>twisted.internet.defer.race</code> has been added as a way to get the first available result from a list of Deferreds. (<a href=\"https://redirect.github.com/twisted/twisted/issues/11817\">#11817</a>)</li>\n<li>The CI suite was updated to execute the tests using a Python 3.12 pre-release (<a href=\"https://redirect.github.com/twisted/twisted/issues/11857\">#11857</a>)</li>\n</ul>\n<h2>Bugfixes</h2>\n<ul>\n<li>twisted.conch.scripts.ckeygen now substitutes a default of &quot;~/.ssh/id_rsa&quot; if no keyfile is specified. (<a href=\"https://redirect.github.com/twisted/twisted/issues/6607\">#6607</a>)</li>\n<li>Correct type hints for <code>IHostnameResolver.resolveHostName</code> and <code>IResolverSimple.getHostByName</code>. (<a href=\"https://redirect.github.com/twisted/twisted/issues/10276\">#10276</a>)</li>\n<li><code>twist conch --auth=sshkey</code> can now authenticate users without a traceback again, thanks to twisted.conch.unix.UnixConchUser no longer being incorrectly instantiated with <code>bytes</code>.  In the course of this fix, some type hinting has also been applied to <code>twisted.cred.portal</code>. (<a href=\"https://redirect.github.com/twisted/twisted/issues/11626\">#11626</a>)</li>\n<li>twisted.internet.gireactor now works with Gtk4, and is tested and supported in CI again. (<a href=\"https://redirect.github.com/twisted/twisted/issues/11705\">#11705</a>)</li>\n<li>When interrupted with control-C, <code>trial -j</code> no longer obscures tracebacks for\nany errors caused by that interruption with an <code>UnboundLocalError</code> due to a bug\nin its own implementation.  Note that there are still several internal\ntracebacks that will be emitted upon exiting, because tearing down the test\nrunner mid-suite is still not an entirely clean operation, but it should at\nleast be possible to see errors reported from, for example, a test that is\nhanging more clearly. (<a href=\"https://redirect.github.com/twisted/twisted/issues/11707\">#11707</a>)</li>\n<li>PortableGIReactor and PortableGtkReactor are no longer necessary and are now aliases of GIReactor and Gtk2Reactor respectively, improving the performance of any applications using them. (<a href=\"https://redirect.github.com/twisted/twisted/issues/11738\">#11738</a>)</li>\n<li>The Twisted package dependencies were updated to minimum versions that\nwill work with latest Twisted codebase. (<a href=\"https://redirect.github.com/twisted/twisted/issues/11740\">#11740</a>)</li>\n<li>Deferred's type annotations have been made more comprehensive, precise, correct, and strict.  You may notice new type errors in your applications; be sure to check on those because they may represent real type errors! (<a href=\"https://redirect.github.com/twisted/twisted/issues/11772\">#11772</a>)</li>\n<li>To prevent parsing errors and ensure validity when serializing HTML comments, twisted.web.template.flattenString has been updated to escape the --&gt; sequence within comments. (<a href=\"https://redirect.github.com/twisted/twisted/issues/11804\">#11804</a>)</li>\n<li>BadZipfile (with a small f) has been deprecated since Python 3.2,\nuse BadZipFile (big F) instead, added in 3.2. (<a href=\"https://redirect.github.com/twisted/twisted/issues/11821\">#11821</a>)</li>\n<li><code>twisted.web.template</code> now avoids unnecessary copying and is faster, particularly for templates with deep nesting. (<a href=\"https://redirect.github.com/twisted/twisted/issues/11834\">#11834</a>)</li>\n<li><code>twisted.web.template</code> now avoids some unecessary evaluation of type annotations and is faster. (<a href=\"https://redirect.github.com/twisted/twisted/issues/11835\">#11835</a>)</li>\n<li>utcfromtimestamp has been deprecated since Python 3.12,\nuse fromtimestamp(x, timezone.utc).replace(tzinfo=None) instead. (<a href=\"https://redirect.github.com/twisted/twisted/issues/11908\">#11908</a>)</li>\n</ul>\n<h2>Deprecations and Removals</h2>\n<ul>\n<li>Optional dependency &quot;extras&quot; names like <code>conch_nacl</code> now use hyphens rather than underscores to comply with PEP 685. The old names will be supported until the end of 2023. (<a href=\"https://redirect.github.com/twisted/twisted/issues/11655\">#11655</a>)</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/twisted/twisted/blob/trunk/NEWS.rst\">twisted's changelog</a>.</em></p>\n<blockquote>\n<p>This file contains the release notes for Twisted.</p>\n<p>It only contains high-level changes that are of interest to Twisted library users.\nUsers of Twisted should check the notes before planning an upgrade.</p>\n<p>Ticket numbers in this file can be looked up by visiting\n<a href=\"https://twisted.org/trac/ticket/\">https://twisted.org/trac/ticket/</a><!-- raw HTML omitted --></p>\n<p>.. towncrier release notes start</p>\n<h1>Twisted 23.8.0. (2023-08-28)</h1>\n<p>This is the last release with support for Python 3.7.</p>\n<p>No changes since 23.8.0.rc1.</p>\n<h2>Features</h2>\n<ul>\n<li>reactor.spawnProcess() now uses posix_spawnp when possible, making it much more efficient (<a href=\"https://redirect.github.com/twisted/twisted/issues/5710\">#5710</a>)</li>\n<li>Twisted now officially supports Python 3.11. (<a href=\"https://redirect.github.com/twisted/twisted/issues/10343\">#10343</a>)</li>\n<li>twisted.internet.defer.Deferred.fromFuture now has a more precise type annotation. (<a href=\"https://redirect.github.com/twisted/twisted/issues/11753\">#11753</a>)</li>\n<li>twisted.internet.defer._ConcurrencyPrimitive.<strong>aexit</strong> now has a more precise type annotation. (<a href=\"https://redirect.github.com/twisted/twisted/issues/11795\">#11795</a>)</li>\n<li><code>twisted.internet.defer.race</code> has been added as a way to get the first available result from a list of Deferreds. (<a href=\"https://redirect.github.com/twisted/twisted/issues/11817\">#11817</a>)</li>\n<li>The CI suite was updated to execute the tests using a Python 3.12 pre-release (<a href=\"https://redirect.github.com/twisted/twisted/issues/11857\">#11857</a>)</li>\n</ul>\n<h2>Bugfixes</h2>\n<ul>\n<li>twisted.conch.scripts.ckeygen now substitutes a default of &quot;~/.ssh/id_rsa&quot; if no keyfile is specified. (<a href=\"https://redirect.github.com/twisted/twisted/issues/6607\">#6607</a>)</li>\n<li>Correct type hints for <code>IHostnameResolver.resolveHostName</code> and <code>IResolverSimple.getHostByName</code>. (<a href=\"https://redirect.github.com/twisted/twisted/issues/10276\">#10276</a>)</li>\n<li><code>twist conch --auth=sshkey</code> can now authenticate users without a traceback again, thanks to twisted.conch.unix.UnixConchUser no longer being incorrectly instantiated with <code>bytes</code>.  In the course of this fix, some type hinting has also been applied to <code>twisted.cred.portal</code>. (<a href=\"https://redirect.github.com/twisted/twisted/issues/11626\">#11626</a>)</li>\n<li>twisted.internet.gireactor now works with Gtk4, and is tested and supported in CI again. (<a href=\"https://redirect.github.com/twisted/twisted/issues/11705\">#11705</a>)</li>\n<li>When interrupted with control-C, <code>trial -j</code> no longer obscures tracebacks for\nany errors caused by that interruption with an <code>UnboundLocalError</code> due to a bug\nin its own implementation.  Note that there are still several internal\ntracebacks that will be emitted upon exiting, because tearing down the test\nrunner mid-suite is still not an entirely clean operation, but it should at\nleast be possible to see errors reported from, for example, a test that is\nhanging more clearly. (<a href=\"https://redirect.github.com/twisted/twisted/issues/11707\">#11707</a>)</li>\n<li>PortableGIReactor and PortableGtkReactor are no longer necessary and are now aliases of GIReactor and Gtk2Reactor respectively, improving the performance of any applications using them. (<a href=\"https://redirect.github.com/twisted/twisted/issues/11738\">#11738</a>)</li>\n<li>The Twisted package dependencies were updated to minimum versions that\nwill work with latest Twisted codebase. (<a href=\"https://redirect.github.com/twisted/twisted/issues/11740\">#11740</a>)</li>\n<li>Deferred's type annotations have been made more comprehensive, precise, correct, and strict.  You may notice new type errors in your applications; be sure to check on those because they may represent real type errors! (<a href=\"https://redirect.github.com/twisted/twisted/issues/11772\">#11772</a>)</li>\n<li>To prevent parsing errors and ensure validity when serializing HTML comments, twisted.web.template.flattenString has been updated to escape the --&gt; sequence within comments. (<a href=\"https://redirect.github.com/twisted/twisted/issues/11804\">#11804</a>)</li>\n<li>BadZipfile (with a small f) has been deprecated since Python 3.2,</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/twisted/twisted/commit/f3cf54306e6e621aa6b175ee04f8febdc90abb7c\"><code>f3cf543</code></a> Revert &quot;No need to get the trunk branch, as this is done by actions/checkout.&quot;</li>\n<li><a href=\"https://github.com/twisted/twisted/commit/b3fbaecd133169506539d15ee6a39cb98016edab\"><code>b3fbaec</code></a> No need to get the trunk branch, as this is done by actions/checkout.</li>\n<li><a href=\"https://github.com/twisted/twisted/commit/da5a16a3ec28c89e02c3d396f63c4f15c7cb592e\"><code>da5a16a</code></a> Run tests on push for release branches.</li>\n<li><a href=\"https://github.com/twisted/twisted/commit/a1019a39789ae8156b777792d95015693909c235\"><code>a1019a3</code></a> Update final release version.</li>\n<li><a href=\"https://github.com/twisted/twisted/commit/bd63ecd1f422fc3d5cdb1c7b37c5f2d16eec221d\"><code>bd63ecd</code></a> Get full git history.</li>\n<li><a href=\"https://github.com/twisted/twisted/commit/2431593992b11462536c4bc562840925dd6443fa\"><code>2431593</code></a> use towncrier checks instead of custom code.</li>\n<li><a href=\"https://github.com/twisted/twisted/commit/6e9ea35f1c1eb19f5d31c937249d837c8fce8e69\"><code>6e9ea35</code></a> Add info about python 3.7 support.</li>\n<li><a href=\"https://github.com/twisted/twisted/commit/7f7f423f4d97630d0e9ec24b473a3024b72eafd4\"><code>7f7f423</code></a> tox -e towncrie</li>\n<li><a href=\"https://github.com/twisted/twisted/commit/30f014a58b4cf9cf6f0bed2d711f282abc9bf4be\"><code>30f014a</code></a> python -m incremental.update Twisted --rc</li>\n<li><a href=\"https://github.com/twisted/twisted/commit/9a2ea002e7207cc4c3c5255d576c5c4869986170\"><code>9a2ea00</code></a> <a href=\"https://redirect.github.com/twisted/twisted/issues/11857\">#11857</a> test on py 3.12rc (<a href=\"https://redirect.github.com/twisted/twisted/issues/11910\">#11910</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/twisted/twisted/compare/twisted-22.8.0...twisted-23.8.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=twisted&package-manager=pip&previous-version=22.8.0&new-version=23.8.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2023-09-04T03:25:41Z",
      "updatedAt": "2023-09-04T11:07:58Z",
      "closedAt": "2023-09-04T11:07:57Z",
      "mergedAt": "2023-09-04T11:07:57Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/pip/testing/plugins_integration/twisted-23.8.0",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "python"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump twisted in /testing/plugins_integration\n\nBumps [twisted](https://github.com/twisted/twisted) from 22.8.0 to 23.8.0.\n- [Release notes](https://github.com/twisted/twisted/releases)\n- [Changelog](https://github.com/twisted/twisted/blob/trunk/NEWS.rst)\n- [Commits](https://github.com/twisted/twisted/compare/twisted-22.8.0...twisted-23.8.0)\n\n---\nupdated-dependencies:\n- dependency-name: twisted\n  dependency-type: direct:production\n  update-type: version-update:semver-major\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2023-09-04T03:25:40Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2023-09-04T04:39:32Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11384,
      "title": "build(deps): Bump pytest-html from 3.2.0 to 4.0.0 in /testing/plugins_integration",
      "body": "Bumps [pytest-html](https://github.com/pytest-dev/pytest-html) from 3.2.0 to 4.0.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pytest-dev/pytest-html/releases\">pytest-html's releases</a>.</em></p>\n<blockquote>\n<h2>v4.0.0</h2>\n<h2>Changes</h2>\n<ul>\n<li>Release v4.0.0 (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/725\">#725</a>) <a href=\"https://github.com/BeyondEvil\"><code>@\u200bBeyondEvil</code></a></li>\n<li>Feat: Add duration format hook (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/724\">#724</a>) <a href=\"https://github.com/BeyondEvil\"><code>@\u200bBeyondEvil</code></a></li>\n<li>Chore: Drop support for python 3.7 (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/723\">#723</a>) <a href=\"https://github.com/BeyondEvil\"><code>@\u200bBeyondEvil</code></a></li>\n<li>Add expander to log output (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/721\">#721</a>) <a href=\"https://github.com/drRedflint\"><code>@\u200bdrRedflint</code></a></li>\n<li>Fix: Broken sorting for custom columns (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/715\">#715</a>) <a href=\"https://github.com/BeyondEvil\"><code>@\u200bBeyondEvil</code></a></li>\n<li>Chore: Stop running scheduled tests on forks (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/720\">#720</a>) <a href=\"https://github.com/BeyondEvil\"><code>@\u200bBeyondEvil</code></a></li>\n<li>Chore: Fix tox (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/718\">#718</a>) <a href=\"https://github.com/BeyondEvil\"><code>@\u200bBeyondEvil</code></a></li>\n<li>use max height instead of fixed height (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/706\">#706</a>) <a href=\"https://github.com/drRedflint\"><code>@\u200bdrRedflint</code></a></li>\n<li>if only one item in gallery, remove navigation (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/705\">#705</a>) <a href=\"https://github.com/drRedflint\"><code>@\u200bdrRedflint</code></a></li>\n<li>Chore: Support legacy pytest-metadata (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/714\">#714</a>) <a href=\"https://github.com/BeyondEvil\"><code>@\u200bBeyondEvil</code></a></li>\n<li>Feature: Untemplate table header (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/713\">#713</a>) <a href=\"https://github.com/BeyondEvil\"><code>@\u200bBeyondEvil</code></a></li>\n<li>Fix: Borken HTML in jinja template (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/712\">#712</a>) <a href=\"https://github.com/BeyondEvil\"><code>@\u200bBeyondEvil</code></a></li>\n<li>Feature: Update json-data-blob (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/704\">#704</a>) <a href=\"https://github.com/BeyondEvil\"><code>@\u200bBeyondEvil</code></a></li>\n<li>Fix: Collapsed state between redraws (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/703\">#703</a>) <a href=\"https://github.com/BeyondEvil\"><code>@\u200bBeyondEvil</code></a></li>\n<li>Feature: Only one collapsed state (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/701\">#701</a>) <a href=\"https://github.com/BeyondEvil\"><code>@\u200bBeyondEvil</code></a></li>\n<li>Chore: General JS cleanup (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/700\">#700</a>) <a href=\"https://github.com/BeyondEvil\"><code>@\u200bBeyondEvil</code></a></li>\n<li>Feature: Template test and duration summary (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/698\">#698</a>) <a href=\"https://github.com/BeyondEvil\"><code>@\u200bBeyondEvil</code></a></li>\n<li>Feature: Template result filters (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/697\">#697</a>) <a href=\"https://github.com/BeyondEvil\"><code>@\u200bBeyondEvil</code></a></li>\n<li>Feature: Template table header (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/696\">#696</a>) <a href=\"https://github.com/BeyondEvil\"><code>@\u200bBeyondEvil</code></a></li>\n<li>Fix: visible query param (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/695\">#695</a>) <a href=\"https://github.com/BeyondEvil\"><code>@\u200bBeyondEvil</code></a></li>\n<li>Fix: Handle legacy py html (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/694\">#694</a>) <a href=\"https://github.com/BeyondEvil\"><code>@\u200bBeyondEvil</code></a></li>\n<li>Fix: Environment table toggle bug (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/693\">#693</a>) <a href=\"https://github.com/BeyondEvil\"><code>@\u200bBeyondEvil</code></a></li>\n<li>Feature: Add initial sort column as ini (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/692\">#692</a>) <a href=\"https://github.com/BeyondEvil\"><code>@\u200bBeyondEvil</code></a></li>\n<li>Fix: Duration sorting (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/691\">#691</a>) <a href=\"https://github.com/BeyondEvil\"><code>@\u200bBeyondEvil</code></a></li>\n<li>Fix: Logging issues with teardown (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/690\">#690</a>) <a href=\"https://github.com/BeyondEvil\"><code>@\u200bBeyondEvil</code></a></li>\n<li>Chore: Simplify results table hooks (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/688\">#688</a>) <a href=\"https://github.com/BeyondEvil\"><code>@\u200bBeyondEvil</code></a></li>\n<li>Enable variable expansion for CSS addons. (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/676\">#676</a>) <a href=\"https://github.com/BeyondEvil\"><code>@\u200bBeyondEvil</code></a></li>\n<li>Fix: results table html hook (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/669\">#669</a>) <a href=\"https://github.com/BeyondEvil\"><code>@\u200bBeyondEvil</code></a></li>\n<li>fix for <a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/671\">#671</a> - Sort icons inverted in next-gen branch (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/672\">#672</a>) <a href=\"https://github.com/harmin-parra\"><code>@\u200bharmin-parra</code></a></li>\n<li>Docs: Update ReadTheDocs to v2 (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/673\">#673</a>) <a href=\"https://github.com/BeyondEvil\"><code>@\u200bBeyondEvil</code></a></li>\n<li>Feature: Add 'session' to results summary hook (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/660\">#660</a>) <a href=\"https://github.com/BeyondEvil\"><code>@\u200bBeyondEvil</code></a></li>\n<li>Chore: Fix npm building (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/658\">#658</a>) <a href=\"https://github.com/BeyondEvil\"><code>@\u200bBeyondEvil</code></a></li>\n<li>Feature: Add hide-able Environment Table (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/638\">#638</a>) <a href=\"https://github.com/BeyondEvil\"><code>@\u200bBeyondEvil</code></a></li>\n<li>Feature: Make entire row collapsible (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/656\">#656</a>) <a href=\"https://github.com/BeyondEvil\"><code>@\u200bBeyondEvil</code></a></li>\n<li>Chore: Disambiguate collapsed (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/657\">#657</a>) <a href=\"https://github.com/BeyondEvil\"><code>@\u200bBeyondEvil</code></a></li>\n<li>Chore: Assorted fixes around pytest entry points (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/655\">#655</a>) <a href=\"https://github.com/BeyondEvil\"><code>@\u200bBeyondEvil</code></a></li>\n<li>Chore: Add eslint (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/651\">#651</a>) <a href=\"https://github.com/BeyondEvil\"><code>@\u200bBeyondEvil</code></a></li>\n<li>Chore: Decouple ReportData (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/650\">#650</a>) <a href=\"https://github.com/BeyondEvil\"><code>@\u200bBeyondEvil</code></a></li>\n<li>Chore: Add npm build hooks (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/649\">#649</a>) <a href=\"https://github.com/BeyondEvil\"><code>@\u200bBeyondEvil</code></a></li>\n<li>Docs: Fix deprecations page title [skip ci] (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/645\">#645</a>) <a href=\"https://github.com/BeyondEvil\"><code>@\u200bBeyondEvil</code></a></li>\n<li>Fix: Renamed report-data class to avoid confusion (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/642\">#642</a>) <a href=\"https://github.com/BeyondEvil\"><code>@\u200bBeyondEvil</code></a></li>\n<li>Chore: Temporary imports for backwards compat (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/643\">#643</a>) <a href=\"https://github.com/BeyondEvil\"><code>@\u200bBeyondEvil</code></a></li>\n<li>Docs: Add Deprecations docs (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/640\">#640</a>) <a href=\"https://github.com/BeyondEvil\"><code>@\u200bBeyondEvil</code></a></li>\n<li>Fix: Support cells.pop() (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/641\">#641</a>) <a href=\"https://github.com/BeyondEvil\"><code>@\u200bBeyondEvil</code></a></li>\n<li>Fix: Order and layout of outcome summary (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/629\">#629</a>) <a href=\"https://github.com/BeyondEvil\"><code>@\u200bBeyondEvil</code></a></li>\n<li>Fix: Sorting of custom table columns (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/634\">#634</a>) <a href=\"https://github.com/BeyondEvil\"><code>@\u200bBeyondEvil</code></a></li>\n<li>Chore: Allow concurrency on default branch (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/639\">#639</a>) <a href=\"https://github.com/BeyondEvil\"><code>@\u200bBeyondEvil</code></a></li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/pytest-dev/pytest-html/blob/master/docs/changelog.rst\">pytest-html's changelog</a>.</em></p>\n<blockquote>\n<p>4.0.0 (2023-09-01)</p>\n<pre><code>\nThis release is the result of more than two years of rewrites.\n<p>We've tried our best to keep this release backwards-compatible with v3.</p>\n<p>If you find something that seems to be a regression, please consult the documentation first,\nbefore filing an issue.</p>\n<p>Thanks to all the users who have contributed with ideas, solutions and beta-testing.\nYou're too many to name, but you know who you are.</p>\n<p>A special thanks to <code>@drRedflint &amp;lt;https://github.com/drRedflint&amp;gt;</code>_ and <code>@jeffwright13 &amp;lt;https://github.com/jeffwright13&amp;gt;</code>_\nfor all the javascript and testing respectively.\n</code></pre></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pytest-dev/pytest-html/commit/3e21601f49cc30dbdb0e06ed79c146d816dd5b09\"><code>3e21601</code></a> Release v4.0.0 (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/725\">#725</a>)</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-html/commit/b7c50c137c392662463f9c3beab2e1f86dab9c02\"><code>b7c50c1</code></a> Feat: Add duration format hook (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/724\">#724</a>)</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-html/commit/372acd87f06e4d52171d47a1a5f561cf3351d676\"><code>372acd8</code></a> Chore: Drop support for python 3.7 (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/723\">#723</a>)</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-html/commit/31be0f964ef440328252744239b28747279c071a\"><code>31be0f9</code></a> Add expander to log output (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/721\">#721</a>)</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-html/commit/abde929fc82185c41ac73f6b97dc78106d0a54b1\"><code>abde929</code></a> Fix: Broken sorting for custom columns (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/715\">#715</a>)</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-html/commit/5e3cca16ee512da430ace1b72784916cf3db58d5\"><code>5e3cca1</code></a> Chore: Stop running scheduled tests on forks (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/720\">#720</a>)</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-html/commit/eaacc0fc3c12f3ed4470ccba33918f16f41d88d4\"><code>eaacc0f</code></a> Chore: Fix tox (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/718\">#718</a>)</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-html/commit/112c48f457b7b2eb3021abaa0ddbbe045b8bfaa8\"><code>112c48f</code></a> use max height instead of fixed height (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/706\">#706</a>)</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-html/commit/8b7eca55a0ad4b2850fddfede83e663c8e3833aa\"><code>8b7eca5</code></a> if only one item in gallery, remove navigation (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/705\">#705</a>)</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-html/commit/a5e92c275be028e71033988188a103a7afb56411\"><code>a5e92c2</code></a> Chore: Support legacy pytest-metadata (<a href=\"https://redirect.github.com/pytest-dev/pytest-html/issues/714\">#714</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pytest-dev/pytest-html/compare/v3.2.0...4.0.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pytest-html&package-manager=pip&previous-version=3.2.0&new-version=4.0.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2023-09-04T03:25:35Z",
      "updatedAt": "2023-09-04T11:08:12Z",
      "closedAt": "2023-09-04T11:08:11Z",
      "mergedAt": "2023-09-04T11:08:11Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/pip/testing/plugins_integration/pytest-html-4.0.0",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "python"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump pytest-html in /testing/plugins_integration\n\nBumps [pytest-html](https://github.com/pytest-dev/pytest-html) from 3.2.0 to 4.0.0.\n- [Release notes](https://github.com/pytest-dev/pytest-html/releases)\n- [Changelog](https://github.com/pytest-dev/pytest-html/blob/master/docs/changelog.rst)\n- [Commits](https://github.com/pytest-dev/pytest-html/compare/v3.2.0...4.0.0)\n\n---\nupdated-dependencies:\n- dependency-name: pytest-html\n  dependency-type: direct:production\n  update-type: version-update:semver-major\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2023-09-04T03:25:34Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-09-04T11:07:47Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11383,
      "title": "build(deps): Bump anyio[curio,trio] from 3.7.1 to 4.0.0 in /testing/plugins_integration",
      "body": "Bumps [anyio[curio,trio]](https://github.com/agronholm/anyio) from 3.7.1 to 4.0.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/agronholm/anyio/releases\">anyio[curio,trio]'s releases</a>.</em></p>\n<blockquote>\n<h2>4.0.0</h2>\n<ul>\n<li><strong>BACKWARDS INCOMPATIBLE</strong> Replaced AnyIO's own <code>ExceptionGroup</code>  class with the PEP 654 <code>BaseExceptionGroup</code> and <code>ExceptionGroup</code></li>\n<li><strong>BACKWARDS INCOMPATIBLE</strong> Changes to cancellation semantics:\n<ul>\n<li>Any exceptions raising out of a task groups are now nested inside an <code>ExceptionGroup</code> (or <code>BaseExceptionGroup</code> if one or more <code>BaseException</code> were included)</li>\n<li>Fixed task group not raising a cancellation exception on asyncio at exit if no child tasks were spawned and an outer cancellation scope had been cancelled before</li>\n<li>Ensured that exiting a <code>TaskGroup</code> always hits a yield point, regardless of whether there are running child tasks to be waited on</li>\n<li>On asyncio, cancel scopes will defer cancelling tasks that are scheduled to resume with a finished future</li>\n<li>On asyncio and Python 3.9/3.10, cancel scopes now only suppress cancellation exceptions if the cancel message matches the scope</li>\n<li>Task groups on all backends now raise a single cancellation exception when an outer cancel scope is cancelled, and no exceptions other than cancellation exceptions are raised in the group</li>\n</ul>\n</li>\n<li><strong>BACKWARDS INCOMPATIBLE</strong> Changes the pytest plugin to run all tests and fixtures in the same task, allowing fixtures to set context variables for tests and other fixtures</li>\n<li><strong>BACKWARDS INCOMPATIBLE</strong> Changed <code>anyio.Path.relative_to()</code> and <code>anyio.Path.is_relative_to()</code> to only accept one argument, as passing multiple arguments is deprecated as of Python 3.12</li>\n<li><strong>BACKWARDS INCOMPATIBLE</strong> Dropped support for spawning tasks from old-style coroutine functions (<code>@asyncio.coroutine</code>)</li>\n<li><strong>BACKWARDS INCOMPATIBLE</strong> The <code>policy</code> option on the <code>asyncio</code> backend was changed to <code>loop_factory</code> to accommodate <code>asyncio.Runner</code></li>\n<li>Changed <code>anyio.run()</code> to use <code>asyncio.Runner</code> (or a back-ported version of it on Pythons older than 3.11) on the <code>asyncio</code> backend</li>\n<li>Dropped support for Python 3.7</li>\n<li>Added support for Python 3.12</li>\n<li>Bumped minimum version of trio to v0.22</li>\n<li>Added the <code>anyio.Path.is_junction()</code> and <code>anyio.Path.walk()</code> methods</li>\n<li>Added <code>create_unix_datagram_socket</code> and <code>create_connected_unix_datagram_socket</code> to create UNIX datagram sockets (PR by Jean Hominal)</li>\n<li>Fixed <code>from_thread.run</code> and <code>from_thread.run_sync</code> not setting sniffio on asyncio. As a result:\n<ul>\n<li>Fixed <code>from_thread.run_sync</code> failing when used to call sniffio-dependent functions on asyncio</li>\n<li>Fixed <code>from_thread.run</code> failing when used to call sniffio-dependent functions on asyncio from a thread running trio or curio</li>\n<li>Fixed deadlock when using <code>from_thread.start_blocking_portal(backend=&quot;asyncio&quot;)</code> in a thread running trio or curio (PR by Ganden Schaffner)</li>\n</ul>\n</li>\n<li>Improved type annotations:\n<ul>\n<li>The <code>item_type</code> argument of <code>create_memory_object_stream</code> was deprecated. To indicate the item type handled by the stream, use <code>create_memory_object_stream[T_Item]()</code> instead. Type checking should no longer fail when annotating memory object streams with uninstantiable item types (PR by Ganden Schaffner)</li>\n</ul>\n</li>\n<li>Added the <code>CancelScope.cancelled_caught</code> property which tells users if the cancel scope suppressed a cancellation exception</li>\n<li>Fixed <code>fail_after()</code> raising an unwarranted <code>TimeoutError</code> when the cancel scope was cancelled before reaching its deadline</li>\n<li>Fixed <code>MemoryObjectReceiveStream.receive()</code> causing the receiving task on asyncio to remain in a cancelled state if the operation was cancelled after an item was queued to be received by the task (but before the task could actually receive the item)</li>\n<li>Fixed <code>TaskGroup.start()</code> on asyncio not responding to cancellation from the outside</li>\n<li>Fixed tasks started from <code>BlockingPortal</code> not notifying synchronous listeners (<code>concurrent.futures.wait()</code>) when they're cancelled</li>\n<li>Removed unnecessary extra waiting cycle in <code>Event.wait()</code> on asyncio in the case where the event was not yet set</li>\n<li>Fixed processes spawned by <code>anyio.to_process()</code> being &quot;lost&quot; as unusable to the process pool when processes that have idled over 5 minutes are pruned at part of the <code>to_process.run_sync()</code> call, leading to increased memory consumption (PR by Anael Gorfinkel)</li>\n</ul>\n<p>Changes since 4.0.0rc1:</p>\n<ul>\n<li>Fixed the type annotation of <code>TaskGroup.start_soon()</code> to accept any awaitables (already in v3.7.0 but was missing from 4.0.0rc1)</li>\n<li>Changed <code>CancelScope</code> to also consider the cancellation count (in addition to the cancel message) on asyncio to determine if a cancellation exception should be swallowed on scope exit, to combat issues where third party libraries catch the <code>CancelledError</code> and raise another, thus erasing the original cancel message</li>\n<li>Worked around a <a href=\"https://redirect.github.com/python/cpython/issues/108668\">CPython bug</a> that caused <code>TLSListener.handle_handshake_error()</code> on asyncio to log <code>&quot;NoneType: None&quot;</code> instead of the error (PR by Ganden Schaffner)</li>\n<li>Re-added the <code>item_type</code> argument to <code>create_memory_object_stream()</code> (but using it raises a deprecation warning and does nothing with regards to the static types of the returned streams)</li>\n<li>Fixed processes spawned by <code>anyio.to_process()</code> being &quot;lost&quot; as unusable to the process pool when processes that have idled over 5 minutes are pruned at part of the <code>to_process.run_sync()</code> call, leading to increased memory consumption (PR by Anael Gorfinkel)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/agronholm/anyio/blob/master/docs/versionhistory.rst\">anyio[curio,trio]'s changelog</a>.</em></p>\n<blockquote>\n<h1>Version history</h1>\n<p>This library adheres to <code>Semantic Versioning 2.0 &lt;http://semver.org/&gt;</code>_.</p>\n<p><strong>4.0.0</strong></p>\n<ul>\n<li>\n<p><strong>BACKWARDS INCOMPATIBLE</strong> Replaced AnyIO's own <code>ExceptionGroup</code> class with the PEP\n654 <code>BaseExceptionGroup</code> and <code>ExceptionGroup</code></p>\n</li>\n<li>\n<p><strong>BACKWARDS INCOMPATIBLE</strong> Changes to cancellation semantics:</p>\n<ul>\n<li>Any exceptions raising out of a task groups are now nested inside an\n<code>ExceptionGroup</code> (or <code>BaseExceptionGroup</code> if one or more <code>BaseException</code> were\nincluded)</li>\n<li>Fixed task group not raising a cancellation exception on asyncio at exit if no child\ntasks were spawned and an outer cancellation scope had been cancelled before</li>\n<li>Ensured that exiting a <code>TaskGroup</code> always hits a yield point, regardless of\nwhether there are running child tasks to be waited on</li>\n<li>On asyncio, cancel scopes will defer cancelling tasks that are scheduled to resume\nwith a finished future</li>\n<li>On asyncio and Python 3.9/3.10, cancel scopes now only suppress cancellation\nexceptions if the cancel message matches the scope</li>\n<li>Task groups on all backends now raise a single cancellation exception when an outer\ncancel scope is cancelled, and no exceptions other than cancellation exceptions are\nraised in the group</li>\n</ul>\n</li>\n<li>\n<p><strong>BACKWARDS INCOMPATIBLE</strong> Changes the pytest plugin to run all tests and fixtures in\nthe same task, allowing fixtures to set context variables for tests and other fixtures</p>\n</li>\n<li>\n<p><strong>BACKWARDS INCOMPATIBLE</strong> Changed <code>anyio.Path.relative_to()</code> and\n<code>anyio.Path.is_relative_to()</code> to only accept one argument, as passing multiple\narguments is deprecated as of Python 3.12</p>\n</li>\n<li>\n<p><strong>BACKWARDS INCOMPATIBLE</strong> Dropped support for spawning tasks from old-style coroutine\nfunctions (<code>@asyncio.coroutine</code>)</p>\n</li>\n<li>\n<p><strong>BACKWARDS INCOMPATIBLE</strong> The <code>policy</code> option on the <code>asyncio</code> backend was\nchanged to <code>loop_factory</code> to accommodate <code>asyncio.Runner</code></p>\n</li>\n<li>\n<p>Changed <code>anyio.run()</code> to use <code>asyncio.Runner</code> (or a back-ported version of it on\nPythons older than 3.11) on the <code>asyncio</code> backend</p>\n</li>\n<li>\n<p>Dropped support for Python 3.7</p>\n</li>\n<li>\n<p>Added support for Python 3.12</p>\n</li>\n<li>\n<p>Bumped minimum version of trio to v0.22</p>\n</li>\n<li>\n<p>Added the <code>anyio.Path.is_junction()</code> and <code>anyio.Path.walk()</code> methods</p>\n</li>\n<li>\n<p>Added <code>create_unix_datagram_socket</code> and <code>create_connected_unix_datagram_socket</code> to\ncreate UNIX datagram sockets (PR by Jean Hominal)</p>\n</li>\n<li>\n<p>Fixed <code>from_thread.run</code> and <code>from_thread.run_sync</code> not setting sniffio on asyncio.\nAs a result:</p>\n<ul>\n<li>Fixed <code>from_thread.run_sync</code> failing when used to call sniffio-dependent functions\non asyncio</li>\n<li>Fixed <code>from_thread.run</code> failing when used to call sniffio-dependent functions on\nasyncio from a thread running trio or curio</li>\n<li>Fixed deadlock when using <code>from_thread.start_blocking_portal(backend=&quot;asyncio&quot;)</code></li>\n</ul>\n</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/agronholm/anyio/commit/3f1eca1addcd782e2347350a6ddb2ad2b80c6354\"><code>3f1eca1</code></a> Rearranged the changelog for v4.0.0</li>\n<li><a href=\"https://github.com/agronholm/anyio/commit/f17ffdc3862230d18e37903d2a145e87a4213c50\"><code>f17ffdc</code></a> Added a GitHub release job to the publishing workflow</li>\n<li><a href=\"https://github.com/agronholm/anyio/commit/dea192103946f1175176e3278f9cc08496849334\"><code>dea1921</code></a> Fixed worker processes getting lost when pruning idle workers (<a href=\"https://redirect.github.com/agronholm/anyio/issues/604\">#604</a>)</li>\n<li><a href=\"https://github.com/agronholm/anyio/commit/969f1884a335057c83ac2d5b59e4fa853f1f2491\"><code>969f188</code></a> Re-added item_type as a deprecated argument to create_memory_object_stream()</li>\n<li><a href=\"https://github.com/agronholm/anyio/commit/51d57d38dbb91171ca2a7e4da9a3e542c6fa8575\"><code>51d57d3</code></a> Reformatted documentation to 88 columns where possible</li>\n<li><a href=\"https://github.com/agronholm/anyio/commit/a8b12fb7c895ab8b86373b91b452b50bc8f276e9\"><code>a8b12fb</code></a> Fixed one bad link and some factual errors in the docs</li>\n<li><a href=\"https://github.com/agronholm/anyio/commit/54a76c1333fbe8704f9077cbd51ca29419e43390\"><code>54a76c1</code></a> Reformatted the migration docs to fit to 88 columns</li>\n<li><a href=\"https://github.com/agronholm/anyio/commit/c4f7afe43aa97709aa2dd8e30f2af802d5ca0a92\"><code>c4f7afe</code></a> [pre-commit.ci] pre-commit autoupdate (<a href=\"https://redirect.github.com/agronholm/anyio/issues/607\">#607</a>)</li>\n<li><a href=\"https://github.com/agronholm/anyio/commit/e380c26e97f37c96e17b787393565484a532d092\"><code>e380c26</code></a> Fix <code>TLSListener.handle_handshake_error</code> on asyncio failing to log the error ...</li>\n<li><a href=\"https://github.com/agronholm/anyio/commit/5f208ee84b2321e773ccc4e8ed2fbb7ca921c5a9\"><code>5f208ee</code></a> Install the correct version of trio along with anyio itself</li>\n<li>Additional commits viewable in <a href=\"https://github.com/agronholm/anyio/compare/3.7.1...4.0.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=anyio[curio,trio]&package-manager=pip&previous-version=3.7.1&new-version=4.0.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2023-09-04T03:25:32Z",
      "updatedAt": "2023-09-04T11:08:03Z",
      "closedAt": "2023-09-04T11:08:02Z",
      "mergedAt": "2023-09-04T11:08:02Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/pip/testing/plugins_integration/anyio-curiotrio--4.0.0",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "python"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump anyio[curio,trio] in /testing/plugins_integration\n\nBumps [anyio[curio,trio]](https://github.com/agronholm/anyio) from 3.7.1 to 4.0.0.\n- [Release notes](https://github.com/agronholm/anyio/releases)\n- [Changelog](https://github.com/agronholm/anyio/blob/master/docs/versionhistory.rst)\n- [Commits](https://github.com/agronholm/anyio/compare/3.7.1...4.0.0)\n\n---\nupdated-dependencies:\n- dependency-name: anyio[curio,trio]\n  dependency-type: direct:production\n  update-type: version-update:semver-major\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2023-09-04T03:25:31Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-09-04T11:07:41Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11382,
      "title": "[7.4.x] Fix user_properties not saved to XML if fixture errors during teardown",
      "body": "Move handling of user_properties to `finalize()`.\r\n\r\nPreviously if a fixture failed during teardown, `pytest_runtest_logreport` would not be called with \"teardown\", resulting in the user properties not being saved on the JUnit XML file.\r\n\r\nFixes: #11367\r\n(cherry picked from commit 917ce9aa0102c7f0ec8fdac118058c41ffb603e6)\r\n",
      "state": "MERGED",
      "createdAt": "2023-09-03T17:39:04Z",
      "updatedAt": "2023-09-03T18:02:00Z",
      "closedAt": "2023-09-03T18:01:57Z",
      "mergedAt": "2023-09-03T18:01:57Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "7.4.x",
      "headRefName": "backport-11369",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Fix user_properties not saved to XML if fixture errors during teardown\n\nMove handling of user_properties to `finalize()`.\n\nPreviously if a fixture failed during teardown, `pytest_runtest_logreport` would not be called with \"teardown\", resulting in the user properties not being saved on the JUnit XML file.\n\nFixes: #11367\n(cherry picked from commit 917ce9aa0102c7f0ec8fdac118058c41ffb603e6)",
              "committedDate": "2023-09-03T17:38:28Z",
              "author": {
                "name": "Israel Fruchter",
                "email": "israel.fruchter@gmail.com",
                "user": {
                  "login": "fruch"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11380,
      "title": "[automated] Update plugin list",
      "body": "[automated] Update plugin list",
      "state": "MERGED",
      "createdAt": "2023-09-03T00:18:30Z",
      "updatedAt": "2023-09-03T01:13:18Z",
      "closedAt": "2023-09-03T01:13:17Z",
      "mergedAt": "2023-09-03T01:13:17Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "update-plugin-list/patch-ba0da81f8",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[automated] Update plugin list",
              "committedDate": "2023-09-03T00:18:27Z",
              "author": {
                "name": "pytest bot",
                "email": "pytestbot@users.noreply.github.com",
                "user": {
                  "login": "pytestbot"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11379,
      "title": "Merge pull request #11377 from pytest-dev/release-7.4.1",
      "body": "Prepare release 7.4.1\r\n\r\n(cherry picked from commit 82eb86f707cac79f33d0ff69723ccf1cea7e75f7)\r\n\r\n",
      "state": "MERGED",
      "createdAt": "2023-09-02T15:46:15Z",
      "updatedAt": "2023-09-02T16:21:10Z",
      "closedAt": "2023-09-02T16:21:07Z",
      "mergedAt": "2023-09-02T16:21:07Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "cherry-pick-release",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Merge pull request #11377 from pytest-dev/release-7.4.1\n\nPrepare release 7.4.1\n\n(cherry picked from commit 82eb86f707cac79f33d0ff69723ccf1cea7e75f7)",
              "committedDate": "2023-09-02T15:45:58Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "nicoddemus@gmail.com",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11378,
      "title": "Improve CI workflow",
      "body": "* Build the package only once, and test on all platforms.\r\n* Deploy is now triggered manually via an Action, which is then responsible for tagging the repository after the package has been uploaded successfully.\r\n* Drop 'docs': we nowadays rely on readthedocs preview PR builds.\r\n\r\n---\r\n\r\nThis is cherry-picked from #11377: realized that we need to have `deploy` in `main` in order to be able to trigger `workflow_dispatch`.",
      "state": "MERGED",
      "createdAt": "2023-09-02T13:30:08Z",
      "updatedAt": "2023-09-02T14:59:26Z",
      "closedAt": "2023-09-02T14:59:25Z",
      "mergedAt": "2023-09-02T14:59:25Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "improve-ci-workflow",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Improve CI workflow\n\n* Build the package only once, and test on all platforms.\n* Deploy is now triggered manually via an Action, which is then responsible for tagging the repository after the package has been uploaded successfully.\n* Drop 'docs': we nowadays rely on readthedocs preview PR builds.",
              "committedDate": "2023-09-02T13:29:02Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-09-02T14:56:59Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11377,
      "title": "Prepare release 7.4.1",
      "body": "Created automatically from manual trigger.\n\nOnce all builds pass and it has been **approved** by one or more maintainers, the build\ncan be released by pushing a tag `7.4.1` to this repository.\n",
      "state": "MERGED",
      "createdAt": "2023-09-02T11:03:07Z",
      "updatedAt": "2023-09-02T15:41:33Z",
      "closedAt": "2023-09-02T15:41:32Z",
      "mergedAt": "2023-09-02T15:41:32Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "7.4.x",
      "headRefName": "release-7.4.1",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 5
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Checkout source code during deploy\n\nWe need the checked out repository in order to push the tag.",
              "committedDate": "2023-09-02T15:38:39Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-09-02T12:09:53Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11371,
      "title": "[7.4.x] Update CONTRIBUTING.rst",
      "body": "Backport of PR #11368 to 7.4.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2023-08-30T11:53:51Z",
      "updatedAt": "2023-08-30T11:57:51Z",
      "closedAt": "2023-08-30T11:57:50Z",
      "mergedAt": "2023-08-30T11:57:50Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "7.4.x",
      "headRefName": "backport-11368-to-7.4.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[7.4.x] Update CONTRIBUTING.rst",
              "committedDate": "2023-08-30T11:53:50Z",
              "author": {
                "name": "Sourabh Beniwal",
                "email": "sourabhbeniwal@outlook.com",
                "user": {
                  "login": "bsour"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-08-30T11:55:02Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11369,
      "title": "[junit] move properties handling to `finalize()`",
      "body": "seem like not all the cases of calling `finalize` were adding the properties into the test case element, which leads to some test cases missing the expected properties.\r\n\r\nFixes: #11367\r\n\r\n<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "MERGED",
      "createdAt": "2023-08-30T10:40:07Z",
      "updatedAt": "2023-09-03T21:36:29Z",
      "closedAt": "2023-09-03T17:33:54Z",
      "mergedAt": "2023-09-03T17:33:54Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "fix_11367",
      "author": {
        "login": "fruch"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Update changelog/11367.bugfix.rst",
              "committedDate": "2023-09-03T17:07:05Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-09-03T17:06:31Z",
            "body": "Thanks @fruch, appreciate the contribution! "
          },
          {
            "author": {
              "login": "fruch"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-09-03T18:21:14Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-09-03T21:36:29Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11368,
      "title": "Update CONTRIBUTING.rst",
      "body": "Chnaged Status: easy to good first issue, and updated the URL\r\n\r\n<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "MERGED",
      "createdAt": "2023-08-29T23:42:35Z",
      "updatedAt": "2023-08-30T11:53:34Z",
      "closedAt": "2023-08-30T11:52:14Z",
      "mergedAt": "2023-08-30T11:52:14Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "patch-1",
      "author": {
        "login": "bsour"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Update CONTRIBUTING.rst",
              "committedDate": "2023-08-30T11:31:45Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-08-30T00:59:43Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-08-30T11:32:00Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11364,
      "title": "[7.4.x] Issue 11354 fixing docs for lfnf",
      "body": "Backport of PR #11361 to 7.4.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2023-08-29T00:18:27Z",
      "updatedAt": "2023-08-29T00:40:50Z",
      "closedAt": "2023-08-29T00:40:49Z",
      "mergedAt": "2023-08-29T00:40:49Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "7.4.x",
      "headRefName": "backport-11361-to-7.4.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[7.4.x] Issue 11354 fixing docs for lfnf",
              "committedDate": "2023-08-29T00:18:25Z",
              "author": {
                "name": "Sean Patrick Malloy",
                "email": "spmalloy@ucdavis.edu",
                "user": {
                  "login": "seanjedi"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-08-29T00:18:56Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11362,
      "title": "Add Python 3.11 compatibility to 4.6.x",
      "body": "<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n\r\nThis adds Python 3.11 compatibility to 2.7-compatible version.",
      "state": "CLOSED",
      "createdAt": "2023-08-28T02:46:11Z",
      "updatedAt": "2023-08-28T16:22:28Z",
      "closedAt": "2023-08-28T15:38:58Z",
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "4.6.x",
      "headRefName": "4.6.11.1",
      "author": {
        "login": "cielavenir"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 4
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "rewrite: fixup end_lineno, end_col_offset of rewritten asserts\n\nThese are new additions in Python 3.8:\nhttps://docs.python.org/3/whatsnew/3.8.html#ast\nI'm not sure what's using them but we should set them anyway.",
              "committedDate": "2023-08-26T14:52:08Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11361,
      "title": "Issue 11354 fixing docs for lfnf",
      "body": "closes #11354 \r\n  * *Improved documentation for last-failed-no-failures to make functionality more clear.*",
      "state": "MERGED",
      "createdAt": "2023-08-27T22:36:54Z",
      "updatedAt": "2023-08-29T00:18:08Z",
      "closedAt": "2023-08-29T00:14:45Z",
      "mergedAt": "2023-08-29T00:14:45Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "issue_11354-Fixing-docs-for-lfnf",
      "author": {
        "login": "seanjedi"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "docs: Added the name of the option we are changing the docs for\n\nCo-authored-by: Bruno Oliveira <bruno@soliv.dev>",
              "committedDate": "2023-08-28T23:41:09Z",
              "author": {
                "name": "Sean Patrick Malloy",
                "email": "spmalloy@ucdavis.edu",
                "user": {
                  "login": "seanjedi"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "CHANGES_REQUESTED",
            "submittedAt": "2023-08-28T20:56:16Z",
            "body": "Hi @seanjedi, \r\n\r\nThanks a lot for the contribution!\r\n\r\nI left a few comments, please take a look."
          },
          {
            "author": {
              "login": "seanjedi"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-08-28T21:52:15Z",
            "body": ""
          },
          {
            "author": {
              "login": "seanjedi"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-08-28T21:52:27Z",
            "body": ""
          },
          {
            "author": {
              "login": "seanjedi"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-08-28T21:52:31Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-08-28T21:58:27Z",
            "body": ""
          },
          {
            "author": {
              "login": "seanjedi"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-08-28T22:15:00Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-08-28T22:21:51Z",
            "body": ""
          },
          {
            "author": {
              "login": "seanjedi"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-08-28T23:10:56Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-08-28T23:22:30Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-08-28T23:25:45Z",
            "body": "Thanks @seanjedi for the patience to getting this ready for merging!"
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-08-28T23:36:21Z",
            "body": ""
          },
          {
            "author": {
              "login": "seanjedi"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-08-28T23:42:10Z",
            "body": ""
          },
          {
            "author": {
              "login": "seanjedi"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-08-28T23:43:47Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-08-28T23:52:22Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11360,
      "title": "fix: fixing an issue with pre-commit with mypy and flake8",
      "body": "  * *removed issue with pre-commit errors with mypy and flake8.*\r\n\r\ncloses #11356 \r\n",
      "state": "MERGED",
      "createdAt": "2023-08-27T22:05:41Z",
      "updatedAt": "2023-08-28T08:26:38Z",
      "closedAt": "2023-08-28T08:26:38Z",
      "mergedAt": "2023-08-28T08:26:38Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "issue_11356-fixing-precommit-issue-with-flake8",
      "author": {
        "login": "seanjedi"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "fix: fixing an issue with pre-commit with mypy and flake8",
              "committedDate": "2023-08-27T22:03:42Z",
              "author": {
                "name": "Sean Malloy",
                "email": "spmalloy@ucdavis.edu",
                "user": {
                  "login": "seanjedi"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-08-28T08:26:22Z",
            "body": "Thanks!"
          }
        ]
      }
    },
    {
      "number": 11358,
      "title": "[automated] Update plugin list",
      "body": "[automated] Update plugin list",
      "state": "MERGED",
      "createdAt": "2023-08-27T00:17:46Z",
      "updatedAt": "2023-08-27T14:29:18Z",
      "closedAt": "2023-08-27T14:29:17Z",
      "mergedAt": "2023-08-27T14:29:17Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "update-plugin-list/patch-00fedcc43",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[automated] Update plugin list",
              "committedDate": "2023-08-27T00:17:45Z",
              "author": {
                "name": "pytest bot",
                "email": "pytestbot@users.noreply.github.com",
                "user": {
                  "login": "pytestbot"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11357,
      "title": "docs: changing some docs for last-failed-no-failures",
      "body": "* Made the functionality of last-failed-no-failures more clear within the docs\r\n\r\ncloses #11354 \r\nChange is trivial/a small documentation fix, so no changes to changelog.",
      "state": "CLOSED",
      "createdAt": "2023-08-26T20:59:49Z",
      "updatedAt": "2023-08-26T21:53:50Z",
      "closedAt": "2023-08-26T21:53:49Z",
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "issue_11354-Fixing-docs-for-lfnf",
      "author": {
        "login": "seanjedi"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "docs: changing some docs for last-failed-no-failures\nto better explain functionality",
              "committedDate": "2023-08-26T20:56:29Z",
              "author": {
                "name": "Sean Malloy",
                "email": "spmalloy@ucdavis.edu",
                "user": {
                  "login": "seanjedi"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11355,
      "title": "[7.4.x] Fixes for typed pluggy",
      "body": "Since version 1.3 pluggy added typing, which requires some fixes to please mypy.\r\n\r\nCherry pick of #11353 but not bumping the pluggy requirement.",
      "state": "MERGED",
      "createdAt": "2023-08-26T20:13:35Z",
      "updatedAt": "2024-01-27T22:00:07Z",
      "closedAt": "2023-08-26T22:15:32Z",
      "mergedAt": "2023-08-26T22:15:32Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "7.4.x",
      "headRefName": "cherry-pick-11353",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[7.4.x] Fixes for typed pluggy\n\nSince version 1.3 pluggy added typing, which requires some fixes to\nplease mypy.",
              "committedDate": "2023-08-26T20:09:46Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-08-26T21:57:52Z",
            "body": "LGTM, thanks!"
          }
        ]
      }
    },
    {
      "number": 11353,
      "title": "Fixes for typed pluggy",
      "body": "Since version 1.3 pluggy added typing, which requires some fixes to please mypy.\r\n\r\n*Pending release of pluggy 1.3*\r\n\r\nI intend to backport this to 7.4.x but without bumping the pluggy requirement so will be a little different.",
      "state": "MERGED",
      "createdAt": "2023-08-26T07:13:55Z",
      "updatedAt": "2023-08-26T19:59:38Z",
      "closedAt": "2023-08-26T19:59:35Z",
      "mergedAt": "2023-08-26T19:59:35Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "pluggy-typing",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Fixes for typed pluggy\n\nSince version 1.3 pluggy added typing, which requires some fixes to\nplease mypy.",
              "committedDate": "2023-08-26T19:13:24Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-08-26T07:18:09Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11345,
      "title": "fix: closes #11343's [attr-defined] type errors",
      "body": "On Windows 10.0.19045, the mypy hook is failing on pre-commit because of two `[attr-defined]` errors, which prevents me from staging changes. The problem was first reported in #11343. This PR applies a fix by adding `type: ignore` comments to the erroring lines:\r\n\r\n```\r\nsrc\\_pytest\\compat.py:324: error: Module has no attribute \"getuid\"; maybe \"getpid\" or \"getppid\"?  [attr-defined]\r\ntesting\\test_parseopt.py:294: error: Module has no attribute \"getencoding\"  [attr-defined]\r\n```",
      "state": "MERGED",
      "createdAt": "2023-08-24T00:23:19Z",
      "updatedAt": "2023-09-09T12:32:30Z",
      "closedAt": "2023-08-27T12:40:24Z",
      "mergedAt": "2023-08-27T12:40:24Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "add-type-ignore-for-attr-defined-errors",
      "author": {
        "login": "WarrenTheRabbit"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "doc: remove unwanted implication\n\nReturning None does not mean that all future calls to the underlying\nplatform will result in a return value of None. It is a certainty for win32\nand Emscripten platforms but only a possibility for other platforms.\nThe documentation should only state that the *current* call to the\nunderlying platform was unsuccessful.",
              "committedDate": "2023-08-27T00:41:24Z",
              "author": {
                "name": "Warren",
                "email": "rabbitsinwarrens@gmail.com",
                "user": {
                  "login": "WarrenTheRabbit"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-08-24T06:03:42Z",
            "body": ""
          },
          {
            "author": {
              "login": "WarrenTheRabbit"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-08-24T12:19:55Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-08-24T12:34:03Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2023-08-24T12:34:24Z",
            "body": ""
          },
          {
            "author": {
              "login": "WarrenTheRabbit"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-08-24T13:01:32Z",
            "body": ""
          },
          {
            "author": {
              "login": "The-Compiler"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-08-24T13:25:32Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-08-24T17:21:57Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-08-24T17:26:10Z",
            "body": ""
          },
          {
            "author": {
              "login": "WarrenTheRabbit"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-08-24T23:55:21Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-08-25T11:57:01Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-08-25T17:19:43Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-08-26T12:27:24Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-08-26T12:28:52Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-08-27T12:37:26Z",
            "body": "Great work @WarrenTheRabbit! "
          }
        ]
      }
    },
    {
      "number": 11341,
      "title": "Update typo anatomy.rst",
      "body": "<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "MERGED",
      "createdAt": "2023-08-23T06:49:32Z",
      "updatedAt": "2023-08-23T08:17:10Z",
      "closedAt": "2023-08-23T08:17:10Z",
      "mergedAt": "2023-08-23T08:17:10Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "main",
      "headRefName": "main",
      "author": {
        "login": "phamvanhan68"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Update typo anatomy.rst",
              "committedDate": "2023-08-23T06:48:55Z",
              "author": {
                "name": "Ha Pam",
                "email": "phamvanhan68@gmail.com",
                "user": {
                  "login": "phamvanhan68"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2023-08-23T08:16:56Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11335,
      "title": "[pre-commit.ci] pre-commit autoupdate",
      "body": "<!--pre-commit.ci start-->\nupdates:\n- [github.com/asottile/blacken-docs: 1.15.0 \u2192 1.16.0](https://github.com/asottile/blacken-docs/compare/1.15.0...1.16.0)\n- [github.com/pre-commit/mirrors-mypy: v1.5.0 \u2192 v1.5.1](https://github.com/pre-commit/mirrors-mypy/compare/v1.5.0...v1.5.1)\n<!--pre-commit.ci end-->",
      "state": "MERGED",
      "createdAt": "2023-08-22T07:44:39Z",
      "updatedAt": "2023-08-22T08:10:49Z",
      "closedAt": "2023-08-22T08:10:48Z",
      "mergedAt": "2023-08-22T08:10:48Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "main",
      "headRefName": "pre-commit-ci-update-config",
      "author": {
        "login": "pre-commit-ci"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[pre-commit.ci] pre-commit autoupdate\n\nupdates:\n- [github.com/asottile/blacken-docs: 1.15.0 \u2192 1.16.0](https://github.com/asottile/blacken-docs/compare/1.15.0...1.16.0)\n- [github.com/pre-commit/mirrors-mypy: v1.5.0 \u2192 v1.5.1](https://github.com/pre-commit/mirrors-mypy/compare/v1.5.0...v1.5.1)",
              "committedDate": "2023-08-22T07:44:37Z",
              "author": {
                "name": "pre-commit-ci[bot]",
                "email": "66853113+pre-commit-ci[bot]@users.noreply.github.com",
                "user": {
                  "login": "pre-commit-ci[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2023-08-22T07:45:11Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11334,
      "title": "doc: fix docstring spelling in pytester",
      "body": "<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "MERGED",
      "createdAt": "2023-08-22T04:38:45Z",
      "updatedAt": "2023-08-23T23:46:48Z",
      "closedAt": "2023-08-22T11:44:06Z",
      "mergedAt": "2023-08-22T11:44:06Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "fix-docstring-spelling-in-pytester-1",
      "author": {
        "login": "WarrenTheRabbit"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "doc: fix docstring spelling in pytester",
              "committedDate": "2023-08-22T04:36:39Z",
              "author": {
                "name": "WarrenTheRabbit",
                "email": "37808734+WarrenTheRabbit@users.noreply.github.com",
                "user": {
                  "login": "WarrenTheRabbit"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-08-22T11:44:00Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11333,
      "title": "Correct the spelling of ArgSource.INVOCATION_DIR",
      "body": "This was spelled incorrectly when introduced in #9897.",
      "state": "MERGED",
      "createdAt": "2023-08-22T03:17:14Z",
      "updatedAt": "2023-09-04T17:39:01Z",
      "closedAt": "2023-08-23T09:21:17Z",
      "mergedAt": "2023-08-23T09:21:17Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "invocation",
      "author": {
        "login": "jparise"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Update changelog/11333.trivial.rst",
              "committedDate": "2023-08-23T08:58:08Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "jparise"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-08-22T03:19:48Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-08-22T11:46:33Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-08-23T08:57:53Z",
            "body": "Thanks (also for adding the tests)!\r\n\r\nI'll add a note to the changelog that an alias remains."
          }
        ]
      }
    },
    {
      "number": 11329,
      "title": "[automated] Update plugin list",
      "body": "[automated] Update plugin list",
      "state": "MERGED",
      "createdAt": "2023-08-21T12:49:15Z",
      "updatedAt": "2023-08-21T13:19:59Z",
      "closedAt": "2023-08-21T13:19:58Z",
      "mergedAt": "2023-08-21T13:19:58Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "The-Compiler"
      },
      "baseRefName": "main",
      "headRefName": "update-plugin-list/patch-370eacd3c",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[automated] Update plugin list",
              "committedDate": "2023-08-21T12:49:13Z",
              "author": {
                "name": "pytest bot",
                "email": "pytestbot@users.noreply.github.com",
                "user": {
                  "login": "pytestbot"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "The-Compiler"
            },
            "state": "APPROVED",
            "submittedAt": "2023-08-21T12:58:42Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11328,
      "title": "use python 3.11 for update-plugin-list",
      "body": "fixes #11327 ",
      "state": "MERGED",
      "createdAt": "2023-08-21T12:05:56Z",
      "updatedAt": "2023-08-22T08:07:27Z",
      "closedAt": "2023-08-21T12:29:42Z",
      "mergedAt": "2023-08-21T12:29:41Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "The-Compiler"
      },
      "baseRefName": "main",
      "headRefName": "fix-update-plugin-list",
      "author": {
        "login": "DetachHead"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "use python 3.11 for update-plugin-list",
              "committedDate": "2023-08-21T12:05:12Z",
              "author": {
                "name": "DetachHead",
                "email": "57028336+DetachHead@users.noreply.github.com",
                "user": {
                  "login": "DetachHead"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "The-Compiler"
            },
            "state": "APPROVED",
            "submittedAt": "2023-08-21T12:11:31Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11326,
      "title": "use `if not TYPE_CHECKING` on `pytest.__getattr__` to prevent type checkers from using it",
      "body": "fixes #11325",
      "state": "MERGED",
      "createdAt": "2023-08-21T08:02:27Z",
      "updatedAt": "2023-08-22T10:53:46Z",
      "closedAt": "2023-08-22T10:53:46Z",
      "mergedAt": "2023-08-22T10:53:46Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Zac-HD"
      },
      "baseRefName": "main",
      "headRefName": "DetachHead-patch-1",
      "author": {
        "login": "DetachHead"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "ignore mypy error on deprecated `Instance` usage",
              "committedDate": "2023-08-22T07:57:59Z",
              "author": {
                "name": "DetachHead",
                "email": "57028336+DetachHead@users.noreply.github.com",
                "user": {
                  "login": "DetachHead"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-08-21T11:43:44Z",
            "body": "LGTM, thanks. Just needs a fix to the mypy error in `testing/deprecated_test.py`."
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-08-21T12:37:54Z",
            "body": "I believe a else clause with the import is needed\n\nI wonder if literal can be used to narrow the input for the type checking "
          },
          {
            "author": {
              "login": "Zac-HD"
            },
            "state": "APPROVED",
            "submittedAt": "2023-08-22T10:53:40Z",
            "body": "Thanks again @DetachHead!"
          }
        ]
      }
    },
    {
      "number": 11323,
      "title": "doc/reference: replace Unicode dashes with ascii `-` in cli flags",
      "body": "",
      "state": "MERGED",
      "createdAt": "2023-08-19T21:24:15Z",
      "updatedAt": "2023-08-21T12:40:04Z",
      "closedAt": "2023-08-21T12:40:04Z",
      "mergedAt": "2023-08-21T12:40:04Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "The-Compiler"
      },
      "baseRefName": "main",
      "headRefName": "docs-dash",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "doc/reference: replace Unicode dashes with ascii `-` in cli flags",
              "committedDate": "2023-08-20T09:16:52Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "The-Compiler"
            },
            "state": "APPROVED",
            "submittedAt": "2023-08-21T12:39:52Z",
            "body": "Huh, good catch! Looks like someone's editor was being a little too smart there..."
          }
        ]
      }
    },
    {
      "number": 11322,
      "title": "testing: add `.*` to `norecursedirs`",
      "body": "Setting `norecursedirs` overrides the default, so we end up scanning dot-directories and such which slows down collection unnecessarily (by 150ms on my working directory for a noop).",
      "state": "MERGED",
      "createdAt": "2023-08-19T21:22:52Z",
      "updatedAt": "2023-08-20T16:30:33Z",
      "closedAt": "2023-08-20T13:37:16Z",
      "mergedAt": "2023-08-20T13:37:16Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "testing-norecursedirs",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "testing: add `.*` to `norecursedirs`\n\nSetting `norecursedirs` overrides the default, so we end up scanning\ndot-directories and such which slows down collection unnecessarily\n(150ms on my working directory).",
              "committedDate": "2023-08-20T09:16:38Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2023-08-20T06:55:02Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11321,
      "title": "Add doctesting-coverage to envlist",
      "body": "Explicitly add `doctest-coverage` to the `envlist` in `tox.ini` to fix failing CI, for example here: https://github.com/pytest-dev/pytest/actions/runs/5912812576/job/16036585548?pr=11317\r\n\r\n_More details:_\r\n\r\nLatest tox version enforces allowed tox environments to be explicitly in the tox `envlist` (https://github.com/tox-dev/tox/pull/3089).\r\n\r\nNote there is some follow up work to relax these rules: https://github.com/tox-dev/tox/pull/3099",
      "state": "MERGED",
      "createdAt": "2023-08-19T18:32:23Z",
      "updatedAt": "2023-08-20T04:16:39Z",
      "closedAt": "2023-08-19T21:26:42Z",
      "mergedAt": "2023-08-19T21:26:42Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "fix-doctesting",
      "author": {
        "login": "tjsmart"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Add doctesting-coverage to envlist",
              "committedDate": "2023-08-19T18:18:17Z",
              "author": {
                "name": "Tyler Smart",
                "email": "tjsmart@ucsc.edu",
                "user": {
                  "login": "tjsmart"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-08-19T21:26:28Z",
            "body": "Thanks! Maybe we can undo this if tox is fixed but for now it's good to fix the CI."
          }
        ]
      }
    },
    {
      "number": 11320,
      "title": "add nuts to plugin list",
      "body": "Adding https://github.com/network-unit-testing-system/nuts to the plugin list.\r\n\r\n- [X] Include documentation when adding new features.\r\n- [X] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n",
      "state": "MERGED",
      "createdAt": "2023-08-18T21:40:38Z",
      "updatedAt": "2023-08-21T11:50:32Z",
      "closedAt": "2023-08-21T11:50:32Z",
      "mergedAt": "2023-08-21T11:50:32Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "add_nuts",
      "author": {
        "login": "ubaumann"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "add nuts to plugin list\n\nAdding https://github.com/network-unit-testing-system/nuts to the plugin list.",
              "committedDate": "2023-08-18T21:34:40Z",
              "author": {
                "name": "ubaumann",
                "email": "github@m.ubaumann.ch",
                "user": {
                  "login": "ubaumann"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-08-21T11:50:18Z",
            "body": "Oops, obviously you already did that correctly :)"
          }
        ]
      }
    },
    {
      "number": 11317,
      "title": "Fix doctest collection of `functools.cached_property` objects.",
      "body": "I'll be first to admit that the proposed solution is _very_ hacky but felt inspired by some adjacent code to do things this way. Suggestions for improvement are welcomed. \ud83d\ude42\r\n\r\ncloses #11237\r\n",
      "state": "MERGED",
      "createdAt": "2023-08-16T06:59:28Z",
      "updatedAt": "2023-09-07T12:54:22Z",
      "closedAt": "2023-09-07T12:39:03Z",
      "mergedAt": "2023-09-07T12:39:03Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "RonnyPfannschmidt"
      },
      "baseRefName": "main",
      "headRefName": "fix-issue-11237",
      "author": {
        "login": "tjsmart"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "needs backport"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 8
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Ignore dip in branch coverage (since py3.13+ isn't tested in CI)",
              "committedDate": "2023-08-21T02:55:30Z",
              "author": {
                "name": "Tyler Smart",
                "email": "tjsmart@ucsc.edu",
                "user": {
                  "login": "tjsmart"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-08-16T07:55:42Z",
            "body": ""
          },
          {
            "author": {
              "login": "tjsmart"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-08-16T23:15:27Z",
            "body": ""
          },
          {
            "author": {
              "login": "tjsmart"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-08-19T18:15:13Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-08-19T21:31:36Z",
            "body": ""
          },
          {
            "author": {
              "login": "tjsmart"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-08-20T04:21:13Z",
            "body": ""
          },
          {
            "author": {
              "login": "tjsmart"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-08-20T04:21:52Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-08-23T09:00:40Z",
            "body": "LGTM! I'll let @RonnyPfannschmidt do the merge."
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2023-09-07T12:37:54Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11315,
      "title": "pytester: use `monkeypatch.chdir()` for dir changing",
      "body": "The current method as the following problem, described by @sadra-barikbin in https://github.com/pytest-dev/pytest/pull/11236#issuecomment-1666851689:\r\n\r\nThe tests that request both `pytester` and `monkeypatch` and use `monkeypatch.chdir` without context, relying on `monkeypatch`'s teardown to restore cwd. This doesn't work because the following sequence of actions take place:\r\n\r\n- `monkeypatch` is set up.\r\n- `pytester` is set up. It saves the original cwd and changes it to a new one dedicated to the test function.\r\n- Test function calls `monkeypatch.chdir()` without context. `monkeypatch` saves cwd, which is not the original one, before changing it.\r\n- `pytester` is torn down. It restores the cwd to the original one.\r\n- `monkeypatch` is torn down. It restores cwd to what it has saved.\r\n\r\nThe solution here is to have pytester use `monkeypatch.chdir()` itself, then everything is handled correctly.\r\n\r\n<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "MERGED",
      "createdAt": "2023-08-15T20:11:50Z",
      "updatedAt": "2023-09-25T11:01:49Z",
      "closedAt": "2023-09-25T09:10:15Z",
      "mergedAt": "2023-09-25T09:10:15Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "pytest-monkeypatch-chdir",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 4
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "pytester: use monkeypatch.chdir() for dir changing\n\nThe current method as the following problem, described by Sadra\nBarikbin:\n\nThe tests that request both `pytester` and `monkeypatch` and use\n`monkeypatch.chdir` without context, relying on `monkeypatch`'s teardown\nto restore cwd. This doesn't work because the following sequence of\nactions take place:\n\n- `monkeypatch` is set up.\n- `pytester` is set up. It saves the original cwd and changes it to a\n  new one dedicated to the test function.\n- Test function calls `monkeypatch.chdir()` without context.\n  `monkeypatch` saves cwd, which is not the original one, before\n  changing it.\n- `pytester` is torn down. It restores the cwd to the original one.\n- `monkeypatch` is torn down. It restores cwd to what it has saved.\n\nThe solution here is to have pytester use `monkeypatch.chdir()` itself,\nthen everything is handled correctly.",
              "committedDate": "2023-09-25T08:31:09Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-09-05T11:29:38Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-09-24T13:13:26Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-09-25T00:35:34Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-09-25T00:35:37Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-09-25T08:49:03Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11313,
      "title": "[pre-commit.ci] pre-commit autoupdate",
      "body": "<!--pre-commit.ci start-->\nupdates:\n- [github.com/pre-commit/mirrors-mypy: v1.4.1 \u2192 v1.5.0](https://github.com/pre-commit/mirrors-mypy/compare/v1.4.1...v1.5.0)\n<!--pre-commit.ci end-->",
      "state": "MERGED",
      "createdAt": "2023-08-15T07:23:12Z",
      "updatedAt": "2023-08-15T07:56:43Z",
      "closedAt": "2023-08-15T07:56:42Z",
      "mergedAt": "2023-08-15T07:56:42Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "main",
      "headRefName": "pre-commit-ci-update-config",
      "author": {
        "login": "pre-commit-ci"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[pre-commit.ci] pre-commit autoupdate\n\nupdates:\n- [github.com/pre-commit/mirrors-mypy: v1.4.1 \u2192 v1.5.0](https://github.com/pre-commit/mirrors-mypy/compare/v1.4.1...v1.5.0)",
              "committedDate": "2023-08-15T07:23:11Z",
              "author": {
                "name": "pre-commit-ci[bot]",
                "email": "66853113+pre-commit-ci[bot]@users.noreply.github.com",
                "user": {
                  "login": "pre-commit-ci[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2023-08-15T07:27:35Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11310,
      "title": "build(deps): Bump pypa/gh-action-pypi-publish from 1.8.8 to 1.8.10",
      "body": "Bumps [pypa/gh-action-pypi-publish](https://github.com/pypa/gh-action-pypi-publish) from 1.8.8 to 1.8.10.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pypa/gh-action-pypi-publish/releases\">pypa/gh-action-pypi-publish's releases</a>.</em></p>\n<blockquote>\n<h2>v1.8.10</h2>\n<h2>:bug: What's Fixed</h2>\n<p><a href=\"https://github.com/woodruffw\"><code>@\u200bwoodruffw</code></a> fixed decoding OIDC claims in debug output on failure by applying correct padding to the encoded payload via <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/177\">pypa/gh-action-pypi-publish#177</a>.</p>\n<p><strong>Full Diff</strong>: <a href=\"https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.9...v1.8.10\">https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.9...v1.8.10</a></p>\n<h2>v1.8.9</h2>\n<h2>:nail_care: Cosmetic output improvements</h2>\n<ul>\n<li><a href=\"https://github.com/woodruffw\"><code>@\u200bwoodruffw</code></a> added debug output to the trusted publishing OIDC exchange on failures in <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/174\">pypa/gh-action-pypi-publish#174</a></li>\n<li><a href=\"https://github.com/woodruffw\"><code>@\u200bwoodruffw</code></a> implemented Markdown semantic callouts in README via <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/175\">pypa/gh-action-pypi-publish#175</a></li>\n</ul>\n<h2>:hammer_and_wrench: Internal dependencies</h2>\n<ul>\n<li>Certifi was bumped from 2023.5.7 to 2023.7.22 @ <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/171\">pypa/gh-action-pypi-publish#171</a></li>\n<li>Cryptography was bumped from 41.0.2 to 41.0.3 @ <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/172\">pypa/gh-action-pypi-publish#172</a></li>\n</ul>\n<p><strong>Full Diff</strong>: <a href=\"https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.8...v1.8.9\">https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.8...v1.8.9</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/b7f401de30cb6434a1e19f805ff006643653240e\"><code>b7f401d</code></a> Merge PR <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/177\">#177</a> into unstable/v1</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/ba3ecc93555ab33f1172cebde7585a78eca00335\"><code>ba3ecc9</code></a> oidc-exchange: fix padding</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/ade57f54dcc56d4858ca681c80269c26dc7b9149\"><code>ade57f5</code></a> Merge PRs <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/174\">#174</a> <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/175\">#175</a> and <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/172\">#172</a> into unstable/v1</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/637917e5f201407b3d6e3be9df6af349083d0a79\"><code>637917e</code></a> README: re-add &quot;pro tip&quot; language</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/4864f13c38a29318fc09dca6b0258644d80b8e07\"><code>4864f13</code></a> README: use semantic callouts</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/326f9ad1e131f526357a666f008015a0ee96fbcf\"><code>326f9ad</code></a> oidc-exchange: add-trailing-comma</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/e5f0690e9195178c6f53954b1f9059b3d9b11116\"><code>e5f0690</code></a> oidc-exchange: ignore a nested function</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/8bdd0cc2a0ec4a8773b96ddd5bdc4a2dd849cf81\"><code>8bdd0cc</code></a> oidc-exchange: lintage</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/71a0032909f17bb44704d5fc46876cdaee124ca0\"><code>71a0032</code></a> oidc-exchange: render claims if exchange fails</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/adef75a5a62cc4473182a78754a310e4a73d3511\"><code>adef75a</code></a> Bump cryptography from 41.0.2 to 41.0.3 in /requirements</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.8...v1.8.10\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pypa/gh-action-pypi-publish&package-manager=github_actions&previous-version=1.8.8&new-version=1.8.10)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2023-08-14T03:25:55Z",
      "updatedAt": "2023-09-02T15:04:31Z",
      "closedAt": "2023-09-02T15:04:31Z",
      "mergedAt": "2023-09-02T15:04:31Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/github_actions/pypa/gh-action-pypi-publish-1.8.10",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "github_actions"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump pypa/gh-action-pypi-publish from 1.8.8 to 1.8.10\n\nBumps [pypa/gh-action-pypi-publish](https://github.com/pypa/gh-action-pypi-publish) from 1.8.8 to 1.8.10.\n- [Release notes](https://github.com/pypa/gh-action-pypi-publish/releases)\n- [Commits](https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.8...v1.8.10)\n\n---\nupdated-dependencies:\n- dependency-name: pypa/gh-action-pypi-publish\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2023-09-02T15:00:20Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2023-08-14T07:10:38Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11309,
      "title": "doc: fix a few `xfail` nits",
      "body": "Refs #9027, #10094.",
      "state": "MERGED",
      "createdAt": "2023-08-12T15:12:12Z",
      "updatedAt": "2023-08-12T15:58:41Z",
      "closedAt": "2023-08-12T15:58:38Z",
      "mergedAt": "2023-08-12T15:58:38Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "docs-xfail",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "doc: fix a few `pytest.mark.xfail` nits\n\nRefs #9027, #10094.",
              "committedDate": "2023-08-12T15:30:58Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-08-12T15:22:16Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11308,
      "title": "Improve reporting from __iter__ exceptions",
      "body": "Fixes #7966\r\n\r\nPreviously, the assertion rewrite mechanism would fail to capture raised errors within ``__iter__`` and suggest the error is within ``__repr__``, which this new reporting now fixes.\r\n\r\n<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [X] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "MERGED",
      "createdAt": "2023-08-11T17:34:00Z",
      "updatedAt": "2023-12-31T09:27:55Z",
      "closedAt": "2023-08-21T23:27:42Z",
      "mergedAt": "2023-08-21T23:27:42Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Zac-HD"
      },
      "baseRefName": "main",
      "headRefName": "iter-reporting",
      "author": {
        "login": "reaganjlee"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "fix test for codecov",
              "committedDate": "2023-08-21T22:49:39Z",
              "author": {
                "name": "Reagan Lee",
                "email": "96998476+reaganjlee@users.noreply.github.com",
                "user": {
                  "login": "reaganjlee"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Zac-HD"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-08-20T01:52:29Z",
            "body": ""
          },
          {
            "author": {
              "login": "reaganjlee"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-08-20T20:36:06Z",
            "body": ""
          },
          {
            "author": {
              "login": "Zac-HD"
            },
            "state": "APPROVED",
            "submittedAt": "2023-08-21T23:27:26Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11301,
      "title": "python: use clearer terminology for `_resolve_arg_value_types`",
      "body": "Follow up to https://github.com/pytest-dev/pytest/pull/11220#discussion_r1278265042",
      "state": "MERGED",
      "createdAt": "2023-08-09T17:37:53Z",
      "updatedAt": "2023-08-10T06:06:02Z",
      "closedAt": "2023-08-10T06:05:58Z",
      "mergedAt": "2023-08-10T06:05:58Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "fixtures-resolve-directness",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "python: use clearer terminology for `_resolve_arg_value_types`",
              "committedDate": "2023-08-09T17:36:24Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-08-09T18:02:52Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11298,
      "title": "Support usefixtures with parametrize",
      "body": "closes #4112 ",
      "state": "CLOSED",
      "createdAt": "2023-08-08T10:44:49Z",
      "updatedAt": "2024-06-25T09:37:38Z",
      "closedAt": "2024-06-25T09:37:38Z",
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "params_usefixtures",
      "author": {
        "login": "ShurikMen"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "status: needs information"
          },
          {
            "name": "bot:chronographer:provided"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 6
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "set unique fixtureinfo if it was changed from params marks",
              "committedDate": "2023-09-12T05:54:25Z",
              "author": {
                "name": "Aleksandr Brodin",
                "email": "sank.brodin@gmail.com",
                "user": {
                  "login": "ShurikMen"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "fruch"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-08-30T11:05:10Z",
            "body": ""
          },
          {
            "author": {
              "login": "fruch"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-08-30T11:09:50Z",
            "body": ""
          },
          {
            "author": {
              "login": "fruch"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-08-30T11:10:40Z",
            "body": ""
          },
          {
            "author": {
              "login": "ShurikMen"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-09-05T06:01:09Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-09-08T13:29:08Z",
            "body": "Thanks @ShurikMen. This seems like a very nice feature to have.\r\n\r\nThe implementation doing `set(fixtureinfo_.names_closure) != set(fixtureinfo.names_closure):` is too hacky for my tastes; feels like a thing that will cause unexpected issues. I will try to look into what it would take to this in a more robust way. #11412 is relevant."
          },
          {
            "author": {
              "login": "ShurikMen"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-09-11T03:05:36Z",
            "body": ""
          },
          {
            "author": {
              "login": "ShurikMen"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-09-11T03:59:29Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11296,
      "title": "[7.4.x] Improve duplicate values documentation",
      "body": "Backport of PR #11291 to 7.4.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2023-08-07T11:15:41Z",
      "updatedAt": "2023-08-08T11:44:04Z",
      "closedAt": "2023-08-08T11:44:03Z",
      "mergedAt": "2023-08-08T11:44:03Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "7.4.x",
      "headRefName": "backport-11291-to-7.4.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[7.4.x] Improve duplicate values documentation",
              "committedDate": "2023-08-07T11:15:40Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "nicoddemus@gmail.com",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "The-Compiler"
            },
            "state": "APPROVED",
            "submittedAt": "2023-08-07T11:18:56Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11294,
      "title": "ci: Use Python 3.8 to test latest pluggy",
      "body": "Pluggy dropped Python 3.7 support.\r\nAlso see 165fbbd12a74ab639d61ce1f28dfef1511a2c2e2\r\n\r\nFixes #11293",
      "state": "MERGED",
      "createdAt": "2023-08-07T10:10:24Z",
      "updatedAt": "2023-08-07T11:20:55Z",
      "closedAt": "2023-08-07T11:13:03Z",
      "mergedAt": "2023-08-07T11:13:03Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "7.4.x",
      "headRefName": "pluggy-py38",
      "author": {
        "login": "The-Compiler"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "ci: Use Python 3.8 to test latest pluggy\n\nPluggy dropped Python 3.7 support.\nAlso see 165fbbd12a74ab639d61ce1f28dfef1511a2c2e2\n\nFixes #11293",
              "committedDate": "2023-08-07T10:08:56Z",
              "author": {
                "name": "Florian Bruhin",
                "email": "me@the-compiler.org",
                "user": {
                  "login": "The-Compiler"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-08-07T11:12:19Z",
            "body": "Thanks! We should backport this too."
          }
        ]
      }
    },
    {
      "number": 11292,
      "title": "build(deps): Bump django from 4.2.3 to 4.2.4 in /testing/plugins_integration",
      "body": "Bumps [django](https://github.com/django/django) from 4.2.3 to 4.2.4.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/django/django/commit/6f4c7c124a03f7b01d868cb7d1fa55564b5f2bf8\"><code>6f4c7c1</code></a> [4.2.x] Bumped version for 4.2.4 release.</li>\n<li><a href=\"https://github.com/django/django/commit/e53d6239dfe4478796b75e96ecc9532d752f42ea\"><code>e53d623</code></a> [4.2.x] Added release date for 4.2.4.</li>\n<li><a href=\"https://github.com/django/django/commit/8808d9da6b11b8aa32d750265217721450b0fb1f\"><code>8808d9d</code></a> [4.2.x] Fixed <a href=\"https://redirect.github.com/django/django/issues/34750\">#34750</a> -- Fixed QuerySet.count() when grouping by unused multi-...</li>\n<li><a href=\"https://github.com/django/django/commit/2ef2b2ffc0e2af3f945bccf99ece67f843aa440c\"><code>2ef2b2f</code></a> [4.2.x] Corrected pycon formatting in some docs.</li>\n<li><a href=\"https://github.com/django/django/commit/8db9a0b5a0bae3750a18dd59ad7b4fcffb414cc5\"><code>8db9a0b</code></a> [4.2.x] Fixed warnings per flake8 6.1.0.</li>\n<li><a href=\"https://github.com/django/django/commit/739da731645f394ccc56f64a5d7625f7aafd820b\"><code>739da73</code></a> [4.2.x] Fixed <a href=\"https://redirect.github.com/django/django/issues/34748\">#34748</a> -- Fixed queryset crash when grouping by a reference in ...</li>\n<li><a href=\"https://github.com/django/django/commit/a52a2b6678ea2e35d86d97735d936e9b7bf73474\"><code>a52a2b6</code></a> [4.2.x] Fixed <a href=\"https://redirect.github.com/django/django/issues/34749\">#34749</a> -- Corrected QuerySet.acreate() signature in docs.</li>\n<li><a href=\"https://github.com/django/django/commit/12ebd9a1ac8b1de34a2d4615fa830d132f6e56b9\"><code>12ebd9a</code></a> [4.2.x] Refs <a href=\"https://redirect.github.com/django/django/issues/34712\">#34712</a> -- Doc'd that defining STORAGES overrides the default con...</li>\n<li><a href=\"https://github.com/django/django/commit/1f9d00ef9f6e6a76433b1239f19b6fd64a07b7ef\"><code>1f9d00e</code></a> [4.2.x] Added missing backticks in docs.</li>\n<li><a href=\"https://github.com/django/django/commit/c99d9356009a0a420fc366af74161a78bdae2612\"><code>c99d935</code></a> [4.2.x] Fixed typo in docs/ref/models/querysets.txt.</li>\n<li>Additional commits viewable in <a href=\"https://github.com/django/django/compare/4.2.3...4.2.4\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=django&package-manager=pip&previous-version=4.2.3&new-version=4.2.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2023-08-07T03:39:31Z",
      "updatedAt": "2023-08-07T11:15:18Z",
      "closedAt": "2023-08-07T11:15:17Z",
      "mergedAt": "2023-08-07T11:15:17Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/pip/testing/plugins_integration/django-4.2.4",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "python"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump django in /testing/plugins_integration\n\nBumps [django](https://github.com/django/django) from 4.2.3 to 4.2.4.\n- [Commits](https://github.com/django/django/compare/4.2.3...4.2.4)\n\n---\nupdated-dependencies:\n- dependency-name: django\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2023-08-07T03:39:31Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11291,
      "title": "Improve duplicate values documentation",
      "body": "This would IMO fix the documentation-side of #11289.\r\n\r\nAs for the \"feature-request-side\" of it, if you see any chance to get allow `pytest_generate_tests` ever be used in an \"overwriting\" fashion, as can be done with fixture functions, I'd like to open a separate feature request issue on that.",
      "state": "MERGED",
      "createdAt": "2023-08-06T15:46:59Z",
      "updatedAt": "2023-08-07T13:45:26Z",
      "closedAt": "2023-08-07T11:14:39Z",
      "mergedAt": "2023-08-07T11:14:39Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "improve-duplicate-values-documentation",
      "author": {
        "login": "calestyo"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "improve exception message on duplicate parametrization\n\nSigned-off-by: Christoph Anton Mitterer <mail@christoph.anton.mitterer.name>",
              "committedDate": "2023-08-06T15:43:37Z",
              "author": {
                "name": "Christoph Anton Mitterer",
                "email": "mail@christoph.anton.mitterer.name",
                "user": {
                  "login": "calestyo"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2023-08-06T16:24:06Z",
            "body": "Nicely done, thanks "
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-08-07T11:14:33Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11290,
      "title": "[7.4.x] doc: Link pytest.main to how-to guide",
      "body": "Backport of PR #11287 to 7.4.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2023-08-06T10:40:41Z",
      "updatedAt": "2023-08-07T08:47:39Z",
      "closedAt": "2023-08-07T08:47:38Z",
      "mergedAt": "2023-08-07T08:47:38Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "The-Compiler"
      },
      "baseRefName": "7.4.x",
      "headRefName": "backport-11287-to-7.4.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[7.4.x] doc: Link pytest.main to how-to guide",
              "committedDate": "2023-08-06T10:40:40Z",
              "author": {
                "name": "Florian Bruhin",
                "email": "me@the-compiler.org",
                "user": {
                  "login": "The-Compiler"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11287,
      "title": "doc: Link pytest.main to how-to guide",
      "body": "Links to here: [How to invoke pytest \u2014 pytest documentation](https://docs.pytest.org/en/7.4.x/how-to/usage.html#calling-pytest-from-python-code)",
      "state": "MERGED",
      "createdAt": "2023-08-05T20:59:11Z",
      "updatedAt": "2023-08-06T10:39:15Z",
      "closedAt": "2023-08-06T10:39:11Z",
      "mergedAt": "2023-08-06T10:39:11Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "The-Compiler"
      },
      "baseRefName": "main",
      "headRefName": "doc-link-pytest-main",
      "author": {
        "login": "The-Compiler"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: docs"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "doc: Link pytest.main to how-to guide",
              "committedDate": "2023-08-05T20:58:35Z",
              "author": {
                "name": "Florian Bruhin",
                "email": "me@the-compiler.org",
                "user": {
                  "login": "The-Compiler"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-08-06T09:11:02Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11286,
      "title": "[7.4.x] doc: update information about assertion messages",
      "body": "Backport of PR #11285 to 7.4.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2023-08-05T20:57:58Z",
      "updatedAt": "2023-08-07T08:47:14Z",
      "closedAt": "2023-08-07T08:47:13Z",
      "mergedAt": "2023-08-07T08:47:13Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "The-Compiler"
      },
      "baseRefName": "7.4.x",
      "headRefName": "backport-11285-to-7.4.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[7.4.x] doc: update information about assertion messages",
              "committedDate": "2023-08-05T20:57:57Z",
              "author": {
                "name": "Christoph Anton Mitterer",
                "email": "mail@christoph.anton.mitterer.name",
                "user": {
                  "login": "calestyo"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "The-Compiler"
            },
            "state": "APPROVED",
            "submittedAt": "2023-08-05T20:59:29Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11285,
      "title": "doc: update information about assertion messages",
      "body": "This would close #11265.",
      "state": "MERGED",
      "createdAt": "2023-08-05T19:07:30Z",
      "updatedAt": "2023-08-05T20:57:41Z",
      "closedAt": "2023-08-05T19:30:41Z",
      "mergedAt": "2023-08-05T19:30:41Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "The-Compiler"
      },
      "baseRefName": "main",
      "headRefName": "improve-docs",
      "author": {
        "login": "calestyo"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "doc: update information about assertion messages\n\nIt was pointed out[0] that the previous behaviour has been obsoleted by\ncommit 37bd1e03cb77a26ae80873a8725c87d57fda987c.\n\n[0] https://github.com/pytest-dev/pytest/issues/11265#issuecomment-1666581197\n\nSigned-off-by: Christoph Anton Mitterer <mail@christoph.anton.mitterer.name>",
              "committedDate": "2023-08-05T19:05:28Z",
              "author": {
                "name": "Christoph Anton Mitterer",
                "email": "mail@christoph.anton.mitterer.name",
                "user": {
                  "login": "calestyo"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "The-Compiler"
            },
            "state": "APPROVED",
            "submittedAt": "2023-08-05T19:21:32Z",
            "body": "Makes sense, thanks!"
          }
        ]
      }
    },
    {
      "number": 11284,
      "title": "Feed a test only with initialnames, not the whole fixture closure",
      "body": "To feed a test func only with its `_fixtureinfo.initialnames` which contains its argnames, `usefixtures` marks and autouse fixtures, not the whole fixture closure which might seem unexpected to the user.\n",
      "state": "OPEN",
      "createdAt": "2023-08-04T20:29:19Z",
      "updatedAt": "2024-01-16T19:45:56Z",
      "closedAt": null,
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "Fix-feed-test-with-only-initialnames-not-whole-closure",
      "author": {
        "login": "sadra-barikbin"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 15
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Merge branch 'main' into Fix-feed-test-with-only-initialnames-not-whole-closure",
              "committedDate": "2024-01-16T18:05:32Z",
              "author": {
                "name": "Sadra Barikbin",
                "email": "sadraqazvin1@yahoo.com",
                "user": {
                  "login": "sadra-barikbin"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "CHANGES_REQUESTED",
            "submittedAt": "2023-09-05T20:30:46Z",
            "body": "I am in favor of this change in principle, the idea being that a fixture should only be \"available\" to a test (here as `item.funcargs[\"foo\"]`) if the test actually requests it itself, through a direct argname, `usefixture` or autouse. While transitive fixtures are \"implementation details\". If a test wants to access a fixture it did not request itself dynamically, should use `request.getfixturevalue()` instead.\r\n\r\nThe same argument also applies to `item.fixturenames`, which contains the full closure but IMO should only contain the initial names. But that is harder to change.\r\n\r\nIf we choose to do it, we ought to change the example in https://github.com/pytest-dev/pytest/blob/8032d212715108c5187e57b5fccdd2502e716410/doc/en/example/simple.rst#post-process-test-reports--failures to avoid `item.fixturenames`.\r\n\r\nEven though `funcargs` isn't documented in the API Reference, it is mentioned in the docs and as such I'd say this is a breaking change and should go through a deprecation cycle (warn on access to a non-initial name) and only changed in the next major release (i.e. pytest 9). Overall I think it's not worth the effort but if you want to do it, :+1: from me."
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-09-08T08:45:08Z",
            "body": "Thanks @sadra-barikbin, I left some comments. Also, this also needs a changelog entry and a note in `doc/en/deprecations.rst`.\r\n\r\nBefore approving, we should check @jgersti comment regarding pytest-lazy-fixtures. Specifically how it uses `funcargs` and whether `getfixturevalue` is a viable replacement for it. See also @jgersti's post here: https://github.com/pytest-dev/pytest/discussions/11412  "
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "CHANGES_REQUESTED",
            "submittedAt": "2024-01-12T21:04:28Z",
            "body": "Left a few comments.\r\n\r\nThe branch has some conflicts and needs a rebase. Note: prefer to rebase than to merge main, the merging makes my head spin :)\r\n\r\nWe need to think what to do about other forms of access to the dict, like iterating, setting and deleting. Out of 670 plugins I have checked out locally, 42 use `funcargs`, including some popular plugins like pytest-benchmark. From a quick look, it seems like at least some of them really do want to check if a fixture is in the full closure, not just in the directly-requested set. Needs an audit of the usages..."
          },
          {
            "author": {
              "login": "sadra-barikbin"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-14T20:29:48Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2024-01-16T19:36:00Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11279,
      "title": "Improve example",
      "body": "Closes #11258.",
      "state": "MERGED",
      "createdAt": "2023-08-03T14:43:07Z",
      "updatedAt": "2023-08-03T16:33:05Z",
      "closedAt": "2023-08-03T16:31:17Z",
      "mergedAt": "2023-08-03T16:31:17Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "improve-example",
      "author": {
        "login": "calestyo"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "doc: further minor improvements to parametrizing conditional raising\n\nSigned-off-by: Christoph Anton Mitterer <mail@christoph.anton.mitterer.name>",
              "committedDate": "2023-08-03T14:27:33Z",
              "author": {
                "name": "Christoph Anton Mitterer",
                "email": "mail@christoph.anton.mitterer.name",
                "user": {
                  "login": "calestyo"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-08-03T16:29:06Z",
            "body": "Great, thanks @calestyo, appreciate it!"
          }
        ]
      }
    },
    {
      "number": 11277,
      "title": "Fix a tiny bug in `python.py::_find_parametrized_scope`",
      "body": "Currently, when there are multiple fixturedefs for a param, `_find_parametrized_scope` picks the farthest one, while it should pick the nearest one.\n",
      "state": "MERGED",
      "createdAt": "2023-08-03T08:49:00Z",
      "updatedAt": "2023-08-06T13:59:55Z",
      "closedAt": "2023-08-06T13:59:54Z",
      "mergedAt": "2023-08-06T13:59:54Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "Fix-a-typo-in-find-parametrized-scope",
      "author": {
        "login": "sadra-barikbin"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Delete 11234.bugfix.rst",
              "committedDate": "2023-08-06T13:39:51Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-08-03T11:14:04Z",
            "body": "Thanks, as best as I can understand, this was a bug, at least didn't work as written in the docstring, and the fix makes it work as intended.\r\n\r\nI tried to create an integration test for it, and came up with this:\r\n\r\n```py\r\nimport pytest\r\n\r\n@pytest.fixture(scope=\"module\")\r\ndef fix(request):\r\n    assert request.scope == \"module\"\r\n    return \"module\"\r\n\r\nclass TestIt:\r\n    @pytest.fixture(scope=\"class\")\r\n    def fix(self, request, fix):\r\n        assert request.scope == \"class\"\r\n        return \"class\"\r\n\r\n    @pytest.mark.parametrize(\"fix\", [\"function\"], indirect=True)\r\n    def test_it(self, fix):\r\n        print(fix)\r\n```\r\n\r\nWithout your fix, the `request.scope` is `\"module\"` in both `fix`'s. After your fix, the `request.scope` is `\"class\"` in both. It would be good to add this test, WDYT?\r\n\r\nI am confused why the `request.scope` in the module-level fixture is `\"class\"`, that seems incorrect? (Maybe the sub-`SubRequest` forgets to change the scope or something?) I ran out of time to look at it, but I think it's a separate issue, so it shouldn't prevent us from getting this fix in, but should probably remove this assert from the test.\r\n\r\n---\r\n\r\nA couple of procedural comments:\r\n\r\nThe commit message \"Fix a tiny typo\" sounds like this is fixing some doc comment or such, but this actually fixes a logic bug, so it would be better to use a commit message like:\r\n\r\n```\r\npython: fix scope assignment for indirect parameter sets\r\n\r\nPreviously, when assigning a scope for a fully-indirect parameter set,\r\nwhen there are multiple fixturedefs for a param (i.e. same-name fixture\r\nchain), the highest scope was used, but it should be the lowest scope,\r\nsince that's the effective scope of the fixture.\r\n```\r\n\r\nAlso since this is a bugfix we should add a changelog entry, see \"write a changelog entry\" [here](https://github.com/pytest-dev/pytest/blob/main/CONTRIBUTING.rst#short-version)."
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-08-05T20:16:47Z",
            "body": "I pushed a little edit of the commit message and changelog as discussed in my previous comment, before merging.\r\n\r\nThanks for improving the test, I just have a final comment on it, let me know what you think."
          },
          {
            "author": {
              "login": "sadra-barikbin"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-08-06T12:34:46Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-08-06T13:39:22Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-08-06T13:40:09Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11271,
      "title": "Improvement: Base `FixtureArgKey`s on param values if possible, not param indices",
      "body": "To base fixture argkeys on param values rather than on indices unless the value isn't hashable in which case we fallback to param index.\n",
      "state": "OPEN",
      "createdAt": "2023-08-01T22:23:56Z",
      "updatedAt": "2023-09-16T19:50:24Z",
      "closedAt": null,
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "Improvement-base-fixtureargkeys-on-param-values-not-indices",
      "author": {
        "login": "sadra-barikbin"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Merge branch 'main' into Improvement-base-fixtureargkeys-on-param-values-not-indices",
              "committedDate": "2023-08-10T16:43:50Z",
              "author": {
                "name": "Sadra Barikbin",
                "email": "sadraqazvin1@yahoo.com",
                "user": {
                  "login": "sadra-barikbin"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "CHANGES_REQUESTED",
            "submittedAt": "2023-09-09T08:24:49Z",
            "body": "Thanks @sadra-barikbin, the implementation is very clean :)\r\n\r\nThis has come up previously in #9350. The main worry is about users using very large parametrize values. Arguably `Hashable` would exclude such values (such as `numpy.array` or large dicts) and fall back to the fast param index comparison. But I'm still pretty sure that we'll get \"you made pytest slow\" complaints from users using big *hashable* values like tuples etc, which we will now start hashing and comparing by value.\r\n\r\nThat's why I'm a bit scared to merge this as-is. After discussions in #9350, @haxtibal came up with a refinement of the idea in #9420, which keeps the Hashable business but adds an opt out for users who get hit by the \"slow hashable value\" problem. The workaround is to add a third comparison method, this one by *parameter ID*.\r\n\r\nUnfortunately I dropped the ball on #9420 but there was fruitful discussion there.\r\n\r\nLet me know what you think."
          }
        ]
      }
    },
    {
      "number": 11269,
      "title": "[pre-commit.ci] pre-commit autoupdate",
      "body": "<!--pre-commit.ci start-->\nupdates:\n- [github.com/PyCQA/flake8: 6.0.0 \u2192 6.1.0](https://github.com/PyCQA/flake8/compare/6.0.0...6.1.0)\n- [github.com/asottile/pyupgrade: v3.9.0 \u2192 v3.10.1](https://github.com/asottile/pyupgrade/compare/v3.9.0...v3.10.1)\n<!--pre-commit.ci end-->",
      "state": "MERGED",
      "createdAt": "2023-08-01T08:50:02Z",
      "updatedAt": "2023-08-01T21:52:10Z",
      "closedAt": "2023-08-01T21:52:10Z",
      "mergedAt": "2023-08-01T21:52:10Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "main",
      "headRefName": "pre-commit-ci-update-config",
      "author": {
        "login": "pre-commit-ci"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Apply suggestions from code review",
              "committedDate": "2023-08-01T21:01:29Z",
              "author": {
                "name": "Pierre Sassoulas",
                "email": "pierre.sassoulas@gmail.com",
                "user": {
                  "login": "Pierre-Sassoulas"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "asottile"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-08-01T16:00:05Z",
            "body": ""
          },
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-08-01T21:00:49Z",
            "body": ""
          },
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-08-01T21:01:25Z",
            "body": ""
          },
          {
            "author": {
              "login": "asottile"
            },
            "state": "APPROVED",
            "submittedAt": "2023-08-01T21:03:38Z",
            "body": "\r\n\r\n![](https://i.fluffy.cc/45zQ34w0KwWXsgh0KM4g5qZ4vjRj0xw2.gif)"
          }
        ]
      }
    },
    {
      "number": 11268,
      "title": "config: split `_getconftestmodules` and `_loadconftestmodules`",
      "body": "Previously, the `_getconftestmodules` function was used both to load conftest modules for a path (during `pytest_load_initial_conftests`), and to retrieve conftest modules for a path (during hook dispatch and for fetching `collect_ignore`). This made things muddy - it is usually nicer to have clear separation between \"command\" and \"query\" functions, when they occur in separate phases.\r\n\r\nSo split into \"load\" and \"get\".\r\n\r\nCurrently, `gethookproxy` still loads conftest itself. I hope to change this in the future.\r\n\r\n<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "MERGED",
      "createdAt": "2023-08-01T06:47:41Z",
      "updatedAt": "2023-08-09T23:06:20Z",
      "closedAt": "2023-08-08T11:44:30Z",
      "mergedAt": "2023-08-08T11:44:30Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "conftest-load",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "config: split _getconftestmodules and _loadconftestmodules\n\nPreviously, the `_getconftestmodules` function was used both to load\nconftest modules for a path (during `pytest_load_initial_conftests`),\nand to retrieve conftest modules for a path (during hook dispatch and\nfor fetching `collect_ignore`). This made things muddy - it is usually\nnicer to have clear separation between \"command\" and \"query\" functions,\nwhen they occur in separate phases.\n\nSo split into \"load\" and \"get\".\n\nCurrently, `gethookproxy` still loads conftest itself. I hope to change\nthis in the future.",
              "committedDate": "2023-08-01T06:46:17Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-08-07T11:19:59Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11257,
      "title": "Resolve param indices using param values, not parameterset index",
      "body": "To compute param indices smarter when user passes multiple parameter sets with duplicate values to `parametrize` in order to have a better reordering experience. Currently we have :\r\n\r\n```python\r\n@pytest.fixture(scope='module')\r\ndef fixture1(request):\r\n    pass\r\n\r\n@pytest.fixture(scope='module')\r\ndef fixture2(request):\r\n    pass\r\n\r\n@pytest.mark.parametrize(\"fixture1, fixture2\", [(\"a\", 0), (\"b\", 1), (\"a\", 2)], indirect=True)\r\ndef test(fixture1, fixture2):\r\n    pass\r\n```\r\nresulting in inefficient ordering i.e.\r\n```\r\n<Function test[a-0]>\r\n<Function test[b-1]>\r\n<Function test[a-2]>\r\n```\r\nIt's a follow-up to #11220 .",
      "state": "OPEN",
      "createdAt": "2023-07-28T23:40:09Z",
      "updatedAt": "2024-10-11T13:57:53Z",
      "closedAt": null,
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "Improvement-catch-duplicate-values-when-determining-param-indices-in-metafunc-parametrize",
      "author": {
        "login": "sadra-barikbin"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "bot:chronographer:provided"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 10
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Resolve conflict; Add changelog",
              "committedDate": "2024-10-11T13:42:35Z",
              "author": {
                "name": "Sadra Barikbin",
                "email": "sadraqazvin1@yahoo.com",
                "user": {
                  "login": "sadra-barikbin"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": [
          {
            "requestedReviewer": {
              "login": "bluetech"
            }
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "sadra-barikbin"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-12-17T11:06:05Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-12-18T15:27:35Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-12-18T15:34:24Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-05T11:26:12Z",
            "body": "i think we have to document this better\r\n\r\nfrom my pov we assign parameters that are used multiple times in a expanded/multiplied parameter set the index of the firs occurrence\r\n\r\nthis can be seen as approximation of a \"multi dimensional\" index from  filtered cross-product\r\n\r\n\r\n"
          }
        ]
      }
    },
    {
      "number": 11256,
      "title": "fixtures: fix crash when `parametrize(scope=\"package\")` is used without a Package",
      "body": "There is handling for `scope=\"class\"` without a class, but not for `scope=\"package\"` without a package. It would fail the assert.",
      "state": "MERGED",
      "createdAt": "2023-07-28T11:03:51Z",
      "updatedAt": "2023-07-28T19:48:51Z",
      "closedAt": "2023-07-28T19:48:48Z",
      "mergedAt": "2023-07-28T19:48:48Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "scope-pkg-crash",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "fixtures: fix crash when `parametrize(scope=\"package\")` is used without a Package\n\nThere as handling for `scope=\"class\"` without a class, but not for\n`scope=\"package\"` without a package. It would fail the assert.",
              "committedDate": "2023-07-28T13:13:02Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-07-28T14:38:31Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11253,
      "title": "11243 cherry picks",
      "body": "These are two minor cherry-picks from @sadra-barikbin's #11243, just to make the diff there smaller. Reviewed by me.",
      "state": "MERGED",
      "createdAt": "2023-07-27T06:41:21Z",
      "updatedAt": "2023-07-27T07:19:44Z",
      "closedAt": "2023-07-27T07:19:40Z",
      "mergedAt": "2023-07-27T07:19:40Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "11243-cherry-picks",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "fixtures: move _get_direct_parametrize_args to a standalone function\n\nSo it can be used independently of the FixtureManager.",
              "committedDate": "2023-07-27T06:38:42Z",
              "author": {
                "name": "Sadra Barikbin",
                "email": "sadraqazvin1@yahoo.com",
                "user": {
                  "login": "sadra-barikbin"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11249,
      "title": "Modifying doc for run tests by nodeid section",
      "body": "Creating this PR for https://github.com/pytest-dev/pytest/issues/11107\r\n<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "MERGED",
      "createdAt": "2023-07-25T14:17:01Z",
      "updatedAt": "2023-07-28T07:06:38Z",
      "closedAt": "2023-07-28T07:06:38Z",
      "mergedAt": "2023-07-28T07:06:38Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "rootdir_relative_nodeid_vs_cwd_relative_collection_argument",
      "author": {
        "login": "udaymankena"
      },
      "assignees": {
        "nodes": [
          {
            "login": "bluetech"
          }
        ]
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Update usage.rst",
              "committedDate": "2023-07-28T06:46:21Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-07-28T06:47:24Z",
            "body": "Thanks! (I made a few edits)"
          }
        ]
      }
    },
    {
      "number": 11244,
      "title": "Rootdir tweaks",
      "body": "These are 3 small commits I collected while looking at some rootdir issues.",
      "state": "MERGED",
      "createdAt": "2023-07-23T21:45:36Z",
      "updatedAt": "2023-07-27T06:16:17Z",
      "closedAt": "2023-07-27T06:16:13Z",
      "mergedAt": "2023-07-27T06:16:13Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "rootdir-tweaks",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "config: don't pass the entire Config to `determine_setup()`\n\nSeems better to make the function a bit more pure, and avoids the\ncircular import.",
              "committedDate": "2023-07-23T21:00:34Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-07-25T18:17:38Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11243,
      "title": "Remove `prune_dependency_tree` and reuse `getfixtureclosure` logic",
      "body": "- To reuse `getfixtureclosure` in pruning dependency tree. In pytest, fixture closure of a test is computed twice if it's parametrized. The second computation takes place in `prune_dependency_tree`. They are the same except that the second one should also ignore dynamically-introduced parametrise args, besides the ones in `ignore_args`. The motivation behind unifying these two was that the code for computing the closure got larger in the 7th improvement of #11234 so the duplicate code between these two had become significant. **Maybe the bad news is that now I figured out that I need `is_pseudo` concept for unifying the two, to do the additional objective of the second computation.**\r\n\r\n- To prune dependency tree only if dynamic parametrization has taken place. Currently for each parametrized test , directly or indirectly, dynamically or non-dynamically(using `@pytest.mark.parametrize`), computing fixture closure takes place twice. Once in `FixtureManager::getfixtureclosure` upon creating `FuncFixtureInfo` and once in `prunc_dependency_tree` after calling `pytest_generate_tests` hook. The second one is only necessary if **direct dynamic parametrization** has occurred for the test because this is the only parametrization that might shadow  some fixtures in the fixture closure computed in the first call. Note that as differentiating between direct and indirect dynamic parametrization requires a dirty hack, the second fixture closure computation in this PR is done in the latter case as well.\r\n",
      "state": "OPEN",
      "createdAt": "2023-07-22T23:45:19Z",
      "updatedAt": "2023-12-15T18:43:59Z",
      "closedAt": null,
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "Improvement-remove-prune_dependency_tree",
      "author": {
        "login": "sadra-barikbin"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Apply review comment\n\nand fix a couple of Mypy issues",
              "committedDate": "2023-12-15T18:43:44Z",
              "author": {
                "name": "Sadra Barikbin",
                "email": "sadraqazvin1@yahoo.com",
                "user": {
                  "login": "sadra-barikbin"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": [
          {
            "requestedReviewer": {
              "login": "bluetech"
            }
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-27T22:31:12Z",
            "body": "Hi @sadra-barikbin thanks a lot for the PR, as always.\r\n\r\nI left some minor comments, but I'm not sure overall it is an improvement, specially the \"magic\" needed around `unwrap_metafunc_parametrize_and_possibly_prune_dependency_tree`. The previous function was a bit convoluted, but at least it was direct and executed around a specific point.\r\n\r\nCan you add more details to the PR, specially why you think `prune_dependency_tree` is problematic and how this improves and/or enables further improvements?"
          },
          {
            "author": {
              "login": "sadra-barikbin"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-30T04:23:37Z",
            "body": ""
          },
          {
            "author": {
              "login": "sadra-barikbin"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-30T04:28:34Z",
            "body": ""
          },
          {
            "author": {
              "login": "sadra-barikbin"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-30T22:39:34Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-08-27T14:32:07Z",
            "body": ""
          },
          {
            "author": {
              "login": "sadra-barikbin"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-09-05T07:17:45Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-09-05T11:14:31Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-09-05T11:25:34Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-09-05T11:27:59Z",
            "body": ""
          },
          {
            "author": {
              "login": "sadra-barikbin"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-09-05T16:42:20Z",
            "body": ""
          },
          {
            "author": {
              "login": "sadra-barikbin"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-09-05T16:43:47Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-09-05T19:37:32Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-09-09T16:37:06Z",
            "body": ""
          },
          {
            "author": {
              "login": "sadra-barikbin"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-09-16T21:13:49Z",
            "body": ""
          },
          {
            "author": {
              "login": "sadra-barikbin"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-09-16T21:31:24Z",
            "body": ""
          },
          {
            "author": {
              "login": "sadra-barikbin"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-09-16T21:45:09Z",
            "body": ""
          },
          {
            "author": {
              "login": "sadra-barikbin"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-12-15T17:50:45Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11242,
      "title": "[7.4.x] Remove ep2023 training",
      "body": "Backport of PR #11241 to 7.4.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2023-07-22T18:18:20Z",
      "updatedAt": "2023-07-22T18:40:57Z",
      "closedAt": "2023-07-22T18:40:57Z",
      "mergedAt": "2023-07-22T18:40:57Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "The-Compiler"
      },
      "baseRefName": "7.4.x",
      "headRefName": "backport-11241-to-7.4.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[7.4.x] Remove ep2023 training",
              "committedDate": "2023-07-22T18:18:18Z",
              "author": {
                "name": "Florian Bruhin",
                "email": "me@the-compiler.org",
                "user": {
                  "login": "The-Compiler"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "The-Compiler"
            },
            "state": "APPROVED",
            "submittedAt": "2023-07-22T18:21:37Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11241,
      "title": "Remove ep2023 training",
      "body": "Got a room packed with people (who all now have pytest stickers too :upside_down_face:) and everyone seemed to be happy with it, so great success I'd say!",
      "state": "MERGED",
      "createdAt": "2023-07-22T17:48:19Z",
      "updatedAt": "2023-07-22T18:17:05Z",
      "closedAt": "2023-07-22T18:16:59Z",
      "mergedAt": "2023-07-22T18:16:59Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "The-Compiler"
      },
      "baseRefName": "main",
      "headRefName": "training-update-2023-07-22",
      "author": {
        "login": "The-Compiler"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Remove ep2023 training",
              "committedDate": "2023-07-22T17:47:27Z",
              "author": {
                "name": "Florian Bruhin",
                "email": "me@the-compiler.org",
                "user": {
                  "login": "The-Compiler"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2023-07-22T17:54:04Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11238,
      "title": "doc/example/parametrize: a few fixes/improvements",
      "body": "Remove \"Indirect\" from a few section names -- not actually indirect.\r\n\r\nAlso few minor updates to the related multipython.py example.\r\n",
      "state": "MERGED",
      "createdAt": "2023-07-22T06:27:26Z",
      "updatedAt": "2023-07-23T10:07:44Z",
      "closedAt": "2023-07-23T10:07:41Z",
      "mergedAt": "2023-07-23T10:07:41Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "doc-not-indirect",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "doc/example/parametrize: a few fixes/improvements\n\nRemove \"Indirect\" from a few section names -- not actually indirect.\n\nAlso few minor updates to the related multipython.py example.",
              "committedDate": "2023-07-20T06:51:11Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-07-22T12:22:29Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11236,
      "title": "Consider nonparametrized tests in reordering",
      "body": "- To extract fixture dependencies of nonparametrized tests as well, in order to finally consider all fixture dependencies, whether a fixture is parametrized or not, the test is parametrized or not, into reordering.\n",
      "state": "CLOSED",
      "createdAt": "2023-07-21T01:12:38Z",
      "updatedAt": "2023-12-04T13:50:53Z",
      "closedAt": "2023-12-04T13:50:52Z",
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "CONFLICTING",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "Feature-consider-nonparametrized-tests-in-reordering",
      "author": {
        "login": "sadra-barikbin"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 6
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Merge branch 'main' into Feature-consider-nonparametrized-tests-in-reordering",
              "committedDate": "2023-08-23T16:27:31Z",
              "author": {
                "name": "Sadra Barikbin",
                "email": "sadraqazvin1@yahoo.com",
                "user": {
                  "login": "sadra-barikbin"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11231,
      "title": "Add `FixtureArgKey` class to represent fixture deps in `fixtures.py`",
      "body": "- To add `FixtureArgKey` class to represent fixture dependencies.\r\n- ~To base fixture argkeys on param values rather than on indices unless the value isn't hashable in which case we fallback to param index.~ #11271 ",
      "state": "MERGED",
      "createdAt": "2023-07-19T17:58:00Z",
      "updatedAt": "2023-08-02T12:29:16Z",
      "closedAt": "2023-08-02T11:28:31Z",
      "mergedAt": "2023-08-02T11:28:31Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "Improvement-make-FixtureArgKey-class",
      "author": {
        "login": "sadra-barikbin"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Apply comments",
              "committedDate": "2023-08-02T08:28:33Z",
              "author": {
                "name": "Sadra Barikbin",
                "email": "sadraqazvin1@yahoo.com",
                "user": {
                  "login": "sadra-barikbin"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-19T18:27:31Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-19T18:29:17Z",
            "body": ""
          },
          {
            "author": {
              "login": "sadra-barikbin"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-19T23:07:00Z",
            "body": ""
          },
          {
            "author": {
              "login": "sadra-barikbin"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-20T07:24:01Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-20T09:10:59Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-20T09:15:15Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-20T09:24:18Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-20T11:14:09Z",
            "body": ""
          },
          {
            "author": {
              "login": "sadra-barikbin"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-20T13:05:21Z",
            "body": ""
          },
          {
            "author": {
              "login": "sadra-barikbin"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-20T18:26:53Z",
            "body": ""
          },
          {
            "author": {
              "login": "sadra-barikbin"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-21T13:20:06Z",
            "body": ""
          },
          {
            "author": {
              "login": "sadra-barikbin"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-21T13:22:01Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-21T14:41:15Z",
            "body": ""
          },
          {
            "author": {
              "login": "sadra-barikbin"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-22T23:48:00Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-23T09:23:44Z",
            "body": ""
          },
          {
            "author": {
              "login": "sadra-barikbin"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-24T02:14:27Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-24T05:38:50Z",
            "body": ""
          },
          {
            "author": {
              "login": "sadra-barikbin"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-24T12:49:12Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-24T13:56:17Z",
            "body": ""
          },
          {
            "author": {
              "login": "sadra-barikbin"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-24T15:20:33Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11228,
      "title": "fixtures: add a test for a currently non-covered scope mismatch scenario",
      "body": "This test makes clear the need for the `_check_scope()` call in the `pytest_setup_fixture` impl in fixtures.py ([link](https://github.com/pytest-dev/pytest/blob/02ba39bfcd2a14be80e30afd9b72e7f60c61cb38/src/_pytest/fixtures.py#L1162)), which otherwise seems redundant with the one in `_compute_fixture_value` ([link](https://github.com/pytest-dev/pytest/blob/02ba39bfcd2a14be80e30afd9b72e7f60c61cb38/src/_pytest/fixtures.py#L725)).",
      "state": "MERGED",
      "createdAt": "2023-07-17T21:06:33Z",
      "updatedAt": "2023-07-18T17:01:37Z",
      "closedAt": "2023-07-18T06:59:55Z",
      "mergedAt": "2023-07-18T06:59:55Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "RonnyPfannschmidt"
      },
      "baseRefName": "main",
      "headRefName": "fixtures-check-scope-test",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "fixtures: add a test for a currently non-covered scope mismatch scenario\n\nThis test makes clear the need for the `_check_scope()` call in the\n`pytest_setup_fixture` impl in fixtures.py, which otherwise seems\nredundant with the one in `_compute_fixture_value`.",
              "committedDate": "2023-07-17T21:01:40Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-07-17T21:36:45Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11227,
      "title": "Have pytest.raises match against exception `__notes__`",
      "body": "<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [x] Include documentation when adding new features.\r\n- [x] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [x] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n\r\nCloses #11223\r\n\r\nAdds support for matching against `__notes__` added to an exception within `pytest.raises`. See issue for discussion/ design.\r\n\r\n### Notes\r\n\r\n* The doctest is skipped because `add_note` is only available in 3.11+\r\n  * An alternative could be to add a backport of this feature to `exceptiongroup`: https://github.com/agronholm/exceptiongroup/issues/31\r\n\r\n### TODO\r\n\r\n- [x] Add yourself to `AUTHORS` in alphabetical \r\n- [x] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`.",
      "state": "MERGED",
      "createdAt": "2023-07-17T18:11:36Z",
      "updatedAt": "2023-07-18T13:00:48Z",
      "closedAt": "2023-07-18T11:39:39Z",
      "mergedAt": "2023-07-18T11:39:39Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "match-exception-notes",
      "author": {
        "login": "ivirshup"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Type annotation fix + subsequent pyupgrade, autoflake",
              "committedDate": "2023-07-18T09:59:20Z",
              "author": {
                "name": "Isaac Virshup",
                "email": "ivirshup@gmail.com",
                "user": {
                  "login": "ivirshup"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Zac-HD"
            },
            "state": "APPROVED",
            "submittedAt": "2023-07-17T18:29:56Z",
            "body": "Looks good to me, thanks again Isaac!  Once those todos are done I'd be happy to merge."
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-17T21:07:38Z",
            "body": "LGTM, left some simple suggestions."
          },
          {
            "author": {
              "login": "ivirshup"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-18T09:42:45Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-18T10:13:34Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2023-07-18T10:15:32Z",
            "body": "Im happy now that the design decision is done and we will use match all\n\n"
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-07-18T11:38:56Z",
            "body": "Nice, thanks @ivirshup! "
          },
          {
            "author": {
              "login": "agronholm"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-18T11:44:26Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-18T11:59:07Z",
            "body": ""
          },
          {
            "author": {
              "login": "ivirshup"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-18T13:00:22Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11222,
      "title": "build(deps): Bump pytest-asyncio from 0.21.0 to 0.21.1 in /testing/plugins_integration",
      "body": "Bumps [pytest-asyncio](https://github.com/pytest-dev/pytest-asyncio) from 0.21.0 to 0.21.1.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pytest-dev/pytest-asyncio/releases\">pytest-asyncio's releases</a>.</em></p>\n<blockquote>\n<h2>pytest-asyncio 0.21.1</h2>\n<h1>0.21.1 (2023-07-12)</h1>\n<ul>\n<li>Output a proper error message when an invalid <code>asyncio_mode</code> is selected.</li>\n<li>Extend warning message about unclosed event loops with additional possible cause.\n<a href=\"https://redirect.github.com/pytest-dev/pytest-asyncio/issues/531\">#531</a></li>\n<li>Previously, some tests reported &quot;skipped&quot; or &quot;xfailed&quot; as a result. Now all tests report a &quot;success&quot; result.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/a10cbde05ff46b44f37a79b937a8dd38230f232a\"><code>a10cbde</code></a> [docs] Fixed typo.</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/82b010d6869b9c2330bcfaa551fc8fe4719f45a8\"><code>82b010d</code></a> [docs] Add release date of v0.21.1 to changelog.</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/af08b1c70dee405956437521082ae01b16b8a8df\"><code>af08b1c</code></a> [test] Removed obsolete test &quot;test_async_close_loop&quot;.</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/79b2d1aed3d31e0f95e7d97e6176ff6b82f62635\"><code>79b2d1a</code></a> [test] Added a test case which verifies compatibility with pytest.skip in aut...</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/39a97548bfb0fe0de9527a98563037cb1ce80899\"><code>39a9754</code></a> [test] The test that asserts compatibility with pytest.mark.skip reports succ...</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/a26b6dd571c7c037d9e91f9f1687fc0246571358\"><code>a26b6dd</code></a> [test] Added a test case which verifies compatibility with pytest.mark.xfail ...</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/7fa36f24f406ea65b4281444efdd3ef4a4e9f353\"><code>7fa36f2</code></a> [test] The test that asserts compatibility with pytest.mark.xfail reports suc...</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/df8811906d0e3aa6171a39beee9373e84883790e\"><code>df88119</code></a> [docs] Improved readbility of headings on the fixtures reference in the docs.</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/75a1a6ce4bdffb749527bc8e4f756e6e5f36f1b8\"><code>75a1a6c</code></a> [feat] Extend warning message about unclosed event loops with additional poss...</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-asyncio/commit/1821542b5126bee0c597c0f547e528791f3f6856\"><code>1821542</code></a> [docs] Explain that scopes of event_loop fixtures should not overlap.</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pytest-dev/pytest-asyncio/compare/v0.21.0...v0.21.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pytest-asyncio&package-manager=pip&previous-version=0.21.0&new-version=0.21.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2023-07-17T03:55:43Z",
      "updatedAt": "2023-07-17T07:27:40Z",
      "closedAt": "2023-07-17T07:27:39Z",
      "mergedAt": "2023-07-17T07:27:39Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/pip/testing/plugins_integration/pytest-asyncio-0.21.1",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "python"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump pytest-asyncio in /testing/plugins_integration\n\nBumps [pytest-asyncio](https://github.com/pytest-dev/pytest-asyncio) from 0.21.0 to 0.21.1.\n- [Release notes](https://github.com/pytest-dev/pytest-asyncio/releases)\n- [Commits](https://github.com/pytest-dev/pytest-asyncio/compare/v0.21.0...v0.21.1)\n\n---\nupdated-dependencies:\n- dependency-name: pytest-asyncio\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2023-07-17T03:55:42Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2023-07-17T07:27:34Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11221,
      "title": "build(deps): Bump pypa/gh-action-pypi-publish from 1.8.7 to 1.8.8",
      "body": "Bumps [pypa/gh-action-pypi-publish](https://github.com/pypa/gh-action-pypi-publish) from 1.8.7 to 1.8.8.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pypa/gh-action-pypi-publish/releases\">pypa/gh-action-pypi-publish's releases</a>.</em></p>\n<blockquote>\n<h2>v1.8.8</h2>\n<h2>:nail_care: Cosmetic output improvements</h2>\n<ul>\n<li>\n<p>In <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/167\">pypa/gh-action-pypi-publish#167</a>, <a href=\"https://github.com/woodruffw\"><code>@\u200bwoodruffw</code></a> introduced a nudge-warning encouraging people to start using secretless publishing to PyPI, as suggested by <a href=\"https://github.com/sponsors/sethmlarson\"><code>@\u200bsethmlarson</code></a> in <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/164\">pypa/gh-action-pypi-publish#164</a>, collaborating with <a href=\"https://github.com/di\"><code>@\u200bdi</code></a>.</p>\n<p><em>:bulb: Tip:</em> The OIDC-based trusted publishing integration details can be found in the action README at <a href=\"https://github.com/marketplace/actions/pypi-publish#trusted-publishing\">https://github.com/marketplace/actions/pypi-publish#trusted-publishing</a> and on the PyPI docs page at <a href=\"https://docs.pypi.org/trusted-publishers/\">https://docs.pypi.org/trusted-publishers/</a>. It's gone GA on April 20, 2023, during PyCon: <a href=\"https://blog.pypi.org/posts/2023-04-20-introducing-trusted-publishers/\">https://blog.pypi.org/posts/2023-04-20-introducing-trusted-publishers/</a>. And the Trail Of Bits blog post has some deeper explanation here: <a href=\"https://blog.trailofbits.com/2023/05/23/trusted-publishing-a-new-benchmark-for-packaging-security/\">https://blog.trailofbits.com/2023/05/23/trusted-publishing-a-new-benchmark-for-packaging-security/</a>.</p>\n</li>\n</ul>\n<h2>:hammer_and_wrench: Internal dependencies</h2>\n<ul>\n<li><a href=\"https://github.com/sponsors/pquentin\"><code>@\u200bpquentin</code></a> bumped the runtime dependency pins to the recent versions @ <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/168\">pypa/gh-action-pypi-publish#168</a>.</li>\n</ul>\n<h2>:muscle: New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/pquentin\"><code>@\u200bpquentin</code></a> made their first contribution in <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/168\">pypa/gh-action-pypi-publish#168</a></li>\n</ul>\n<p><strong>:mirror: Full Diff</strong>: <a href=\"https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.7...v1.8.8\">https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.7...v1.8.8</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/f8c70e705ffc13c3b4d1221169b84f12a75d6ca8\"><code>f8c70e7</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/168\">#168</a> from pquentin/bump-dependencies</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/68276eb3e42606c933a7e904e2a08d51c25f5f5b\"><code>68276eb</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/167\">#167</a> from trail-of-forks/tob-nudge</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/a5d57af63cad4af35241aa8833c74cf45dac20fa\"><code>a5d57af</code></a> Bump runtime dependencies</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/e90e853e89d14ff8ad42240b7e16f7a7f0159fd6\"><code>e90e853</code></a> twine-upload: only nudge on PyPI-looking domains</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/be695966b092c743f840d8cdab3f8a9bddc88f7e\"><code>be69596</code></a> twine-upload: add a nudge for trusted publishing</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/54d67ed3c50a769c633f7db8063c9e634709c1b0\"><code>54d67ed</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/165\">#165</a> from pypa/pre-commit-ci-update-config</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/d32e2fab322ed7f929ae799c1e6518f903577add\"><code>d32e2fa</code></a> Revert flake8 to v4.0.1</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/a8d92e9876e847b9d2375b0d8c0e677d1a5122ba\"><code>a8d92e9</code></a> [pre-commit.ci] pre-commit autoupdate</li>\n<li>See full diff in <a href=\"https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.7...v1.8.8\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pypa/gh-action-pypi-publish&package-manager=github_actions&previous-version=1.8.7&new-version=1.8.8)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2023-07-17T03:38:09Z",
      "updatedAt": "2023-07-17T07:31:08Z",
      "closedAt": "2023-07-17T07:31:07Z",
      "mergedAt": "2023-07-17T07:31:07Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/github_actions/pypa/gh-action-pypi-publish-1.8.8",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "github_actions"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump pypa/gh-action-pypi-publish from 1.8.7 to 1.8.8\n\nBumps [pypa/gh-action-pypi-publish](https://github.com/pypa/gh-action-pypi-publish) from 1.8.7 to 1.8.8.\n- [Release notes](https://github.com/pypa/gh-action-pypi-publish/releases)\n- [Commits](https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.7...v1.8.8)\n\n---\nupdated-dependencies:\n- dependency-name: pypa/gh-action-pypi-publish\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2023-07-17T03:38:08Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2023-07-17T07:31:01Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11220,
      "title": "Move `fixtures.py::add_funcarg_pseudo_fixture_def` to `Metafunc.parametrize`",
      "body": "- To remove `fixtures.py::add_funcargs_pseudo_fixture_def` and add its logic i.e. registering funcargs as params and making corresponding fixturedefs, right to `Metafunc.parametrize` in which parametrization takes place.\r\n- ~To compute param indices smarter to have a better reordering experience.~ Moved to #11257 \r\n- To remove `funcargs` from metafunc attributes as we populate metafunc params and make pseudo fixturedefs simultaneously and there's no need to keep funcargs separately.",
      "state": "MERGED",
      "createdAt": "2023-07-17T01:34:33Z",
      "updatedAt": "2023-08-09T18:13:49Z",
      "closedAt": "2023-08-09T17:13:45Z",
      "mergedAt": "2023-08-09T17:13:45Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "Improvement-move-add-pseudo-funcarg-to-metafunc-parametrize",
      "author": {
        "login": "sadra-barikbin"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Update src/_pytest/python.py",
              "committedDate": "2023-08-09T16:53:42Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-19T18:38:36Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-19T18:39:12Z",
            "body": ""
          },
          {
            "author": {
              "login": "sadra-barikbin"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-19T23:22:11Z",
            "body": ""
          },
          {
            "author": {
              "login": "sadra-barikbin"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-19T23:23:29Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-20T04:11:43Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-27T21:23:12Z",
            "body": "Hi @sadra-barikbin, I left some initial comments.\r\n\r\n> To remove fixtures.py::add_funcargs_pseudo_fixture_def and add its logic\r\n> To compute param indices smarter to have a better reordering experience\r\n\r\nAre these two changes dependent on each other? It will help the review a lot if the two changes can be considered separately."
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-27T21:39:04Z",
            "body": ""
          },
          {
            "author": {
              "login": "sadra-barikbin"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-28T07:14:26Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-28T07:26:01Z",
            "body": ""
          },
          {
            "author": {
              "login": "sadra-barikbin"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-28T08:50:56Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-28T11:27:41Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-28T11:37:23Z",
            "body": ""
          },
          {
            "author": {
              "login": "sadra-barikbin"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-28T22:26:35Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "CHANGES_REQUESTED",
            "submittedAt": "2023-07-29T09:20:47Z",
            "body": "Thanks for splitting @sadra-barikbin. I left some more comments.\r\n\r\nOverall the moving of `add_funcarg_pseudo_fixture_def` into Metafunc itself looks good to me, it's a good stepping-stone simplification.\r\n\r\nI'd still like to understand the change in the issue519 test better.\r\n\r\nAlso, the removal of `CallSpec2.funcargs` is going to break some plugins, we'll need to analyze and mitigate and/or document it properly before merging. Since `add_funcarg_pseudo_fixture_def` always clears `funcargs` I'm not sure how useful it is, but maybe plugins hook to it before it is cleared."
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-29T10:33:22Z",
            "body": ""
          },
          {
            "author": {
              "login": "sadra-barikbin"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-29T11:25:46Z",
            "body": ""
          },
          {
            "author": {
              "login": "sadra-barikbin"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-29T11:30:56Z",
            "body": ""
          },
          {
            "author": {
              "login": "sadra-barikbin"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-29T11:32:43Z",
            "body": ""
          },
          {
            "author": {
              "login": "sadra-barikbin"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-29T11:39:17Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-29T16:10:22Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11219,
      "title": "fixtures: make FixtureRequest abstract, add TopRequest subclass",
      "body": "Fix #11218.",
      "state": "MERGED",
      "createdAt": "2023-07-16T20:55:37Z",
      "updatedAt": "2023-08-15T18:52:49Z",
      "closedAt": "2023-08-15T18:52:46Z",
      "mergedAt": "2023-08-15T18:52:46Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "fixtures2",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "fixtures: make FixtureRequest abstract, add TopRequest subclass\n\nFix #11218.",
              "committedDate": "2023-08-12T08:55:08Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-17T09:12:17Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-17T09:20:08Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-17T13:59:45Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-17T13:59:57Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-17T14:51:08Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-17T14:51:47Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-08-12T09:12:35Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-08-12T15:06:12Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11217,
      "title": "fixtures: show test as skip location if skipped from an xunit setup function",
      "body": "Fix #11216.",
      "state": "MERGED",
      "createdAt": "2023-07-16T20:28:12Z",
      "updatedAt": "2023-07-17T14:30:10Z",
      "closedAt": "2023-07-17T14:30:06Z",
      "mergedAt": "2023-07-17T14:30:06Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "fixtures-skip-xunit-loc",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "fixtures: show test as skip location if skipped from an xunit setup function\n\nFix #11216.",
              "committedDate": "2023-07-16T20:26:04Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2023-07-17T09:28:33Z",
            "body": ":+1: "
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-07-17T14:07:20Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11215,
      "title": "fixtures: minor tweaks",
      "body": "These are a few more small fixture-related tweaks, please see the commits.",
      "state": "MERGED",
      "createdAt": "2023-07-16T20:19:46Z",
      "updatedAt": "2023-07-17T14:30:28Z",
      "closedAt": "2023-07-17T14:30:25Z",
      "mergedAt": "2023-07-17T14:30:25Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "fixtures-tweaks2",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "fixtures: remove inaccurate comment\n\nunittest TestCases can also use `usefixtures`. Just remove this comment,\nit's not very helpful.",
              "committedDate": "2023-07-16T20:19:33Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-07-17T13:03:21Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11214,
      "title": "[automated] Update plugin list",
      "body": "[automated] Update plugin list",
      "state": "MERGED",
      "createdAt": "2023-07-16T00:28:58Z",
      "updatedAt": "2023-07-16T10:07:41Z",
      "closedAt": "2023-07-16T10:07:40Z",
      "mergedAt": "2023-07-16T10:07:40Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "update-plugin-list/patch-32f480814",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[automated] Update plugin list",
              "committedDate": "2023-07-16T00:28:56Z",
              "author": {
                "name": "pytest bot",
                "email": "pytestbot@users.noreply.github.com",
                "user": {
                  "login": "pytestbot"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-07-16T09:48:04Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11213,
      "title": "Use typing.Literal without TYPE_CHECKING checks",
      "body": "Literal was added in Python 3.8 which we now require so can use it freely.",
      "state": "MERGED",
      "createdAt": "2023-07-15T22:12:18Z",
      "updatedAt": "2023-07-16T20:17:16Z",
      "closedAt": "2023-07-16T20:17:13Z",
      "mergedAt": "2023-07-16T20:17:12Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "py38-literal",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Use typing.Literal without TYPE_CHECKING checks\n\nLiteral was added in Python 3.8 which we now require so can use it\nfreely.",
              "committedDate": "2023-07-15T22:11:21Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-07-16T16:59:17Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2023-07-16T18:10:17Z",
            "body": "Lovely, thanks \ud83d\udc4d"
          }
        ]
      }
    },
    {
      "number": 11211,
      "title": "Changing behaviour of PytestReturnNotNoneWarning to return a warning",
      "body": "head-fork: fraserstark/pytest\r\ncompare: fix-not-none-warning\r\n\r\nbase-fork: pytest-dev/pytest\r\nbase: main\r\n\r\nFixes #10465 \r\n\r\nThis is my first contribution, I'm not sure if I've used the correct name for the changelog entry so perhaps someone can let me know and I'll adjust if necessary. \r\n\r\n<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "MERGED",
      "createdAt": "2023-07-15T14:29:40Z",
      "updatedAt": "2023-09-07T15:12:00Z",
      "closedAt": "2023-09-07T15:11:59Z",
      "mergedAt": "2023-09-07T15:11:59Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "fix-not-none-warning",
      "author": {
        "login": "fraserstark"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Improve and fix changelog",
              "committedDate": "2023-09-07T14:50:49Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@soliv.dev",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-09-07T14:46:07Z",
            "body": "Thanks @fraserstark for the contribution!\r\n\r\nSorry this got lost in the noise and took so long to review."
          }
        ]
      }
    },
    {
      "number": 11209,
      "title": "fixtures: some tweaks & improvements",
      "body": "These are some relatively small changes I made while going over the fixture code. Please see the commits.",
      "state": "MERGED",
      "createdAt": "2023-07-14T08:55:18Z",
      "updatedAt": "2023-07-15T18:05:17Z",
      "closedAt": "2023-07-15T16:40:49Z",
      "mergedAt": "2023-07-15T16:40:48Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "fixtures-doc-comments",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "fixtures: remove two unused functions\n\nNot used since 310b67b2271cb05f575054c1cdd2ece2412c89a2.",
              "committedDate": "2023-07-15T07:06:06Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-07-14T14:17:03Z",
            "body": "Thanks @bluetech, great docs as always!"
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-14T19:36:25Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-14T19:36:39Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-14T19:38:30Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-14T20:58:22Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-14T20:59:12Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-14T21:13:10Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-15T07:35:32Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-15T07:40:23Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-15T07:48:23Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-15T12:04:38Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-15T12:09:45Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-15T16:40:10Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-15T18:05:17Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11195,
      "title": "[pre-commit.ci] pre-commit autoupdate",
      "body": "<!--pre-commit.ci start-->\nupdates:\n- [github.com/psf/black: 23.3.0 \u2192 23.7.0](https://github.com/psf/black/compare/23.3.0...23.7.0)\n- [github.com/asottile/blacken-docs: 1.14.0 \u2192 1.15.0](https://github.com/asottile/blacken-docs/compare/1.14.0...1.15.0)\n- [github.com/asottile/pyupgrade: v3.8.0 \u2192 v3.9.0](https://github.com/asottile/pyupgrade/compare/v3.8.0...v3.9.0)\n<!--pre-commit.ci end-->",
      "state": "MERGED",
      "createdAt": "2023-07-11T06:53:18Z",
      "updatedAt": "2024-01-10T18:30:47Z",
      "closedAt": "2023-07-11T11:37:08Z",
      "mergedAt": "2023-07-11T11:37:08Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "main",
      "headRefName": "pre-commit-ci-update-config",
      "author": {
        "login": "pre-commit-ci"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Update .pre-commit-config.yaml",
              "committedDate": "2023-07-11T11:17:32Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "nicoddemus@gmail.com",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2023-07-11T06:55:08Z",
            "body": ""
          },
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-11T06:56:00Z",
            "body": ""
          },
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2023-07-11T06:56:20Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11192,
      "title": "A few more Python>=3.8 simplifications",
      "body": "",
      "state": "MERGED",
      "createdAt": "2023-07-10T20:25:22Z",
      "updatedAt": "2024-01-10T18:31:31Z",
      "closedAt": "2023-07-10T22:13:17Z",
      "mergedAt": "2023-07-10T22:13:17Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "py38-extra",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "A few more Python>=3.8 simplifications",
              "committedDate": "2023-07-10T20:20:11Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-07-10T21:46:42Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11191,
      "title": "build(deps): Bump anyio[curio,trio] from 3.7.0 to 3.7.1 in /testing/plugins_integration",
      "body": "Bumps [anyio[curio,trio]](https://github.com/agronholm/anyio) from 3.7.0 to 3.7.1.\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/agronholm/anyio/blob/master/docs/versionhistory.rst\">anyio[curio,trio]'s changelog</a>.</em></p>\n<blockquote>\n<h1>Version history</h1>\n<p>This library adheres to <code>Semantic Versioning 2.0 &lt;http://semver.org/&gt;</code>_.</p>\n<p><strong>UNRELEASED</strong></p>\n<ul>\n<li><strong>BACKWARDS INCOMPATIBLE</strong> Replaced AnyIO's own <code>ExceptionGroup</code> class with the PEP\n654 <code>BaseExceptionGroup</code> and <code>ExceptionGroup</code></li>\n<li><strong>BACKWARDS INCOMPATIBLE</strong> Changes the pytest plugin to run all tests and fixtures in\nthe same task, allowing fixtures to set context variables for tests and other fixtures</li>\n<li><strong>BACKWARDS INCOMPATIBLE</strong> Changed <code>anyio.Path.relative_to()</code> and\n<code>anyio.Path.is_relative_to()</code> to only accept one argument, as passing multiple\narguments is deprecated as of Python 3.12</li>\n<li><strong>BACKWARDS INCOMPATIBLE</strong> Dropped support for spawning tasks from old-style coroutine\nfunctions (<code>@asyncio.coroutine</code>)</li>\n<li>Dropped support for Python 3.7</li>\n<li>Added support for Python 3.12</li>\n<li>Bumped minimum version of trio to v0.22</li>\n<li>Added the <code>anyio.Path.is_junction()</code> and <code>anyio.Path.walk()</code> methods</li>\n<li>Added <code>create_unix_datagram_socket</code> and <code>create_connected_unix_datagram_socket</code> to\ncreate UNIX datagram sockets (PR by Jean Hominal)</li>\n</ul>\n<p><strong>3.7.1</strong></p>\n<ul>\n<li>Fixed sending large buffers via UNIX stream sockets on asyncio</li>\n<li>Fixed several minor documentation issues (broken links to classes, missing classes or\nattributes)</li>\n</ul>\n<p><strong>3.7.0</strong></p>\n<ul>\n<li>\n<p>Dropped support for Python 3.6</p>\n</li>\n<li>\n<p>Improved type annotations:</p>\n<ul>\n<li>\n<p>Several functions and methods that were previously annotated as accepting\n<code>Coroutine[Any, Any, Any]</code> as the return type of the callable have been amended to\naccept <code>Awaitable[Any]</code> instead, to allow a slightly broader set of coroutine-like\ninputs, like <code>async_generator_asend</code> objects returned from the <code>asend()</code> method\nof async generators, and to match the <code>trio</code> annotations:</p>\n<ul>\n<li><code>anyio.run()</code></li>\n<li><code>anyio.from_thread.run()</code></li>\n<li><code>TaskGroup.start_soon()</code></li>\n<li><code>TaskGroup.start()</code></li>\n<li><code>BlockingPortal.call()</code></li>\n<li><code>BlockingPortal.start_task_soon()</code></li>\n<li><code>BlockingPortal.start_task()</code></li>\n</ul>\n<p>Note that this change involved only changing the type annotations; run-time\nfunctionality was not altered.</p>\n</li>\n</ul>\n</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/agronholm/anyio/commit/3e182fa619002d90c7c3c531a25d76cab0e92893\"><code>3e182fa</code></a> Bumped up the version</li>\n<li><a href=\"https://github.com/agronholm/anyio/commit/d92065427eef40f711b81f18a5994c330e1dd400\"><code>d920654</code></a> Fixed cache dependency path in GitHub test workflow</li>\n<li><a href=\"https://github.com/agronholm/anyio/commit/da94a29277ade6b55bb17765c7724841f1af545f\"><code>da94a29</code></a> Fixed several Sphinx build issues</li>\n<li><a href=\"https://github.com/agronholm/anyio/commit/f1f9991fef8a7987eb6d9250de8a4b58d3cbdc2f\"><code>f1f9991</code></a> Fixed sending large buffers on UNIX stream sockets on asyncio</li>\n<li><a href=\"https://github.com/agronholm/anyio/commit/052634cc2e63832427fcc3e4feaabab9226205c9\"><code>052634c</code></a> Updated pre-commit modules</li>\n<li>See full diff in <a href=\"https://github.com/agronholm/anyio/compare/3.7.0...3.7.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=anyio[curio,trio]&package-manager=pip&previous-version=3.7.0&new-version=3.7.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2023-07-10T03:30:12Z",
      "updatedAt": "2024-01-10T18:32:01Z",
      "closedAt": "2023-07-10T13:23:47Z",
      "mergedAt": "2023-07-10T13:23:47Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/pip/testing/plugins_integration/anyio-curiotrio--3.7.1",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "python"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump anyio[curio,trio] in /testing/plugins_integration\n\nBumps [anyio[curio,trio]](https://github.com/agronholm/anyio) from 3.7.0 to 3.7.1.\n- [Changelog](https://github.com/agronholm/anyio/blob/master/docs/versionhistory.rst)\n- [Commits](https://github.com/agronholm/anyio/compare/3.7.0...3.7.1)\n\n---\nupdated-dependencies:\n- dependency-name: anyio[curio,trio]\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2023-07-10T03:30:11Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11190,
      "title": "build(deps): Bump pytest-rerunfailures from 11.1.2 to 12.0 in /testing/plugins_integration",
      "body": "Bumps [pytest-rerunfailures](https://github.com/pytest-dev/pytest-rerunfailures) from 11.1.2 to 12.0.\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/pytest-dev/pytest-rerunfailures/blob/master/CHANGES.rst\">pytest-rerunfailures's changelog</a>.</em></p>\n<blockquote>\n<h2>12.0 (2023-07-05)</h2>\n<p>Breaking changes\n++++++++++++++++</p>\n<ul>\n<li>Drop support for pytest &lt; 6.2.</li>\n</ul>\n<p>Features\n++++++++</p>\n<ul>\n<li>\n<p>Add <code>only_rerun</code> and <code>rerun_except</code> arguments to <code>@pytest.mark.flaky</code> marker.</p>\n</li>\n<li>\n<p>Add support for pytest 7.3, 7.4.</p>\n</li>\n</ul>\n<p>Bug fixes\n+++++++++</p>\n<ul>\n<li>Failures are now rerun only if they match at least one <code>--only-rerun</code>\npattern (if given) and none of the <code>--rerun-except</code> patterns. Previously,\nusing both <code>--only-rerun</code> and <code>--rerun-except</code> together could cause\nfailures to be rerun even if they did not match any <code>--only-rerun</code>\npattern, and when using multiple <code>--rerun-except</code> patterns, all failures\nwould be rerun unless they matched every pattern.\n(<code>[#225](https://github.com/pytest-dev/pytest-rerunfailures/issues/225) &lt;https://github.com/pytest-dev/pytest-rerunfailures/issues/225&gt;</code>_)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pytest-dev/pytest-rerunfailures/commit/903c0857017a43b0732f11d3075f1c056eb25fd9\"><code>903c085</code></a> Preparing release 12.0</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-rerunfailures/commit/e109b7a071cda208aba2fbd285dcdb0bc886bd6f\"><code>e109b7a</code></a> Garden change log.</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-rerunfailures/commit/6970e1486bf220ac303596a34c90e9201687e5e8\"><code>6970e14</code></a> Fix handling of --rerun-except arguments (<a href=\"https://redirect.github.com/pytest-dev/pytest-rerunfailures/issues/226\">#226</a>)</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-rerunfailures/commit/5f5734a688ba2ce6a9b5dbcce21b398e6cecdbdc\"><code>5f5734a</code></a> Drop support for pytest &lt; 6.2. Add support for pytest 7.3, 7.4. (<a href=\"https://redirect.github.com/pytest-dev/pytest-rerunfailures/issues/223\">#223</a>)</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-rerunfailures/commit/1a63b6af2ad6933ad6aa87da399b6a5017c70d52\"><code>1a63b6a</code></a> Document how to exclude exceptions coming from using <code>assert</code> (<a href=\"https://redirect.github.com/pytest-dev/pytest-rerunfailures/issues/224\">#224</a>)</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-rerunfailures/commit/bfc030f841ba5c81493c87ba2a3db3339b500df1\"><code>bfc030f</code></a> Add only_rerun and rerun_except kwargs to marker (<a href=\"https://redirect.github.com/pytest-dev/pytest-rerunfailures/issues/221\">#221</a>)</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-rerunfailures/commit/1923529bcf209c4f95ea325cc1068a26493d2983\"><code>1923529</code></a> Document flaky incompatibility. (<a href=\"https://redirect.github.com/pytest-dev/pytest-rerunfailures/issues/219\">#219</a>)</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-rerunfailures/commit/35ca5ab602c7e8ffcede6a717f741d9bd62ebf81\"><code>35ca5ab</code></a> Release 11.1.2 aftermath (<a href=\"https://redirect.github.com/pytest-dev/pytest-rerunfailures/issues/212\">#212</a>)</li>\n<li>See full diff in <a href=\"https://github.com/pytest-dev/pytest-rerunfailures/compare/11.1.2...12.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pytest-rerunfailures&package-manager=pip&previous-version=11.1.2&new-version=12.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2023-07-10T03:30:05Z",
      "updatedAt": "2023-07-10T13:23:35Z",
      "closedAt": "2023-07-10T13:23:34Z",
      "mergedAt": "2023-07-10T13:23:34Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/pip/testing/plugins_integration/pytest-rerunfailures-12.0",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "python"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump pytest-rerunfailures in /testing/plugins_integration\n\nBumps [pytest-rerunfailures](https://github.com/pytest-dev/pytest-rerunfailures) from 11.1.2 to 12.0.\n- [Changelog](https://github.com/pytest-dev/pytest-rerunfailures/blob/master/CHANGES.rst)\n- [Commits](https://github.com/pytest-dev/pytest-rerunfailures/compare/11.1.2...12.0)\n\n---\nupdated-dependencies:\n- dependency-name: pytest-rerunfailures\n  dependency-type: direct:production\n  update-type: version-update:semver-major\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2023-07-10T03:30:04Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11189,
      "title": "build(deps): Bump pypa/gh-action-pypi-publish from 1.8.5 to 1.8.7",
      "body": "Bumps [pypa/gh-action-pypi-publish](https://github.com/pypa/gh-action-pypi-publish) from 1.8.5 to 1.8.7.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pypa/gh-action-pypi-publish/releases\">pypa/gh-action-pypi-publish's releases</a>.</em></p>\n<blockquote>\n<h2>v1.8.7</h2>\n<h2>:nail_care: Cosmetic output impovements</h2>\n<ul>\n<li><a href=\"https://github.com/woodruffw\"><code>@\u200bwoodruffw</code></a> fixed OIDC the multiline annotations by escaping LF through urlencoding it in <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/156\">pypa/gh-action-pypi-publish#156</a>.</li>\n<li><a href=\"https://github.com/jaap3\"><code>@\u200bjaap3</code></a> noticed and promptly removed extraneous <code>}</code> from a non-OIDC log annotation in <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/161\">pypa/gh-action-pypi-publish#161</a>.</li>\n<li><a href=\"https://github.com/hugovk\"><code>@\u200bhugovk</code></a> made pip ignore that it runs under the root user and suppress its warning output in <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/159\">pypa/gh-action-pypi-publish#159</a>.</li>\n</ul>\n<h2>:hammer_and_wrench: Internal dependencies</h2>\n<ul>\n<li>Cryptography was bumped from 39.0.1 to 41.0.0 @ <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/160\">pypa/gh-action-pypi-publish#160</a></li>\n<li>Requests was bumped from 2.28.1 to 2.31.0 @ <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/157\">pypa/gh-action-pypi-publish#157</a></li>\n</ul>\n<h2>:muscle: New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/jaap3\"><code>@\u200bjaap3</code></a> made their first contribution in <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/161\">pypa/gh-action-pypi-publish#161</a></li>\n</ul>\n<p><strong>:mirror: Full Diff</strong>: <a href=\"https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.6...v1.8.7\">https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.6...v1.8.7</a></p>\n<h2>v1.8.6</h2>\n<h2>What's Updated</h2>\n<ul>\n<li><a href=\"https://github.com/sponsors/woodruffw\"><code>@\u200bwoodruffw</code></a> dropped the references to a \u201cprivate beta\u201d from the project docs and runtime in <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/147\">pypa/gh-action-pypi-publish#147</a>. He also clarified that the API tokens are still more secure than passwords in <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/150\">pypa/gh-action-pypi-publish#150</a>.</li>\n<li><a href=\"https://github.com/sponsors/asherf\"><code>@\u200basherf</code></a> noticed that the action metadata incorrectly marked the <code>password</code> field as required and contributed a correction in <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/151\">pypa/gh-action-pypi-publish#151</a></li>\n<li><a href=\"https://github.com/sponsors/webknjaz\"><code>@\u200bwebknjaz</code></a> moved the Trusted Publishing example to the top of the README in hopes that new users would default to using it via <a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/f47b34707fd264d5ddb1ef322ca74cf8e4cf351b\">https://github.com/pypa/gh-action-pypi-publish/commit/f47b34707fd264d5ddb1ef322ca74cf8e4cf351b</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/sponsors/asherf\"><code>@\u200basherf</code></a> made their first contribution in <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/151\">pypa/gh-action-pypi-publish#151</a></li>\n</ul>\n<p><strong>Full Diff</strong>: <a href=\"https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.5...v1.8.6\">https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.5...v1.8.6</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/f5622bde02b04381239da3573277701ceca8f6a0\"><code>f5622bd</code></a> Merge PRs <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/159\">#159</a> and <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/160\">#160</a> into unstable/v1</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/3be882c473b35162143effc2be2455999c59fc06\"><code>3be882c</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/161\">#161</a> from jaap3/jaap3-patch-1</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/775be49481ba30cf6003c8fdc32d3b3acf48c6a3\"><code>775be49</code></a> Remove extraneous }</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/5684530096325b74c64f5c67ddf81806eb6507cb\"><code>5684530</code></a> Bump cryptography from 39.0.1 to 41.0.0 in /requirements</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/135d0d53531a9cf16b81e1b7eaa4992247060d83\"><code>135d0d5</code></a> Ignore pip's root user warning</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/110f54a3871763056757c3e203635d4c5711439f\"><code>110f54a</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/157\">#157</a> from pypa/dependabot/pip/requirements/requests-2.31.0</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/c803c91ef00ddbdb881fa5726ed11f611f0a0edf\"><code>c803c91</code></a> Bump requests from 2.28.1 to 2.31.0 in /requirements</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/f9ed8ba9ad06d20b1ebb6002ffb93050ed9a1951\"><code>f9ed8ba</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/156\">#156</a> from trail-of-forks/tob-fix-annotation</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/30639668ca11564ee2c0fda77e7e080e3a03c9ed\"><code>3063966</code></a> oidc-exchange: &quot;fix&quot; multiline annotations</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/a56da0b891b3dc519c7ee3284aff1fad93cc8598\"><code>a56da0b</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/151\">#151</a> from asherf/trusted</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.5...v1.8.7\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pypa/gh-action-pypi-publish&package-manager=github_actions&previous-version=1.8.5&new-version=1.8.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2023-07-10T03:19:13Z",
      "updatedAt": "2023-07-10T13:23:14Z",
      "closedAt": "2023-07-10T13:23:13Z",
      "mergedAt": "2023-07-10T13:23:13Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/github_actions/pypa/gh-action-pypi-publish-1.8.7",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "github_actions"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump pypa/gh-action-pypi-publish from 1.8.5 to 1.8.7\n\nBumps [pypa/gh-action-pypi-publish](https://github.com/pypa/gh-action-pypi-publish) from 1.8.5 to 1.8.7.\n- [Release notes](https://github.com/pypa/gh-action-pypi-publish/releases)\n- [Commits](https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.5...v1.8.7)\n\n---\nupdated-dependencies:\n- dependency-name: pypa/gh-action-pypi-publish\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2023-07-10T03:19:13Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11188,
      "title": "[7.4.x] Clarify docs for pytest.main default behavior",
      "body": "Backport of PR #11187 to 7.4.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2023-07-09T15:31:59Z",
      "updatedAt": "2023-07-09T15:55:00Z",
      "closedAt": "2023-07-09T15:54:59Z",
      "mergedAt": "2023-07-09T15:54:59Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "7.4.x",
      "headRefName": "backport-11187-to-7.4.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[7.4.x] Clarify docs for pytest.main default behavior",
              "committedDate": "2023-07-09T15:31:57Z",
              "author": {
                "name": "antosikv",
                "email": "79337398+antosikv@users.noreply.github.com",
                "user": {
                  "login": "antosikv"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-07-09T15:32:25Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11187,
      "title": "Clarify docs for pytest.main default behavior",
      "body": "Add explicit mentions of the somewhat confusing default behavior (discussed in #11183) to both API reference and how-to section about ways to invoke pytest.",
      "state": "MERGED",
      "createdAt": "2023-07-09T13:36:48Z",
      "updatedAt": "2024-01-10T18:32:25Z",
      "closedAt": "2023-07-09T15:30:33Z",
      "mergedAt": "2023-07-09T15:30:33Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "clarify-main-docs",
      "author": {
        "login": "antosikv"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Slightly reword the docs about default main behavior\r\n\r\nExplicitly mention reading arguments from `sys.argv` to avoid any confusion.\n\nCo-authored-by: Ran Benita <ran@unusedvar.com>",
              "committedDate": "2023-07-09T14:35:33Z",
              "author": {
                "name": "antosikv",
                "email": "79337398+antosikv@users.noreply.github.com",
                "user": {
                  "login": "antosikv"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-09T14:01:40Z",
            "body": "Thanks!\r\n\r\nI left some rewording suggestions, WDYT?"
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-07-09T15:29:52Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11184,
      "title": "[automated] Update plugin list",
      "body": "[automated] Update plugin list",
      "state": "MERGED",
      "createdAt": "2023-07-09T00:29:18Z",
      "updatedAt": "2023-07-09T14:09:14Z",
      "closedAt": "2023-07-09T14:09:13Z",
      "mergedAt": "2023-07-09T14:09:13Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "update-plugin-list/patch-fd7a4d242",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[automated] Update plugin list",
              "committedDate": "2023-07-09T00:29:15Z",
              "author": {
                "name": "pytest bot",
                "email": "pytestbot@users.noreply.github.com",
                "user": {
                  "login": "pytestbot"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-07-09T13:49:54Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11182,
      "title": "[7.4.x] doc: fix EncodingWarnings in examples",
      "body": "Backport of PR #11158 to 7.4.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2023-07-08T18:41:47Z",
      "updatedAt": "2023-07-08T19:17:22Z",
      "closedAt": "2023-07-08T19:17:21Z",
      "mergedAt": "2023-07-08T19:17:21Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "7.4.x",
      "headRefName": "backport-11158-to-7.4.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[7.4.x] doc: fix EncodingWarnings in examples",
              "committedDate": "2023-07-08T18:41:44Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-07-08T18:42:41Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11181,
      "title": "[7.4.x] reference: improve the node types docs a bit",
      "body": "Backport of PR #11106 to 7.4.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2023-07-08T18:41:46Z",
      "updatedAt": "2023-07-08T19:07:56Z",
      "closedAt": "2023-07-08T19:07:55Z",
      "mergedAt": "2023-07-08T19:07:55Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "7.4.x",
      "headRefName": "backport-11106-to-7.4.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[7.4.x] reference: improve the node types docs a bit",
              "committedDate": "2023-07-08T18:41:45Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "nicoddemus@gmail.com",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-07-08T18:42:06Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11180,
      "title": "[7.4.x] Fix error assertion handling in approx when None in dict comparison",
      "body": "Backport of PR #11178 to 7.4.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2023-07-08T18:10:31Z",
      "updatedAt": "2023-07-08T18:37:37Z",
      "closedAt": "2023-07-08T18:37:36Z",
      "mergedAt": "2023-07-08T18:37:36Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "7.4.x",
      "headRefName": "backport-11178-to-7.4.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[7.4.x] Fix error assertion handling in approx when None in dict comparison",
              "committedDate": "2023-07-08T18:10:30Z",
              "author": {
                "name": "Zac Hatfield-Dodds",
                "email": "zac.hatfield.dodds@gmail.com",
                "user": {
                  "login": "Zac-HD"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-07-08T18:11:39Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11178,
      "title": "Fix error assertion handling in approx when None in dict comparison",
      "body": "Closes #10702\r\n\r\nDict comparsion in the ApproxMapping class did not check if values were None before attempting to subtract for max_abs_diff stat, which was throwing an TypeError instead of being handled by pytest error assertion. Check for None has been added before these calculations, so that None will properly show as Obtained/Expected in pytest assert message\r\n\r\n<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "MERGED",
      "createdAt": "2023-07-07T19:54:58Z",
      "updatedAt": "2023-07-08T18:10:10Z",
      "closedAt": "2023-07-08T17:40:42Z",
      "mergedAt": "2023-07-08T17:40:42Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Zac-HD"
      },
      "baseRefName": "main",
      "headRefName": "add-none-support-approxmapping",
      "author": {
        "login": "kenny-y-dev"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Update src/_pytest/python_api.py\n\nCo-authored-by: Bruno Oliveira <nicoddemus@gmail.com>",
              "committedDate": "2023-07-08T12:41:42Z",
              "author": {
                "name": "Kenny Y",
                "email": "24802984+kenny-y-dev@users.noreply.github.com",
                "user": {
                  "login": "kenny-y-dev"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-07-08T12:21:09Z",
            "body": "Thanks a lot @kenny-y-dev, we appreciate another contribution!\r\n\r\n"
          },
          {
            "author": {
              "login": "kenny-y-dev"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-08T12:49:12Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11175,
      "title": "build(deps): Bump django from 4.2.2 to 4.2.3 in /testing/plugins_integration",
      "body": "Bumps [django](https://github.com/django/django) from 4.2.2 to 4.2.3.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/django/django/commit/1651351386ab31d8ae492c8a4922797714ca97d1\"><code>1651351</code></a> [4.2.x] Bumped version for 4.2.3 release.</li>\n<li><a href=\"https://github.com/django/django/commit/b7c5feb35a31799de6e582ad6a5a91a9de74e0f9\"><code>b7c5feb</code></a> [4.2.x] Fixed CVE-2023-36053 -- Prevented potential ReDoS in EmailValidator a...</li>\n<li><a href=\"https://github.com/django/django/commit/1ea11365f61a78051e196e6123d5f987efa90df1\"><code>1ea1136</code></a> [4.2.x] Fixed typo in docs/intro/tutorial08.txt.</li>\n<li><a href=\"https://github.com/django/django/commit/7b45fe01abac68ba5c0162529eb6378eec405099\"><code>7b45fe0</code></a> [4.2.x] Added dedicated section for output_field in query expressions docs.</li>\n<li><a href=\"https://github.com/django/django/commit/67fe092a858919e3e04e21360c95645bf4673bb0\"><code>67fe092</code></a> [4.2.x] Fixed typo in docs/ref/models/querysets.txt.</li>\n<li><a href=\"https://github.com/django/django/commit/9ab56e64deb64498b4acfe9e71619b45603c552f\"><code>9ab56e6</code></a> [4.2.x] Added stub release notes and release date for 4.2.3, 4.1.10, and 3.2.20.</li>\n<li><a href=\"https://github.com/django/django/commit/a18e0f44d5692b656bd8ea178e830ebdc80a000d\"><code>a18e0f4</code></a> [4.2.x] Corrected admin.E013 check message in docs.</li>\n<li><a href=\"https://github.com/django/django/commit/fabd0510a0d59760babb071e8c06a892bb1a2f5e\"><code>fabd051</code></a> [4.2.x] Fixed typo in docs/topics/db/fixtures.txt.</li>\n<li><a href=\"https://github.com/django/django/commit/4b433ef236bf1607d5612d4c30f095ec9f6e63dc\"><code>4b433ef</code></a> [4.2.x] Refs <a href=\"https://redirect.github.com/django/django/issues/30220\">#30220</a> -- Bumped required version of Selenium to 3.8.0.</li>\n<li><a href=\"https://github.com/django/django/commit/9e9a286bed4757b6f7ed2b6d5f0296203d99a15f\"><code>9e9a286</code></a> [4.2.x] Fixed <a href=\"https://redirect.github.com/django/django/issues/34638\">#34638</a> -- Fixed admin change list selected row highlight on edi...</li>\n<li>Additional commits viewable in <a href=\"https://github.com/django/django/compare/4.2.2...4.2.3\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=django&package-manager=pip&previous-version=4.2.2&new-version=4.2.3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/pytest-dev/pytest/network/alerts).\n\n</details>",
      "state": "MERGED",
      "createdAt": "2023-07-05T22:57:46Z",
      "updatedAt": "2023-07-06T08:51:45Z",
      "closedAt": "2023-07-06T08:51:44Z",
      "mergedAt": "2023-07-06T08:51:44Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/pip/testing/plugins_integration/django-4.2.3",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "python"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump django in /testing/plugins_integration\n\nBumps [django](https://github.com/django/django) from 4.2.2 to 4.2.3.\n- [Commits](https://github.com/django/django/compare/4.2.2...4.2.3)\n\n---\nupdated-dependencies:\n- dependency-name: django\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2023-07-05T22:57:45Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-07-06T08:51:31Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11173,
      "title": "tox: turn off PYTHONWARNDEFAULTENCODING for pre-commit, sphinx etc.",
      "body": "Fix #11157.",
      "state": "MERGED",
      "createdAt": "2023-07-05T16:05:38Z",
      "updatedAt": "2023-07-06T08:49:29Z",
      "closedAt": "2023-07-05T16:48:26Z",
      "mergedAt": "2023-07-05T16:48:26Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Zac-HD"
      },
      "baseRefName": "main",
      "headRefName": "enc-warning-detox",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "tox: turn off PYTHONWARNDEFAULTENCODING for pre-commit, sphinx etc.\n\nFix #11157.",
              "committedDate": "2023-07-05T16:05:08Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Zac-HD"
            },
            "state": "APPROVED",
            "submittedAt": "2023-07-05T16:48:16Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11172,
      "title": "[7.4.x] Update open trainings",
      "body": "Backport of PR #11171 to 7.4.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2023-07-04T21:20:57Z",
      "updatedAt": "2023-07-04T21:49:25Z",
      "closedAt": "2023-07-04T21:49:24Z",
      "mergedAt": "2023-07-04T21:49:24Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "The-Compiler"
      },
      "baseRefName": "7.4.x",
      "headRefName": "backport-11171-to-7.4.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[7.4.x] Update open trainings",
              "committedDate": "2023-07-04T21:20:56Z",
              "author": {
                "name": "Florian Bruhin",
                "email": "me@the-compiler.org",
                "user": {
                  "login": "The-Compiler"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "The-Compiler"
            },
            "state": "APPROVED",
            "submittedAt": "2023-07-04T21:30:30Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11171,
      "title": "Update open trainings",
      "body": "One more! [pytest: Professionelles Testen (nicht nur) f\u00fcr Python > Workshop-Tage](https://workshoptage.ch/workshops/2023/pytest-professionelles-testen-nicht-nur-fuer-python-2/)",
      "state": "MERGED",
      "createdAt": "2023-07-04T20:48:13Z",
      "updatedAt": "2023-07-04T21:19:32Z",
      "closedAt": "2023-07-04T21:19:24Z",
      "mergedAt": "2023-07-04T21:19:24Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "The-Compiler"
      },
      "baseRefName": "main",
      "headRefName": "training-update-2023-07",
      "author": {
        "login": "The-Compiler"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: docs"
          },
          {
            "name": "needs backport"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Update open trainings",
              "committedDate": "2023-07-04T20:59:49Z",
              "author": {
                "name": "Florian Bruhin",
                "email": "me@the-compiler.org",
                "user": {
                  "login": "The-Compiler"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-07-04T21:14:57Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11170,
      "title": "Add instructions to update RTD settings after major releases",
      "body": "Related to #11167\r\n",
      "state": "CLOSED",
      "createdAt": "2023-07-04T19:56:51Z",
      "updatedAt": "2023-07-04T20:19:52Z",
      "closedAt": "2023-07-04T20:17:44Z",
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "release-rtd",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Add instructions to update RTD settings after major releases\n\nRelated to #11167",
              "committedDate": "2023-07-04T19:55:53Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "nicoddemus@gmail.com",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "The-Compiler"
            },
            "state": "CHANGES_REQUESTED",
            "submittedAt": "2023-07-04T20:01:23Z",
            "body": "It's already in there:\r\n\r\n> 6. For major and minor releases, change the default version in the [Read the Docs Settings](https://readthedocs.org/dashboard/pytest/advanced/) to the new branch."
          }
        ]
      }
    },
    {
      "number": 11169,
      "title": "Update docs and code after dropping EOL 3.7",
      "body": "<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n\r\nFollow on from https://github.com/pytest-dev/pytest/issues/11151 / https://github.com/pytest-dev/pytest/pull/11152.\r\n\r\nUpdate and remove a few other bits and pieces only needed for Python <= 3.7.\r\n",
      "state": "MERGED",
      "createdAt": "2023-07-04T16:20:54Z",
      "updatedAt": "2023-07-07T05:47:15Z",
      "closedAt": "2023-07-07T05:28:45Z",
      "mergedAt": "2023-07-07T05:28:45Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Zac-HD"
      },
      "baseRefName": "main",
      "headRefName": "test-me-rm-3.7",
      "author": {
        "login": "hugovk"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Use same Black version for blacken-docs as regular Black check",
              "committedDate": "2023-07-04T15:55:08Z",
              "author": {
                "name": "Hugo van Kemenade",
                "email": "hugovk@users.noreply.github.com",
                "user": {
                  "login": "hugovk"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2023-07-04T16:25:41Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-07-04T16:30:22Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11165,
      "title": "[pre-commit.ci] pre-commit autoupdate",
      "body": "<!--pre-commit.ci start-->\nupdates:\n- [github.com/asottile/pyupgrade: v3.7.0 \u2192 v3.8.0](https://github.com/asottile/pyupgrade/compare/v3.7.0...v3.8.0)\n- [github.com/asottile/setup-cfg-fmt: v2.3.0 \u2192 v2.4.0](https://github.com/asottile/setup-cfg-fmt/compare/v2.3.0...v2.4.0)\n<!--pre-commit.ci end-->",
      "state": "MERGED",
      "createdAt": "2023-07-04T06:39:53Z",
      "updatedAt": "2023-07-04T07:00:16Z",
      "closedAt": "2023-07-04T07:00:15Z",
      "mergedAt": "2023-07-04T07:00:15Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "main",
      "headRefName": "pre-commit-ci-update-config",
      "author": {
        "login": "pre-commit-ci"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[pre-commit.ci] pre-commit autoupdate\n\nupdates:\n- [github.com/asottile/pyupgrade: v3.7.0 \u2192 v3.8.0](https://github.com/asottile/pyupgrade/compare/v3.7.0...v3.8.0)\n- [github.com/asottile/setup-cfg-fmt: v2.3.0 \u2192 v2.4.0](https://github.com/asottile/setup-cfg-fmt/compare/v2.3.0...v2.4.0)",
              "committedDate": "2023-07-04T06:39:52Z",
              "author": {
                "name": "pre-commit-ci[bot]",
                "email": "66853113+pre-commit-ci[bot]@users.noreply.github.com",
                "user": {
                  "login": "pre-commit-ci[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2023-07-04T06:53:01Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11164,
      "title": "[7.4.x] Fix duplicated imports with importlib mode and doctest-modules",
      "body": "Backport of PR #11148 to 7.4.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2023-07-03T16:11:02Z",
      "updatedAt": "2023-07-03T16:33:49Z",
      "closedAt": "2023-07-03T16:33:47Z",
      "mergedAt": "2023-07-03T16:33:47Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "7.4.x",
      "headRefName": "backport-11148-to-7.4.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[7.4.x] Fix duplicated imports with importlib mode and doctest-modules",
              "committedDate": "2023-07-03T16:11:00Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "nicoddemus@gmail.com",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-07-03T16:11:34Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11163,
      "title": "[7.4.x] Add child modules as attributes of parent modules.",
      "body": "Backport of PR #10338 to 7.4.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2023-07-03T16:10:55Z",
      "updatedAt": "2023-07-08T18:11:28Z",
      "closedAt": "2023-07-08T18:11:27Z",
      "mergedAt": "2023-07-08T18:11:27Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "7.4.x",
      "headRefName": "backport-10338-to-7.4.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Update 10337.bugfix.rst",
              "committedDate": "2023-07-03T16:12:38Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "nicoddemus@gmail.com",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-07-03T16:12:08Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11162,
      "title": "[7.4.x] Switch to deploy environment and configure for pypi oidc (#10925)",
      "body": "Closes #10871\r\nCloses #10870\r\n\r\nBackport of #10925.",
      "state": "MERGED",
      "createdAt": "2023-07-03T15:57:11Z",
      "updatedAt": "2023-07-03T16:17:03Z",
      "closedAt": "2023-07-03T16:17:03Z",
      "mergedAt": "2023-07-03T16:17:03Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "7.4.x",
      "headRefName": "backport-10925-to-7.4.x",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Switch to deploy environment and configure for pypi oidc (#10925)\n\nCloses #10871\r\nCloses #10870",
              "committedDate": "2023-07-03T15:56:28Z",
              "author": {
                "name": "Ronny Pfannschmidt",
                "email": "opensource@ronnypfannschmidt.de",
                "user": {
                  "login": "RonnyPfannschmidt"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2023-07-03T15:59:03Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11160,
      "title": "fix #10701 - warnings recorder pop match also subclass",
      "body": "closes #10701 \r\n<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [X] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [X] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [X] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [X] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "MERGED",
      "createdAt": "2023-07-02T12:19:27Z",
      "updatedAt": "2023-07-04T17:20:05Z",
      "closedAt": "2023-07-04T17:20:05Z",
      "mergedAt": "2023-07-04T17:20:05Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Zac-HD"
      },
      "baseRefName": "main",
      "headRefName": "ml/fix/warinings-recorder-pop",
      "author": {
        "login": "lesnek"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Further tweaks from code review",
              "committedDate": "2023-07-04T17:00:29Z",
              "author": {
                "name": "Zac Hatfield-Dodds",
                "email": "zac.hatfield.dodds@gmail.com",
                "user": {
                  "login": "Zac-HD"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Zac-HD"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-04T01:09:21Z",
            "body": "Looking good - thanks Milan!"
          },
          {
            "author": {
              "login": "lesnek"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-04T08:27:13Z",
            "body": ""
          },
          {
            "author": {
              "login": "lesnek"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-04T08:29:08Z",
            "body": ""
          },
          {
            "author": {
              "login": "Zac-HD"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-04T09:09:04Z",
            "body": ""
          },
          {
            "author": {
              "login": "lesnek"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-04T09:24:42Z",
            "body": ""
          },
          {
            "author": {
              "login": "lesnek"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-04T09:25:35Z",
            "body": ""
          },
          {
            "author": {
              "login": "lesnek"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-04T09:50:36Z",
            "body": ""
          },
          {
            "author": {
              "login": "Zac-HD"
            },
            "state": "APPROVED",
            "submittedAt": "2023-07-04T17:01:14Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11159,
      "title": "[automated] Update plugin list",
      "body": "[automated] Update plugin list",
      "state": "MERGED",
      "createdAt": "2023-07-02T00:27:24Z",
      "updatedAt": "2023-07-03T14:45:19Z",
      "closedAt": "2023-07-03T14:45:18Z",
      "mergedAt": "2023-07-03T14:45:17Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "update-plugin-list/patch-b77d0deaf",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[automated] Update plugin list",
              "committedDate": "2023-07-02T00:27:22Z",
              "author": {
                "name": "pytest bot",
                "email": "pytestbot@users.noreply.github.com",
                "user": {
                  "login": "pytestbot"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11158,
      "title": "doc: fix EncodingWarnings in examples",
      "body": "Otherwise the warnings show in the regen output.\r\n",
      "state": "MERGED",
      "createdAt": "2023-07-01T22:07:18Z",
      "updatedAt": "2023-07-10T20:19:41Z",
      "closedAt": "2023-07-08T18:40:06Z",
      "mergedAt": "2023-07-08T18:40:06Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "examples-enc-warn",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[pre-commit.ci] auto fixes from pre-commit.com hooks\n\nfor more information, see https://pre-commit.ci",
              "committedDate": "2023-07-01T22:07:55Z",
              "author": {
                "name": "pre-commit-ci[bot]",
                "email": "66853113+pre-commit-ci[bot]@users.noreply.github.com",
                "user": {
                  "login": "pre-commit-ci[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-07-08T18:39:54Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11156,
      "title": "Utilize more_itertools to consolidate logic when collecting marks.",
      "body": "<!--\nThanks for submitting a PR, your contribution is really appreciated!\n\nHere is a quick checklist that should be present in PRs.\n\n- [ ] Include documentation when adding new features.\n- [ ] Include new tests or update existing tests when applicable.\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\n\nIf this change fixes an issue, please:\n\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\n\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\n\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\n\n  Write sentences in the **past or present tense**, examples:\n\n  * *Improved verbose diff output with sequences.*\n  * *Terminal summary statistics now use multiple colors.*\n\n  Also make sure to end the sentence with a `.`.\n\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\n-->\n",
      "state": "CLOSED",
      "createdAt": "2023-07-01T20:11:17Z",
      "updatedAt": "2023-07-01T22:17:09Z",
      "closedAt": "2023-07-01T22:17:06Z",
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "refactor/more-itertools",
      "author": {
        "login": "jaraco"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 5
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Utilize more_itertools to consolidate logic when collecting marks.",
              "committedDate": "2023-07-01T20:32:40Z",
              "author": {
                "name": "Jason R. Coombs",
                "email": "jaraco@jaraco.com",
                "user": {
                  "login": "jaraco"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11155,
      "title": "fix #10447 - consider marks in reverse mro order to give base classes priority",
      "body": "<!--\nThanks for submitting a PR, your contribution is really appreciated!\n\nHere is a quick checklist that should be present in PRs.\n\n- [ ] Include documentation when adding new features.\n- [ ] Include new tests or update existing tests when applicable.\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\n\nIf this change fixes an issue, please:\n\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\n\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\n\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\n\n  Write sentences in the **past or present tense**, examples:\n\n  * *Improved verbose diff output with sequences.*\n  * *Terminal summary statistics now use multiple colors.*\n\n  Also make sure to end the sentence with a `.`.\n\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\n-->\n",
      "state": "MERGED",
      "createdAt": "2023-07-01T20:08:52Z",
      "updatedAt": "2023-10-24T19:51:36Z",
      "closedAt": "2023-07-02T20:23:01Z",
      "mergedAt": "2023-07-02T20:23:01Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "RonnyPfannschmidt"
      },
      "baseRefName": "main",
      "headRefName": "fix-10447-maker-mro-order-needs-reverse",
      "author": {
        "login": "RonnyPfannschmidt"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 8
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "fix #10447 - consider marks in reverse mro order to give base classes priority",
              "committedDate": "2023-07-01T20:27:18Z",
              "author": {
                "name": "Ronny Pfannschmidt",
                "email": "opensource@ronnypfannschmidt.de",
                "user": {
                  "login": "RonnyPfannschmidt"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "jaraco"
            },
            "state": "APPROVED",
            "submittedAt": "2023-07-01T20:21:13Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11154,
      "title": "Reverse order on marks from MRO",
      "body": "Fixes #10447\n\n<!--\nThanks for submitting a PR, your contribution is really appreciated!\n\nHere is a quick checklist that should be present in PRs.\n\n- [X] Include documentation when adding new features.\n- [X] Include new tests or update existing tests when applicable.\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\n\nIf this change fixes an issue, please:\n\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\n\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\n\n- [X] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\n\n  Write sentences in the **past or present tense**, examples:\n\n  * *Improved verbose diff output with sequences.*\n  * *Terminal summary statistics now use multiple colors.*\n\n  Also make sure to end the sentence with a `.`.\n\n- [X] Add yourself to `AUTHORS` in alphabetical order.\n-->\n",
      "state": "CLOSED",
      "createdAt": "2023-07-01T20:05:52Z",
      "updatedAt": "2023-07-01T20:42:47Z",
      "closedAt": "2023-07-01T20:42:43Z",
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "bugfix/10447-reversed-mro",
      "author": {
        "login": "jaraco"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Reverse order on marks from MRO\n\nFixes #10447",
              "committedDate": "2023-07-01T20:20:19Z",
              "author": {
                "name": "Jason R. Coombs",
                "email": "jaraco@jaraco.com",
                "user": {
                  "login": "jaraco"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11153,
      "title": "Added Akhilesh Ramakrishnan to AUTHORS",
      "body": "#10337, #10338\r\n\r\n<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "MERGED",
      "createdAt": "2023-07-01T19:17:33Z",
      "updatedAt": "2023-07-03T11:49:54Z",
      "closedAt": "2023-07-03T11:49:51Z",
      "mergedAt": "2023-07-03T11:49:50Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "The-Compiler"
      },
      "baseRefName": "main",
      "headRefName": "add_author_name",
      "author": {
        "login": "akhilramkee"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 4
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Fix typo in changelog",
              "committedDate": "2023-07-02T12:01:57Z",
              "author": {
                "name": "Akhilesh",
                "email": "akhilramkee123@gmail.com",
                "user": {
                  "login": "akhilramkee"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "The-Compiler"
            },
            "state": "APPROVED",
            "submittedAt": "2023-07-03T11:49:45Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11152,
      "title": "Drop Python 3.7, which has reached end-of-life",
      "body": "Closes https://github.com/pytest-dev/pytest/issues/11151.",
      "state": "MERGED",
      "createdAt": "2023-06-30T22:20:04Z",
      "updatedAt": "2023-07-01T03:58:12Z",
      "closedAt": "2023-07-01T03:56:47Z",
      "mergedAt": "2023-07-01T03:56:47Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Zac-HD"
      },
      "baseRefName": "main",
      "headRefName": "drop-py37",
      "author": {
        "login": "Zac-HD"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Explicit GC for PyPy, take 2",
              "committedDate": "2023-07-01T03:33:12Z",
              "author": {
                "name": "Zac Hatfield-Dodds",
                "email": "zac.hatfield.dodds@gmail.com",
                "user": {
                  "login": "Zac-HD"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-07-01T02:14:23Z",
            "body": "Excellent cleanup!"
          }
        ]
      }
    },
    {
      "number": 11148,
      "title": "Fix duplicated imports with importlib mode and doctest-modules",
      "body": "The initial implementation (in #7246) introduced the `importlib` mode, which never added the imported module to `sys.modules`, so it included a test to ensure calling `import_path` twice would yield different modules.\r\n\r\nNot adding modules to `sys.modules` proved problematic, so we began to add the imported module to `sys.modules` in #7870, but failed to realize that given we are now changing `sys.modules`, we might as well avoid importing it more than once.\r\n\r\nThen #10088 came along, passing `importlib` also when importing application modules to collect docstrings (as opposed to only test modules before), which caused problems due to imports having side-effects and the expectation being that they are imported only once.\r\n\r\nWith this PR, `import_path` returns the module immediately if already in `sys.modules`.\r\n\r\nFix #10811\r\nFix #10341\r\n\r\n<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "MERGED",
      "createdAt": "2023-06-29T00:04:33Z",
      "updatedAt": "2023-07-03T16:11:10Z",
      "closedAt": "2023-07-01T15:37:46Z",
      "mergedAt": "2023-07-01T15:37:46Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "import-mode-10811",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 4
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Fix duplicated imports with importlib mode and doctest-modules\n\nThe initial implementation (in #7246) introduced the `importlib` mode, which\nnever added the imported module to `sys.modules`, so it included a test\nto ensure calling `import_path` twice would yield different modules.\n\nNot adding modules to `sys.modules` proved problematic, so we began to add the imported module to `sys.modules`\nin #7870, but failed to realize that given we are now changing `sys.modules`, we might\nas well avoid importing it more than once.\n\nThen #10088 came along, passing `importlib` also when importing application modules\n(as opposed to only test modules before), which caused problems due to imports\nhaving side-effects and the expectation being that they are imported only once.\n\nWith this PR, `import_path` returns the module immediately if already in\n`sys.modules`.\n\nFix #10811, #10341",
              "committedDate": "2023-07-01T15:13:00Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "nicoddemus@gmail.com",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-06-29T10:49:48Z",
            "body": ""
          },
          {
            "author": {
              "login": "jaraco"
            },
            "state": "APPROVED",
            "submittedAt": "2023-06-29T19:52:49Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11145,
      "title": "[pre-commit.ci] pre-commit autoupdate",
      "body": "<!--pre-commit.ci start-->\nupdates:\n- [github.com/PyCQA/autoflake: v2.1.1 \u2192 v2.2.0](https://github.com/PyCQA/autoflake/compare/v2.1.1...v2.2.0)\n- [github.com/pre-commit/mirrors-mypy: v1.3.0 \u2192 v1.4.1](https://github.com/pre-commit/mirrors-mypy/compare/v1.3.0...v1.4.1)\n<!--pre-commit.ci end-->",
      "state": "MERGED",
      "createdAt": "2023-06-27T05:06:23Z",
      "updatedAt": "2023-06-27T05:28:13Z",
      "closedAt": "2023-06-27T05:28:12Z",
      "mergedAt": "2023-06-27T05:28:12Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "main",
      "headRefName": "pre-commit-ci-update-config",
      "author": {
        "login": "pre-commit-ci"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[pre-commit.ci] pre-commit autoupdate\n\nupdates:\n- [github.com/PyCQA/autoflake: v2.1.1 \u2192 v2.2.0](https://github.com/PyCQA/autoflake/compare/v2.1.1...v2.2.0)\n- [github.com/pre-commit/mirrors-mypy: v1.3.0 \u2192 v1.4.1](https://github.com/pre-commit/mirrors-mypy/compare/v1.3.0...v1.4.1)",
              "committedDate": "2023-06-27T05:06:21Z",
              "author": {
                "name": "pre-commit-ci[bot]",
                "email": "66853113+pre-commit-ci[bot]@users.noreply.github.com",
                "user": {
                  "login": "pre-commit-ci[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2023-06-27T05:23:21Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11143,
      "title": "Ensure the docstring is a string",
      "body": "Resolves #11140\r\n",
      "state": "MERGED",
      "createdAt": "2023-06-26T06:44:43Z",
      "updatedAt": "2023-12-31T09:22:15Z",
      "closedAt": "2023-07-04T17:47:13Z",
      "mergedAt": "2023-07-04T17:47:13Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Zac-HD"
      },
      "baseRefName": "main",
      "headRefName": "patch-1",
      "author": {
        "login": "tushar-deepsource"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Merge branch 'main' into patch-1",
              "committedDate": "2023-07-04T17:17:06Z",
              "author": {
                "name": "Zac Hatfield-Dodds",
                "email": "zac.hatfield.dodds@gmail.com",
                "user": {
                  "login": "Zac-HD"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": [
          {
            "requestedReviewer": {
              "login": "The-Compiler"
            }
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2023-06-26T08:33:23Z",
            "body": "Thanks, I'm under the impression this regression came out of the new expressions handling and we can simplify this once python 3.7 support is dropped "
          },
          {
            "author": {
              "login": "The-Compiler"
            },
            "state": "DISMISSED",
            "submittedAt": "2023-06-26T11:14:29Z",
            "body": "Thanks for the fix! It'd be great if you could do those:\r\n\r\n- [x] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [x] Add yourself to `AUTHORS` in alphabetical order.\r\n\r\nI also think we should backport this to 7.4 once merged."
          },
          {
            "author": {
              "login": "Zac-HD"
            },
            "state": "APPROVED",
            "submittedAt": "2023-07-04T17:18:23Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11139,
      "title": "[automated] Update plugin list",
      "body": "[automated] Update plugin list",
      "state": "MERGED",
      "createdAt": "2023-06-25T00:27:04Z",
      "updatedAt": "2023-06-26T12:33:15Z",
      "closedAt": "2023-06-26T12:33:14Z",
      "mergedAt": "2023-06-26T12:33:14Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "update-plugin-list/patch-fe51121f3",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[automated] Update plugin list",
              "committedDate": "2023-06-25T00:27:02Z",
              "author": {
                "name": "pytest bot",
                "email": "pytestbot@users.noreply.github.com",
                "user": {
                  "login": "pytestbot"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-06-26T12:33:08Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11138,
      "title": "python: change `Package` to no longer be a `Module`/`File`",
      "body": "Fix #11137.\r\n\r\nI'll leave detailed notes on the changes below to hopefully make them easier to understand.",
      "state": "MERGED",
      "createdAt": "2023-06-24T16:49:18Z",
      "updatedAt": "2024-05-01T15:58:52Z",
      "closedAt": "2023-07-28T20:15:09Z",
      "mergedAt": "2023-07-28T20:15:09Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "pkg-mod",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": {
        "title": "8.0",
        "dueOn": null
      },
      "comments": {
        "totalCount": 6
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "python: change `Package` to no longer be a `Module`/`File`\n\nFix #11137.",
              "committedDate": "2023-07-28T19:49:24Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-06-24T17:10:05Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-07-28T11:12:26Z",
            "body": "Looks great, thanks @bluetech! "
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-28T11:28:49Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-28T11:39:25Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2023-07-28T11:44:34Z",
            "body": "i love how much this cleans things up, awesome :+1: "
          }
        ]
      }
    },
    {
      "number": 11133,
      "title": "Change PytestRemovedIn8Warning to error by default, add PytestRemovedIn9Warning",
      "body": "Per our backward compatibility policy.",
      "state": "MERGED",
      "createdAt": "2023-06-23T12:29:17Z",
      "updatedAt": "2023-06-23T17:13:20Z",
      "closedAt": "2023-06-23T17:13:17Z",
      "mergedAt": "2023-06-23T17:13:17Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "removed-in-8-error",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": {
        "title": "8.0",
        "dueOn": null
      },
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Add PytestRemovedIn9Warning\n\nIt's good to have it available already in all 8.* versions, even if it's\nnot used yet.",
              "committedDate": "2023-06-23T13:42:26Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-06-23T14:13:34Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11132,
      "title": "Cherry-pick 7.4.0 release notes",
      "body": "(cherry picked from commit fb03d1388b002f63973c663cb4929908a2ca81f5)\r\n\r\n<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "MERGED",
      "createdAt": "2023-06-23T11:21:07Z",
      "updatedAt": "2023-06-23T11:48:51Z",
      "closedAt": "2023-06-23T11:48:47Z",
      "mergedAt": "2023-06-23T11:48:47Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "cherry-pick-release",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Merge pull request #11131 from pytest-dev/release-7.4.0\n\nPrepare release 7.4.0\n\n(cherry picked from commit fb03d1388b002f63973c663cb4929908a2ca81f5)",
              "committedDate": "2023-06-23T11:19:51Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11131,
      "title": "Prepare release 7.4.0",
      "body": "Created automatically from manual trigger.\n\nOnce all builds pass and it has been **approved** by one or more maintainers, the build\ncan be released by pushing a tag `7.4.0` to this repository.\n",
      "state": "MERGED",
      "createdAt": "2023-06-23T10:47:43Z",
      "updatedAt": "2023-06-23T11:18:45Z",
      "closedAt": "2023-06-23T11:18:44Z",
      "mergedAt": "2023-06-23T11:18:44Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "7.4.x",
      "headRefName": "release-7.4.0",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Prepare release version 7.4.0\n\n[ran: made some fixups]",
              "committedDate": "2023-06-23T11:03:58Z",
              "author": {
                "name": "pytest bot",
                "email": "pytestbot@gmail.com",
                "user": {
                  "login": "pytestbot"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-06-23T10:53:26Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11129,
      "title": "capture warning when exception is raised (fix #9036)",
      "body": "<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [X] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [X] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [X] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n\r\ncontinue PR #10208 by @eltimen\r\n\r\nFixes #9036 and #11032 (same issue)\r\n\r\nWhen a warning is being warned while an exception is raised, `pytest.warns` should still capture the warning if not matched.\r\n\r\nCC @Zac-HD \r\n",
      "state": "MERGED",
      "createdAt": "2023-06-22T15:53:07Z",
      "updatedAt": "2023-07-01T04:58:43Z",
      "closedAt": "2023-07-01T04:58:42Z",
      "mergedAt": "2023-07-01T04:58:42Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Zac-HD"
      },
      "baseRefName": "main",
      "headRefName": "warn_in_expt",
      "author": {
        "login": "Cheukting"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 6
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "capture warning when exception is raised (fix #9036)",
              "committedDate": "2023-06-30T23:04:37Z",
              "author": {
                "name": "Cheukting",
                "email": "cheukting.ho@gmail.com",
                "user": {
                  "login": "Cheukting"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Zac-HD"
            },
            "state": "APPROVED",
            "submittedAt": "2023-07-01T04:58:37Z",
            "body": "Thanks @Cheukting!"
          }
        ]
      }
    },
    {
      "number": 11128,
      "title": "reference: add note that `pythonpath` does not affect `-p`",
      "body": "Fix #11118.",
      "state": "MERGED",
      "createdAt": "2023-06-22T13:03:48Z",
      "updatedAt": "2023-06-22T15:12:42Z",
      "closedAt": "2023-06-22T15:12:38Z",
      "mergedAt": "2023-06-22T15:12:38Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "pythonpath-note",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "reference: add note that `pythonpath` does not affect `-p`\n\nFix #11118.",
              "committedDate": "2023-06-22T12:45:20Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-06-22T13:24:19Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11125,
      "title": "config: fix the paths considered for initial conftest discovery",
      "body": "Fixes #11104. See the commits; the first one is just a refactor.",
      "state": "MERGED",
      "createdAt": "2023-06-20T18:36:34Z",
      "updatedAt": "2023-06-21T06:25:28Z",
      "closedAt": "2023-06-21T06:21:28Z",
      "mergedAt": "2023-06-21T06:21:28Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "initial-conftests-testpaths",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "config: fix the paths considered for initial conftest discovery\n\nFixes #11104.\n\nSee the issue for a description of the problem.\n\nNow, we use the same logic for initial conftest paths as we do for\ndeciding the initial args, which was the idea behind checking\n`namespace.file_or_dir` and `testpaths` previously.\n\nThis fixes the issue of `testpaths` being considered for initial\nconftests even when it's not used for the args.\n\n(Another issue in faeb16146b811488ebbcbd17ef6f9102314065b2 was that the\n`testpaths` were not glob-expanded, this is also fixed.)",
              "committedDate": "2023-06-21T06:01:42Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-06-20T23:46:40Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-06-20T23:47:22Z",
            "body": "Thanks a lot for taking care of this @bluetech! Great work. "
          }
        ]
      }
    },
    {
      "number": 11124,
      "title": "[pre-commit.ci] pre-commit autoupdate",
      "body": "<!--pre-commit.ci start-->\nupdates:\n- [github.com/asottile/blacken-docs: 1.13.0 \u2192 1.14.0](https://github.com/asottile/blacken-docs/compare/1.13.0...1.14.0)\n- [github.com/asottile/reorder-python-imports: v3.9.0 \u2192 v3.10.0](https://github.com/asottile/reorder-python-imports/compare/v3.9.0...v3.10.0)\n- [github.com/asottile/pyupgrade: v3.6.0 \u2192 v3.7.0](https://github.com/asottile/pyupgrade/compare/v3.6.0...v3.7.0)\n<!--pre-commit.ci end-->",
      "state": "MERGED",
      "createdAt": "2023-06-20T05:52:54Z",
      "updatedAt": "2023-06-20T06:38:38Z",
      "closedAt": "2023-06-20T06:38:36Z",
      "mergedAt": "2023-06-20T06:38:36Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "main",
      "headRefName": "pre-commit-ci-update-config",
      "author": {
        "login": "pre-commit-ci"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[pre-commit.ci] pre-commit autoupdate\n\nupdates:\n- [github.com/asottile/blacken-docs: 1.13.0 \u2192 1.14.0](https://github.com/asottile/blacken-docs/compare/1.13.0...1.14.0)\n- [github.com/asottile/reorder-python-imports: v3.9.0 \u2192 v3.10.0](https://github.com/asottile/reorder-python-imports/compare/v3.9.0...v3.10.0)\n- [github.com/asottile/pyupgrade: v3.6.0 \u2192 v3.7.0](https://github.com/asottile/pyupgrade/compare/v3.6.0...v3.7.0)",
              "committedDate": "2023-06-20T05:52:53Z",
              "author": {
                "name": "pre-commit-ci[bot]",
                "email": "66853113+pre-commit-ci[bot]@users.noreply.github.com",
                "user": {
                  "login": "pre-commit-ci[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2023-06-20T06:08:53Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11123,
      "title": "Switch to new-style pluggy hook wrappers",
      "body": "Fix #11122.",
      "state": "MERGED",
      "createdAt": "2023-06-19T11:59:06Z",
      "updatedAt": "2024-01-10T18:30:17Z",
      "closedAt": "2023-07-15T07:03:35Z",
      "mergedAt": "2023-07-15T07:03:35Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "new-style-wrappers",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Switch to new-style pluggy hook wrappers\n\nFix #11122.",
              "committedDate": "2023-07-14T19:47:48Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-06-19T15:21:22Z",
            "body": "Great work!"
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "CHANGES_REQUESTED",
            "submittedAt": "2023-06-19T17:23:13Z",
            "body": "Let's wait on https://github.com/pytest-dev/pluggy/issues/405 before moving this forward. :+1: "
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-14T21:17:35Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-07-14T21:18:00Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-15T07:03:30Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11120,
      "title": "build(deps): Bump peter-evans/create-pull-request from 5.0.0 to 5.0.2",
      "body": "Bumps [peter-evans/create-pull-request](https://github.com/peter-evans/create-pull-request) from 5.0.0 to 5.0.2.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/peter-evans/create-pull-request/releases\">peter-evans/create-pull-request's releases</a>.</em></p>\n<blockquote>\n<h2>Create Pull Request v5.0.2</h2>\n<p>\u2699\ufe0f Fixes an issue that occurs when using <code>push-to-fork</code> and both base and head repositories are in the same org/user account.</p>\n<h2>What's Changed</h2>\n<ul>\n<li>fix: specify head repo by <a href=\"https://github.com/peter-evans\"><code>@\u200bpeter-evans</code></a> in <a href=\"https://redirect.github.com/peter-evans/create-pull-request/pull/2044\">peter-evans/create-pull-request#2044</a></li>\n<li>20 dependency updates by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/peter-evans/create-pull-request/compare/v5.0.1...v5.0.2\">https://github.com/peter-evans/create-pull-request/compare/v5.0.1...v5.0.2</a></p>\n<h2>Create Pull Request v5.0.1</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>fix: truncate body if exceeds max length by <a href=\"https://github.com/peter-evans\"><code>@\u200bpeter-evans</code></a> in <a href=\"https://redirect.github.com/peter-evans/create-pull-request/pull/1915\">peter-evans/create-pull-request#1915</a></li>\n<li>12 dependency updates by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/peter-evans/create-pull-request/compare/v5.0.0...v5.0.1\">https://github.com/peter-evans/create-pull-request/compare/v5.0.0...v5.0.1</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/peter-evans/create-pull-request/commit/153407881ec5c347639a548ade7d8ad1d6740e38\"><code>1534078</code></a> fix: specify head repo (<a href=\"https://redirect.github.com/peter-evans/create-pull-request/issues/2044\">#2044</a>)</li>\n<li><a href=\"https://github.com/peter-evans/create-pull-request/commit/143be5d671929f35a2d146afde2bbf411a1cdae7\"><code>143be5d</code></a> build(deps-dev): bump <code>@\u200btypescript-eslint/parser</code> from 5.59.9 to 5.59.11 (<a href=\"https://redirect.github.com/peter-evans/create-pull-request/issues/2048\">#2048</a>)</li>\n<li><a href=\"https://github.com/peter-evans/create-pull-request/commit/51e8ca23403d80681e9ee4d3a6f2a7749650103f\"><code>51e8ca2</code></a> build(deps-dev): bump <code>@\u200btypes/node</code> from 18.16.16 to 18.16.18 (<a href=\"https://redirect.github.com/peter-evans/create-pull-request/issues/2047\">#2047</a>)</li>\n<li><a href=\"https://github.com/peter-evans/create-pull-request/commit/712add83f26c1e359c046a6ca3dd677fb7017626\"><code>712add8</code></a> build(deps-dev): bump <code>@\u200btypes/jest</code> from 29.5.1 to 29.5.2 (<a href=\"https://redirect.github.com/peter-evans/create-pull-request/issues/2026\">#2026</a>)</li>\n<li><a href=\"https://github.com/peter-evans/create-pull-request/commit/a9e8aabc8b4513752b51efcb32d166e65979b3e5\"><code>a9e8aab</code></a> build(deps-dev): bump eslint from 8.41.0 to 8.42.0 (<a href=\"https://redirect.github.com/peter-evans/create-pull-request/issues/2024\">#2024</a>)</li>\n<li><a href=\"https://github.com/peter-evans/create-pull-request/commit/37be4ffd941e930a6dc8d42c5a893e62760a6105\"><code>37be4ff</code></a> build(deps-dev): bump <code>@\u200btypescript-eslint/parser</code> from 5.59.8 to 5.59.9 (<a href=\"https://redirect.github.com/peter-evans/create-pull-request/issues/2023\">#2023</a>)</li>\n<li><a href=\"https://github.com/peter-evans/create-pull-request/commit/a5f0e5dc8e47c41b694db6acd592fb79ff9be31f\"><code>a5f0e5d</code></a> build(deps-dev): bump eslint-plugin-github from 4.7.0 to 4.8.0 (<a href=\"https://redirect.github.com/peter-evans/create-pull-request/issues/2025\">#2025</a>)</li>\n<li><a href=\"https://github.com/peter-evans/create-pull-request/commit/9ef70ee495af6d0ff9825b3e6050f304a290283a\"><code>9ef70ee</code></a> build(deps-dev): bump <code>@\u200btypes/node</code> from 18.16.14 to 18.16.16 (<a href=\"https://redirect.github.com/peter-evans/create-pull-request/issues/2009\">#2009</a>)</li>\n<li><a href=\"https://github.com/peter-evans/create-pull-request/commit/0a287739d3c2d8485ed6e8be96cba0ab8ce870ee\"><code>0a28773</code></a> build(deps-dev): bump <code>@\u200btypescript-eslint/parser</code> from 5.59.7 to 5.59.8 (<a href=\"https://redirect.github.com/peter-evans/create-pull-request/issues/2008\">#2008</a>)</li>\n<li><a href=\"https://github.com/peter-evans/create-pull-request/commit/4ddb8c8fe7f58d02d4d1d62359fd91fe4d54361d\"><code>4ddb8c8</code></a> build: update distribution (<a href=\"https://redirect.github.com/peter-evans/create-pull-request/issues/1986\">#1986</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/peter-evans/create-pull-request/compare/5b4a9f6a9e2af26e5f02351490b90d01eb8ec1e5...153407881ec5c347639a548ade7d8ad1d6740e38\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=peter-evans/create-pull-request&package-manager=github_actions&previous-version=5.0.0&new-version=5.0.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2023-06-19T04:02:42Z",
      "updatedAt": "2023-06-19T22:22:50Z",
      "closedAt": "2023-06-19T22:22:49Z",
      "mergedAt": "2023-06-19T22:22:49Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/github_actions/peter-evans/create-pull-request-5.0.2",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "github_actions"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump peter-evans/create-pull-request from 5.0.0 to 5.0.2\n\nBumps [peter-evans/create-pull-request](https://github.com/peter-evans/create-pull-request) from 5.0.0 to 5.0.2.\n- [Release notes](https://github.com/peter-evans/create-pull-request/releases)\n- [Commits](https://github.com/peter-evans/create-pull-request/compare/5b4a9f6a9e2af26e5f02351490b90d01eb8ec1e5...153407881ec5c347639a548ade7d8ad1d6740e38)\n\n---\nupdated-dependencies:\n- dependency-name: peter-evans/create-pull-request\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2023-06-19T04:02:41Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-06-19T22:22:43Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11119,
      "title": "build(deps): Bump pytest-mock from 3.10.0 to 3.11.1 in /testing/plugins_integration",
      "body": "Bumps [pytest-mock](https://github.com/pytest-dev/pytest-mock) from 3.10.0 to 3.11.1.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pytest-dev/pytest-mock/releases\">pytest-mock's releases</a>.</em></p>\n<blockquote>\n<h2>v3.11.1</h2>\n<ul>\n<li>\n<p>Fixed introspection for failed <code>assert_has_calls</code> (<a href=\"https://redirect.github.com/pytest-dev/pytest-mock/issues/365\">#365</a>).</p>\n</li>\n<li>\n<p>Updated type annotations for <code>mocker.patch</code> and <code>mocker.spy</code> (<a href=\"https://redirect.github.com/pytest-dev/pytest-mock/issues/364\">#364</a>).</p>\n</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/pytest-dev/pytest-mock/blob/main/CHANGELOG.rst\">pytest-mock's changelog</a>.</em></p>\n<blockquote>\n<h2>3.11.1 (2023-06-15)</h2>\n<p>(This release source code is identical to <code>3.11.0</code> except a small internal fix to deployment/CI)</p>\n<ul>\n<li>\n<p>Fixed introspection for failed <code>assert_has_calls</code> (<code>[#365](https://github.com/pytest-dev/pytest-mock/issues/365)</code>_).</p>\n</li>\n<li>\n<p>Updated type annotations for <code>mocker.patch</code> and <code>mocker.spy</code> (<code>[#364](https://github.com/pytest-dev/pytest-mock/issues/364)</code>_).</p>\n</li>\n</ul>\n<p>.. _<a href=\"https://redirect.github.com/pytest-dev/pytest-mock/issues/365\">#365</a>: <a href=\"https://redirect.github.com/pytest-dev/pytest-mock/pull/365\">pytest-dev/pytest-mock#365</a>\n.. _<a href=\"https://redirect.github.com/pytest-dev/pytest-mock/issues/364\">#364</a>: <a href=\"https://redirect.github.com/pytest-dev/pytest-mock/pull/364\">pytest-dev/pytest-mock#364</a></p>\n<h2>3.11.0 (2023-06-15)</h2>\n<ul>\n<li>\n<p>Fixed introspection for failed <code>assert_has_calls</code> (<code>[#365](https://github.com/pytest-dev/pytest-mock/issues/365)</code>_).</p>\n</li>\n<li>\n<p>Updated type annotations for <code>mocker.patch</code> and <code>mocker.spy</code> (<code>[#364](https://github.com/pytest-dev/pytest-mock/issues/364)</code>_).</p>\n</li>\n</ul>\n<p>.. _<a href=\"https://redirect.github.com/pytest-dev/pytest-mock/issues/365\">#365</a>: <a href=\"https://redirect.github.com/pytest-dev/pytest-mock/pull/365\">pytest-dev/pytest-mock#365</a>\n.. _<a href=\"https://redirect.github.com/pytest-dev/pytest-mock/issues/364\">#364</a>: <a href=\"https://redirect.github.com/pytest-dev/pytest-mock/pull/364\">pytest-dev/pytest-mock#364</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pytest-dev/pytest-mock/commit/d3e73f2e93f7b93eba0a36e17e43bafd969da4fe\"><code>d3e73f2</code></a> Explicitly specify the tag name during GitHub Release</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-mock/commit/5668efe23e01673af9905febeefd9a9791b023f4\"><code>5668efe</code></a> Update CHANGELOG for 3.11.0</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-mock/commit/c9a4d13ab4e808ef02250898a79c07b2acf76f61\"><code>c9a4d13</code></a> Improve CI</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-mock/commit/5818160717a16b7f8867d950ed60b9dc3349ec8d\"><code>5818160</code></a> Add assert_has_calls_wrapper (<a href=\"https://redirect.github.com/pytest-dev/pytest-mock/issues/365\">#365</a>)</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-mock/commit/355b5aae1a1a9b3f2c17b2a6bbfde9980967bceb\"><code>355b5aa</code></a> Fix return type annotation for patch and spy (<a href=\"https://redirect.github.com/pytest-dev/pytest-mock/issues/364\">#364</a>)</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-mock/commit/8ba681201488bec69f27f6e9e2a56988a01f0d1b\"><code>8ba6812</code></a> [pre-commit.ci] pre-commit autoupdate (<a href=\"https://redirect.github.com/pytest-dev/pytest-mock/issues/362\">#362</a>)</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-mock/commit/786eaaf416fed8204a8aebb29cbf71527228a9f6\"><code>786eaaf</code></a> [pre-commit.ci] pre-commit autoupdate (<a href=\"https://redirect.github.com/pytest-dev/pytest-mock/issues/360\">#360</a>)</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-mock/commit/1cb146af21ffd0b5be24703419cf4a192c4ec0ab\"><code>1cb146a</code></a> Push tag manually</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-mock/commit/9608e9659b1f062bb09915f3ef1c538ca7cb5c5f\"><code>9608e96</code></a> Update permissions for deploy workflow</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-mock/commit/c778ee73bd516d465dca3512d099682ba32108fa\"><code>c778ee7</code></a> Fix deployment workflow (<a href=\"https://redirect.github.com/pytest-dev/pytest-mock/issues/358\">#358</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pytest-dev/pytest-mock/compare/v3.10.0...v3.11.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pytest-mock&package-manager=pip&previous-version=3.10.0&new-version=3.11.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2023-06-19T03:56:37Z",
      "updatedAt": "2023-06-19T04:15:52Z",
      "closedAt": "2023-06-19T04:15:51Z",
      "mergedAt": "2023-06-19T04:15:51Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/pip/testing/plugins_integration/pytest-mock-3.11.1",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "python"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump pytest-mock in /testing/plugins_integration\n\nBumps [pytest-mock](https://github.com/pytest-dev/pytest-mock) from 3.10.0 to 3.11.1.\n- [Release notes](https://github.com/pytest-dev/pytest-mock/releases)\n- [Changelog](https://github.com/pytest-dev/pytest-mock/blob/main/CHANGELOG.rst)\n- [Commits](https://github.com/pytest-dev/pytest-mock/compare/v3.10.0...v3.11.1)\n\n---\nupdated-dependencies:\n- dependency-name: pytest-mock\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2023-06-19T03:56:37Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2023-06-19T03:58:55Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11117,
      "title": "[automated] Update plugin list",
      "body": "[automated] Update plugin list",
      "state": "MERGED",
      "createdAt": "2023-06-18T00:25:35Z",
      "updatedAt": "2023-06-18T12:40:54Z",
      "closedAt": "2023-06-18T12:40:53Z",
      "mergedAt": "2023-06-18T12:40:53Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "update-plugin-list/patch-b55c02c3c",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[automated] Update plugin list",
              "committedDate": "2023-06-18T00:25:33Z",
              "author": {
                "name": "pytest bot",
                "email": "pytestbot@users.noreply.github.com",
                "user": {
                  "login": "pytestbot"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11114,
      "title": "[7.3.x] doc: Add ep2023 training",
      "body": "Backport of PR #11113 to 7.3.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2023-06-15T12:19:51Z",
      "updatedAt": "2023-06-15T12:45:51Z",
      "closedAt": "2023-06-15T12:45:49Z",
      "mergedAt": "2023-06-15T12:45:49Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "The-Compiler"
      },
      "baseRefName": "7.3.x",
      "headRefName": "backport-11113-to-7.3.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[7.3.x] doc: Add ep2023 training",
              "committedDate": "2023-06-15T12:19:49Z",
              "author": {
                "name": "Florian Bruhin",
                "email": "me@the-compiler.org",
                "user": {
                  "login": "The-Compiler"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "The-Compiler"
            },
            "state": "APPROVED",
            "submittedAt": "2023-06-15T12:26:59Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11113,
      "title": "doc: Add ep2023 training",
      "body": "Something a bit different (more advanced topics) this time, let's see how it goes!",
      "state": "MERGED",
      "createdAt": "2023-06-15T11:35:33Z",
      "updatedAt": "2023-06-15T12:17:19Z",
      "closedAt": "2023-06-15T12:17:14Z",
      "mergedAt": "2023-06-15T12:17:14Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "The-Compiler"
      },
      "baseRefName": "main",
      "headRefName": "training-update-ep2023",
      "author": {
        "login": "The-Compiler"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: docs"
          },
          {
            "name": "needs backport"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "doc: Add ep2023 training",
              "committedDate": "2023-06-15T11:34:57Z",
              "author": {
                "name": "Florian Bruhin",
                "email": "me@the-compiler.org",
                "user": {
                  "login": "The-Compiler"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2023-06-15T11:47:31Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11106,
      "title": "reference: improve the node types docs a bit",
      "body": "Please see the commit messages.",
      "state": "MERGED",
      "createdAt": "2023-06-14T06:54:22Z",
      "updatedAt": "2024-01-10T18:32:59Z",
      "closedAt": "2023-07-08T18:41:23Z",
      "mergedAt": "2023-07-08T18:41:23Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "docs-ref-collection-objs",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "reference: separate node types to their own section\n\nI think it's helpful to separate the node classes from the other\nobjects, as they have their own unique usage.\n\nI've chosen not to alphabetize the order, but to use a logical order\ninstead.\n\nAlso slightly improve the docstrings.",
              "committedDate": "2023-06-14T12:57:56Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-07-08T18:41:17Z",
            "body": "Looks good, thanks!"
          }
        ]
      }
    },
    {
      "number": 11103,
      "title": "[pre-commit.ci] pre-commit autoupdate",
      "body": "<!--pre-commit.ci start-->\nupdates:\n- [github.com/asottile/pyupgrade: v3.4.0 \u2192 v3.6.0](https://github.com/asottile/pyupgrade/compare/v3.4.0...v3.6.0)\n<!--pre-commit.ci end-->",
      "state": "MERGED",
      "createdAt": "2023-06-13T05:12:45Z",
      "updatedAt": "2023-06-13T05:36:30Z",
      "closedAt": "2023-06-13T05:36:29Z",
      "mergedAt": "2023-06-13T05:36:29Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "main",
      "headRefName": "pre-commit-ci-update-config",
      "author": {
        "login": "pre-commit-ci"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[pre-commit.ci] pre-commit autoupdate\n\nupdates:\n- [github.com/asottile/pyupgrade: v3.4.0 \u2192 v3.6.0](https://github.com/asottile/pyupgrade/compare/v3.4.0...v3.6.0)",
              "committedDate": "2023-06-13T05:12:44Z",
              "author": {
                "name": "pre-commit-ci[bot]",
                "email": "66853113+pre-commit-ci[bot]@users.noreply.github.com",
                "user": {
                  "login": "pre-commit-ci[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2023-06-13T05:26:13Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11102,
      "title": "build(deps): Bump django from 4.2.1 to 4.2.2 in /testing/plugins_integration",
      "body": "Bumps [django](https://github.com/django/django) from 4.2.1 to 4.2.2.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/django/django/commit/6218ed34541bfc1e49c0f169c5b3a216a63cd985\"><code>6218ed3</code></a> [4.2.x] Bumped version for 4.2.2 release.</li>\n<li><a href=\"https://github.com/django/django/commit/e84d38ab36137bbcb4daa4c4c17c42a28236bee7\"><code>e84d38a</code></a> [4.2.x] Added release date for 4.2.2.</li>\n<li><a href=\"https://github.com/django/django/commit/87a4cd559bc47a53c717a45a8b0a181681fe8a32\"><code>87a4cd5</code></a> [4.2.x] Fixed <a href=\"https://redirect.github.com/django/django/issues/34620\">#34620</a> -- Fixed serialization crash on m2m fields without natur...</li>\n<li><a href=\"https://github.com/django/django/commit/66d9fa43718461de1d083650a4fee1b16ba80f91\"><code>66d9fa4</code></a> [4.2.x] Refs <a href=\"https://redirect.github.com/django/django/issues/23528\">#23528</a> -- Made cosmetic edits to swappable_dependency() docs.</li>\n<li><a href=\"https://github.com/django/django/commit/92ad551afd51d0d3691ed5c83cf46c656664b1e5\"><code>92ad551</code></a> [4.2.x] Fixed <a href=\"https://redirect.github.com/django/django/issues/23528\">#23528</a> -- Doc'd django.db.migrations.swappable_dependency().</li>\n<li><a href=\"https://github.com/django/django/commit/738386470d899c61cb1980233c1e7872ba78e679\"><code>7383864</code></a> [4.2.x] Fixed <a href=\"https://redirect.github.com/django/django/issues/34612\">#34612</a> -- Fixed QuerySet.only() crash on reverse relationships.</li>\n<li><a href=\"https://github.com/django/django/commit/dae052d823dd66edcd0dd7fe5542d2c6a3a498d0\"><code>dae052d</code></a> [4.2.x] Fixed <a href=\"https://redirect.github.com/django/django/issues/34595\">#34595</a> -- Doc'd that format_string arg of format_html() is not ...</li>\n<li><a href=\"https://github.com/django/django/commit/dca5f5d58af8b8d82c96bdf3d28be74886bb955f\"><code>dca5f5d</code></a> [4.2.x] Fixed <a href=\"https://redirect.github.com/django/django/issues/34600\">#34600</a> -- Removed references to bleach in docs.</li>\n<li><a href=\"https://github.com/django/django/commit/25bd9faf327c7c0a45b9ca6e0ea678d898af8838\"><code>25bd9fa</code></a> [4.2.x] Fixed <a href=\"https://redirect.github.com/django/django/issues/34574\">#34574</a> -- Noted unexpected outcomes in autoescape/escape docs.</li>\n<li><a href=\"https://github.com/django/django/commit/91f8df5c2e711ff4b3d10602181d8a6daa62a93a\"><code>91f8df5</code></a> [4.2.x] Fixed <a href=\"https://redirect.github.com/django/django/issues/34590\">#34590</a> -- Reverted &quot;Refs <a href=\"https://redirect.github.com/django/django/issues/33308\">#33308</a> -- Improved adapting DecimalFie...</li>\n<li>Additional commits viewable in <a href=\"https://github.com/django/django/compare/4.2.1...4.2.2\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=django&package-manager=pip&previous-version=4.2.1&new-version=4.2.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2023-06-12T03:56:41Z",
      "updatedAt": "2024-01-10T18:33:32Z",
      "closedAt": "2023-06-12T04:19:02Z",
      "mergedAt": "2023-06-12T04:19:02Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/pip/testing/plugins_integration/django-4.2.2",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "python"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump django in /testing/plugins_integration\n\nBumps [django](https://github.com/django/django) from 4.2.1 to 4.2.2.\n- [Commits](https://github.com/django/django/compare/4.2.1...4.2.2)\n\n---\nupdated-dependencies:\n- dependency-name: django\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2023-06-12T03:56:39Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2023-06-12T04:00:26Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11100,
      "title": "test: test",
      "body": "<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "CLOSED",
      "createdAt": "2023-06-11T10:44:36Z",
      "updatedAt": "2023-06-15T06:55:52Z",
      "closedAt": "2023-06-11T10:45:39Z",
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "your-bugfix-branch-name",
      "author": {
        "login": "avshisnyk"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 7
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "test: test",
              "committedDate": "2023-06-11T10:43:09Z",
              "author": {
                "name": "Avshalom Richter Levin",
                "email": "avshalom.richterlevin@snyk.io",
                "user": {
                  "login": "avshisnyk"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11099,
      "title": "[automated] Update plugin list",
      "body": "[automated] Update plugin list",
      "state": "CLOSED",
      "createdAt": "2023-06-11T00:27:05Z",
      "updatedAt": "2023-06-21T08:57:54Z",
      "closedAt": "2023-06-21T08:57:54Z",
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "CONFLICTING",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "update-plugin-list/patch-ecb23106d",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[automated] Update plugin list",
              "committedDate": "2023-06-11T00:27:03Z",
              "author": {
                "name": "pytest bot",
                "email": "pytestbot@users.noreply.github.com",
                "user": {
                  "login": "pytestbot"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11097,
      "title": "Cherry-pick 7.3.2 release notes",
      "body": "(cherry picked from commit 5dcd2be4661bc606b3399bff3614c0691ce9c13f)\r\n\r\n<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "MERGED",
      "createdAt": "2023-06-10T19:32:49Z",
      "updatedAt": "2024-01-10T18:34:06Z",
      "closedAt": "2023-06-10T19:57:32Z",
      "mergedAt": "2023-06-10T19:57:32Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "cherry-pick-release",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Merge pull request #11096 from pytest-dev/release-7.3.2\n\nPrepare release 7.3.2\n\n(cherry picked from commit 5dcd2be4661bc606b3399bff3614c0691ce9c13f)",
              "committedDate": "2023-06-10T19:31:49Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2023-06-10T19:34:21Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11096,
      "title": "Prepare release 7.3.2",
      "body": "Created automatically from manual trigger.\n\nOnce all builds pass and it has been **approved** by one or more maintainers, the build\ncan be released by pushing a tag `7.3.2` to this repository.\n",
      "state": "MERGED",
      "createdAt": "2023-06-10T18:52:21Z",
      "updatedAt": "2023-06-10T19:30:13Z",
      "closedAt": "2023-06-10T19:30:12Z",
      "mergedAt": "2023-06-10T19:30:12Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "7.3.x",
      "headRefName": "release-7.3.2",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Prepare release version 7.3.2",
              "committedDate": "2023-06-10T18:52:19Z",
              "author": {
                "name": "pytest bot",
                "email": "pytestbot@gmail.com",
                "user": {
                  "login": "pytestbot"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2023-06-10T19:21:25Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11095,
      "title": "changelog: add note to `norecursedir`/`pytest_ignore_collect` change",
      "body": "Refs https://github.com/pytest-dev/pytest/pull/11082#issuecomment-1585762194",
      "state": "MERGED",
      "createdAt": "2023-06-10T18:40:24Z",
      "updatedAt": "2023-06-10T19:35:00Z",
      "closedAt": "2023-06-10T19:35:00Z",
      "mergedAt": "2023-06-10T19:34:59Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "norecursedir-note",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Update changelog/11081.improvement.rst\n\nCo-authored-by: Pierre Sassoulas <pierre.sassoulas@gmail.com>",
              "committedDate": "2023-06-10T19:14:47Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-06-10T18:50:53Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-06-10T19:14:40Z",
            "body": ""
          },
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2023-06-10T19:15:28Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11094,
      "title": "[7.3.x] Python 3.12 support",
      "body": "Backport of PR #10894 to 7.3.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2023-06-10T17:52:20Z",
      "updatedAt": "2023-06-10T18:44:30Z",
      "closedAt": "2023-06-10T18:44:30Z",
      "mergedAt": "2023-06-10T18:44:29Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "7.3.x",
      "headRefName": "backport-10894-to-7.3.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[7.3.x] Python 3.12 support",
              "committedDate": "2023-06-10T17:52:18Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-06-10T18:41:51Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11089,
      "title": "[ast.Str] Use ast.Constant instead pending removal in python 3.14",
      "body": "Pytest start raising deprecation warning in its own code when launched with python 3.12:\r\n```\r\n  File \"/home/runner/work/astroid/astroid/venv/lib/python3.12/site-packages/_pytest/assertion/rewrite.py\", line 683, in run\r\n    and isinstance(item.value, ast.Str)\r\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/opt/hostedtoolcache/Python/3.12.0-beta.1/x64/lib/python3.12/ast.py\", line 555, in __instancecheck__\r\n    warnings._deprecated(\r\n  File \"/opt/hostedtoolcache/Python/3.12.0-beta.1/x64/lib/python3.12/warnings.py\", line 529, in _deprecated\r\n    warn(msg, DeprecationWarning, stacklevel=3)\r\nDeprecationWarning: ast.Str is deprecated and will be removed in Python 3.14; use ast.Constant instead\r\n```\r\nSee https://github.com/pylint-dev/astroid/actions/runs/5196979689/jobs/9371270546?pr=2199. I'm not sure if ``ast.Str`` and ``ast.Constant`` are really equivalent so I'm opening the PR to launch the CI and see.",
      "state": "CLOSED",
      "createdAt": "2023-06-07T07:42:58Z",
      "updatedAt": "2023-06-07T10:27:40Z",
      "closedAt": "2023-06-07T09:48:46Z",
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "fix-deprecation-warning-from-ast.Str",
      "author": {
        "login": "Pierre-Sassoulas"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[ast.Str] Use ast.Constant instead pending removal in python 3.14",
              "committedDate": "2023-06-07T07:33:28Z",
              "author": {
                "name": "Pierre Sassoulas",
                "email": "pierre.sassoulas@gmail.com",
                "user": {
                  "login": "Pierre-Sassoulas"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11086,
      "title": "[automated] Update plugin list",
      "body": "[automated] Update plugin list",
      "state": "MERGED",
      "createdAt": "2023-06-06T14:05:46Z",
      "updatedAt": "2023-06-07T06:02:08Z",
      "closedAt": "2023-06-07T06:02:07Z",
      "mergedAt": "2023-06-07T06:02:07Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "update-plugin-list/patch-32de8e289",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[automated] Update plugin list",
              "committedDate": "2023-06-06T14:05:44Z",
              "author": {
                "name": "pytest bot",
                "email": "pytestbot@users.noreply.github.com",
                "user": {
                  "login": "pytestbot"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-06-07T06:01:57Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11084,
      "title": "[pre-commit.ci] pre-commit autoupdate",
      "body": "<!--pre-commit.ci start-->\nupdates:\n- [github.com/asottile/setup-cfg-fmt: v2.2.0 \u2192 v2.3.0](https://github.com/asottile/setup-cfg-fmt/compare/v2.2.0...v2.3.0)\n<!--pre-commit.ci end-->",
      "state": "MERGED",
      "createdAt": "2023-06-06T04:24:43Z",
      "updatedAt": "2023-06-06T09:13:40Z",
      "closedAt": "2023-06-06T09:13:39Z",
      "mergedAt": "2023-06-06T09:13:39Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "pre-commit-ci-update-config",
      "author": {
        "login": "pre-commit-ci"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[pre-commit.ci] auto fixes from pre-commit.com hooks\n\nfor more information, see https://pre-commit.ci",
              "committedDate": "2023-06-06T04:25:22Z",
              "author": {
                "name": "pre-commit-ci[bot]",
                "email": "66853113+pre-commit-ci[bot]@users.noreply.github.com",
                "user": {
                  "login": "pre-commit-ci[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-06-06T09:13:12Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11082,
      "title": "main: move norecursedir check to main's pytest_ignore_collect",
      "body": "Fix #11081",
      "state": "MERGED",
      "createdAt": "2023-06-05T14:22:36Z",
      "updatedAt": "2023-06-10T18:25:54Z",
      "closedAt": "2023-06-06T09:44:03Z",
      "mergedAt": "2023-06-06T09:44:03Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "norecursedir-in-hook",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 4
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "main: move norecursedir check to main's pytest_ignore_collect\n\nFix #11081",
              "committedDate": "2023-06-05T14:21:45Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2023-06-06T08:33:55Z",
            "body": "nice, this also brings the implementation and the config for it back together"
          }
        ]
      }
    },
    {
      "number": 11079,
      "title": "build(deps): Bump pytest-xvfb from 2.0.0 to 3.0.0 in /testing/plugins_integration",
      "body": "Bumps [pytest-xvfb](https://github.com/The-Compiler/pytest-xvfb) from 2.0.0 to 3.0.0.\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/The-Compiler/pytest-xvfb/blob/master/CHANGELOG.rst\">pytest-xvfb's changelog</a>.</em></p>\n<blockquote>\n<h2>v3.0.0</h2>\n<ul>\n<li>New <code>--xvfb-backend</code> argument, which can be used to run Xephyr or Xvnc in\nplace of Xvfb (e.g. for visual inspection but on a remote system or a\nconsistent screen size needed).</li>\n<li>Support for Python 3.5 and 3.6 is now dropped, while official support for 3.9,\n3.10 and 3.11 was added (with no code chances required).</li>\n<li>The <code>Xvfb</code> instance is now no longer saved in pytest's <code>config</code> object as\n<code>config.xvfb</code> anymore, and only available via the <code>xvfb</code> fixture.</li>\n<li>Xvfb is now shut down as late as possible (via an <code>atexit</code> hook registered\nat import time), seemingly avoiding errors such as\n&quot;XIO: fatal IO error 0 (Success)&quot;.</li>\n<li>Code reformatting using black/shed.</li>\n<li>Packaging refresh using <code>pyproject.toml</code>.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/The-Compiler/pytest-xvfb/commit/9a6152dbb466f4542adac197e69c3455e2cf9480\"><code>9a6152d</code></a> doc: Fix duplicate link</li>\n<li><a href=\"https://github.com/The-Compiler/pytest-xvfb/commit/e8e10d8275d43c7476477365053b72babfc3476d\"><code>e8e10d8</code></a> ci: Pin pypi-publish action tag</li>\n<li><a href=\"https://github.com/The-Compiler/pytest-xvfb/commit/b07e2bcc4c43a3182c63798d751c956961d5155f\"><code>b07e2bc</code></a> Release v3.0.0</li>\n<li><a href=\"https://github.com/The-Compiler/pytest-xvfb/commit/eeebf88fa59f2585a599af6e393f3e37a9f9f568\"><code>eeebf88</code></a> Merge pull request <a href=\"https://redirect.github.com/The-Compiler/pytest-xvfb/issues/36\">#36</a> from The-Compiler/dependabot/github_actions/actions/se...</li>\n<li><a href=\"https://github.com/The-Compiler/pytest-xvfb/commit/d15c100c103df307c3f2beae78f0c78483532bd0\"><code>d15c100</code></a> Update docs</li>\n<li><a href=\"https://github.com/The-Compiler/pytest-xvfb/commit/628a6c0f86f2980e8337d0e74347863c0bf47452\"><code>628a6c0</code></a> Bump actions/setup-python from 1 to 4</li>\n<li><a href=\"https://github.com/The-Compiler/pytest-xvfb/commit/906e19c9087ceb2b2c7e76ba9f9a42eb3a1a40e0\"><code>906e19c</code></a> Merge pull request <a href=\"https://redirect.github.com/The-Compiler/pytest-xvfb/issues/37\">#37</a> from The-Compiler/dependabot/github_actions/actions/ch...</li>\n<li><a href=\"https://github.com/The-Compiler/pytest-xvfb/commit/79f6e0678835fdcfc090dfe895de92a3200a57ae\"><code>79f6e06</code></a> Bump actions/checkout from 2 to 3</li>\n<li><a href=\"https://github.com/The-Compiler/pytest-xvfb/commit/676beb225859c9e03a7cb7cdf5a93fdd4a3f83d2\"><code>676beb2</code></a> ci: Just drop PyPy</li>\n<li><a href=\"https://github.com/The-Compiler/pytest-xvfb/commit/9f531988c6aad2e0aed238ef5efe7a2e382b3b79\"><code>9f53198</code></a> run shed</li>\n<li>Additional commits viewable in <a href=\"https://github.com/The-Compiler/pytest-xvfb/compare/v2.0.0...v3.0.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pytest-xvfb&package-manager=pip&previous-version=2.0.0&new-version=3.0.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2023-06-05T03:56:33Z",
      "updatedAt": "2023-06-05T10:06:57Z",
      "closedAt": "2023-06-05T10:06:56Z",
      "mergedAt": "2023-06-05T10:06:56Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "The-Compiler"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/pip/testing/plugins_integration/pytest-xvfb-3.0.0",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "python"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump pytest-xvfb in /testing/plugins_integration\n\nBumps [pytest-xvfb](https://github.com/The-Compiler/pytest-xvfb) from 2.0.0 to 3.0.0.\n- [Changelog](https://github.com/The-Compiler/pytest-xvfb/blob/master/CHANGELOG.rst)\n- [Commits](https://github.com/The-Compiler/pytest-xvfb/compare/v2.0.0...v3.0.0)\n\n---\nupdated-dependencies:\n- dependency-name: pytest-xvfb\n  dependency-type: direct:production\n  update-type: version-update:semver-major\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2023-06-05T03:56:32Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "The-Compiler"
            },
            "state": "APPROVED",
            "submittedAt": "2023-06-05T10:06:50Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11078,
      "title": "main: change pkg_roots to work with `Path`s instead of string paths",
      "body": "- Works better on Windows (case sensitivity)\r\n- Simpler code\r\n\r\n<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "MERGED",
      "createdAt": "2023-06-04T17:44:07Z",
      "updatedAt": "2023-06-04T18:45:50Z",
      "closedAt": "2023-06-04T18:45:46Z",
      "mergedAt": "2023-06-04T18:45:46Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "pkg-roots-path",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "main: change pkg_roots to work with `Path`s instead of string paths\n\n- Works better on Windows (case sensitivity)\n- Simpler code",
              "committedDate": "2023-06-04T17:43:34Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2023-06-04T18:25:19Z",
            "body": "I love this change, thanks "
          }
        ]
      }
    },
    {
      "number": 11077,
      "title": "Introduced a hardcoded list of project to include as plugins beyond those found by their names.",
      "body": "This is a result of question #11066.\r\n\r\nNo doc updates are included as this is a script to be run by pytest's devs. It seems to not have tests either, but checked this to work OK IRL.\r\n\r\n- [X] Allow maintainers to push and squash when merging my commits.\r\n\r\nFor the same reasons explained above, I didn't touch the changelog or included myself in AUTHORS file.",
      "state": "MERGED",
      "createdAt": "2023-06-04T02:14:07Z",
      "updatedAt": "2023-06-06T15:12:42Z",
      "closedAt": "2023-06-06T09:15:57Z",
      "mergedAt": "2023-06-06T09:15:57Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "augmented-plugins-list",
      "author": {
        "login": "facundobatista"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Reverted changes in the generated doc.",
              "committedDate": "2023-06-04T22:57:25Z",
              "author": {
                "name": "Facundo Batista",
                "email": "facundo@taniquetil.com.ar",
                "user": {
                  "login": "facundobatista"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "The-Compiler"
            },
            "state": "APPROVED",
            "submittedAt": "2023-06-04T21:26:27Z",
            "body": "Seems fine to me! However I'd recommend not including the changes to the doc in your PR, to avoid it conflicting with e.g. #11076."
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-06-06T09:15:28Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11076,
      "title": "[automated] Update plugin list",
      "body": "[automated] Update plugin list",
      "state": "MERGED",
      "createdAt": "2023-06-04T00:27:00Z",
      "updatedAt": "2023-06-06T09:37:48Z",
      "closedAt": "2023-06-06T09:37:47Z",
      "mergedAt": "2023-06-06T09:37:47Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "update-plugin-list/patch-b5ff089d2",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[automated] Update plugin list",
              "committedDate": "2023-06-04T00:26:58Z",
              "author": {
                "name": "pytest bot",
                "email": "pytestbot@users.noreply.github.com",
                "user": {
                  "login": "pytestbot"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-06-06T09:14:06Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11073,
      "title": "Improvement: extend pytest.raises to support Exception having __repr__ method and initialized with kwargs",
      "body": "### Issue\r\n\r\nI met this issue when using [FastAPI](https://github.com/tiangolo/fastapi/)'s [HTTPException](https://github.com/encode/starlette/blob/12b87a643245aaef2b8365d8404affb4650b1b1f/starlette/exceptions.py#LL8C7-L8C20), which defines as follow. And when I use `pytest.raises` to assert `HTTPException` initialized with kwargs as follows, it does't work, so I extended it. \r\n\r\n```Python\r\nwith pytest.raises(HTTPException, match=r\"404\"):\r\n    kwargs_exception = HTTPException(status_code=404)\r\n    raise kwargs_exception\r\n```\r\n\r\n```Python\r\nclass HTTPException(Exception):\r\n    def __init__(\r\n        self,\r\n        status_code: int,\r\n        detail: typing.Optional[str] = None,\r\n        headers: typing.Optional[dict] = None,\r\n    ) -> None:\r\n        if detail is None:\r\n            detail = http.HTTPStatus(status_code).phrase\r\n        self.status_code = status_code\r\n        self.detail = detail\r\n        self.headers = headers\r\n\r\n    def __repr__(self) -> str:\r\n        class_name = self.__class__.__name__\r\n        return f\"{class_name}(status_code={self.status_code!r}, detail={self.detail!r})\"\r\n```\r\n\r\n### Backward compatibility\r\n\r\nI think this pr would not break current behavior,  because we generally use `pytest.raises match` to check details, it defaults to `Exception.__str__` method, which prints args. What I extend is to support `Exception.__repr__` method and kwargs when `Exception` is initialized without args, so it's intelligent than ever.\r\n\r\nThanks for your attention.",
      "state": "MERGED",
      "createdAt": "2023-06-03T09:03:59Z",
      "updatedAt": "2023-07-20T23:59:25Z",
      "closedAt": "2023-07-20T16:29:30Z",
      "mergedAt": "2023-07-20T16:29:30Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "pytest.raises-match-Exception-repr",
      "author": {
        "login": "BoWuGit"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 10
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Update src/_pytest/python_api.py",
              "committedDate": "2023-07-20T11:23:14Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "nicoddemus@gmail.com",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": [
          {
            "requestedReviewer": {
              "login": "RonnyPfannschmidt"
            }
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "CHANGES_REQUESTED",
            "submittedAt": "2023-06-03T17:33:36Z",
            "body": "It seems necessary to reject misbehaved exception type support here\n\nImho fastapi should fix the exception classes\n\nAlternatively a fastapi specific wrapper could match values on correct types instead of yolo on repr "
          },
          {
            "author": {
              "login": "The-Compiler"
            },
            "state": "APPROVED",
            "submittedAt": "2023-06-05T12:53:27Z",
            "body": "Seems fine by me. Let's see what others think!"
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-07-20T11:22:49Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11070,
      "title": "python: remove redundant methods from Package",
      "body": "They are already inherited exactly the same from FSCollector:\r\n\r\nhttps://github.com/pytest-dev/pytest/blob/24534cdd29d74e302e86db1a719c99e024d7903e/src/_pytest/nodes.py#L646-L652\r\n\r\n<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "MERGED",
      "createdAt": "2023-06-02T13:13:06Z",
      "updatedAt": "2023-06-02T15:58:26Z",
      "closedAt": "2023-06-02T15:58:21Z",
      "mergedAt": "2023-06-02T15:58:21Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "pkg-redundant-methods",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "python: remove redundant methods from Package\n\nThey are already inherited exactly the same from FSCollector.",
              "committedDate": "2023-06-02T13:08:04Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-06-02T13:16:55Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11069,
      "title": "cacheprovider: make file-skipping work with any File, not just Modules",
      "body": "~~NOTE: Includes #11059, will rebase after it's merged.~~\r\n\r\nNo reason for `--lf`'s whole-file-skipping feature to not for for non-Python files.\r\n\r\nFix #11068.",
      "state": "MERGED",
      "createdAt": "2023-06-02T09:05:13Z",
      "updatedAt": "2023-06-03T15:50:54Z",
      "closedAt": "2023-06-03T15:50:51Z",
      "mergedAt": "2023-06-03T15:50:51Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "lf-file",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "cacheprovider: make file-skipping work with any File, not just Modules\n\nNo reason for `--lf`'s whole-file-skipping feature to not for for\nnon-Python files.\n\nFix #11068.",
              "committedDate": "2023-06-03T06:32:26Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-06-03T13:48:45Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11059,
      "title": "cacheprovider: fix file-skipping functionality across packages",
      "body": "Continuation of fc538c5766a1c67bfcd704288279ceac5e20070a. Fixes #11054 again.\r\n\r\n<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "MERGED",
      "createdAt": "2023-05-30T19:55:22Z",
      "updatedAt": "2023-06-03T06:31:08Z",
      "closedAt": "2023-06-03T06:31:05Z",
      "mergedAt": "2023-06-03T06:31:05Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "lf-skip-across",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "cacheprovider: fix file-skipping functionality across packages\n\nContinuation of fc538c5766a1c67bfcd704288279ceac5e20070a.\nFixes #11054 again.",
              "committedDate": "2023-05-30T20:16:43Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "pyuscherbakov"
            },
            "state": "APPROVED",
            "submittedAt": "2023-06-02T07:36:58Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-06-02T17:35:28Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11058,
      "title": "[7.3.x] cacheprovider: fix file-skipping feature for files in packages",
      "body": "Backport of PR #11055 to 7.3.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2023-05-30T17:07:17Z",
      "updatedAt": "2023-05-30T17:32:44Z",
      "closedAt": "2023-05-30T17:32:43Z",
      "mergedAt": "2023-05-30T17:32:43Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "7.3.x",
      "headRefName": "backport-11055-to-7.3.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[7.3.x] cacheprovider: fix file-skipping feature for files in packages",
              "committedDate": "2023-05-30T17:07:15Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-05-30T17:10:07Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11057,
      "title": "[7.3.x] 11028 - Fix warlus operator behavior when called by a function",
      "body": "Backport of PR #11041 to 7.3.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2023-05-30T15:01:09Z",
      "updatedAt": "2023-05-30T16:23:13Z",
      "closedAt": "2023-05-30T16:23:12Z",
      "mergedAt": "2023-05-30T16:23:12Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "7.3.x",
      "headRefName": "backport-11041-to-7.3.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[7.3.x] 11028 - Fix warlus operator behavior when called by a function",
              "committedDate": "2023-05-30T15:01:07Z",
              "author": {
                "name": "Alessio Izzo",
                "email": "alessio.izzo86@gmail.com",
                "user": {
                  "login": "aless10"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-05-30T15:54:33Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11056,
      "title": "Update README.rst",
      "body": "<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "CLOSED",
      "createdAt": "2023-05-30T09:48:57Z",
      "updatedAt": "2023-05-30T09:49:13Z",
      "closedAt": "2023-05-30T09:49:13Z",
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "dev/001",
      "author": {
        "login": "zhangwk02"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Update README.rst",
              "committedDate": "2023-05-30T09:48:26Z",
              "author": {
                "name": "zhangwenkal",
                "email": "415675018@qq.com",
                "user": {
                  "login": "zhangwk02"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11055,
      "title": "cacheprovider: fix file-skipping feature for files in packages",
      "body": "`--lf` has a feature where if a certain `Module` (python file) does not contain any failed tests, it is skipped entirely at the collector level instead of being collected and each item skipped individually. When this happens the collection summary looks like this:\r\n\r\n    run-last-failure: rerun previous 1 failure (skipped 1 file)\r\n\r\nHowever, this feature didn't work for `Module`s inside of `Package`s, only for those directly beneath the `Session`.\r\n\r\nFix #11054.\r\n\r\n<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "MERGED",
      "createdAt": "2023-05-29T19:56:37Z",
      "updatedAt": "2023-05-30T17:05:38Z",
      "closedAt": "2023-05-30T17:04:06Z",
      "mergedAt": "2023-05-30T17:04:06Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "lf-skipped-package",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "cacheprovider: fix file-skipping feature for files in packages\n\n`--lf` has a feature where if a certain `Module` (python file) does not\ncontain any failed tests, it is skipped entirely at the collector level\ninstead of being collected and each item skipped individually. When this\nhappens the collection summary looks like this:\n\n    run-last-failure: rerun previous 1 failure (skipped 1 file)\n\nHowever, this feature didn't work for `Module`s inside of `Package`s,\nonly for those directly beneath the `Session`.\n\nFix #11054.",
              "committedDate": "2023-05-29T19:55:44Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-05-30T10:22:31Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11051,
      "title": "build(deps): Bump pytest-cov from 4.0.0 to 4.1.0 in /testing/plugins_integration",
      "body": "Bumps [pytest-cov](https://github.com/pytest-dev/pytest-cov) from 4.0.0 to 4.1.0.\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/pytest-dev/pytest-cov/blob/master/CHANGELOG.rst\">pytest-cov's changelog</a>.</em></p>\n<blockquote>\n<h2>4.1.0 (2023-05-24)</h2>\n<ul>\n<li>Updated CI with new Pythons and dependencies.</li>\n<li>Removed rsyncdir support. This makes pytest-cov compatible with xdist 3.0.\nContributed by Sorin Sbarnea in <code>[#558](https://github.com/pytest-dev/pytest-cov/issues/558) &lt;https://github.com/pytest-dev/pytest-cov/pull/558&gt;</code>_.</li>\n<li>Optimized summary generation to not be performed if no reporting is active (for example,\nwhen <code>--cov-report=''</code> is used without <code>--cov-fail-under</code>).\nContributed by Jonathan Stewmon in <code>[#589](https://github.com/pytest-dev/pytest-cov/issues/589) &lt;https://github.com/pytest-dev/pytest-cov/pull/589&gt;</code>_.</li>\n<li>Added support for JSON reporting.\nContributed by Matthew Gamble in <code>[#582](https://github.com/pytest-dev/pytest-cov/issues/582) &lt;https://github.com/pytest-dev/pytest-cov/pull/582&gt;</code>_.</li>\n<li>Refactored code to use f-strings.\nContributed by Mark Mayo in <code>[#572](https://github.com/pytest-dev/pytest-cov/issues/572) &lt;https://github.com/pytest-dev/pytest-cov/pull/572&gt;</code>_.</li>\n<li>Fixed a skip in the test suite for some old xdist.\nContributed by a bunch of people in <code>[#565](https://github.com/pytest-dev/pytest-cov/issues/565) &lt;https://github.com/pytest-dev/pytest-cov/pull/565&gt;</code>_.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pytest-dev/pytest-cov/commit/2c9f2170d8575b21bafb6402eb30ca7de31e20b9\"><code>2c9f217</code></a> Bump version: 4.0.0 \u2192 4.1.0</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-cov/commit/4d245df8f75e434a9e1b162b51265d6a45017465\"><code>4d245df</code></a> Update changelog and authors.</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-cov/commit/7b095c84ae521b14058d7d520ef36372849063a8\"><code>7b095c8</code></a> Skip starting from xdist 3.0.2 (where boxed was removed).</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-cov/commit/605d6902b3b3d17aad0bf811b8c580fc895724ca\"><code>605d690</code></a> disabling boxed test if version xdist newer than 2.5.0</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-cov/commit/76fb2a6cb2c4a4a788a5b62710848daf9c8fb7ce\"><code>76fb2a6</code></a> introduced f-strings</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-cov/commit/0d63ede0d2ca9f4acc8329aa4261a7cec489ffdb\"><code>0d63ede</code></a> Update test config. Reapply some of the changes from PR567 to the right file ...</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-cov/commit/f3d8d8380f6a4b265353fe7cd509b040702f1e64\"><code>f3d8d83</code></a> Add support for JSON reporter</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-cov/commit/dec02abeb9fa8ee3547baa054bde6006bea530ee\"><code>dec02ab</code></a> Update test deps.</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-cov/commit/88a7d348986bace58e26c88a713ef35f900ce2ef\"><code>88a7d34</code></a> chore: update AUTHORS and CHANGELOG</li>\n<li><a href=\"https://github.com/pytest-dev/pytest-cov/commit/74eb4cc8b684269b89735e31b623f0f9795c5d5c\"><code>74eb4cc</code></a> perf: only call summary when the report will be used</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pytest-dev/pytest-cov/compare/v4.0.0...v4.1.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pytest-cov&package-manager=pip&previous-version=4.0.0&new-version=4.1.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2023-05-29T03:56:45Z",
      "updatedAt": "2023-05-29T05:55:15Z",
      "closedAt": "2023-05-29T05:55:14Z",
      "mergedAt": "2023-05-29T05:55:14Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/pip/testing/plugins_integration/pytest-cov-4.1.0",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "python"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump pytest-cov in /testing/plugins_integration\n\nBumps [pytest-cov](https://github.com/pytest-dev/pytest-cov) from 4.0.0 to 4.1.0.\n- [Changelog](https://github.com/pytest-dev/pytest-cov/blob/master/CHANGELOG.rst)\n- [Commits](https://github.com/pytest-dev/pytest-cov/compare/v4.0.0...v4.1.0)\n\n---\nupdated-dependencies:\n- dependency-name: pytest-cov\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2023-05-29T03:56:44Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2023-05-29T05:55:07Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11050,
      "title": "build(deps): Bump anyio[curio,trio] from 3.6.2 to 3.7.0 in /testing/plugins_integration",
      "body": "[//]: # (dependabot-start)\n\u26a0\ufe0f  **Dependabot is rebasing this PR** \u26a0\ufe0f \n\nRebasing might not happen immediately, so don't worry if this takes some time.\n\nNote: if you make any changes to this PR yourself, they will take precedence over the rebase.\n\n---\n\n[//]: # (dependabot-end)\n\nBumps [anyio[curio,trio]](https://github.com/agronholm/anyio) from 3.6.2 to 3.7.0.\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/agronholm/anyio/blob/3.7.0/docs/versionhistory.rst\">anyio[curio,trio]'s changelog</a>.</em></p>\n<blockquote>\n<h1>Version history</h1>\n<p>This library adheres to <code>Semantic Versioning 2.0 &lt;http://semver.org/&gt;</code>_.</p>\n<p><strong>3.7.0</strong></p>\n<ul>\n<li>\n<p>Dropped support for Python 3.6</p>\n</li>\n<li>\n<p>Improved type annotations:</p>\n<ul>\n<li>\n<p>Several functions and methods that were previously annotated as accepting\n<code>Coroutine[Any, Any, Any]</code> as the return type of the callable have been amended to\naccept <code>Awaitable[Any]</code> instead, to allow a slightly broader set of coroutine-like\ninputs, like <code>async_generator_asend</code> objects returned from the <code>asend()</code> method\nof async generators, and to match the <code>trio</code> annotations:</p>\n<ul>\n<li><code>anyio.run()</code></li>\n<li><code>anyio.from_thread.run()</code></li>\n<li><code>TaskGroup.start_soon()</code></li>\n<li><code>TaskGroup.start()</code></li>\n<li><code>BlockingPortal.call()</code></li>\n<li><code>BlockingPortal.start_task_soon()</code></li>\n<li><code>BlockingPortal.start_task()</code></li>\n</ul>\n<p>Note that this change involved only changing the type annotations; run-time\nfunctionality was not altered.</p>\n</li>\n<li>\n<p>The <code>TaskStatus</code> class is now a generic protocol, and should be parametrized to\nindicate the type of the value passed to <code>task_status.started()</code></p>\n</li>\n<li>\n<p>The <code>Listener</code> class is now covariant in its stream type</p>\n</li>\n<li>\n<p><code>create_memory_object_stream()</code> now allows passing only <code>item_type</code></p>\n</li>\n<li>\n<p>Object receive streams are now covariant and object send streams are correspondingly\ncontravariant</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Changed <code>TLSAttribute.shared_ciphers</code> to match the documented semantics of\n<code>SSLSocket.shared_ciphers</code> of always returning <code>None</code> for client-side streams</p>\n</li>\n<li>\n<p>Fixed <code>CapacityLimiter</code> on the asyncio backend to order waiting tasks in the FIFO\norder (instead of LIFO) (PR by Conor Stevenson)</p>\n</li>\n<li>\n<p>Fixed <code>CancelScope.cancel()</code> not working on asyncio if called before entering the\nscope</p>\n</li>\n<li>\n<p>Fixed <code>open_signal_receiver()</code> inconsistently yielding integers instead of\n<code>signal.Signals</code> instances on the <code>trio</code> backend</p>\n</li>\n<li>\n<p>Fixed <code>to_thread.run_sync()</code> hanging on asyncio if the target callable raises\n<code>StopIteration</code></p>\n</li>\n<li>\n<p>Fixed <code>start_blocking_portal()</code> raising an unwarranted\n<code>RuntimeError: This portal is not running</code> if a task raises an exception that causes\nthe event loop to be closed</p>\n</li>\n<li>\n<p>Fixed <code>current_effective_deadline()</code> not returning <code>-inf</code> on asyncio when the\ncurrently active cancel scope has been cancelled (PR by Ganden Schaffner)</p>\n</li>\n<li>\n<p>Fixed the <code>OP_IGNORE_UNEXPECTED_EOF</code> flag in an SSL context created by default in\n<code>TLSStream.wrap()</code> being inadvertently set on Python 3.11.3 and 3.10.11</p>\n</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/agronholm/anyio/commit/f7a880ffac4766efb39e6fb60fc28d944f5d2f65\"><code>f7a880f</code></a> Bumped up the version</li>\n<li><a href=\"https://github.com/agronholm/anyio/commit/4942cdca1c141c65d18697fc419d9d759ea257e8\"><code>4942cdc</code></a> Added the Typing::Typed classifier</li>\n<li><a href=\"https://github.com/agronholm/anyio/commit/35758cc27a61e4698da4adc18097a027fed95ef4\"><code>35758cc</code></a> Removed Python 3.12 from the test matrix for now</li>\n<li><a href=\"https://github.com/agronholm/anyio/commit/97ae69ce929692dae2dc241c35b801de924822f3\"><code>97ae69c</code></a> Added Python 3.12 to test matrix and used editable mode when testing</li>\n<li><a href=\"https://github.com/agronholm/anyio/commit/79d5cc669f4395d5a0480647fa2e91cb6c2e3b11\"><code>79d5cc6</code></a> Fixed Sphinx build warnings</li>\n<li><a href=\"https://github.com/agronholm/anyio/commit/a1afbdb508a7dc5d1b8babe569d6789dc0c66406\"><code>a1afbdb</code></a> Bumped the minimum tox version</li>\n<li><a href=\"https://github.com/agronholm/anyio/commit/50e654e8934ea99ec1436e383c95f149a8f18adb\"><code>50e654e</code></a> Upgraded pre-commit modules</li>\n<li><a href=\"https://github.com/agronholm/anyio/commit/1c9facee98113cb5bb9389cd16d8f9eb39ba21a9\"><code>1c9face</code></a> Fixed missing jquery error in docs</li>\n<li><a href=\"https://github.com/agronholm/anyio/commit/87b56ab82133f083733034526be344bcc37d713f\"><code>87b56ab</code></a> Bumped up the version</li>\n<li><a href=\"https://github.com/agronholm/anyio/commit/a746a632bd9a87733877868b55a68907393f3d7f\"><code>a746a63</code></a> Fixed error binding <code>create_tcp_listener()</code> to named link-local interfaces (#...</li>\n<li>Additional commits viewable in <a href=\"https://github.com/agronholm/anyio/compare/3.6.2...3.7.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=anyio[curio,trio]&package-manager=pip&previous-version=3.6.2&new-version=3.7.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2023-05-29T03:56:41Z",
      "updatedAt": "2023-05-29T05:55:43Z",
      "closedAt": "2023-05-29T05:55:42Z",
      "mergedAt": "2023-05-29T05:55:42Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/pip/testing/plugins_integration/anyio-curiotrio--3.7.0",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "python"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump anyio[curio,trio] in /testing/plugins_integration\n\nBumps [anyio[curio,trio]](https://github.com/agronholm/anyio) from 3.6.2 to 3.7.0.\n- [Changelog](https://github.com/agronholm/anyio/blob/3.7.0/docs/versionhistory.rst)\n- [Commits](https://github.com/agronholm/anyio/compare/3.6.2...3.7.0)\n\n---\nupdated-dependencies:\n- dependency-name: anyio[curio,trio]\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2023-05-29T03:56:40Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2023-05-29T05:55:33Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11049,
      "title": "Updated - done",
      "body": "<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "CLOSED",
      "createdAt": "2023-05-29T03:42:26Z",
      "updatedAt": "2023-05-29T03:42:52Z",
      "closedAt": "2023-05-29T03:42:42Z",
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "main",
      "author": {
        "login": "palonza"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Updated - done",
              "committedDate": "2023-05-29T03:40:35Z",
              "author": {
                "name": "J\u043es\u00e9 P. Al\u043enza",
                "email": "192836+palonza@users.noreply.github.com",
                "user": {
                  "login": "palonza"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11048,
      "title": "Updated - done",
      "body": "<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "CLOSED",
      "createdAt": "2023-05-29T03:40:59Z",
      "updatedAt": "2023-05-29T03:41:23Z",
      "closedAt": "2023-05-29T03:41:16Z",
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "main",
      "author": {
        "login": "palonza"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Updated - done",
              "committedDate": "2023-05-29T03:40:35Z",
              "author": {
                "name": "J\u043es\u00e9 P. Al\u043enza",
                "email": "192836+palonza@users.noreply.github.com",
                "user": {
                  "login": "palonza"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11047,
      "title": "Handle microseconds with custom logging.Formatter",
      "body": "Added handling of ``%f`` directive to print microseconds in log format options, such as ``log-date-format``. It is impossible to do with a standard `logging.Formatter` because it uses `time.strftime` which doesn't know about milliseconds and ``%f``. In this PR I added a custom Formatter which converts `LogRecord` to a `datetime.datetime` object and formats it with ``%f`` flag. This behaviour is enabled only if a microsecond flag is specified in a format string.\r\n\r\nAlso added a few tests to check the standard and changed behaviour.\r\n\r\nCloses #10991.\r\n\r\n<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [x] Include documentation when adding new features.\r\n- [x] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [x] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [x] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [x] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "MERGED",
      "createdAt": "2023-05-28T11:13:56Z",
      "updatedAt": "2023-06-01T12:54:20Z",
      "closedAt": "2023-05-30T12:35:34Z",
      "mergedAt": "2023-05-30T12:35:34Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "issue-10991",
      "author": {
        "login": "theirix"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[pre-commit.ci] auto fixes from pre-commit.com hooks\n\nfor more information, see https://pre-commit.ci",
              "committedDate": "2023-05-30T11:32:19Z",
              "author": {
                "name": "pre-commit-ci[bot]",
                "email": "66853113+pre-commit-ci[bot]@users.noreply.github.com",
                "user": {
                  "login": "pre-commit-ci[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "CHANGES_REQUESTED",
            "submittedAt": "2023-05-30T10:04:19Z",
            "body": "Looks great, thnaks a lot @theirix!\r\n\r\nLeft two minor comments, other than that LGTM. :+1:  "
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-05-30T12:34:49Z",
            "body": "Thanks @theirix! "
          }
        ]
      }
    },
    {
      "number": 11046,
      "title": "[automated] Update plugin list",
      "body": "[automated] Update plugin list",
      "state": "MERGED",
      "createdAt": "2023-05-28T00:22:06Z",
      "updatedAt": "2023-05-28T13:02:09Z",
      "closedAt": "2023-05-28T13:02:08Z",
      "mergedAt": "2023-05-28T13:02:08Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "update-plugin-list/patch-4f3f36c39",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[automated] Update plugin list",
              "committedDate": "2023-05-28T00:22:05Z",
              "author": {
                "name": "pytest bot",
                "email": "pytestbot@users.noreply.github.com",
                "user": {
                  "login": "pytestbot"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-05-28T06:23:31Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11044,
      "title": "Add warning when testpaths is set but paths are not found by glob",
      "body": "Closes #11013\r\n\r\nUsed PytestConfigWarning and setting warning_text string for message to follow convention for some of the other warnings, and set stacklevel to 3 so it shows the warning thrown by parse function. Tried to make the message concise, but if unclear please let me know and I can change!\r\n\r\nTested against steps to reproduce from #11006 and warning is shown.\r\n\r\n<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "MERGED",
      "createdAt": "2023-05-27T23:26:11Z",
      "updatedAt": "2023-05-30T10:06:14Z",
      "closedAt": "2023-05-30T10:06:13Z",
      "mergedAt": "2023-05-30T10:06:13Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "add-testpaths-warning",
      "author": {
        "login": "kenny-y-dev"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Add additional line break to reduce chars in line for pre-commit test",
              "committedDate": "2023-05-28T12:28:45Z",
              "author": {
                "name": "Kenny Y",
                "email": "24802984+kenny-y-dev@users.noreply.github.com",
                "user": {
                  "login": "kenny-y-dev"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-05-28T06:03:56Z",
            "body": "Thanks @kenny-y-dev, I think this warning is good to have. I left a couple of suggestions."
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-05-28T13:03:33Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-05-30T10:05:40Z",
            "body": "Thanks @kenny-y-dev! "
          }
        ]
      }
    },
    {
      "number": 11043,
      "title": "config: fallback confcutdir to rootpath if inipath is not set",
      "body": "Currently, if `--confcutdir` is not set, `inipath.parent` is used, and if `initpath` is not set, then `confcutdir` is None, which means there is no cutoff.\r\n\r\nHaving no cutoff is not great, it means we potentially start probing stuff all the way up to the filesystem root directory. So let's add another fallback, to `rootpath`, which is always something reasonable.\r\n\r\n<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "MERGED",
      "createdAt": "2023-05-27T16:29:59Z",
      "updatedAt": "2023-05-31T07:44:08Z",
      "closedAt": "2023-05-30T17:21:20Z",
      "mergedAt": "2023-05-30T17:21:20Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "confcutdir-rootpath",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "config: fallback confcutdir to rootpath if inipath is not set\n\nCurrently, if `--confcutdir` is not set, `inipath.parent` is used, and\nif `initpath` is not set, then `confcutdir` is None, which means there\nis no cutoff.\n\nHaving no cutoff is not great, it means we potentially start probing\nstuff all the way up to the filesystem root directory. So let's add\nanother fallback, to `rootpath`, which is always something reasonable.",
              "committedDate": "2023-05-30T16:52:59Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-05-30T09:59:05Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-05-30T17:01:39Z",
            "body": "Thanks for the review @nicoddemus, I applied your suggestions."
          }
        ]
      }
    },
    {
      "number": 11042,
      "title": "python: change `pytest pkg/__init__.py` to only collect the `__init__.py` Module",
      "body": "Previously it would collect the entire package, but this is not what users (including me) expect.\r\n\r\nRefs #3749\r\nFixes #8976\r\nFixes #9263\r\nFixes #9313\r\n\r\n---\r\n\r\nTechnically I'd say this is a bug fix, but I'm not entirely sure the previous behavior wasn't intentional (there are certainly several tests to the contrary). And it also has potential of breaking users who somehow rely on the previous behavior. Therefore I've marked this as `breaking`, and it should not be merged before we decide the next version will be a major. Still, acks would be good already :)",
      "state": "MERGED",
      "createdAt": "2023-05-27T12:22:06Z",
      "updatedAt": "2023-06-23T18:09:04Z",
      "closedAt": "2023-06-23T18:09:01Z",
      "mergedAt": "2023-06-23T18:09:00Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "pkg-init-argpath",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": {
        "title": "8.0",
        "dueOn": null
      },
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "python: change `pytest pkg/__init__.py` to only collect the `__init__.py` Module\n\nPreviously it would collect the entire package, but this is not what\nusers expect.\n\nRefs #3749\nFixes #8976\nFixes #9263\nFixes #9313",
              "committedDate": "2023-06-23T17:42:50Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-05-27T12:25:39Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-05-30T09:55:08Z",
            "body": "LGTM!\r\n\r\nShould we add some note to the docs themselves, besides the CHANGELOG?"
          }
        ]
      }
    },
    {
      "number": 11041,
      "title": "11028 - Fix warlus operator behavior when called by a function",
      "body": "<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [X] Include documentation when adding new features.\r\n- [X] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [X] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [X] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\nIn #10758 we introduced the support for the use of the walrus operator in the test cases. There was a case which was not handled that caused a bug report #11028. This PR aims to fix the issue and also to improve how the walrus operator is handled in the AssertionRewriter class.\r\n\r\ncloses #11028\r\n\r\nMade during ![Open Source Saturday Italy](https://img.shields.io/badge/Open%20Source%20Saturday-Italy-red)",
      "state": "MERGED",
      "createdAt": "2023-05-27T09:33:16Z",
      "updatedAt": "2023-05-30T14:59:44Z",
      "closedAt": "2023-05-30T14:59:25Z",
      "mergedAt": "2023-05-30T14:59:25Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "main",
      "author": {
        "login": "aless10"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "refactor variable name from object to obj from code review",
              "committedDate": "2023-05-30T12:45:43Z",
              "author": {
                "name": "Alessio Izzo",
                "email": "alessio.izzo86@gmail.com",
                "user": {
                  "login": "aless10"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-05-30T10:26:22Z",
            "body": "Great work @aless10, thanks for tackling this so quickly, we definitely appreciate it. :+1: \r\n\r\n "
          },
          {
            "author": {
              "login": "aless10"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-05-30T12:41:14Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-05-30T14:57:41Z",
            "body": "Thanks!"
          }
        ]
      }
    },
    {
      "number": 11036,
      "title": "Add new flag to CLI: `--config-file`",
      "body": "## Add new flag to CLI: `--config-file`\r\n\r\nThere is already an exiting flag in the CLI for importing a custom config file: `-c`. This change does not change the behaviour of that flag, but simply adds a new flag to execute the same process: `--config-file`.\r\n\r\nThis change is also in-line with other large Python packages which use the same behaviour:\r\n\r\n- MyPy uses the command: `--config-file CONFIG_FILE`. See [here][mypy_cli_flag_--config-file].\r\n- Black uses the command: `--config FILE`. See [here][black_cli_flag_--config].\r\n\r\n---\r\n\r\n- Closes: #11031\r\n\r\n[mypy_cli_flag_--config-file]: https://mypy.readthedocs.io/en/stable/command_line.html#cmdoption-mypy-config-file\r\n[black_cli_flag_--config]: https://black.readthedocs.io/en/stable/usage_and_configuration/the_basics.html#:~:text=version%20and%20exit.-,%2D%2Dconfig,-FILE%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20Read%20configuration",
      "state": "MERGED",
      "createdAt": "2023-05-24T23:28:43Z",
      "updatedAt": "2023-05-26T10:56:19Z",
      "closedAt": "2023-05-26T10:56:19Z",
      "mergedAt": "2023-05-26T10:56:19Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "cli-config-flags",
      "author": {
        "login": "chrimaho"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Add commands & tests for CLI flag `--config-file`\n\nSigned-off-by: Chris Mahoney <chrismahoey@hotmail.com>",
              "committedDate": "2023-05-25T22:19:09Z",
              "author": {
                "name": "Chris Mahoney",
                "email": "chrismahoey@hotmail.com",
                "user": null
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "CHANGES_REQUESTED",
            "submittedAt": "2023-05-25T10:59:58Z",
            "body": "Hi @chrimaho, thanks for the contribution!\r\n\r\nHowever please check your Git settings, both `main.py` and `test_config.py` have changed entirely."
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-05-25T22:49:41Z",
            "body": "LGTM, thanks!\r\n\r\nReminder: we should squash this before merging."
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2023-05-26T03:53:18Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11034,
      "title": "[7.3.x] nonpython example now repr all exceptions",
      "body": "Backport of PR #11033 to 7.3.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2023-05-24T11:12:39Z",
      "updatedAt": "2023-05-24T11:33:29Z",
      "closedAt": "2023-05-24T11:33:28Z",
      "mergedAt": "2023-05-24T11:33:28Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "7.3.x",
      "headRefName": "backport-11033-to-7.3.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[7.3.x] nonpython example now repr all exceptions",
              "committedDate": "2023-05-24T11:12:38Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "nicoddemus@gmail.com",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-05-24T11:13:27Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11033,
      "title": "nonpython example now repr all exceptions",
      "body": "The definition of `repr_failure` on the `YamlItem` subclass only handled the custom `YamlException` class, which hides all other errors from the user. By adding in the `super` call we ensure all other exception types also appropriately handled by `repr_failure`.\r\n\r\n<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "MERGED",
      "createdAt": "2023-05-24T03:07:46Z",
      "updatedAt": "2023-05-24T11:10:50Z",
      "closedAt": "2023-05-24T11:10:43Z",
      "mergedAt": "2023-05-24T11:10:43Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "patch-1",
      "author": {
        "login": "jkeifer"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "nonpython example now repr all exceptions\n\nThe definition of `repr_failure` on the `YamlItem` subclass only handled the custom `YamlException` class, which hides all other errors from the user. By adding in the `super` call we ensure all other exception types also appropriately handled by `repr_failure`.",
              "committedDate": "2023-05-24T03:06:05Z",
              "author": {
                "name": "Jarrett Keifer",
                "email": "jkeifer@users.noreply.github.com",
                "user": {
                  "login": "jkeifer"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-05-24T11:07:16Z",
            "body": "Yes this seems incorrect, thanks."
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-05-24T11:10:36Z",
            "body": "Thanks!"
          }
        ]
      }
    },
    {
      "number": 11027,
      "title": "[automated] Update plugin list",
      "body": "[automated] Update plugin list",
      "state": "MERGED",
      "createdAt": "2023-05-21T00:21:44Z",
      "updatedAt": "2023-05-21T13:47:03Z",
      "closedAt": "2023-05-21T13:47:02Z",
      "mergedAt": "2023-05-21T13:47:02Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "update-plugin-list/patch-9fa82598a",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[automated] Update plugin list",
              "committedDate": "2023-05-21T00:21:42Z",
              "author": {
                "name": "pytest bot",
                "email": "pytestbot@users.noreply.github.com",
                "user": {
                  "login": "pytestbot"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11026,
      "title": "Small fixes and improvements",
      "body": "While working on some other changes I've accrued these small commits. It will be good to have them in `main`.",
      "state": "MERGED",
      "createdAt": "2023-05-20T18:16:37Z",
      "updatedAt": "2023-05-24T18:44:10Z",
      "closedAt": "2023-05-24T18:44:04Z",
      "mergedAt": "2023-05-24T18:44:04Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "small-fixes",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "python: fix syntax typo",
              "committedDate": "2023-05-20T18:14:29Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-05-24T11:19:49Z",
            "body": "LGTM, thanks!"
          }
        ]
      }
    },
    {
      "number": 11017,
      "title": "add a warning about modifying the root logger during tests",
      "body": "<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [x] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [x] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [x] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n\r\nAdd a warning to the documentation based on my findings for #11011 ",
      "state": "MERGED",
      "createdAt": "2023-05-18T14:26:04Z",
      "updatedAt": "2023-06-28T06:28:48Z",
      "closedAt": "2023-06-28T06:28:47Z",
      "mergedAt": "2023-06-28T06:28:47Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "caplog-root-logger-docs",
      "author": {
        "login": "erik-hasse"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "add a warning about modifying the root logger during tests",
              "committedDate": "2023-05-18T14:26:16Z",
              "author": {
                "name": "Erik Hasse",
                "email": "erik@fermataenergy.com",
                "user": null
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-05-18T14:27:22Z",
            "body": "Awesome, many thanks!"
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-06-28T06:28:35Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11016,
      "title": "[7.3.x] Include reason in cache path warnings",
      "body": "Backport of PR #11005 to 7.3.x branch. PR created by backport workflow.",
      "state": "CLOSED",
      "createdAt": "2023-05-18T13:12:15Z",
      "updatedAt": "2023-05-18T13:17:28Z",
      "closedAt": "2023-05-18T13:17:24Z",
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "7.3.x",
      "headRefName": "backport-11005-to-7.3.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[7.3.x] Include reason in cache path warnings",
              "committedDate": "2023-05-18T13:12:13Z",
              "author": {
                "name": "Ville Skytt\u00e4",
                "email": "ville.skytta@iki.fi",
                "user": {
                  "login": "scop"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-05-18T13:12:57Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11015,
      "title": "[7.3.x] Spelling and grammar fixes",
      "body": "Backport of PR #11014 to 7.3.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2023-05-18T13:12:11Z",
      "updatedAt": "2023-05-18T13:33:00Z",
      "closedAt": "2023-05-18T13:32:59Z",
      "mergedAt": "2023-05-18T13:32:59Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "7.3.x",
      "headRefName": "backport-11014-to-7.3.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[7.3.x] Spelling and grammar fixes",
              "committedDate": "2023-05-18T13:12:09Z",
              "author": {
                "name": "Ville Skytt\u00e4",
                "email": "ville.skytta@iki.fi",
                "user": {
                  "login": "scop"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-05-18T13:12:44Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11014,
      "title": "Spelling and grammar fixes",
      "body": "<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "MERGED",
      "createdAt": "2023-05-18T10:59:34Z",
      "updatedAt": "2023-05-18T13:14:45Z",
      "closedAt": "2023-05-18T13:10:44Z",
      "mergedAt": "2023-05-18T13:10:44Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "spelling",
      "author": {
        "login": "scop"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Spelling and grammar fixes",
              "committedDate": "2023-05-18T10:58:37Z",
              "author": {
                "name": "Ville Skytt\u00e4",
                "email": "ville.skytta@iki.fi",
                "user": {
                  "login": "scop"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2023-05-18T11:07:12Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2023-05-18T11:39:19Z",
            "body": "Thanks, lovely catches "
          }
        ]
      }
    },
    {
      "number": 11010,
      "title": "[7.3.x] Reference \"Status of Python Versions\" in backwards-compatibility policy",
      "body": "Backport of PR #11009 to 7.3.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2023-05-17T10:45:45Z",
      "updatedAt": "2023-05-17T11:04:48Z",
      "closedAt": "2023-05-17T11:04:47Z",
      "mergedAt": "2023-05-17T11:04:47Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "7.3.x",
      "headRefName": "backport-11009-to-7.3.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[7.3.x] Reference \"Status of Python Versions\" in backwards-compatibility policy",
              "committedDate": "2023-05-17T10:45:43Z",
              "author": {
                "name": "Ronny Pfannschmidt",
                "email": "opensource@ronnypfannschmidt.de",
                "user": {
                  "login": "RonnyPfannschmidt"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-05-17T10:46:23Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2023-05-17T11:02:00Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11009,
      "title": "Reference \"Status of Python Versions\" in backwards-compatibility policy",
      "body": "As suggested in #10981.\r\n\r\n",
      "state": "MERGED",
      "createdAt": "2023-05-16T23:24:29Z",
      "updatedAt": "2023-05-17T10:45:27Z",
      "closedAt": "2023-05-17T07:51:30Z",
      "mergedAt": "2023-05-17T07:51:30Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "RonnyPfannschmidt"
      },
      "baseRefName": "main",
      "headRefName": "reference-status-of-python-versions",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Reference \"Status of Python Versions\" in backwards-compatibility policy\n\nAs suggested in #10981.",
              "committedDate": "2023-05-16T23:24:06Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "nicoddemus@gmail.com",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2023-05-17T07:43:14Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11007,
      "title": "[pre-commit.ci] pre-commit autoupdate",
      "body": "<!--pre-commit.ci start-->\nupdates:\n- [github.com/pre-commit/mirrors-mypy: v1.2.0 \u2192 v1.3.0](https://github.com/pre-commit/mirrors-mypy/compare/v1.2.0...v1.3.0)\n<!--pre-commit.ci end-->",
      "state": "MERGED",
      "createdAt": "2023-05-16T04:26:09Z",
      "updatedAt": "2023-05-16T07:19:40Z",
      "closedAt": "2023-05-16T07:19:39Z",
      "mergedAt": "2023-05-16T07:19:39Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "main",
      "headRefName": "pre-commit-ci-update-config",
      "author": {
        "login": "pre-commit-ci"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[pre-commit.ci] pre-commit autoupdate\n\nupdates:\n- [github.com/pre-commit/mirrors-mypy: v1.2.0 \u2192 v1.3.0](https://github.com/pre-commit/mirrors-mypy/compare/v1.2.0...v1.3.0)",
              "committedDate": "2023-05-16T04:26:08Z",
              "author": {
                "name": "pre-commit-ci[bot]",
                "email": "66853113+pre-commit-ci[bot]@users.noreply.github.com",
                "user": {
                  "login": "pre-commit-ci[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2023-05-16T07:19:34Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11005,
      "title": "Include reason in cache path warnings",
      "body": "<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n\r\nTo aid debugging.",
      "state": "MERGED",
      "createdAt": "2023-05-15T07:16:15Z",
      "updatedAt": "2023-05-18T13:17:34Z",
      "closedAt": "2023-05-18T13:11:47Z",
      "mergedAt": "2023-05-18T13:11:47Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "chore/cache-path-why-could-not",
      "author": {
        "login": "scop"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Include reason in cache path warnings to aid debugging\n\nCo-authored-by: Bruno Oliveira <nicoddemus@gmail.com>",
              "committedDate": "2023-05-18T07:32:44Z",
              "author": {
                "name": "Ville Skytt\u00e4",
                "email": "ville.skytta@iki.fi",
                "user": {
                  "login": "scop"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "CHANGES_REQUESTED",
            "submittedAt": "2023-05-15T12:25:51Z",
            "body": "Can you also add a trivial changelog entry? Thanks!"
          },
          {
            "author": {
              "login": "scop"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-05-15T14:40:47Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-05-15T15:45:04Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-05-18T13:11:28Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11003,
      "title": "build(deps): Bump actions/stale from 5 to 8",
      "body": "Bumps [actions/stale](https://github.com/actions/stale) from 5 to 8.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/actions/stale/releases\">actions/stale's releases</a>.</em></p>\n<blockquote>\n<h2>v8.0.0</h2>\n<p>:warning: This version contains breaking changes :warning:</p>\n<h2>What's Changed</h2>\n<ul>\n<li>New option labels-to-remove-when-stale enables users to specify list of comma delimited labels that will be removed when the issue or PR becomes stale by <a href=\"https://github.com/panticmilos\"><code>@\u200bpanticmilos</code></a> <a href=\"https://redirect.github.com/actions/stale/issues/770\">actions/stale#770</a></li>\n<li>Skip deleting the branch in the upstream of a forked repo by <a href=\"https://github.com/dsame\"><code>@\u200bdsame</code></a> <a href=\"https://redirect.github.com/actions/stale/pull/913\">actions/stale#913</a></li>\n<li>abort the build on the error by <a href=\"https://github.com/dsame\"><code>@\u200bdsame</code></a> in <a href=\"https://redirect.github.com/actions/stale/pull/935\">actions/stale#935</a></li>\n</ul>\n<h2>Breaking Changes</h2>\n<ul>\n<li>In this release we prevent scenarios when the build is not interrupted on some exceptions, which led to successful builds when they are supposed to fail</li>\n</ul>\n<h2>Example</h2>\n<pre lang=\"yaml\"><code>name: 'Remove labels when the issue or PR becomes stale'\non:\n  schedule:\n    - cron: '30 1 * * *'\n<p>permissions:\npull-request: write</p>\n<p>jobs:\nstale:\nruns-on: ubuntu-latest\nsteps:\n- uses: actions/stale@v8\nwith:\nlabels-to-remove-when-stale: 'label1,label2'\n</code></pre></p>\n<h2>v7.0.0</h2>\n<p>\u26a0\ufe0f This version contains breaking changes \u26a0\ufe0f</p>\n<h2>What's Changed</h2>\n<ul>\n<li>Allow daysBeforeStale options to be float by <a href=\"https://github.com/irega\"><code>@\u200birega</code></a> in <a href=\"https://redirect.github.com/actions/stale/pull/841\">actions/stale#841</a></li>\n<li>Use cache in check-dist.yml by <a href=\"https://github.com/jongwooo\"><code>@\u200bjongwooo</code></a> in <a href=\"https://redirect.github.com/actions/stale/pull/876\">actions/stale#876</a></li>\n<li>fix print outputs step in existing workflows by <a href=\"https://github.com/irega\"><code>@\u200birega</code></a> in <a href=\"https://redirect.github.com/actions/stale/pull/859\">actions/stale#859</a></li>\n<li>Update issue and PR templates, add/delete workflow files by <a href=\"https://github.com/IvanZosimov\"><code>@\u200bIvanZosimov</code></a> in <a href=\"https://redirect.github.com/actions/stale/pull/880\">actions/stale#880</a></li>\n<li>Update how stale handles exempt items by <a href=\"https://github.com/johnsudol\"><code>@\u200bjohnsudol</code></a> in <a href=\"https://redirect.github.com/actions/stale/pull/874\">actions/stale#874</a></li>\n</ul>\n<h2>Breaking Changes</h2>\n<ul>\n<li>In this release we prevent this action from managing the <code>stale</code> label on items included in <code>exempt-issue-labels</code> and <code>exempt-pr-labels</code></li>\n<li>We decided that this is outside of the scope of this action, and to be left up to the maintainer</li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/irega\"><code>@\u200birega</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/stale/pull/841\">actions/stale#841</a></li>\n<li><a href=\"https://github.com/jongwooo\"><code>@\u200bjongwooo</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/stale/pull/876\">actions/stale#876</a></li>\n<li><a href=\"https://github.com/IvanZosimov\"><code>@\u200bIvanZosimov</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/stale/pull/880\">actions/stale#880</a></li>\n<li><a href=\"https://github.com/johnsudol\"><code>@\u200bjohnsudol</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/stale/pull/874\">actions/stale#874</a></li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/actions/stale/blob/main/CHANGELOG.md\">actions/stale's changelog</a>.</em></p>\n<blockquote>\n<h1>Changelog</h1>\n<h1>[7.0.0]</h1>\n<p>:warning: Breaking change :warning:</p>\n<ul>\n<li>Allow daysBeforeStale options to be float by <a href=\"https://github.com/irega\"><code>@\u200birega</code></a> in <a href=\"https://redirect.github.com/actions/stale/pull/841\">actions/stale#841</a></li>\n<li>Use cache in check-dist.yml by <a href=\"https://github.com/jongwooo\"><code>@\u200bjongwooo</code></a> in <a href=\"https://redirect.github.com/actions/stale/pull/876\">actions/stale#876</a></li>\n<li>fix print outputs step in existing workflows by <a href=\"https://github.com/irega\"><code>@\u200birega</code></a> in <a href=\"https://redirect.github.com/actions/stale/pull/859\">actions/stale#859</a></li>\n<li>Update issue and PR templates, add/delete workflow files by <a href=\"https://github.com/IvanZosimov\"><code>@\u200bIvanZosimov</code></a> in <a href=\"https://redirect.github.com/actions/stale/pull/880\">actions/stale#880</a></li>\n<li>Update how stale handles exempt items by <a href=\"https://github.com/johnsudol\"><code>@\u200bjohnsudol</code></a> in <a href=\"https://redirect.github.com/actions/stale/pull/874\">actions/stale#874</a></li>\n</ul>\n<h1>[6.0.1]</h1>\n<p>Update <code>@\u200bactions/core</code> to v1.10.0 (<a href=\"https://redirect.github.com/actions/stale/pull/839\">#839</a>)</p>\n<h1>[6.0.0]</h1>\n<p>:warning: Breaking change :warning:</p>\n<p>Issues/PRs default <code>close-issue-reason</code> is now <code>not_planned</code>(<a href=\"https://redirect.github.com/actions/stale/issues/789\">#789</a>)</p>\n<h1>[5.1.0]</h1>\n<p><a href=\"https://redirect.github.com/actions/stale/issues/696\">Don't process stale issues right after they're marked stale</a>\n[Add close-issue-reason option]<a href=\"https://redirect.github.com/actions/stale/pull/764\">#764</a><a href=\"https://redirect.github.com/actions/stale/pull/772\">#772</a>\nVarious dependabot/dependency updates</p>\n<h2><a href=\"https://github.com/actions/stale/compare/v3.0.19...v4.1.0\">4.1.0</a> (2021-07-14)</h2>\n<h2>Features</h2>\n<ul>\n<li><a href=\"https://github.com/actions/stale/commit/9912fa74d1c01b5d6187793d97441019cbe325d0\">Ability to exempt draft PRs</a></li>\n</ul>\n<h2><a href=\"https://github.com/actions/stale/compare/v3.0.19...v4.0.0\">4.0.0</a> (2021-07-14)</h2>\n<h3>Features</h3>\n<ul>\n<li><strong>options:</strong> simplify config by removing skip stale message options (<a href=\"https://redirect.github.com/actions/stale/issues/457\">#457</a>) (<a href=\"https://github.com/actions/stale/commit/6ec637d238067ab8cc96c9289dcdac280bbd3f4a\">6ec637d</a>), closes <a href=\"https://redirect.github.com/actions/stale/issues/405\">#405</a> <a href=\"https://redirect.github.com/actions/stale/issues/455\">#455</a></li>\n<li><strong>output:</strong> print output parameters (<a href=\"https://redirect.github.com/actions/stale/issues/458\">#458</a>) (<a href=\"https://github.com/actions/stale/commit/3e6d35b685f0b2fa1a69be893fa07d3d85e05ee0\">3e6d35b</a>)</li>\n</ul>\n<h3>Bug Fixes</h3>\n<ul>\n<li><strong>dry-run:</strong> forbid mutations in dry-run (<a href=\"https://redirect.github.com/actions/stale/issues/500\">#500</a>) (<a href=\"https://github.com/actions/stale/commit/f1017f33dd159ea51366375120c3e6981d7c3097\">f1017f3</a>), closes <a href=\"https://redirect.github.com/actions/stale/issues/499\">#499</a></li>\n<li><strong>logs:</strong> coloured logs (<a href=\"https://redirect.github.com/actions/stale/issues/465\">#465</a>) (<a href=\"https://github.com/actions/stale/commit/5fbbfba142860ea6512549e96e36e3540c314132\">5fbbfba</a>)</li>\n<li><strong>operations:</strong> fail fast the current batch to respect the operations limit (<a href=\"https://redirect.github.com/actions/stale/issues/474\">#474</a>) (<a href=\"https://github.com/actions/stale/commit/5f6f311ca6aa75babadfc7bac6edf5d85fa3f35d\">5f6f311</a>), closes <a href=\"https://redirect.github.com/actions/stale/issues/466\">#466</a></li>\n<li><strong>label comparison</strong>: make label comparison case insensitive <a href=\"https://redirect.github.com/actions/stale/pull/517\">#517</a>, closes <a href=\"https://redirect.github.com/actions/stale/pull/516\">#516</a></li>\n<li><strong>filtering comments by actor could have strange behavior</strong>: &quot;stale&quot; comments are now detected based on if the message is the stale message not <em>who</em> made the comment(<a href=\"https://redirect.github.com/actions/stale/pull/519\">#519</a>), fixes <a href=\"https://redirect.github.com/actions/stale/pull/441\">#441</a>, <a href=\"https://redirect.github.com/actions/stale/pull/509\">#509</a>, <a href=\"https://redirect.github.com/actions/stale/pull/518\">#518</a></li>\n</ul>\n<h3>Breaking Changes</h3>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/actions/stale/commit/1160a2240286f5da8ec72b1c0816ce2481aabf84\"><code>1160a22</code></a> Merge pull request <a href=\"https://redirect.github.com/actions/stale/issues/965\">#965</a> from actions/dependabot/npm_and_yarn/prettier-2.8.6</li>\n<li><a href=\"https://github.com/actions/stale/commit/5f7b3966457047e35f2989b4f3529d4fcbfd3bc8\"><code>5f7b396</code></a> build(deps-dev): bump prettier from 2.8.4 to 2.8.6</li>\n<li><a href=\"https://github.com/actions/stale/commit/b002e7ec857ceadb81a436f02fc2e21040190e0a\"><code>b002e7e</code></a> Merge pull request <a href=\"https://redirect.github.com/actions/stale/issues/941\">#941</a> from panticmilos/vmpantic/rebuild-dist-vercel-bump</li>\n<li><a href=\"https://github.com/actions/stale/commit/52903732a4c3c9b1f232f1694ad0743bbfcef33c\"><code>5290373</code></a> Rebuild dist after rebase</li>\n<li><a href=\"https://github.com/actions/stale/commit/b006677dea6f2be4bde357abb1ccb22915272277\"><code>b006677</code></a> Merge pull request <a href=\"https://redirect.github.com/actions/stale/issues/962\">#962</a> from actions/dependabot/npm_and_yarn/jest-and-types/j...</li>\n<li><a href=\"https://github.com/actions/stale/commit/4f29769aee0fc902940fb3af95c79e98e121683e\"><code>4f29769</code></a> Merge pull request <a href=\"https://redirect.github.com/actions/stale/issues/961\">#961</a> from actions/dependabot/npm_and_yarn/typescript-5.0.2</li>\n<li><a href=\"https://github.com/actions/stale/commit/83453dd842477b1f93e2a366453b9d1c7540eb5b\"><code>83453dd</code></a> build(deps-dev): bump jest and <code>@\u200btypes/jest</code></li>\n<li><a href=\"https://github.com/actions/stale/commit/79e8c046ed3b9e6a6d89b0453d22c3a2eb50c90f\"><code>79e8c04</code></a> Merge pull request <a href=\"https://redirect.github.com/actions/stale/issues/960\">#960</a> from actions/dependabot/npm_and_yarn/types/node-18.15.3</li>\n<li><a href=\"https://github.com/actions/stale/commit/75d4d955acb83847572798f2ffd26ba259871e3c\"><code>75d4d95</code></a> Remove labels on stale (<a href=\"https://redirect.github.com/actions/stale/issues/959\">#959</a>)</li>\n<li><a href=\"https://github.com/actions/stale/commit/fac2d41a881555a987df3dacc701e84d898c2aa5\"><code>fac2d41</code></a> build(deps-dev): bump typescript from 4.9.4 to 5.0.2</li>\n<li>Additional commits viewable in <a href=\"https://github.com/actions/stale/compare/v5...v8\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/stale&package-manager=github_actions&previous-version=5&new-version=8)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2023-05-15T04:02:00Z",
      "updatedAt": "2023-05-15T05:29:19Z",
      "closedAt": "2023-05-15T05:29:18Z",
      "mergedAt": "2023-05-15T05:29:18Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/github_actions/actions/stale-8",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "github_actions"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump actions/stale from 5 to 8\n\nBumps [actions/stale](https://github.com/actions/stale) from 5 to 8.\n- [Release notes](https://github.com/actions/stale/releases)\n- [Changelog](https://github.com/actions/stale/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/actions/stale/compare/v5...v8)\n\n---\nupdated-dependencies:\n- dependency-name: actions/stale\n  dependency-type: direct:production\n  update-type: version-update:semver-major\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2023-05-15T04:01:59Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2023-05-15T05:29:09Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11002,
      "title": "[7.3.x] monkeypatch: add support for TypedDict",
      "body": "Backport of PR #11000 to 7.3.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2023-05-14T19:18:30Z",
      "updatedAt": "2023-05-14T19:39:14Z",
      "closedAt": "2023-05-14T19:39:12Z",
      "mergedAt": "2023-05-14T19:39:12Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "7.3.x",
      "headRefName": "backport-11000-to-7.3.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[7.3.x] monkeypatch: add support for TypedDict",
              "committedDate": "2023-05-14T19:18:29Z",
              "author": {
                "name": "Adam J. Stewart",
                "email": "ajstewart426@gmail.com",
                "user": {
                  "login": "adamjstewart"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-05-14T19:20:12Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 11001,
      "title": "[automated] Update plugin list",
      "body": "[automated] Update plugin list",
      "state": "MERGED",
      "createdAt": "2023-05-14T00:21:22Z",
      "updatedAt": "2023-05-15T11:26:42Z",
      "closedAt": "2023-05-15T11:26:41Z",
      "mergedAt": "2023-05-15T11:26:41Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "update-plugin-list/patch-f9a995b56",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[automated] Update plugin list",
              "committedDate": "2023-05-14T00:21:21Z",
              "author": {
                "name": "pytest bot",
                "email": "pytestbot@users.noreply.github.com",
                "user": {
                  "login": "pytestbot"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 11000,
      "title": "monkeypatch: add support for TypedDict",
      "body": "Closes #10999\r\n\r\nThis feature was added in Python 3.8. It looks like pytest still supports Python 3.7 (I'm guessing that will change in about [6 weeks](https://endoflife.date/python)). For now, it isn't easy to test or annotate this properly.",
      "state": "MERGED",
      "createdAt": "2023-05-13T21:15:24Z",
      "updatedAt": "2023-05-14T19:18:47Z",
      "closedAt": "2023-05-14T19:17:00Z",
      "mergedAt": "2023-05-14T19:17:00Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "fixes/monkeypatch-typeddict",
      "author": {
        "login": "adamjstewart"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 8
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Ignore mypy errors",
              "committedDate": "2023-05-14T15:56:13Z",
              "author": {
                "name": "Adam J. Stewart",
                "email": "ajstewart426@gmail.com",
                "user": {
                  "login": "adamjstewart"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "CHANGES_REQUESTED",
            "submittedAt": "2023-05-13T21:21:39Z",
            "body": "thank you for this excellent addition\r\n\r\nlets add type triggers in https://github.com/pytest-dev/pytest/blob/main/testing/typing_checks.py as well to make sure type checks work as expected"
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-05-13T22:26:08Z",
            "body": "AFAIK there is no type-safe way to do this in current python, so `Mapping` sounds OK to me -- for the `monkeypatch` use case, some type unsafety seems better than forcing users to cast or type-ignore.\r\n\r\nI left some comments."
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-05-14T17:17:01Z",
            "body": "Thanks!"
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2023-05-14T17:43:41Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 10998,
      "title": "pre-commit: remove `default_language_version` setting",
      "body": "This makes it difficult to run on newer python versions than the one specified.",
      "state": "MERGED",
      "createdAt": "2023-05-13T19:26:06Z",
      "updatedAt": "2023-05-26T17:02:14Z",
      "closedAt": "2023-05-13T21:27:49Z",
      "mergedAt": "2023-05-13T21:27:49Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "RonnyPfannschmidt"
      },
      "baseRefName": "main",
      "headRefName": "pre-commit-rm-default",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 4
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "pre-commit: remove `default_language_version` setting\n\nThis makes it difficult to run on newer python versions than the one\nspecified.",
              "committedDate": "2023-05-13T19:24:30Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "asottile"
            },
            "state": "APPROVED",
            "submittedAt": "2023-05-13T20:07:31Z",
            "body": "\r\n\r\n![](https://i.fluffy.cc/7WXqprWzDtCpbfprBZG1Hngnp7H7pfQm.gif)"
          }
        ]
      }
    },
    {
      "number": 10997,
      "title": "RFC: from __future__ import annotations + pyupgrade",
      "body": "<!--\nThanks for submitting a PR, your contribution is really appreciated!\n\nHere is a quick checklist that should be present in PRs.\n\n- [ ] Include documentation when adding new features.\n- [ ] Include new tests or update existing tests when applicable.\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\n\nIf this change fixes an issue, please:\n\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\n\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\n\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\n\n  Write sentences in the **past or present tense**, examples:\n\n  * *Improved verbose diff output with sequences.*\n  * *Terminal summary statistics now use multiple colors.*\n\n  Also make sure to end the sentence with a `.`.\n\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\n-->\n",
      "state": "CLOSED",
      "createdAt": "2023-05-13T11:59:09Z",
      "updatedAt": "2024-06-17T15:38:13Z",
      "closedAt": "2024-06-17T15:38:13Z",
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "CONFLICTING",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "ronny/typing-annotations",
      "author": {
        "login": "RonnyPfannschmidt"
      },
      "assignees": {
        "nodes": [
          {
            "login": "RonnyPfannschmidt"
          }
        ]
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 9
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "fix warning line numbers in tests affected by typing changes",
              "committedDate": "2024-06-17T12:54:54Z",
              "author": {
                "name": "Ronny Pfannschmidt",
                "email": "opensource@ronnypfannschmidt.de",
                "user": {
                  "login": "RonnyPfannschmidt"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "asottile"
            },
            "state": "APPROVED",
            "submittedAt": "2023-05-13T12:26:56Z",
            "body": "noice"
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-05-13T16:37:20Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-05-13T16:42:00Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-05-13T19:06:08Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-05-19T11:32:45Z",
            "body": "Would be nice to be able to use the new syntax!"
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2024-01-05T12:15:21Z",
            "body": "A few formatting comments but LGTM. I suggest merging quickly to avoid conflicts."
          }
        ]
      }
    },
    {
      "number": 10996,
      "title": "[RFC] split up _pytest.python",
      "body": "this tries to split up _pytest.python by topic\r\n\r\nthe module is quite large and that makes it a pain to refactor certain details\r\n\r\ni want to trim bits down so its more easy to eventually turn `FunctionDefinition` from a gruesome hack into a part of the collection tree\r\n\r\nthe initial split is not per se targeting good locations or complete\r\n\r\nbut its a discussion starter and i intend to change details until we hit a nice split that separates code in a manageable way",
      "state": "OPEN",
      "createdAt": "2023-05-13T10:36:36Z",
      "updatedAt": "2023-05-19T13:07:56Z",
      "closedAt": null,
      "mergedAt": null,
      "isDraft": true,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "ronny/python-split",
      "author": {
        "login": "RonnyPfannschmidt"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "move python nodes to own module",
              "committedDate": "2023-05-13T19:57:02Z",
              "author": {
                "name": "Ronny Pfannschmidt",
                "email": "opensource@ronnypfannschmidt.de",
                "user": {
                  "login": "RonnyPfannschmidt"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-05-13T16:30:19Z",
            "body": "I definitely like the idea. \ud83d\udc4d "
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-05-13T16:44:20Z",
            "body": ""
          },
          {
            "author": {
              "login": "bluetech"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-05-19T11:43:57Z",
            "body": "With this refactoring, `python.nodes` imports from `python.metafunc` and vice-versa. To me this means that neither module can be understood in isolation. I am -0.5 on splitting in this state, as it doesn't really help IMO.\r\n\r\nFrom my experience with pytest code all of the core is intertwined so it might be hard to pull off, but it's a good goal :)"
          }
        ]
      }
    },
    {
      "number": 10995,
      "title": "[7.3.x]  Consider testpaths for initial conftests",
      "body": "(cherry picked from commit 76d15231f5749ca26a180df02ef2e5c138aaefc8)\r\n\r\n",
      "state": "MERGED",
      "createdAt": "2023-05-12T13:15:32Z",
      "updatedAt": "2023-05-12T13:47:18Z",
      "closedAt": "2023-05-12T13:42:27Z",
      "mergedAt": "2023-05-12T13:42:27Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "7.3.x",
      "headRefName": "backport-10988-to-7.3.x",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Merge pull request #10988 from nicoddemus/initial-testpaths-10987\n\n Consider testpaths for initial conftests\n\n(cherry picked from commit 76d15231f5749ca26a180df02ef2e5c138aaefc8)",
              "committedDate": "2023-05-12T13:14:38Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "nicoddemus@gmail.com",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2023-05-12T13:22:09Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2023-05-12T13:22:11Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 10990,
      "title": "Tweak close stale issues",
      "body": "Opening this PR to test/tweak the \"close stale issues\" workflow.",
      "state": "MERGED",
      "createdAt": "2023-05-11T18:44:48Z",
      "updatedAt": "2023-05-14T11:39:47Z",
      "closedAt": "2023-05-14T11:39:46Z",
      "mergedAt": "2023-05-14T11:39:46Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "tweak-close-stale-issues",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Fix close stale issues workflow\n\nFixed how the label is configured.",
              "committedDate": "2023-05-12T21:19:09Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "nicoddemus@gmail.com",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 10988,
      "title": " Consider testpaths for initial conftests",
      "body": "The `testpaths` option is meant to be identical to execute pytest passing the 'testpaths' directories explicitly.\r\n\r\nThis also fixes #10169, given I had to change the same part of the code in order to get tests to pass on Python 3.7. \r\n\r\nFix #430\r\nFix #10169 \r\nFix #10987",
      "state": "MERGED",
      "createdAt": "2023-05-11T12:31:49Z",
      "updatedAt": "2023-05-12T12:59:05Z",
      "closedAt": "2023-05-12T12:59:00Z",
      "mergedAt": "2023-05-12T12:59:00Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "initial-testpaths-10987",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Fix trailing whitespace in .github/workflows/stale.yml",
              "committedDate": "2023-05-12T12:34:44Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "bruno@esss.co",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-05-12T11:54:15Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2023-05-12T12:25:37Z",
            "body": "Lovely "
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2023-05-12T12:46:11Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 10986,
      "title": "Add workflow to close \"needs information\" labeled issues",
      "body": "This introduces a workflow to automatically close issues with the label `status: needs information` after a number of days of inactivity.\r\n\r\nThis work has been done manually for a number of years, but I think it is safe to close issues with this label automatically.\r\n\r\nNot tested yet, but it is in `debug-only` mode so we can watch what it does before deciding to turn it on (however it needs to be in `main` for it to run).\r\n\r\nBased off: \r\n\r\n* https://docs.github.com/en/actions/managing-issues-and-pull-requests/closing-inactive-issues\r\n* https://github.com/marketplace/actions/close-stale-issues\r\n\r\n",
      "state": "MERGED",
      "createdAt": "2023-05-11T02:51:24Z",
      "updatedAt": "2023-05-11T18:14:51Z",
      "closedAt": "2023-05-11T18:14:51Z",
      "mergedAt": "2023-05-11T18:14:51Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "stale-need-information-workflow",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Apply suggestions from code review",
              "committedDate": "2023-05-11T13:43:03Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "nicoddemus@gmail.com",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-05-11T02:52:28Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2023-05-11T04:21:23Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-05-11T11:10:22Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 10983,
      "title": "[7.3.x] faulthandler: avoid accessing sys.stderr.encoding",
      "body": "Backport of PR #10979 to 7.3.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2023-05-10T11:20:05Z",
      "updatedAt": "2023-05-10T11:40:34Z",
      "closedAt": "2023-05-10T11:40:33Z",
      "mergedAt": "2023-05-10T11:40:33Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "7.3.x",
      "headRefName": "backport-10979-to-7.3.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[7.3.x] faulthandler: avoid accessing sys.stderr.encoding",
              "committedDate": "2023-05-10T11:20:03Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-05-10T11:21:09Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 10981,
      "title": "Avoid ast deprecation warnings on Python 3.12",
      "body": "Fix #10977.\r\n\r\nMarking as draft until we can verify the fix on next py312 alpha/beta release.",
      "state": "CLOSED",
      "createdAt": "2023-05-10T08:08:09Z",
      "updatedAt": "2023-09-11T12:05:20Z",
      "closedAt": "2023-05-23T12:07:23Z",
      "mergedAt": null,
      "isDraft": true,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "py312-ast-deprecations",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 6
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Avoid ast deprecation warnings on Python 3.12\n\nFix #10977.",
              "committedDate": "2023-05-23T11:53:52Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Zac-HD"
            },
            "state": "APPROVED",
            "submittedAt": "2023-05-16T00:02:39Z",
            "body": "Looks good to me!\r\n\r\nAlternatively, we might just wait for the [Python 3.7 end of life in June](https://devguide.python.org/versions/), and then refactor to use the new nodes only since we'll presumably want to do that eventually."
          }
        ]
      }
    },
    {
      "number": 10980,
      "title": "[7.3.x] fix reference to non-existent module",
      "body": "Backport of PR #10978 to 7.3.x branch. PR created by backport workflow.",
      "state": "MERGED",
      "createdAt": "2023-05-10T07:18:40Z",
      "updatedAt": "2023-05-10T07:45:34Z",
      "closedAt": "2023-05-10T07:45:32Z",
      "mergedAt": "2023-05-10T07:45:32Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "7.3.x",
      "headRefName": "backport-10978-to-7.3.x",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[7.3.x] fix reference to non-existent module",
              "committedDate": "2023-05-10T07:18:38Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-05-10T07:19:19Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 10979,
      "title": "faulthandler: avoid accessing sys.stderr.encoding",
      "body": "Fixes a pytest-xdist regression after 762bb61562d1300eedeb80be2ec2fb8150b3cc3f (not yet released).\r\n\r\npytest-xdist patches sys.stderr with an object which doesn't have `encoding`. Strictly speaking, this should be fixed there (or more precisely, in execnet), but it will drop support for older versions which don't want.\r\n\r\nBut in any case, the fix turns out to simplify the code, using FD support added in Python 3.5, so it's good anyway!\r\n\r\nRefs: https://github.com/pytest-dev/pytest-xdist/pull/900",
      "state": "MERGED",
      "createdAt": "2023-05-10T07:13:34Z",
      "updatedAt": "2023-05-10T11:19:46Z",
      "closedAt": "2023-05-10T11:17:54Z",
      "mergedAt": "2023-05-10T11:17:54Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "faulthandler-no-encoding",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "faulthandler: avoid accessing sys.stderr.encoding\n\nFixes a pytest-xdist regression after\n762bb61562d1300eedeb80be2ec2fb8150b3cc3f (not yet released).\n\npytest-xdist patches sys.stderr with an object which doesn't have\n`encoding`. Strictly speaking, this should be fixed there (or more\nprecisely, in execnet), but it will drop support for older versions\nwhich don't want.\n\nBut in any case, the fix turns out to simplify the code, using FD\nsupport added in Python 3.5, so it's good anyway!\n\nRefs: https://github.com/pytest-dev/pytest-xdist/pull/900",
              "committedDate": "2023-05-10T06:59:57Z",
              "author": {
                "name": "Ran Benita",
                "email": "ran@unusedvar.com",
                "user": {
                  "login": "bluetech"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "APPROVED",
            "submittedAt": "2023-05-10T10:05:44Z",
            "body": "Looks good\n\nAs this seems to be only added for closing, i wonder if we could use a exitstack"
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-05-10T10:17:52Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 10978,
      "title": "fix reference to non-existent module",
      "body": "This is a minor fix to a reference to a no-longer-existing private module. There should be no runtime effects, because the fix is made under a `typing.TYPE_CHECKING` block.\r\n\r\n---\r\n\r\nI've read through #7469, where there was a public API typing change\r\n\r\n> - [x] `_pytest.code.ExceptionInfo` -> `pytest.ExceptionInfo`\r\n\r\nbut as the rest of the references in the [same block in `_pytest/hookspec.py`](https://github.com/pytest-dev/pytest/blob/a88ae8289cd21d39dd360666bb2e83dfa98b215e/src/_pytest/hookspec.py#L23-L44) are all for private modules, I thought it would be best to continue using a private module instead of switching the reference to a public `from pytest import ExceptionInfo`.",
      "state": "MERGED",
      "createdAt": "2023-05-09T23:05:32Z",
      "updatedAt": "2023-05-10T07:15:35Z",
      "closedAt": "2023-05-10T07:15:21Z",
      "mergedAt": "2023-05-10T07:15:21Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "fix-pytest-code-import",
      "author": {
        "login": "bzoracler"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "fix reference to non-existent module",
              "committedDate": "2023-05-09T22:48:20Z",
              "author": {
                "name": "bzoracler",
                "email": "50305397+bzoracler@users.noreply.github.com",
                "user": {
                  "login": "bzoracler"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-05-10T07:15:02Z",
            "body": "Thank you!"
          }
        ]
      }
    },
    {
      "number": 10975,
      "title": "[pre-commit.ci] pre-commit autoupdate",
      "body": "<!--pre-commit.ci start-->\nupdates:\n- https://github.com/asottile/reorder_python_imports \u2192 https://github.com/asottile/reorder-python-imports\n- [github.com/asottile/pyupgrade: v3.3.2 \u2192 v3.4.0](https://github.com/asottile/pyupgrade/compare/v3.3.2...v3.4.0)\n<!--pre-commit.ci end-->",
      "state": "MERGED",
      "createdAt": "2023-05-09T05:14:42Z",
      "updatedAt": "2023-05-09T09:22:52Z",
      "closedAt": "2023-05-09T09:22:51Z",
      "mergedAt": "2023-05-09T09:22:51Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "Pierre-Sassoulas"
      },
      "baseRefName": "main",
      "headRefName": "pre-commit-ci-update-config",
      "author": {
        "login": "pre-commit-ci"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[pre-commit.ci] pre-commit autoupdate\n\nupdates:\n- https://github.com/asottile/reorder_python_imports \u2192 https://github.com/asottile/reorder-python-imports\n- [github.com/asottile/pyupgrade: v3.3.2 \u2192 v3.4.0](https://github.com/asottile/pyupgrade/compare/v3.3.2...v3.4.0)",
              "committedDate": "2023-05-09T05:14:41Z",
              "author": {
                "name": "pre-commit-ci[bot]",
                "email": "66853113+pre-commit-ci[bot]@users.noreply.github.com",
                "user": {
                  "login": "pre-commit-ci[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Pierre-Sassoulas"
            },
            "state": "APPROVED",
            "submittedAt": "2023-05-09T09:22:45Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 10974,
      "title": "Update usage.rst",
      "body": "A note is added for that single quotation is used in Windows.\r\n\r\n<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [ ] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [ ] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [ ] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [ ] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\n",
      "state": "MERGED",
      "createdAt": "2023-05-09T03:56:23Z",
      "updatedAt": "2023-05-11T01:28:53Z",
      "closedAt": "2023-05-11T01:28:53Z",
      "mergedAt": "2023-05-11T01:28:53Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "add-doc-note-about-double-quotation-for-windows",
      "author": {
        "login": "leeyueh"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Update doc/en/how-to/usage.rst",
              "committedDate": "2023-05-10T17:07:19Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "nicoddemus@gmail.com",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-05-10T17:01:52Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-05-10T17:27:24Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 10972,
      "title": "Closes #10872: Update tuple implementation and pytest_report_teststatus in docs",
      "body": "<!--\r\nThanks for submitting a PR, your contribution is really appreciated!\r\n\r\nHere is a quick checklist that should be present in PRs.\r\n\r\n- [X] Include documentation when adding new features.\r\n- [ ] Include new tests or update existing tests when applicable.\r\n- [X] Allow maintainers to push and squash when merging my commits. Please uncheck this if you prefer to squash the commits yourself.\r\n\r\nIf this change fixes an issue, please:\r\n\r\n- [X] Add text like ``closes #XYZW`` to the PR description and/or commits (where ``XYZW`` is the issue number). See the [github docs](https://help.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) for more information.\r\n\r\nUnless your change is trivial or a small documentation fix (e.g., a typo or reword of a small section) please:\r\n\r\n- [X] Create a new changelog file in the `changelog` folder, with a name like `<ISSUE NUMBER>.<TYPE>.rst`. See [changelog/README.rst](https://github.com/pytest-dev/pytest/blob/main/changelog/README.rst) for details.\r\n\r\n  Write sentences in the **past or present tense**, examples:\r\n\r\n  * *Improved verbose diff output with sequences.*\r\n  * *Terminal summary statistics now use multiple colors.*\r\n\r\n  Also make sure to end the sentence with a `.`.\r\n\r\n- [X] Add yourself to `AUTHORS` in alphabetical order.\r\n-->\r\nThis PR updates the tuple structure in `pytest_runtest_logreport` to use a `typing.NamedTuple`, and fixes the documentation discrepancy outlined in the original issue #10872.",
      "state": "MERGED",
      "createdAt": "2023-05-08T19:28:09Z",
      "updatedAt": "2023-05-19T13:07:43Z",
      "closedAt": "2023-05-19T11:24:29Z",
      "mergedAt": "2023-05-19T11:24:29Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "update_pytest_report_teststatus_10872",
      "author": {
        "login": "roberto-aldera"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 6
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Merge branch 'main' into update_pytest_report_teststatus_10872",
              "committedDate": "2023-05-17T16:13:36Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "nicoddemus@gmail.com",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": [
          {
            "requestedReviewer": {
              "login": "RonnyPfannschmidt"
            }
          }
        ]
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-05-09T05:11:23Z",
            "body": "It may be necessary to define a very painful union for a while "
          },
          {
            "author": {
              "login": "roberto-aldera"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-05-10T07:07:30Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "CHANGES_REQUESTED",
            "submittedAt": "2023-05-10T10:09:13Z",
            "body": "Thanks @roberto-aldera, left some comments, please take a look. "
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-05-10T13:30:35Z",
            "body": ""
          },
          {
            "author": {
              "login": "RonnyPfannschmidt"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-05-10T13:40:23Z",
            "body": ""
          },
          {
            "author": {
              "login": "roberto-aldera"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-05-14T17:02:33Z",
            "body": ""
          },
          {
            "author": {
              "login": "roberto-aldera"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-05-14T17:06:07Z",
            "body": ""
          },
          {
            "author": {
              "login": "roberto-aldera"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-05-14T17:11:29Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-05-15T12:10:41Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-05-15T12:11:27Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-05-15T12:12:28Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-05-15T12:15:36Z",
            "body": ""
          },
          {
            "author": {
              "login": "roberto-aldera"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-05-17T05:48:10Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-05-17T16:14:26Z",
            "body": "Thanks @roberto-aldera, LGTM! Appreciate the contribution. :tada: \r\n\r\nWe should squash the commits before merging (do not worry, we can do that here directly when clicking on the merge button).\r\n\r\n "
          }
        ]
      }
    },
    {
      "number": 10971,
      "title": "build(deps): Bump peter-evans/create-pull-request from 5.0.0 to 5.0.1",
      "body": "Bumps [peter-evans/create-pull-request](https://github.com/peter-evans/create-pull-request) from 5.0.0 to 5.0.1.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/peter-evans/create-pull-request/releases\">peter-evans/create-pull-request's releases</a>.</em></p>\n<blockquote>\n<h2>Create Pull Request v5.0.1</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>fix: truncate body if exceeds max length by <a href=\"https://github.com/peter-evans\"><code>@\u200bpeter-evans</code></a> in <a href=\"https://redirect.github.com/peter-evans/create-pull-request/pull/1915\">peter-evans/create-pull-request#1915</a></li>\n<li>12 dependency updates by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/peter-evans/create-pull-request/compare/v5.0.0...v5.0.1\">https://github.com/peter-evans/create-pull-request/compare/v5.0.0...v5.0.1</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/peter-evans/create-pull-request/commit/284f54f989303d2699d373481a0cfa13ad5a6666\"><code>284f54f</code></a> fix: truncate body if exceeds max length (<a href=\"https://redirect.github.com/peter-evans/create-pull-request/issues/1915\">#1915</a>)</li>\n<li><a href=\"https://github.com/peter-evans/create-pull-request/commit/9e5b2344021c369f621dcb89ffde8fd910dac08c\"><code>9e5b234</code></a> build(deps-dev): bump eslint from 8.38.0 to 8.39.0 (<a href=\"https://redirect.github.com/peter-evans/create-pull-request/issues/1888\">#1888</a>)</li>\n<li><a href=\"https://github.com/peter-evans/create-pull-request/commit/2d8e7db84cac6d2c614124f2f4a8582a45f3b6f6\"><code>2d8e7db</code></a> build(deps-dev): bump <code>@\u200btypes/node</code> from 18.15.11 to 18.16.0 (<a href=\"https://redirect.github.com/peter-evans/create-pull-request/issues/1887\">#1887</a>)</li>\n<li><a href=\"https://github.com/peter-evans/create-pull-request/commit/041b6ab1635f4e31e86773ec8a91cf42d1403b67\"><code>041b6ab</code></a> build(deps-dev): bump prettier from 2.8.7 to 2.8.8 (<a href=\"https://redirect.github.com/peter-evans/create-pull-request/issues/1886\">#1886</a>)</li>\n<li><a href=\"https://github.com/peter-evans/create-pull-request/commit/31de0fdf3fbb0da088e82df3d7ae33c4112d4ef6\"><code>31de0fd</code></a> build(deps-dev): bump <code>@\u200btypes/jest</code> from 29.5.0 to 29.5.1 (<a href=\"https://redirect.github.com/peter-evans/create-pull-request/issues/1885\">#1885</a>)</li>\n<li><a href=\"https://github.com/peter-evans/create-pull-request/commit/28295f66367f85dd76ea1d27825cb5987f67c861\"><code>28295f6</code></a> build(deps-dev): bump <code>@\u200btypescript-eslint/parser</code> from 5.59.0 to 5.59.1 (<a href=\"https://redirect.github.com/peter-evans/create-pull-request/issues/1884\">#1884</a>)</li>\n<li><a href=\"https://github.com/peter-evans/create-pull-request/commit/8dcaf3883b89ee69284b5200207140ee0ff16fd4\"><code>8dcaf38</code></a> build(deps-dev): bump <code>@\u200btypescript-eslint/parser</code> from 5.58.0 to 5.59.0 (<a href=\"https://redirect.github.com/peter-evans/create-pull-request/issues/1876\">#1876</a>)</li>\n<li><a href=\"https://github.com/peter-evans/create-pull-request/commit/2827897dcca3eb94b42cba2228d9abc3ff04185e\"><code>2827897</code></a> docs: add note about push-to-fork with remote repos</li>\n<li><a href=\"https://github.com/peter-evans/create-pull-request/commit/c4f19d3a23df3f9c18e7893bb435a88a2e045c49\"><code>c4f19d3</code></a> build(deps-dev): bump eslint-import-resolver-typescript (<a href=\"https://redirect.github.com/peter-evans/create-pull-request/issues/1844\">#1844</a>)</li>\n<li><a href=\"https://github.com/peter-evans/create-pull-request/commit/46035868a3d3d84411578c2a440de0f822dd7a06\"><code>4603586</code></a> build(deps-dev): bump eslint from 8.37.0 to 8.38.0 (<a href=\"https://redirect.github.com/peter-evans/create-pull-request/issues/1842\">#1842</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/peter-evans/create-pull-request/compare/5b4a9f6a9e2af26e5f02351490b90d01eb8ec1e5...284f54f989303d2699d373481a0cfa13ad5a6666\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=peter-evans/create-pull-request&package-manager=github_actions&previous-version=5.0.0&new-version=5.0.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "CLOSED",
      "createdAt": "2023-05-08T04:02:23Z",
      "updatedAt": "2023-05-10T07:18:50Z",
      "closedAt": "2023-05-10T07:18:40Z",
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "dependabot/github_actions/peter-evans/create-pull-request-5.0.1",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "github_actions"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump peter-evans/create-pull-request from 5.0.0 to 5.0.1\n\nBumps [peter-evans/create-pull-request](https://github.com/peter-evans/create-pull-request) from 5.0.0 to 5.0.1.\n- [Release notes](https://github.com/peter-evans/create-pull-request/releases)\n- [Commits](https://github.com/peter-evans/create-pull-request/compare/5b4a9f6a9e2af26e5f02351490b90d01eb8ec1e5...284f54f989303d2699d373481a0cfa13ad5a6666)\n\n---\nupdated-dependencies:\n- dependency-name: peter-evans/create-pull-request\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2023-05-08T04:02:22Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 10970,
      "title": "build(deps): Bump django from 4.2 to 4.2.1 in /testing/plugins_integration",
      "body": "Bumps [django](https://github.com/django/django) from 4.2 to 4.2.1.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/django/django/commit/fea17b76150688056d78818ea1ef47f1122dc165\"><code>fea17b7</code></a> [4.2.x] Bumped version for 4.2.1 release.</li>\n<li><a href=\"https://github.com/django/django/commit/21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd\"><code>21b1b1f</code></a> [4.2.x] Fixed CVE-2023-31047, Fixed <a href=\"https://redirect.github.com/django/django/issues/31710\">#31710</a> -- Prevented potential bypass of v...</li>\n<li><a href=\"https://github.com/django/django/commit/290fd5ecece400490ad6bb557720d3b76f647eaf\"><code>290fd5e</code></a> [4.2.x] Fixed <a href=\"https://redirect.github.com/django/django/issues/34529\">#34529</a>, Refs <a href=\"https://redirect.github.com/django/django/issues/34525\">#34525</a> -- Reduced index operations with Meta.index...</li>\n<li><a href=\"https://github.com/django/django/commit/4c68482c3ebe07c598edc4fa4e1796c7c773d768\"><code>4c68482</code></a> [4.2.x] Fixed <a href=\"https://redirect.github.com/django/django/issues/34530\">#34530</a> -- Improved docs when customizing storage for FileField.</li>\n<li><a href=\"https://github.com/django/django/commit/f200d8369822e418906579503b8d3015a03e75f0\"><code>f200d83</code></a> [4.2.x] Fixed <a href=\"https://redirect.github.com/django/django/issues/34515\">#34515</a> -- Made LocaleMiddleware prefer language from paths when...</li>\n<li><a href=\"https://github.com/django/django/commit/4f343a10f765c4a6672c8ef4c39d044dd7d6653f\"><code>4f343a1</code></a> [4.2.x] Refs <a href=\"https://redirect.github.com/django/django/issues/34118\">#34118</a>, Refs <a href=\"https://redirect.github.com/django/django/issues/34504\">#34504</a> -- Added backward incompatibility note about...</li>\n<li><a href=\"https://github.com/django/django/commit/88f23b6b8158d3830589dce8787677cdb7d33404\"><code>88f23b6</code></a> [4.2.x] Refs <a href=\"https://redirect.github.com/django/django/issues/33662\">#33662</a> -- Corrected Sitemap.get_languages_for_item() signature i...</li>\n<li><a href=\"https://github.com/django/django/commit/01779cdcef4be8d45446e1f88915ef3199c7b41f\"><code>01779cd</code></a> [4.2.x] Doc'd that Count(&quot;<em>&quot;) is equivalent to COUNT(</em>) SQL.</li>\n<li><a href=\"https://github.com/django/django/commit/28d428270328ff75302ba4fd935a52a71a600675\"><code>28d4282</code></a> [4.2.x] Added stub release notes and release date for 4.2.1, 4.1.9, and 3.2.19.</li>\n<li><a href=\"https://github.com/django/django/commit/fffbf850805a9cc7d07caa78df3f07880c85fdb8\"><code>fffbf85</code></a> [4.2.x] Fixed <a href=\"https://redirect.github.com/django/django/issues/34512\">#34512</a> -- Restored breadcrumbs on admin app index view.</li>\n<li>Additional commits viewable in <a href=\"https://github.com/django/django/compare/4.2...4.2.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=django&package-manager=pip&previous-version=4.2&new-version=4.2.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "state": "MERGED",
      "createdAt": "2023-05-08T03:56:50Z",
      "updatedAt": "2023-05-10T07:18:19Z",
      "closedAt": "2023-05-10T07:18:18Z",
      "mergedAt": "2023-05-10T07:18:18Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "bluetech"
      },
      "baseRefName": "main",
      "headRefName": "dependabot/pip/testing/plugins_integration/django-4.2.1",
      "author": {
        "login": "dependabot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "python"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "build(deps): Bump django in /testing/plugins_integration\n\nBumps [django](https://github.com/django/django) from 4.2 to 4.2.1.\n- [Commits](https://github.com/django/django/compare/4.2...4.2.1)\n\n---\nupdated-dependencies:\n- dependency-name: django\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
              "committedDate": "2023-05-08T03:56:49Z",
              "author": {
                "name": "dependabot[bot]",
                "email": "49699333+dependabot[bot]@users.noreply.github.com",
                "user": {
                  "login": "dependabot[bot]"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "bluetech"
            },
            "state": "APPROVED",
            "submittedAt": "2023-05-10T07:18:08Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 10969,
      "title": "Multiline string issue",
      "body": "Closes #10863 \r\n\r\nResolved issue in assert failure terminal outputs with multiline string lists where an extra comma (\"- ,\") was added before the multiline string list itself with comparison to an empty list. The new PR now removes the extra comma and adds a bracket (\"- []\")  before showing the multiline string list that was expected.\r\n\r\nBefore:\r\n<img width=\"608\" alt=\"image\" src=\"https://user-images.githubusercontent.com/93492271/236651486-8e83bb5e-57e3-435b-85f6-633c53c9d55d.png\">\r\n\r\nAfter:\r\n\r\n![image](https://user-images.githubusercontent.com/93492271/236651516-09693975-6df7-4e4c-8f10-d518ce21a2a3.png)\r\n\r\n\r\nWorked with @HSamiul and @aisparyan in a team with @egwetzel and @mthaitan \r\n",
      "state": "OPEN",
      "createdAt": "2023-05-07T00:23:37Z",
      "updatedAt": "2023-11-06T09:09:39Z",
      "closedAt": null,
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "multiline_string_issue",
      "author": {
        "login": "HomieOmie"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Update code.py to stop printing wrong outputs to terminal",
              "committedDate": "2023-05-07T00:35:13Z",
              "author": {
                "name": "HomieOmie",
                "email": "93492271+HomieOmie@users.noreply.github.com",
                "user": {
                  "login": "HomieOmie"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "CHANGES_REQUESTED",
            "submittedAt": "2023-05-10T09:58:48Z",
            "body": "Thanks @HomieOmie for the PR, we appreciate it.\r\n\r\nHowever I'm not sure the approach taken here is the best one -- post-processing the message trying to fix those specific errors by string manipulation. Probably the best solution would be to fix the problem at the source, where the diff is generated.\r\n\r\n> However, these the lines added in the Pull Request cannot be covered unless a test case with a failing assert is added, which will cause failures in the test suite.\r\n\r\nActually these kind of test is common, we use the `pytester` fixture for that, you can see numerous examples through the `testing` directory where we expect some piece of Python code to fail, and we can then check the return code of the pytest run, as well as the output from stdout/stderr.\r\n"
          }
        ]
      }
    },
    {
      "number": 10968,
      "title": "[automated] Update plugin list",
      "body": "[automated] Update plugin list",
      "state": "MERGED",
      "createdAt": "2023-05-07T00:20:57Z",
      "updatedAt": "2023-05-09T22:05:14Z",
      "closedAt": "2023-05-09T22:05:13Z",
      "mergedAt": "2023-05-09T22:05:13Z",
      "isDraft": false,
      "isCrossRepository": false,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "update-plugin-list/patch-7d548c38e",
      "author": {
        "login": "github-actions"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "[automated] Update plugin list",
              "committedDate": "2023-05-07T00:20:56Z",
              "author": {
                "name": "pytest bot",
                "email": "pytestbot@users.noreply.github.com",
                "user": {
                  "login": "pytestbot"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": []
      }
    },
    {
      "number": 10961,
      "title": "Updated diff to show \\t in string comparison assertions",
      "body": "Closes #10704 \r\n\r\nAdded \"\\t\" characters to the diff message, did not add \"\\n\" because the diff already creates each line on a separate line and it shows in the \"AssertionError: ______\" section of the error message. \r\nUpdated test suite to reflect this change.\r\n\r\nBefore:\r\n<img width=\"1071\" alt=\"A21FBA6C-69C9-4DB4-8560-2359DFF974AC\" src=\"https://user-images.githubusercontent.com/98917607/235961748-1e0584a7-6e8a-4e28-a1ab-fb458f62f335.png\">\r\n\r\nAfter:\r\n```\r\npytest.param(\r\n        \"\"\"\r\n        def test_this():\r\n            result =   '''spam    bacon\r\n            eggs love'''\r\n            desired = \"spam bacon eggs love\"\r\n            assert result == desired\r\n        \"\"\",\r\n        \"\"\"\r\n        >       assert result == desired\r\n        E       AssertionError: assert 'spam    bacon\\\\n    eggs love' == 'spam bacon eggs love'\r\n        E         - spam bacon eggs love\r\n        E         + spam\\\\tbacon\r\n        E         + \\\\teggs love\r\n        \"\"\",\r\n        id='Test \"not in\" string',\r\n    ),\r\n```\r\n\r\nWorked with @egwetzel on this issue in team with @HSamiul.\r\n\r\n",
      "state": "OPEN",
      "createdAt": "2023-05-03T15:25:39Z",
      "updatedAt": "2023-11-06T09:09:27Z",
      "closedAt": null,
      "mergedAt": null,
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": false,
      "mergedBy": null,
      "baseRefName": "main",
      "headRefName": "whitespace/dev",
      "author": {
        "login": "mthaitan"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Merge branch 'whitespace/dev' of github.com:HSamiul/cakepop-pytest into whitespace/dev",
              "committedDate": "2023-05-06T20:45:24Z",
              "author": {
                "name": "Maddie Thai-Tang",
                "email": "mthaitan@andrew.cmu.edu",
                "user": {
                  "login": "mthaitan"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "Zac-HD"
            },
            "state": "CHANGES_REQUESTED",
            "submittedAt": "2023-06-20T02:09:12Z",
            "body": ""
          }
        ]
      }
    },
    {
      "number": 10958,
      "title": "Improve verbose output by wrapping skip/xfail reasons with margin",
      "body": "Fixes #10940.\r\n\r\nThis functionality is covered by an existing test that only needed minor updates to match new output.  There were a couple of identical lines in the output used for text matching, so I added numbers to disambiguate.\r\n\r\nLet me know if there are any suggestions or changes needed.",
      "state": "MERGED",
      "createdAt": "2023-05-01T16:23:51Z",
      "updatedAt": "2023-05-06T15:15:11Z",
      "closedAt": "2023-05-06T15:15:11Z",
      "mergedAt": "2023-05-06T15:15:11Z",
      "isDraft": false,
      "isCrossRepository": true,
      "mergeable": "UNKNOWN",
      "merged": true,
      "mergedBy": {
        "login": "nicoddemus"
      },
      "baseRefName": "main",
      "headRefName": "wrap_reason_lint",
      "author": {
        "login": "brl0"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      },
      "commits": {
        "nodes": [
          {
            "commit": {
              "message": "Update changelog/10940.improvement.rst",
              "committedDate": "2023-05-06T15:14:44Z",
              "author": {
                "name": "Bruno Oliveira",
                "email": "nicoddemus@gmail.com",
                "user": {
                  "login": "nicoddemus"
                }
              }
            }
          }
        ]
      },
      "reviewRequests": {
        "nodes": []
      },
      "reviews": {
        "nodes": [
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-05-04T18:15:54Z",
            "body": "Hi @brl0 , thanks for the PR!\r\n\r\nHere is the output from this branch for `test_verbose_skip_reason`:\r\n\r\n```\r\ntest_verbose_skip_reason.py::test_1 SKIPPED (123)              [  8%]\r\ntest_verbose_skip_reason.py::test_2 XPASS (456)                [ 16%]\r\ntest_verbose_skip_reason.py::test_3 XFAIL (789)                [ 25%]\r\ntest_verbose_skip_reason.py::test_4 XFAIL                      [ 33%]\r\ntest_verbose_skip_reason.py::test_5 SKIPPED (unconditional...) [ 41%]\r\ntest_verbose_skip_reason.py::test_6 XPASS                      [ 50%]\r\ntest_verbose_skip_reason.py::test_7 SKIPPED                    [ 58%]\r\ntest_verbose_skip_reason.py::test_8 SKIPPED (888 is great)     [ 66%]\r\ntest_verbose_skip_reason.py::test_9 XFAIL                      [ 75%]\r\ntest_verbose_skip_reason.py::test_10 XFAIL (It's \ud83d\udd59 o'clock)   [ 83%]\r\ntest_verbose_skip_reason.py::test_long_skip SKIPPED (1 can...) [ 91%]\r\ntest_verbose_skip_reason.py::test_long_xfail XFAIL (2 cann...) [100%]\r\n```\r\n\r\nAnd here is the output for `main`:\r\n\r\n```\r\ntest_verbose_skip_reason.py::test_1 SKIPPED (123)              [  8%]\r\ntest_verbose_skip_reason.py::test_2 XPASS (456)                [ 16%]\r\ntest_verbose_skip_reason.py::test_3 XFAIL (789)                [ 25%]\r\ntest_verbose_skip_reason.py::test_4 XFAIL                      [ 33%]\r\ntest_verbose_skip_reason.py::test_5 SKIPPED (unconditional...) [ 41%]\r\ntest_verbose_skip_reason.py::test_6 XPASS                      [ 50%]\r\ntest_verbose_skip_reason.py::test_7 SKIPPED                    [ 58%]\r\ntest_verbose_skip_reason.py::test_8 SKIPPED (888 is great)     [ 66%]\r\ntest_verbose_skip_reason.py::test_9 XFAIL                      [ 75%]\r\ntest_verbose_skip_reason.py::test_10 XFAIL (It's \ud83d\udd59 o'clock)   [ 83%]\r\ntest_verbose_skip_reason.py::test_long_skip SKIPPED (canno...) [ 91%]\r\ntest_verbose_skip_reason.py::test_long_xfail XFAIL (cannot...) [100%]\r\n```\r\n\r\nIt does not look like it was doing what was intended, or am I missing something?"
          },
          {
            "author": {
              "login": "brl0"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-05-04T18:51:34Z",
            "body": ""
          },
          {
            "author": {
              "login": "brl0"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-05-04T19:07:22Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-05-04T20:48:28Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-05-04T20:49:26Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "COMMENTED",
            "submittedAt": "2023-05-04T20:52:41Z",
            "body": ""
          },
          {
            "author": {
              "login": "nicoddemus"
            },
            "state": "APPROVED",
            "submittedAt": "2023-05-04T20:53:09Z",
            "body": "Thanks a lot, appreciate the contribution!\r\n\r\nI will merge this in the next few days to give others a chance to review. \ud83d\udc4d "
          }
        ]
      }
    }
  ],
  "issues": [
    {
      "number": 12167,
      "title": "race condition between creation of `.pytest_cache` and `.pytest_cache/.gitignore`",
      "body": "The solution implemented in https://github.com/pytest-dev/pytest/pull/3982 is not robust - in case test execution is interrupted while a cache element is being written, the `.pytest_cache` directory will exist and be non-empty, but will not contain `.gitignore`.\r\n\r\nBecause of [this check](https://github.com/pytest-dev/pytest/blob/12e061e2e838fb2c17d54df40a4a11aeb8723c6b/src/_pytest/cacheprovider.py#L192-L193) `.gitignore` ends up never being created.",
      "state": "CLOSED",
      "createdAt": "2024-03-29T15:29:10Z",
      "updatedAt": "2024-04-06T20:18:20Z",
      "closedAt": "2024-04-06T20:18:20Z",
      "author": {
        "login": "tamird"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      }
    },
    {
      "number": 12166,
      "title": "Also emit `PytestUnknownMarkWarning` for unknown marks given in `-m`",
      "body": "If we use `@pytest.mark` with a mark that does not exist, pytest warns about it:\r\n\r\n```python\r\nimport pytest\r\n\r\n@pytest.mark.one\r\ndef test_one():\r\n    pass\r\n```\r\n\r\nresults in:\r\n\r\n```\r\n  .../test_x.py:3: PytestUnknownMarkWarning: Unknown pytest.mark.one - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\r\n    @pytest.mark.one\r\n```\r\n\r\nThis is to avoid silent failures, e.g. a test being marked `onne` and then never being executed.\r\n\r\n---\r\n\r\nHowever, a similar issue exists with `-m` too! If, with the code above, we use `pytest -m onne`, that results in:\r\n\r\n```\r\n============================= test session starts ==============================\r\ncollected 1 item / 1 deselected / 0 selected                                   \r\n\r\n============================ 1 deselected in 0.43s =============================\r\n```\r\n\r\nThanks to exit code 5 (`ExitCode.NO_TESTS_COLLECTED`), this can still be spotted, more or less. However, when using e.g. `pytest -m \"slow or onne\"`, it's not trivially visible anymore that a typo was made (assuming that some tests run due to the `slow` mark, of course).\r\n\r\nIs there a good reason to not validate all marks passed into `-m` against the list of registered marks as well? Have we had an issue about this before? This gets pointed out every once in a while by participants in my pytest trainings, and I feel like I must have reported it before, but I can't seem to find anything.",
      "state": "CLOSED",
      "createdAt": "2024-03-28T13:58:09Z",
      "updatedAt": "2024-04-02T06:41:38Z",
      "closedAt": "2024-04-02T06:41:38Z",
      "author": {
        "login": "The-Compiler"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "topic: marks"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 12163,
      "title": "Track exceptions when setting up and finalizing fixtures",
      "body": "There is a task to track exceptions when setting up and finalizing fixtures.\r\nWhen setting up, an exception can be obtained in the pytest_fixture_setup hook:\r\n\r\n```python\r\n@pytest.hookimpl(hookwrapper=True)\r\ndef pytest_fixture_setup(fixturedef):\r\n    result = yield\r\n    if result.exception:\r\n        print('SETUP EXCEPTION in {0}: {1}'.format(fixturedef.argname, result.exception))\r\n```\r\n\r\nBut at finalizing, you can't just get a list of exceptions of all finalizers that have been executed. Because there is no analog of the result as in the pytest_fixture_setup hook.\r\nI propose to finalize the pytest_fixture_post_finalizer specification and an additional argument that will contain the exclusion(s) of all fixture finalizers.\r\n\r\nsrc/_pytest/hookspec.py:\r\n\r\n```python\r\ndef pytest_fixture_post_finalizer(\r\n    fixturedef: \"FixtureDef[Any]\", request: \"SubRequest\", exception: \"BaseException | None\"\r\n) -> None:\r\n```\r\nsrc/_pytest/fixtures.py::FixtureDef::finish\r\n\r\n```python\r\n        node = request.node\r\n        if len(exceptions) == 1:\r\n            final_exception = exceptions[0]\r\n        elif len(exceptions) > 1:\r\n            msg = f'errors while tearing down fixture \"{self.argname}\" of {node}'\r\n            final_exception = BaseExceptionGroup(msg, exceptions[::-1])\r\n        else:\r\n            final_exception = None\r\n        node.ihook.pytest_fixture_post_finalizer(fixturedef=self, request=request, exception=final_exception)\r\n        # Even if finalization fails, we invalidate the cached fixture\r\n        # value and remove all finalizers because they may be bound methods\r\n        # which will keep instances alive.\r\n        self.cached_result = None\r\n        self._finalizers.clear()\r\n        if final_exception:\r\n            raise final_exception\r\n```\r\n",
      "state": "OPEN",
      "createdAt": "2024-03-26T04:15:57Z",
      "updatedAt": "2025-05-15T07:07:36Z",
      "closedAt": null,
      "author": {
        "login": "ShurikMen"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: proposal"
          },
          {
            "name": "status: needs information"
          },
          {
            "name": "topic: fixtures"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 10
      }
    },
    {
      "number": 12155,
      "title": "Pytest changes default environment variables when running a file.",
      "body": "For example with the following code\r\n\r\n```py\r\ndef test_env_vars():\r\n    GOOD_ENV_VARS = {\r\n        \"PATHEXT\": \".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC\",\r\n        \"PUBLIC\": r\"C:\\Users\\Public\",\r\n        \"COMMONPROGRAMFILES(X86)\": r\"C:\\Program Files (x86)\\Common Files\",\r\n        \"PROGRAMFILES\": r\"C:\\Program Files\",\r\n        \"PROGRAMFILES(X86)\": r\"C:\\Program Files (x86)\",\r\n        \"DRIVERDATA\": r\"C:\\Windows\\System32\\Drivers\\DriverData\",\r\n        \"COMMONPROGRAMFILES\": r\"C:\\Program Files\\Common Files\",\r\n        \"COMMONPROGRAMW6432\": r\"C:\\Program Files\\Common Files\",\r\n        \"COMMONPROGRAMFILES(X86)\": r\"C:\\Program Files (x86)\\Common Files\",\r\n    }\r\n    for env_var, value in GOOD_ENV_VARS.items():\r\n        assert os.environ[env_var] == value, f\"{env_var} is not set correctly {os.environ[env_var]}\"\r\n```\r\n\r\nOn windows 11 on my current machine this will error along with all other latest windows version (I believe). Basically the only issue is that the PATHEXT env variable has .CPL appended to it which it shouldn't be default.",
      "state": "CLOSED",
      "createdAt": "2024-03-24T00:04:19Z",
      "updatedAt": "2024-04-06T20:51:21Z",
      "closedAt": "2024-04-06T20:51:21Z",
      "author": {
        "login": "KingKDot"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 12151,
      "title": "Improves error message when path does not exist",
      "body": "When checking `assert path.exists()`, the output error message becomes very long. Could this be cleaned up and shortened somehow?\r\n\r\ntest source code:\r\n```py\r\nimport pathlib\r\nimport unittest\r\n\r\n\r\nPATH = pathlib.Path(__file__).parent\r\nMY_PATH = pathlib.Path(\"build_folder\") / \"tool\" / \"output\" / \"result.csv\"\r\n\r\ndef test():\r\n    assert MY_PATH.exists()\r\n\r\n\r\nclass TestClass(unittest.TestCase):\r\n\r\n    @classmethod\r\n    def setUpClass(cls):\r\n\r\n        test_case_path = PATH / \"build\" / \"testcases\" / \"tmp\"\r\n        cls.LOG_FILE = test_case_path / \"simulation\" / \"test_log.txt\"\r\n\r\n    def test2(self):\r\n        assert self.LOG_FILE.exists()\r\n```        \r\n        \r\noutput:\r\n```\r\n_________________________________________________________________ test _________________________________________________________________\r\n\r\n    def test():\r\n>       assert MY_PATH.exists()\r\nE       AssertionError: assert False\r\nE        +  where False = <bound method Path.exists of PosixPath('build_folder/tool/output/result.csv')>()\r\nE        +    where <bound method Path.exists of PosixPath('build_folder/tool/output/result.csv')> = PosixPath('build_folder/tool/output/result.csv').exists\r\n\r\ntest.py:9: AssertionError\r\n___________________________________________________________ TestClass.test2 ____________________________________________________________\r\n\r\nself = <test.TestClass testMethod=test2>\r\n\r\n    def test2(self):\r\n>       assert self.LOG_FILE.exists()\r\nE       AssertionError: assert False\r\nE        +  where False = <bound method Path.exists of PosixPath('/local/david/cs/main/build/testcases/tmp/simulation/test_log.txt')>()\r\nE        +    where <bound method Path.exists of PosixPath('/local/david/cs/main/build/testcases/tmp/simulation/test_log.txt')> = PosixPath('/local/david/cs/main/build/testcases/tmp/simulation/test_log.txt').exists\r\nE        +      where PosixPath('/local/david/cs/main/build/testcases/tmp/simulation/test_log.txt') = <test.TestClass testMethod=test2>.LOG_FILE\r\n\r\ntest.py:21: AssertionError\r\n```",
      "state": "OPEN",
      "createdAt": "2024-03-22T15:09:55Z",
      "updatedAt": "2024-03-23T17:35:34Z",
      "closedAt": null,
      "author": {
        "login": "kaddkaka"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "topic: reporting"
          },
          {
            "name": "topic: rewrite"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      }
    },
    {
      "number": 12150,
      "title": "@pytest.mark.usefixtures should support fixtures by function (rather than name)",
      "body": "<!--\r\nThanks for suggesting a feature!\r\n\r\nQuick check-list while suggesting features:\r\n-->\r\n\r\n#### What's the problem this feature will solve?\r\n`@pytest.mark.usefixtures(_my_fixture)` should be possible but only strings are accepted currently, `@pytest.mark.usefixtures(\"_my_fixture\")`. Adding support two advantages:\r\n* Passing functions makes sense intuitively. This is python \ud83d\udcaa not Ruby\r\n* It's helpful for people who constantly typo everything (like me) \r\n\r\n#### Describe the solution you'd like\r\n`@pytest.mark.usefixtures` should support both functions and function names.\r\n\r\nMy decorators are always defined within the file where they are used.\r\n\r\n\r\n#### Alternative Solutions\r\n* Continue using only strings. It's not the end of the world, but I'd like to do this.\r\n\r\n\r\n#### Additional context\r\n<!-- Add any other context, links, etc. about the feature here. -->\r\n",
      "state": "CLOSED",
      "createdAt": "2024-03-21T19:50:35Z",
      "updatedAt": "2025-01-13T07:29:04Z",
      "closedAt": "2024-03-21T20:25:11Z",
      "author": {
        "login": "SergioInToronto"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 7
      }
    },
    {
      "number": 12146,
      "title": "Parametrization with Variables Unexpectedly Changes Fixture Scope from Class-Level to Function-Level",
      "body": "I have a `setup` fixture that I've parameterized with class-level scope. When I directly specify the argument values as `[(\"chrome\", \"windows\", \"latest\")]`, it works fine, maintaining the class-level scope. However, when I try to use variables to set these argument values, I've noticed that the scope unexpectedly shifts to function-level.\r\n\r\ntests/test_app.py\r\n```\r\nimport pytest\r\n\r\n\r\n@pytest.mark.usefixtures(\"setup\")\r\nclass TestSmoke:\r\n    def test_1(self):\r\n        assert True\r\n\r\n    def test_2(self):\r\n        assert True\r\n```\r\n\r\n\r\n**Scenario 1 with hardcoded values**\r\n\r\ntests/conftest.py\r\n\r\n```\r\nimport pytest\r\n\r\ndef pytest_generate_tests(metafunc):\r\n    if 'setup' in metafunc.fixturenames:\r\n        metafunc.parametrize(\"setup\",argvalues=[(\"chrome\", \"windows\", \"latest\")], indirect=True, scope='class')\r\n\r\n\r\n@pytest.fixture\r\ndef setup(request):\r\n    print(f\"\\nSetting up\")\r\n    print(f\"Param {request.param}\")\r\n    print(f\"fixture (scope={request.scope})\")\r\n\r\n    yield\r\n    print(f\"\\nTearing down\")\r\n```\r\n\r\n**Output**\r\n\r\n```\r\npython -m pytest -s -v -k \"TestSmoke\" tests\r\n======================================================================================================= test session starts =======================================================================================================\r\nplatform darwin -- Python 3.12.2, pytest-8.1.1, pluggy-1.4.0 -- /Volumes/T7/mywork/pythonProject/dynamic_parameter/venv/bin/python\r\ncachedir: .pytest_cache\r\nrootdir: /Volumes/T7/mywork/pythonProject/dynamic_parameter\r\ncollected 2 items                                                                                                                                                                                                                 \r\n\r\ntests/test_app.py::TestSmoke::test_1[setup0] \r\nSetting up\r\nParam ('chrome', 'windows', 'latest')\r\nfixture (scope=class)\r\nPASSED\r\ntests/test_app.py::TestSmoke::test_2[setup0] PASSED\r\nTearing down\r\n```\r\n\r\n\r\n**Scenario 2 with variable values**\r\n\r\ntests/conftest.py\r\n```\r\nimport pytest\r\n\r\n\r\ndef pytest_generate_tests(metafunc):\r\n    browser_name = \"chrome\"\r\n    os_name = \"windows\"\r\n    browser_version = \"latest\"\r\n\r\n    if 'setup' in metafunc.fixturenames:\r\n        metafunc.parametrize(\"setup\", argvalues=[(os_name, browser_name, browser_version)], indirect=True, scope='class')\r\n\r\n\r\n@pytest.fixture\r\ndef setup(request):\r\n    print(f\"\\nSetting up\")\r\n    print(f\"Param {request.param}\")\r\n    yield\r\n    print(f\"\\nTearing down\")\r\n```\r\n\r\n**Output**\r\n```\r\npython -m pytest -s -v -k \"TestSmoke\" tests\r\n======================================================================================================= test session starts =======================================================================================================\r\nplatform darwin -- Python 3.12.2, pytest-7.4.4, pluggy-1.4.0 -- /Volumes/T7/mywork/pythonProject/dynamic_parameter/venv/bin/python\r\ncachedir: .pytest_cache\r\nrootdir: /Volumes/T7/mywork/pythonProject/dynamic_parameter\r\ncollected 2 items                                                                                                                                                                                                                 \r\n\r\ntests/test_app.py::TestSmoke::test_1[setup0] \r\nSetting up\r\nParam ('windows', 'chrome', 'latest')\r\nPASSED\r\ntests/test_app.py::TestSmoke::test_2[setup0] \r\nTearing down\r\n\r\nSetting up\r\nParam ('windows', 'chrome', 'latest')\r\nPASSED\r\nTearing down\r\n```\r\n\r\n\r\n```\r\n(venv) yogen@Mac-mini dynamic_parameter % pip list\r\nPackage        Version\r\n-------------- -------\r\nattrs          23.2.0\r\niniconfig      2.0.0\r\nmore-itertools 10.2.0\r\npackaging      24.0\r\npip            24.0\r\npluggy         1.4.0\r\npy             1.11.0\r\npytest         8.1.1\r\ntoml           0.10.2\r\nwcwidth        0.2.13\r\n```\r\n\r\n\r\n\r\n",
      "state": "OPEN",
      "createdAt": "2024-03-21T12:06:34Z",
      "updatedAt": "2024-07-16T23:35:16Z",
      "closedAt": null,
      "author": {
        "login": "yogendrasinghx"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: bug"
          },
          {
            "name": "topic: fixtures"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 6
      }
    },
    {
      "number": 12145,
      "title": "Add explicit support for `unittest.mock.Mock` in monkeypatch fixture",
      "body": "<!--\r\nThanks for suggesting a feature!\r\n\r\nQuick check-list while suggesting features:\r\n-->\r\n\r\n#### What's the problem this feature will solve?\r\n<!-- What are you trying to do, that you are unable to achieve with pytest as it currently stands? -->\r\nIn my organisation, we have a lot of tests split between `unittest.mock.patch`, [pytest-mock](https://pypi.org/project/pytest-mock/) and monkeypatch. \r\n\r\nAs we try to standardise usage to monkeypatch, we end up with a lot of cases looking like:\r\n```python3\r\ndef my_test(monkeypatch: pytest.MonkeyPatch) -> None:\r\n  mock_foobar: Mock = MagicMock()\r\n  monkeypatch.setattr(foo, \"bar\", mock_foobar)\r\n  # ...\r\n```\r\n\r\nThere are two main reasons we do this:\r\n1. To inject Exceptions into unit tests (i.e. `mock_foobar.side_effect = MyException(\"...\")`).\r\n2. To assert based on specific calls to the patched attribute.\r\n\r\n#### Describe the solution you'd like\r\n<!-- A clear and concise description of what you want to happen. -->\r\n\r\nSupport mocking in `monkeypatch`. I'm happy to contribute this feature, although maybe this is not something you want to actively support.\r\n\r\nI propose introducing a new function to `monkeypatch` called `mockattr` (to match `setattr`). This function would patch the attribute to be an instance of MagicMock or AsyncMock (depending on whether the patched attribute is awaitable or not). Potentially new functions for `mockitem` and `mockenv` should be introduced too for parity for `setitem` and `setenv`. \r\n\r\n```python3\r\ndef mockattr(\r\n  self,\r\n  target: str | object,\r\n  name: str | notset = notset,\r\n  raising: bool = True,\r\n) -> MagicMock | AsyncMock:\r\n  # ...\r\n```\r\n\r\n<!-- Provide examples of real-world use cases that this would enable and how it solves the problem described above. -->\r\n\r\nTaking my example above, the code would be simplified slightly. It would also prevent having to know to manually instantiate an instance of MagicMock vs AsyncMock depending on the return type of the function.\r\n```python3\r\ndef my_test(monkeypatch: pytest.MonkeyPatch) -> None:\r\n  mock_foobar: Mock =  monkeypatch.mockattr(foo, \"bar\")\r\n  # ...\r\n```\r\n\r\n#### Alternative Solutions\r\n<!-- Have you tried to workaround the problem using a pytest plugin or other tools? Or a different approach to solving this issue? Please elaborate here. -->\r\n\r\nWhat I have described above is essentially what we have done internally in my organisation by creating a pytest fixture that exposes `mockattr`. However we end up relying on monkeypatch internals (specifically `derive_importpath`) in order to inspect the attribute before monkeypatching it to determine whether it is awaitable or not, which we would like to avoid.\r\n\r\n~An alternative solve, would be to update pytest-mock to use monkeypatch, so that it has similar patching semantics as monkeypatch instead of using unittest patch semantics. However that would most likely result in breaking changes, and I think it's valid for that plugin to continue to exist as is (if people want to use `unittest.mock` semantics within `pytest`).~\r\n\r\nAnother solve to simplify these use cases, would be to have `setattr` return the patched value, which would result in code that looked like this:\r\n```python3\r\ndef my_test(monkeypatch: pytest.MonkeyPatch) -> None:\r\n  mock_foobar: Mock =  monkeypatch.setattr(foo, \"bar\", MagicMock())\r\n  # ...\r\n```\r\n\r\n#### Additional context\r\n<!-- Add any other context, links, etc. about the feature here. -->\r\n\r\nI see some similar conversations from the past:\r\nhttps://github.com/pytest-dev/pytest/issues/4576\r\nhttps://github.com/pytest-dev/pytest-mock/issues/9\r\n",
      "state": "OPEN",
      "createdAt": "2024-03-20T18:36:36Z",
      "updatedAt": "2024-03-23T05:43:24Z",
      "closedAt": null,
      "author": {
        "login": "soceanainn"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: proposal"
          },
          {
            "name": "plugin: monkeypatch"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 12144,
      "title": "ImportError: cannot import name 'HookimplOpts' from 'pluggy'",
      "body": "## Error:\r\n- Test files: [Github/Test Folder)[https://github.com/maycuatroi/drawio/tree/cb4f8ef6ce1f173e955a961963b1b22d530c67ee/tests]\r\n```terminal\r\n(base) binhna@DESKTOP-D9VLB13:/mnt/d/Github/drawio$ pytest\r\nTraceback (most recent call last):\r\n  File \"/home/binhna/miniconda3/bin/pytest\", line 5, in <module>\r\n    from pytest import console_main\r\n  File \"/home/binhna/miniconda3/lib/python3.11/site-packages/pytest/__init__.py\", line 6, in <module>\r\n    from _pytest.assertion import register_assert_rewrite\r\n  File \"/home/binhna/miniconda3/lib/python3.11/site-packages/_pytest/assertion/__init__.py\", line 10, in <module>\r\n    from _pytest.assertion import rewrite\r\n  File \"/home/binhna/miniconda3/lib/python3.11/site-packages/_pytest/assertion/rewrite.py\", line 36, in <module>\r\n    from _pytest.assertion import util\r\n  File \"/home/binhna/miniconda3/lib/python3.11/site-packages/_pytest/assertion/util.py\", line 23, in <module>\r\n    from _pytest.config import Config\r\n  File \"/home/binhna/miniconda3/lib/python3.11/site-packages/_pytest/config/__init__.py\", line 43, in <module>\r\n    from pluggy import HookimplOpts\r\nImportError: cannot import name 'HookimplOpts' from 'pluggy' (/home/binhna/miniconda3/lib/python3.11/site-packages/pluggy/__init__.py)\r\n```\r\n\r\n## Pip list\r\n<details close>\r\n  <summary>Pip list</summary>\r\n\r\n```terminal\r\nPackage                                  Version\r\n---------------------------------------- ---------------\r\na2wsgi                                   1.10.2\r\nabout-time                               4.2.1\r\nabsl-py                                  2.1.0\r\nacme                                     2.9.0\r\naiofiles                                 23.2.1\r\naiohttp                                  3.9.3\r\naiosignal                                1.3.1\r\nalembic                                  1.13.1\r\nalive-progress                           3.1.5\r\naltair                                   5.2.0\r\namqp                                     5.2.0\r\nannotated-types                          0.6.0\r\nanyio                                    4.3.0\r\napache-airflow                           2.6.3\r\napache-airflow-providers-amazon          8.18.0\r\napache-airflow-providers-apache-beam     5.6.1\r\napache-airflow-providers-cncf-kubernetes 8.0.0\r\napache-airflow-providers-common-io       1.3.0\r\napache-airflow-providers-common-sql      1.11.0\r\napache-airflow-providers-ftp             3.7.0\r\napache-airflow-providers-google          10.15.0\r\napache-airflow-providers-http            4.9.1\r\napache-airflow-providers-imap            3.5.0\r\napache-airflow-providers-postgres        5.10.1\r\napache-airflow-providers-sendgrid        3.4.0\r\napache-airflow-providers-sqlite          3.7.1\r\napache-airflow-providers-ssh             3.10.1\r\napache-beam                              2.54.0\r\napispec                                  5.2.2\r\nappdirs                                  1.4.4\r\narchspec                                 0.2.3\r\nargcomplete                              3.2.2\r\nargon2-cffi                              23.1.0\r\nargon2-cffi-bindings                     21.2.0\r\narrow                                    1.3.0\r\nasgiref                                  3.7.2\r\nasn1crypto                               1.5.1\r\nasttokens                                2.4.1\r\nastunparse                               1.6.3\r\nasync-lru                                2.0.4\r\nattrs                                    23.2.0\r\nBabel                                    2.14.0\r\nbackoff                                  2.2.1\r\nbcrypt                                   4.1.2\r\nbeautifulsoup4                           4.12.3\r\nbilliard                                 4.2.0\r\nblack                                    24.2.0\r\nbleach                                   6.1.0\r\nblinker                                  1.7.0\r\nboltons                                  23.0.0\r\nbotasaurus                               3.2.24\r\nbotasaurus-proxy-authentication          1.0.11\r\nboto3                                    1.34.47\r\nbotocore                                 1.34.47\r\nBrotli                                   1.0.9\r\nCacheControl                             0.14.0\r\ncachelib                                 0.9.0\r\ncachetools                               5.3.2\r\ncapsolver-extension-python               1.0.1\r\ncattrs                                   23.2.3\r\ncelery                                   5.3.6\r\ncertifi                                  2024.2.2\r\ncffi                                     1.16.0\r\nchannels                                 4.0.0\r\nchardet                                  5.2.0\r\ncharset-normalizer                       3.3.2\r\nchrome-extension-python                  1.0.1\r\nchromedriver-autoinstaller-fix           1.0.5\r\nclick                                    8.1.7\r\nclick-didyoumean                         0.3.0\r\nclick-plugins                            1.1.1\r\nclick-repl                               0.3.0\r\nclickclick                               20.10.2\r\ncloudpickle                              2.2.1\r\ncloudscraper                             1.2.71\r\ncolorama                                 0.4.6\r\ncoloredlogs                              15.0.1\r\ncolorlog                                 4.8.0\r\ncolour                                   0.1.5\r\ncomm                                     0.2.1\r\nconda                                    24.3.0\r\nconda-content-trust                      0.2.0\r\nconda-libmamba-solver                    23.12.0\r\nconda-package-handling                   2.2.0\r\nconda_package_streaming                  0.9.0\r\nConfigUpdater                            3.2\r\nconnexion                                3.0.6\r\ncontourpy                                1.2.0\r\ncrcmod                                   1.7\r\ncron-descriptor                          1.4.3\r\ncroniter                                 2.0.2\r\ncryptography                             42.0.5\r\ncycler                                   0.12.1\r\ndataclasses-json                         0.6.4\r\ndb-dtypes                                1.2.0\r\ndebugpy                                  1.8.1\r\ndecorator                                5.1.1\r\ndefusedxml                               0.7.1\r\nDeprecated                               1.2.14\r\ndiff_cover                               8.0.3\r\ndill                                     0.3.8\r\ndistro                                   1.8.0\r\nDjango                                   5.0.2\r\ndjango-ca                                1.27.0\r\ndjango-celery-results                    2.5.1\r\ndjango-cors-headers                      4.3.1\r\ndjango-environ                           0.11.2\r\ndjango-filter                            23.5\r\ndjango-firebase-auth                     1.2.1\r\ndjango-letsencrypt                       4.1.0\r\ndjango-object-actions                    4.2.0\r\ndjango-redis                             5.4.0\r\ndjango-storages                          1.14.2\r\ndjangorestframework                      3.14.0\r\ndm-tree                                  0.1.8\r\ndnspython                                2.6.1\r\ndocopt                                   0.6.2\r\ndocutils                                 0.20.1\r\ndrf-excel                                2.4.0\r\ndrf-nested-routers                       0.93.5\r\ndrf-yasg                                 1.21.7\r\ndtreeviz                                 2.2.2\r\nemail-validator                          1.3.1\r\net-xmlfile                               1.1.0\r\nexecuting                                2.0.1\r\nfastapi                                  0.110.0\r\nfastavro                                 1.9.4\r\nfasteners                                0.19\r\nfastjsonschema                           2.19.1\r\nffmpy                                    0.3.2\r\nfilelock                                 3.13.1\r\nfirebase-admin                           6.5.0\r\nflake8                                   7.0.0\r\nFlask                                    2.2.5\r\nFlask-AppBuilder                         4.3.1\r\nFlask-Babel                              2.0.0\r\nFlask-Caching                            2.1.0\r\nFlask-JWT-Extended                       4.6.0\r\nFlask-Limiter                            3.5.1\r\nFlask-Login                              0.6.3\r\nFlask-Session                            0.6.0\r\nFlask-SQLAlchemy                         2.5.1\r\nFlask-WTF                                1.2.1\r\nflatbuffers                              24.3.7\r\nfonttools                                4.49.0\r\nfqdn                                     1.5.1\r\nfrozenlist                               1.4.1\r\nfsspec                                   2024.2.0\r\ngast                                     0.5.4\r\ngcloud-aio-auth                          4.2.3\r\ngcloud-aio-bigquery                      7.1.0\r\ngcloud-aio-storage                       9.2.0\r\ngcsfs                                    2024.2.0\r\ngitdb                                    4.0.11\r\nGitPython                                3.1.42\r\ngoogle-ads                               23.0.0\r\ngoogle-analytics-admin                   0.22.5\r\ngoogle-api-core                          2.17.1\r\ngoogle-api-python-client                 2.118.0\r\ngoogle-auth                              2.28.1\r\ngoogle-auth-httplib2                     0.2.0\r\ngoogle-auth-oauthlib                     1.2.0\r\ngoogle-cloud-aiplatform                  1.42.1\r\ngoogle-cloud-appengine-logging           1.4.1\r\ngoogle-cloud-audit-log                   0.2.5\r\ngoogle-cloud-automl                      2.13.1\r\ngoogle-cloud-batch                       0.17.11\r\ngoogle-cloud-bigquery                    3.17.2\r\ngoogle-cloud-bigquery-datatransfer       3.14.1\r\ngoogle-cloud-bigquery-storage            2.24.0\r\ngoogle-cloud-bigtable                    2.23.0\r\ngoogle-cloud-build                       3.23.1\r\ngoogle-cloud-compute                     1.16.1\r\ngoogle-cloud-container                   2.40.0\r\ngoogle-cloud-core                        2.4.1\r\ngoogle-cloud-datacatalog                 3.18.1\r\ngoogle-cloud-dataflow-client             0.8.8\r\ngoogle-cloud-dataform                    0.5.7\r\ngoogle-cloud-dataplex                    1.12.1\r\ngoogle-cloud-dataproc                    5.9.1\r\ngoogle-cloud-dataproc-metastore          1.15.1\r\ngoogle-cloud-dlp                         3.15.1\r\ngoogle-cloud-firestore                   2.15.0\r\ngoogle-cloud-kms                         2.21.1\r\ngoogle-cloud-language                    2.13.1\r\ngoogle-cloud-logging                     3.9.0\r\ngoogle-cloud-memcache                    1.9.1\r\ngoogle-cloud-monitoring                  2.19.1\r\ngoogle-cloud-orchestration-airflow       1.11.1\r\ngoogle-cloud-os-login                    2.14.1\r\ngoogle-cloud-pubsub                      2.19.4\r\ngoogle-cloud-redis                       2.15.1\r\ngoogle-cloud-resource-manager            1.12.1\r\ngoogle-cloud-run                         0.10.3\r\ngoogle-cloud-secret-manager              2.18.1\r\ngoogle-cloud-spanner                     3.42.0\r\ngoogle-cloud-speech                      2.24.1\r\ngoogle-cloud-storage                     2.14.0\r\ngoogle-cloud-storage-transfer            1.11.1\r\ngoogle-cloud-tasks                       2.16.1\r\ngoogle-cloud-texttospeech                2.16.1\r\ngoogle-cloud-translate                   3.15.1\r\ngoogle-cloud-videointelligence           2.13.1\r\ngoogle-cloud-vision                      3.7.0\r\ngoogle-cloud-workflows                   1.14.1\r\ngoogle-crc32c                            1.5.0\r\ngoogle-pasta                             0.2.0\r\ngoogle-re2                               1.1\r\ngoogle-resumable-media                   2.7.0\r\ngoogleapis-common-protos                 1.62.0\r\ngradio                                   4.21.0\r\ngradio_client                            0.12.0\r\ngrapheme                                 0.6.0\r\ngraphviz                                 0.20.1\r\ngreenlet                                 3.0.3\r\ngrpc-google-iam-v1                       0.13.0\r\ngrpc-interceptor                         0.15.4\r\ngrpcio                                   1.62.1\r\ngrpcio-gcp                               0.2.2\r\ngrpcio-status                            1.60.1\r\ngunicorn                                 21.2.0\r\nh11                                      0.14.0\r\nh5py                                     3.10.0\r\nhdfs                                     2.7.3\r\nhttpcore                                 1.0.4\r\nhttplib2                                 0.22.0\r\nhttpx                                    0.27.0\r\nhuggingface-hub                          0.21.4\r\nhumanfriendly                            10.0\r\nidna                                     3.6\r\nimportlib-metadata                       6.11.0\r\nimportlib_resources                      6.1.2\r\ninflection                               0.5.1\r\niniconfig                                2.0.0\r\nipykernel                                6.29.3\r\nipython                                  8.22.2\r\nipywidgets                               8.1.2\r\nisoduration                              20.11.0\r\nisort                                    5.13.2\r\nitsdangerous                             2.1.2\r\njavascript-fixes                         1.1.14\r\njedi                                     0.19.1\r\njeepney                                  0.8.0\r\nJinja2                                   3.1.3\r\njmespath                                 1.0.1\r\njoblib                                   1.3.2\r\njosepy                                   1.14.0\r\nJs2Py                                    0.74\r\njson-merge-patch                         0.2\r\njson-tricks                              3.17.3\r\njson5                                    0.9.22\r\njsonpatch                                1.32\r\njsonpath-ng                              1.6.1\r\njsonpickle                               3.0.3\r\njsonpointer                              2.1\r\njsonschema                               4.21.1\r\njsonschema-specifications                2023.12.1\r\njupyter                                  1.0.0\r\njupyter_client                           8.6.0\r\njupyter-console                          6.6.3\r\njupyter_core                             5.7.1\r\njupyter-events                           0.9.0\r\njupyter-lsp                              2.2.4\r\njupyter_server                           2.13.0\r\njupyter_server_terminals                 0.5.2\r\njupyterlab                               4.1.4\r\njupyterlab_pygments                      0.3.0\r\njupyterlab_server                        2.25.4\r\njupyterlab_widgets                       3.0.10\r\nkeras                                    3.0.5\r\nkeyring                                  10.1\r\nkiwisolver                               1.4.5\r\nkombu                                    5.3.5\r\nkubernetes                               29.0.0\r\nkubernetes_asyncio                       29.0.0\r\nlangchain                                0.1.12\r\nlangchain-community                      0.0.28\r\nlangchain-core                           0.1.31\r\nlangchain-text-splitters                 0.0.1\r\nlangsmith                                0.1.25\r\nlazy-object-proxy                        1.10.0\r\nlibclang                                 18.1.1\r\nlibmambapy                               1.5.3\r\nlimits                                   3.9.0\r\nlinkify-it-py                            2.0.3\r\nlockfile                                 0.12.2\r\nlooker-sdk                               24.0.0\r\nlxml                                     5.1.0\r\nMako                                     1.3.2\r\nMarkdown                                 3.6\r\nmarkdown-it-py                           3.0.0\r\nMarkupSafe                               2.1.5\r\nmarshmallow                              3.21.1\r\nmarshmallow-enum                         1.5.1\r\nmarshmallow-oneofschema                  3.1.1\r\nmarshmallow-sqlalchemy                   0.26.1\r\nmatplotlib                               3.8.3\r\nmatplotlib-inline                        0.1.6\r\nmccabe                                   0.7.0\r\nmdit-py-plugins                          0.4.0\r\nmdurl                                    0.1.2\r\nmenuinst                                 2.0.1\r\nmistune                                  3.0.2\r\nml-dtypes                                0.3.2\r\nmore-itertools                           10.2.0\r\nmpld3                                    0.5.10\r\nmpmath                                   1.3.0\r\nmsgpack                                  1.0.7\r\nmultidict                                6.0.5\r\nmypy                                     1.9.0\r\nmypy-extensions                          1.0.0\r\nnamex                                    0.0.7\r\nnbclient                                 0.9.0\r\nnbconvert                                7.16.2\r\nnbformat                                 5.9.2\r\nnest-asyncio                             1.6.0\r\nnetworkx                                 3.2.1\r\nnotebook                                 7.1.1\r\nnotebook_shim                            0.2.4\r\nnumpy                                    1.26.4\r\nnvidia-cublas-cu12                       12.1.3.1\r\nnvidia-cuda-cupti-cu12                   12.1.105\r\nnvidia-cuda-nvcc-cu12                    12.3.107\r\nnvidia-cuda-nvrtc-cu12                   12.1.105\r\nnvidia-cuda-runtime-cu12                 12.1.105\r\nnvidia-cudnn-cu12                        8.9.2.26\r\nnvidia-cufft-cu12                        11.0.2.54\r\nnvidia-curand-cu12                       10.3.2.106\r\nnvidia-cusolver-cu12                     11.4.5.107\r\nnvidia-cusparse-cu12                     12.1.0.106\r\nnvidia-nccl-cu12                         2.19.3\r\nnvidia-nvjitlink-cu12                    12.3.101\r\nnvidia-nvtx-cu12                         12.1.105\r\noauthlib                                 3.2.2\r\nobjsize                                  0.7.0\r\nopenai                                   1.14.1\r\nopencv-python                            4.9.0.80\r\nopenpyxl                                 3.1.2\r\nopentelemetry-api                        1.22.0\r\nopentelemetry-exporter-otlp              1.22.0\r\nopentelemetry-exporter-otlp-proto-common 1.22.0\r\nopentelemetry-exporter-otlp-proto-grpc   1.22.0\r\nopentelemetry-exporter-otlp-proto-http   1.22.0\r\nopentelemetry-proto                      1.22.0\r\nopentelemetry-sdk                        1.22.0\r\nopentelemetry-semantic-conventions       0.43b0\r\nopt-einsum                               3.3.0\r\nordered-set                              4.1.0\r\norjson                                   3.9.14\r\noutcome                                  1.3.0.post0\r\noverrides                                7.7.0\r\npackaging                                23.1\r\npandas                                   2.2.0\r\npandas-gbq                               0.21.0\r\npandocfilters                            1.5.1\r\nparamiko                                 3.4.0\r\nparso                                    0.8.3\r\npathspec                                 0.9.0\r\npdfminer.six                             20231228\r\npdfplumber                               0.11.0\r\npendulum                                 2.0.0\r\npexpect                                  4.9.0\r\npillow                                   10.2.0\r\npip                                      24.0\r\nplatformdirs                             3.10.0\r\npluggy                                   1.4.0\r\nply                                      3.11\r\nprison                                   0.2.1\r\nprometheus_client                        0.20.0\r\nprompt-toolkit                           3.0.43\r\nproto-plus                               1.23.0\r\nprotobuf                                 4.25.3\r\npsutil                                   5.9.8\r\npsycopg2-binary                          2.9.9\r\nptyprocess                               0.7.0\r\npure-eval                                0.2.2\r\npyarrow                                  14.0.2\r\npyarrow-hotfix                           0.6\r\npyasn1                                   0.5.1\r\npyasn1-modules                           0.3.0\r\nPyAthena                                 3.3.0\r\npycodestyle                              2.11.1\r\npycosat                                  0.6.6\r\npycparser                                2.21\r\npydantic                                 2.6.4\r\npydantic_core                            2.16.3\r\npydata-google-auth                       1.8.2\r\npydot                                    1.4.2\r\npydub                                    0.25.1\r\npyflakes                                 3.2.0\r\nPyGithub                                 2.2.0\r\nPygments                                 2.17.2\r\npyjsparser                               2.7.1\r\nPyJWT                                    2.8.0\r\npymongo                                  4.6.2\r\nPyNaCl                                   1.5.0\r\npyOpenSSL                                23.2.0\r\npyparsing                                3.1.1\r\npypdfium2                                4.28.0\r\npyperclip                                1.8.2\r\npyRFC3339                                1.1\r\nPySocks                                  1.7.1\r\npytest                                   8.1.1\r\npytest-metadata                          3.1.1\r\npython-daemon                            3.0.1\r\npython-dateutil                          2.9.0.post0\r\npython-dotenv                            1.0.1\r\npython-git                               2018.2.1\r\npython-http-client                       3.3.7\r\npython-json-logger                       2.0.7\r\npython-multipart                         0.0.9\r\npython-nvd3                              0.15.0\r\npython-slugify                           8.0.4\r\npytz                                     2024.1\r\npytzdata                                 2020.1\r\nPyYAML                                   6.0.1\r\npyzmq                                    25.1.2\r\nqtconsole                                5.5.1\r\nQtPy                                     2.4.1\r\nredis                                    5.0.1\r\nredshift-connector                       2.1.0\r\nreferencing                              0.33.0\r\nregex                                    2023.12.25\r\nrequests                                 2.31.0\r\nrequests-oauthlib                        1.3.1\r\nrequests-toolbelt                        1.0.0\r\nrfc3339-validator                        0.1.4\r\nrfc3986-validator                        0.1.1\r\nrich                                     13.7.1\r\nrich-argparse                            1.4.0\r\nrich-click                               1.7.4\r\nrpds-py                                  0.18.0\r\nrsa                                      4.9\r\nruamel.yaml                              0.17.21\r\nruff                                     0.3.2\r\ns3transfer                               0.10.0\r\nscikit-learn                             1.4.1.post1\r\nscipy                                    1.12.0\r\nscramp                                   1.4.4\r\nseaborn                                  0.13.2\r\nSecretStorage                            3.3.3\r\nselenium                                 4.5.0\r\nsemantic-version                         2.10.0\r\nsemver                                   3.0.2\r\nSend2Trash                               1.8.2\r\nsendgrid                                 6.11.0\r\nsentry-sdk                               1.42.0\r\nsetproctitle                             1.3.3\r\nsetuptools                               68.2.2\r\nshapely                                  2.0.3\r\nshellingham                              1.5.4\r\nshortuuid                                1.0.11\r\nsix                                      1.16.0\r\nsmmap                                    5.0.1\r\nsniffio                                  1.3.1\r\nsortedcontainers                         2.4.0\r\nsoupsieve                                2.5\r\nSQLAlchemy                               1.4.52\r\nsqlalchemy-bigquery                      1.9.0\r\nSQLAlchemy-JSONField                     1.0.2\r\nsqlalchemy-redshift                      0.8.14\r\nsqlalchemy-spanner                       1.6.2\r\nSQLAlchemy-Utils                         0.41.1\r\nsqlfluff                                 2.3.5\r\nsqlparse                                 0.4.4\r\nsshtunnel                                0.4.0\r\nstack-data                               0.6.3\r\nstarkbank-ecdsa                          2.2.0\r\nstarlette                                0.36.3\r\nsympy                                    1.12\r\ntabulate                                 0.9.0\r\ntblib                                    3.0.0\r\ntenacity                                 8.2.3\r\ntensorboard                              2.16.2\r\ntensorboard-data-server                  0.7.2\r\ntensorflow                               2.16.1\r\ntensorflow-io-gcs-filesystem             0.36.0\r\ntermcolor                                2.4.0\r\nterminado                                0.18.0\r\ntext-unidecode                           1.3\r\nthreadpoolctl                            3.3.0\r\ntime-machine                             2.14.0\r\ntinycss2                                 1.2.1\r\ntomlkit                                  0.12.0\r\ntoolz                                    0.12.1\r\ntorch                                    2.2.1\r\ntorchaudio                               2.2.1\r\ntorchinfo                                1.8.0\r\ntorchview                                0.2.6\r\ntorchvision                              0.17.1\r\ntornado                                  6.4\r\ntqdm                                     4.65.0\r\ntraitlets                                5.14.1\r\ntrio                                     0.24.0\r\ntrio-websocket                           0.11.1\r\ntriton                                   2.2.0\r\ntruststore                               0.8.0\r\ntyper                                    0.9.0\r\ntypes-python-dateutil                    2.8.19.20240311\r\ntyping_extensions                        4.10.0\r\ntyping-inspect                           0.9.0\r\ntzdata                                   2024.1\r\ntzlocal                                  5.2\r\nuc-micro-py                              1.0.3\r\nunicodecsv                               0.14.1\r\nuniversal_pathlib                        0.2.1\r\nuri-template                             1.3.0\r\nuritemplate                              4.1.1\r\nurllib3                                  2.2.1\r\nuvicorn                                  0.28.0\r\nvine                                     5.1.0\r\nwatchtower                               3.0.1\r\nwcwidth                                  0.2.13\r\nwebcolors                                1.13\r\nwebdriver-manager                        4.0.1\r\nwebencodings                             0.5.1\r\nwebsocket-client                         1.7.0\r\nwebsockets                               11.0.3\r\nWerkzeug                                 3.0.1\r\nwheel                                    0.43.0\r\nwidgetsnbextension                       4.0.10\r\nwrapt                                    1.16.0\r\nwsproto                                  1.2.0\r\nWTForms                                  3.1.2\r\nxgboost                                  2.0.3\r\nyarl                                     1.9.4\r\nzipp                                     3.17.0\r\nzstandard                                0.19.0\r\n```\r\n\r\n\r\n</details>\r\n\r\n\r\n- [x] a detailed description of the bug or problem you are having\r\n- [x] output of `pip list` from the virtual environment you are using\r\n- [x] pytest and operating system versions\r\n    - OS: Ubuntu 22.04 in WSL2\r\n    - Pytest: 8.1.1\r\n- [x] minimal example if possible\r\n",
      "state": "CLOSED",
      "createdAt": "2024-03-20T18:29:11Z",
      "updatedAt": "2024-03-21T02:45:34Z",
      "closedAt": "2024-03-21T02:45:33Z",
      "author": {
        "login": "maycuatroi"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "status: needs information"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 4
      }
    },
    {
      "number": 12143,
      "title": "Header loading text order",
      "body": "I'm trying to customize the test header:\r\n```console\r\n$ pytest\r\n=================================================================== test session starts ===================================================================\r\nplatform linux -- Python 3.10.13, pytest-8.1.1, pluggy-1.4.0\r\nrootdir: /home/ubuntu/pymapdl\r\nconfigfile: pyproject.toml\r\ntestpaths: tests\r\nplugins: cov-4.1.0, anyio-4.3.0, sphinx-0.6.0, pytest_pyvista-0.1.9, rerunfailures-14.0, memprof-0.2.0\r\n```\r\nby modifying this function:\r\n\r\n```py\r\n@pytest.hookimpl(trylast=True)\r\ndef pytest_report_header(config, start_path, startdir):\r\n    return \"Useful reports\"\r\n```\r\nHowever the ``platform linux ...`` get always first, which is annoying, and, in my humble opinion, it is a bug.\r\n```console\r\n$ pytest\r\n=================================================================== test session starts ===================================================================\r\nplatform linux -- Python 3.10.13, pytest-8.1.1, pluggy-1.4.0\r\nUseful reports\r\nrootdir: /home/ubuntu/pymapdl\r\nconfigfile: pyproject.toml\r\ntestpaths: tests\r\nplugins: cov-4.1.0, anyio-4.3.0, sphinx-0.6.0, pytest_pyvista-0.1.9, rerunfailures-14.0, memprof-0.2.0\r\n```\r\n\r\nI'm happy to do a PR on this if this issue feedback is positive.\r\n\r\n",
      "state": "OPEN",
      "createdAt": "2024-03-20T13:15:36Z",
      "updatedAt": "2024-05-13T10:26:17Z",
      "closedAt": null,
      "author": {
        "login": "germa89"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: proposal"
          },
          {
            "name": "topic: reporting"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      }
    },
    {
      "number": 12139,
      "title": "SRP auth via pysrp breaks when added under tests",
      "body": "Given I have this srp auth implementation using pysrp\r\n```\r\n\r\nimport requests\r\nimport hashlib\r\nimport srp\r\nimport sys\r\nimport base64\r\nimport six\r\nimport pytest\r\n\r\n# Ensure we use pysrp mod as we override methods there\r\nsrp._mod = srp._pysrp\r\n\r\n\r\n# Use custom method to get verifier by given salt\r\ndef _create_salted_verification_key(username, password, hash_alg, salt):\r\n    hash_class = srp._pysrp._hash_map[hash_alg]\r\n    N, g = srp._pysrp.get_ng(srp.NG_CUSTOM, _rfc5054_group3072[0], _rfc5054_group3072[1])\r\n    _v = srp._pysrp.long_to_bytes(pow(g, _gen_x(hash_class, salt, username, password), N))\r\n    return _v\r\n\r\n\r\n# Override gen_x to use custom KDF method to generate secret\r\ndef _gen_x(hash_class, salt, username, password):\r\n    x = f'{username}:{password}'.encode()\r\n    if isinstance(salt, int):\r\n        salt = srp._pysrp.long_to_bytes(salt)\r\n    key = hashlib.pbkdf2_hmac('sha512', x, salt, 100_000, 64)\r\n    return srp._pysrp.bytes_to_long(key)\r\n\r\n\r\nsrp._pysrp.gen_x = _gen_x\r\n\r\n\r\n# Override HNxorg to disable padding as we explicitly set _rfc5054_compat=True\r\ndef _HNxorg(hash_class, N, g):\r\n    bin_N = srp._pysrp.long_to_bytes(N)\r\n    bin_g = srp._pysrp.long_to_bytes(g)\r\n    # _rfc5054_compat is True but padding must be 0 here\r\n    # padding = len(bin_N) - len(bin_g) if srp._pysrp._rfc5054_compat else 0\r\n    padding = 0\r\n\r\n    hN = hash_class(bin_N).digest()\r\n    hg = hash_class(b''.join([b'\\0' * padding, bin_g])).digest()\r\n    return six.b(''.join(chr(six.indexbytes(hN, i) ^ six.indexbytes(hg, i)) for i in range(0, len(hN))))\r\n\r\n\r\nsrp._pysrp.HNxorg = _HNxorg\r\n\r\n\r\n#  Test verifier calculation\r\ndef test_verifier_calc() -> int:\r\n    v = _create_salted_verification_key(\r\n        username=_user_id,\r\n        password=_password,\r\n        hash_alg=srp.SHA512,\r\n        salt=_salt,\r\n    )\r\n    print(\r\n        '\\n--------------------\\n',\r\n        'Salt:\\n',\r\n        base64.b64encode(_salt).decode(),\r\n        '\\n--------------------\\n',\r\n        'Verifier:\\n',\r\n        base64.b64encode(v).decode(),\r\n    )\r\n\r\n    if base64.b64encode(v).decode() != _verifier:\r\n        print('\\nUnexpected verifier value\\n')\r\n        return 1\r\n\r\n    print('\\nVerifier is fine!\\n')\r\n    return 0\r\n\r\n\r\ndef test_srp_challenge() -> int:\r\n    # Start ------------------------------------------\r\n    print(\r\n        '\\n------------------\\n',\r\n        '-> srp challange_1',\r\n    )\r\n    resp = requests.post(\r\n        _backendUrl + 'route_challange_1',\r\n        auth=(_auth_user, _auth_token),\r\n        headers={}\r\n\r\n    if not resp.ok:\r\n        print(f'route_challange_1 failed: {resp.status_code} {resp.text}')\r\n        return 1\r\n\r\n    body = resp.json()\r\n    print(\r\n        '\\n------------------\\n',\r\n        '<- route_challange_1\\n',\r\n        body,\r\n    )\r\n\r\n    if body['alg'] != '1232':\r\n        print(f'route_challange_1 unexpected alg: {body['alg']}')\r\n        return 1\r\n\r\n    srp_token = body['srp_token']\r\n    salt = base64.b64decode(body['salt'])\r\n\r\n    hash_alg = srp.SHA512\r\n    u = srp.User(\r\n        username=body['user_id'],\r\n        password=_password,\r\n        hash_alg=hash_alg,\r\n        ng_type=srp.NG_CUSTOM,\r\n        n_hex=_rfc5054_group3072[0],\r\n        g_hex=_rfc5054_group3072[1],\r\n    )\r\n\r\n    # to bypass constructor logic and checks use direct assignments\r\n    u.hash_class = srp._pysrp._hash_map[hash_alg]\r\n    u.N, u.g = srp._pysrp.get_ng(srp.NG_CUSTOM, _rfc5054_group3072[0], _rfc5054_group3072[1])\r\n    u.a = srp._pysrp.get_random_of_length(_rfc5054_group3072[2])\r\n    u.A = pow(u.g, u.a, u.N)\r\n    u.k = srp._pysrp.H(u.hash_class, u.N, u.g, width=len(srp._pysrp.long_to_bytes(u.N)))\r\n\r\n    # Exchange ------------------------------------------\r\n    _, A = u.start_authentication()\r\n    client_a = base64.b64encode(A).decode()\r\n    print(\r\n        '\\n------------------\\n',\r\n        '-> route_challange_2\\n',\r\n        f'client_a={client_a}',\r\n    )\r\n    resp = requests.post(\r\n        _backendUrl + 'route_challange_2',\r\n        auth=(_auth_user, _auth_token),\r\n        headers = {}\r\n    )\r\n\r\n    if not resp.ok:\r\n        print(f'route_challange_2 failed: {resp.status_code} {resp.text}')\r\n        return 1\r\n\r\n    body = resp.json()\r\n    print(\r\n        '\\n------------------\\n',\r\n        '<- route_challange_2\\n',\r\n        body,\r\n    )\r\n\r\n    B = base64.b64decode(body['server_b'])\r\n    M = u.process_challenge(salt, B)\r\n\r\n    if M is None:\r\n        print(f'route_challange_2 verification check failed no M generated')\r\n        return 1\r\n\r\n    # Complete ------------------------------------------\r\n    client_proof = base64.b64encode(M).decode()\r\n    print(\r\n        '\\n------------------\\n',\r\n        '-> srp_chall_3_route\\n',\r\n        f'client_proof={client_proof}',\r\n    )\r\n    resp = requests.post(\r\n        _backendUrl + 'srp_chall_3_route',\r\n        auth=(_auth_user, _auth_token),\r\n        headers={}\r\n    )\r\n\r\n    if not resp.ok:\r\n        print(f'srp_chall_3_route failed: {resp.status_code} {resp.text}')\r\n        return 1\r\n\r\n    body = resp.json()\r\n    print(\r\n        '\\n------------------\\n',\r\n        '<- srp_chall_3_route\\n',\r\n        body,\r\n    )\r\n\r\n    u.verify_session(base64.b64decode(body['server_proof']))\r\n    if not u.authenticated():\r\n        print('\\nAutentication failed!\\n')\r\n        return 1\r\n\r\n    print(f'\\nAutentication succeed!\\n')\r\n    return 0\r\n\r\n\r\ndef main() -> int:\r\n    # Enable rfc5054 (!!!!)\r\n    srp.rfc5054_enable()\r\n\r\n    r = test_verifier_calc()\r\n    if r != 0:\r\n        return r\r\n\r\n    r = test_srp_challenge()\r\n    if r != 0:\r\n        return r\r\n\r\n    return 0\r\n\r\n\r\nif __name__ == '__main__':\r\n    sys.exit(main())\r\n```\r\n\r\n\r\n    \r\nProblem is when it is under test_, and pytest is executing the said tests, it causes the auth to fail, at challange part, basically either client proof or M is affected, not sure why it is happaning, simply removing test_ before test_verifier_calc and test_srp_challenge result in successful auth, else failed auth at validating client proof\r\n\r\nRequirements:\r\n```\r\ncertifi==2024.2.2\r\ncharset-normalizer==3.3.2\r\nidna==3.6\r\nrequests==2.31.0\r\nsix==1.16.0\r\nsrp==1.0.20\r\nurllib3==2.2.1\r\n```\r\n\r\n\r\nUnfortunately I cannot provide api routes and auth creds and such bcs of security concerns",
      "state": "CLOSED",
      "createdAt": "2024-03-19T15:21:00Z",
      "updatedAt": "2024-06-28T18:55:35Z",
      "closedAt": "2024-04-14T02:15:50Z",
      "author": {
        "login": "itsMGA"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: question"
          },
          {
            "name": "status: needs information"
          },
          {
            "name": "stale"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 12135,
      "title": "Finalizer re-registered in parent fixture even when the value of the fixture is cached",
      "body": "When getting the value of a fixture, it will always add its finalizer to parent fixtures, regardless of if it's cached or not. When we have several subfixtures, this leads to unpredictable ordering between them on when they're torn down (if triggered by the parent fixture being torn down). It is also an obvious inefficiency, where a long-lived parent fixture could rack up tons of irrelevant fixtures.\r\n\r\nAs found in discussion of #11833, which resolved a similar issue. Also related to #4871\r\n\r\n### repro\r\n```python\r\nimport pytest\r\n\r\n\r\n@pytest.fixture(scope=\"module\")\r\ndef fixture_1(request):\r\n    ...\r\n\r\n@pytest.fixture(scope=\"module\")\r\ndef fixture_2(fixture_1):\r\n    print(\"setup 2\")\r\n    yield\r\n    print(\"teardown 2\")\r\n\r\n@pytest.fixture(scope=\"module\")\r\ndef fixture_3(fixture_1):\r\n    print(\"setup 3\")\r\n    yield\r\n    print(\"teardown 3\")\r\n\r\ndef test_1(fixture_2):\r\n    ...\r\ndef test_2(fixture_3):\r\n    ...\r\n\r\n# This will add a second copy of fixture_2's finalizer in the parent fixture, causing it to\r\n# be torn down before fixture 3.\r\ndef test_3(fixture_2):\r\n    ...\r\n\r\n\r\n# Trigger finalization of fixture_1, otherwise the cleanup would sequence 3&2 before 1 as normal.\r\n@pytest.mark.parametrize(\"fixture_1\", [None], indirect=[\"fixture_1\"])\r\ndef test_4(fixture_1):\r\n    ...\r\n```\r\n### output\r\n```\r\nsetup 2\r\nsetup 3\r\nteardown 2\r\nteardown 3\r\n```\r\nbut if we remove `test_3` we get 2-3-3-2.\r\n\r\n\r\n\r\n### suggested fix\r\nHere's the relevant method:\r\nhttps://github.com/pytest-dev/pytest/blob/2607fe8b4706fa701925db50f7892ddff6ed2928/src/_pytest/fixtures.py#L1037-L1079\r\n\r\nI thought this would be a trivial fix, merely moving the code that adds finalizers to parent fixtures (L1041 to L1044) to after the check on whether the value is cached (L1062). But this broke tests in very weird ways... and I think that's the same problem as noted in https://github.com/pytest-dev/pytest/issues/4871#issuecomment-2002622725 - see \"Possible solution - make the cache key not match\". Current behaviour requires that the call to `request._get_active_fixturedef(argname)` happens before checking if the value is cached, to let the parent fixture check if it has been differently parametrized -> if so tear itself down -> tear us down -> invalidate our cache.\r\n\r\nOnce I figured out that the finalize-adding code had dual purposes, it was fairly easy to split it and achieve the wanted behavior without breaking anything:\r\n\r\n```python\r\n    def execute(self, request: SubRequest) -> FixtureValue:\r\n        # Ensure arguments (parent fixtures) are loaded. If their cache has been\r\n        # invalidated they will also finalize us and invalidate our cache.\r\n        # If/when parent fixture parametrization is included in our cache key\r\n        # this can be moved after checking our cache key.\r\n        parent_fixtures_to_add_finalizer = []\r\n        for argname in self.argnames:\r\n            fixturedef = request._get_active_fixturedef(argname)\r\n            if not isinstance(fixturedef, PseudoFixtureDef):\r\n                # save fixture as one to add our finalizer to, if we're not cached\r\n                # resolves #12135\r\n                parent_fixtures_to_add_finalizer.append(fixturedef)\r\n\r\n        my_cache_key = self.cache_key(request)\r\n        if self.cached_result is not None:\r\n            ...\r\n\r\n        finalizer = functools.partial(self.finish, request=request)\r\n        # add finalizer to parent fixtures\r\n        for parent_fixture in parent_fixtures_to_add_finalizer:\r\n            parent_fixture.addfinalizer(finalizer)\r\n```\r\n\r\n### possible bad outcomes\r\n... I have a very hard time coming up with any downside of implementing this. Will write a PR once I've rewritten the repro as a proper regression test.",
      "state": "CLOSED",
      "createdAt": "2024-03-18T12:17:34Z",
      "updatedAt": "2024-03-31T12:02:10Z",
      "closedAt": "2024-03-31T12:02:10Z",
      "author": {
        "login": "jakkdl"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: bug"
          },
          {
            "name": "topic: fixtures"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 12134,
      "title": "Teardown order mismatch with parametrized parent fixtures and scopes",
      "body": "Found during discussion of #11833 (I have reduced the size of the repro since I posted it in https://github.com/pytest-dev/pytest/pull/11833#issuecomment-1999818465)\r\n```python\r\nimport pytest\r\n\r\n@pytest.fixture(scope=\"module\", params=[\"a\", \"b\"])\r\ndef fixture_1(request):\r\n    print(\"setup 1\", request.param)\r\n    yield\r\n    print(\"\\nteardown 1\", request.param)\r\n\r\n@pytest.fixture(scope=\"module\")\r\ndef fixture_2():\r\n    print(\"setup 2\")\r\n    yield\r\n    print(\"teardown 2\")\r\n\r\ndef test_1(fixture_1, fixture_2): ...\r\n```\r\n\r\noutput:\r\n```py\r\nsetup 1  a\r\nsetup 2\r\n.\r\nteardown 1 a\r\nsetup 1  b\r\n.\r\nteardown 1 b\r\nteardown 2 # 2 is torn down last, perhaps surprisingly\r\n```\r\n\r\nIf we reverse the order of the fixture parameters to `test_1` we get an ordering where the stack is fully respected:\r\n```py\r\ndef test_1(fixture_2, fixture_1): ...\r\n```\r\n```\r\nsetup 2\r\nsetup 1 a\r\n.\r\nteardown 1 a\r\nsetup 1 b\r\n.\r\nteardown 1 b\r\nteardown 2\r\n```\r\n\r\nWhat's happening in the first example is relatively straightforward -\r\n1. `test_1` requests `fixture_2`, which is set up and its finalizer is queued.\r\n2. `test_1` requests `fixture_1[a]`, which is set up and its finalizer is queued.\r\n3. Test runs\r\n4. Because `fixture_1` is parametrized, we run the test again.\r\n5. `test_1` requests `fixture_2` - and since it has module scope the value is cached, so no setup is run (and since #11833 no finalizer is queued, not that it would make any difference here)\r\n6. `test_1` requests `fixture_1[b]`, it has a different cache key, so `fixture_1[a]` is torn down, and `fixture_1[b]` is setup with its finalizer queued.\r\n7. Test finishes, and module is done, so we run the finalizers in reverse order they were added - which means `fixture_1[b]` first, then `fixture_2`, (and finally `fixture_1[a]` is attempted as its still on the stack, but thats also irrelevant here).\r\n\r\n\r\nI'm not even sure this is a bug per se, but I could at least see it being surprising to users as the documentation does not imply that the stack order is ever disrespected:\r\n\r\nhttps://docs.pytest.org/en/8.0.x/how-to/fixtures.html#note-on-finalizer-order\r\n> Finalizers are executed in a first-in-last-out order. For yield fixtures, the first teardown code to run is from the right-most fixture, i.e. the last test parameter.\r\n\r\nhttps://docs.pytest.org/en/8.0.x/how-to/fixtures.html#yield-fixtures-recommended\r\n> Once the test is finished, pytest will go back down the list of fixtures, but in the reverse order, taking each one that yielded, and running the code inside it that was after the yield statement.\r\n\r\nPossible fixes:\r\n1. When interpreting the fixture parameters, magically reorder fixtures such that stack teardown ordering is not broken - in our example turning the first example into the second.\r\n   * This would probably be quite disruptive, and sounds very hard to code, so I don't think it's an option.\r\n2. Emit a warning when teardown ordering is possibly violated. Not super trivial to code, but when it's only controlling whether a warning is shown or not it needn't be perfect.\r\n3. Mention in the documentation that teardown order is not guaranteed to be the reverse, in the case of larger-scoped fixtures + parametrization.\r\n4. Also tear down `fixture_2` when `fixture_1[a]` is torn down.\r\n\r\nI don't think this is a huge problem though, as I think in most practical cases an end user can work around this issue by changing fixture order, make `fixture_2` depend on `fixture_1`, change scoping, etc, which makes me favor option 3 and possibly also 2.\r\n\r\nRelated to #4871",
      "state": "OPEN",
      "createdAt": "2024-03-18T10:31:42Z",
      "updatedAt": "2024-04-01T10:10:16Z",
      "closedAt": null,
      "author": {
        "login": "jakkdl"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "topic: fixtures"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 7
      }
    },
    {
      "number": 12125,
      "title": "I try to run the test and it gives me an error and Test ignored",
      "body": "\r\nI have a framework with selenium and python (using pycharm), the issue was that it worked well for me, and I had to format the PC, and reinstall pycharm, python and everything necessary. And when I want to run the different projects again, it now gives me the following error and none of my tests work in any way, neither using the commands nor the interface. I have already changed all kinds of settings and I have not been able to find the error. Could you tell me if there is a solution, or if you know the problem?\r\nPython: 3.8.0\r\npytest 4.1.1\r\n![BaseClass](https://github.com/pytest-dev/pytest/assets/86359451/266fac31-7820-452d-9676-9d22303bca59)\r\n![conftestFile](https://github.com/pytest-dev/pytest/assets/86359451/a2688947-d085-49b4-a1fe-3ff1aa8c3469)\r\n![error on the logs](https://github.com/pytest-dev/pytest/assets/86359451/0891d58a-c00a-421c-b82e-99097d1c53fa)\r\n![python interpreter configuration](https://github.com/pytest-dev/pytest/assets/86359451/e1039d12-52a1-4dd1-aa41-d6d9ea053503)\r\n![structure of framework](https://github.com/pytest-dev/pytest/assets/86359451/690de5ec-d27b-4a19-8f9c-c7aef3da216d)\r\n![test](https://github.com/pytest-dev/pytest/assets/86359451/899ef73f-638f-4475-99d1-1f511cc94c63)\r\n![BaseClass](https://github.com/pytest-dev/pytest/assets/86359451/8c2d2daf-9028-45c6-bdaa-75e4dcd4ded1)\r\n![conftestFile](https://github.com/pytest-dev/pytest/assets/86359451/85500bb3-e1bd-4891-8ef5-9ee26db43742)\r\n![error on the logs](https://github.com/pytest-dev/pytest/assets/86359451/d12ffa9b-3782-40c7-80bd-60fa8ae4d280)\r\n![python interpreter configuration](https://github.com/pytest-dev/pytest/assets/86359451/8744fb4a-7f74-448f-a1f8-3282e9a8d4ca)\r\n![structure of framework](https://github.com/pytest-dev/pytest/assets/86359451/514833d1-37c9-446c-842b-69788f098b20)\r\n![test](https://github.com/pytest-dev/pytest/assets/86359451/aa00ab67-4beb-4274-b6c1-474ba48a4cc8)\r\n",
      "state": "CLOSED",
      "createdAt": "2024-03-16T22:18:22Z",
      "updatedAt": "2024-03-17T09:37:54Z",
      "closedAt": "2024-03-17T09:37:54Z",
      "author": {
        "login": "gonza-mol"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      }
    },
    {
      "number": 12123,
      "title": "\"Import file mismatch\" at test collection time",
      "body": "I tried to upgrade pytest from 8.0.2 to latest 8.1.1 and I got this error:\r\n\r\n```\r\n___________ ERROR collecting tests/conftest.py _____________________\r\nimport file mismatch:\r\nimported module 'conftest' has this __file__ attribute:\r\n  .../tests/bio/conftest.py\r\nwhich is not the same as the test file we want to collect:\r\n  .../tests/conftest.py\r\nHINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules\r\n```\r\n\r\nNeither removing all `__pycache__` subdirs, nor playing with the `--import-mode` option fixed it.\r\n\r\nThe top level `tests` directory contains this structure:\r\n```\r\n$ tree -d tests/\r\ntests/\r\n\u251c\u2500\u2500 __pycache__\r\n\u251c\u2500\u2500 bio\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 __pycache__\r\n\u251c\u2500\u2500 models\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 __pycache__\r\n\u251c\u2500\u2500 scr\r\n\u2514\u2500\u2500 server\r\n    \u2514\u2500\u2500 __pycache__\r\n```\r\n\r\nand there are different `conftest.py` modules:\r\n\r\n```\r\n$ find tests/ -name 'conftest.py'\r\ntests/conftest.py\r\ntests/bio/conftest.py\r\ntests/server/conftest.py\r\n```\r\n\r\nGiven that I could not find a related breaking change alert, I'd say that the _\"use a unique basename for your test file modules\"_ hint does not apply to `conftest.py`, right?\r\n\r\nThanks&bye.\r\n\r\n### Environment\r\n\r\nI'm using Python 3.11.8 on a Debian `sid`, with the following packages in the virtual environment (**after** downgrading `pytest` to the working `8.0.2`):\r\n\r\n```\r\n$ pip list\r\nPackage                         Version  Editable project location\r\n------------------------------- -------- -------------------------\r\nalabaster                       0.7.16\r\nalembic                         1.13.1\r\nattrs                           23.2.0\r\nBabel                           2.14.0\r\nbeautifulsoup4                  4.12.3\r\nbleach                          6.1.0\r\ncalmjs.parse                    1.3.1\r\ncertifi                         2024.2.2\r\ncffi                            1.16.0\r\nchardet                         5.2.0\r\ncharset-normalizer              3.3.2\r\ncommonmark                      0.9.1\r\ncoverage                        7.4.4\r\ncryptography                    42.0.5\r\ndocutils                        0.20.1\r\nflake8                          7.0.0\r\ngreenlet                        3.0.3\r\nhupper                          1.12.1\r\nidna                            3.6\r\nimagesize                       1.4.1\r\nimportlib_metadata              7.0.2\r\niniconfig                       2.0.0\r\nitsdangerous                    2.1.2\r\njaraco.classes                  3.2.3\r\njeepney                         0.8.0\r\nJinja2                          3.1.3\r\nkeyring                         24.3.1\r\nMako                            1.3.2\r\nmarkdown-it-py                  2.2.0\r\nMarkupSafe                      2.1.5\r\nmccabe                          0.7.0\r\nmdurl                           0.1.2\r\nmetapensiero.extjs.desktop      2.4\r\nmetapensiero.sqlalchemy.dbloady 3.0.dev3\r\nmetapensiero.sqlalchemy.proxy   6.0.dev5\r\nmetapensiero.tool.bump-version  1.3\r\nmore-itertools                  10.2.0\r\nmypy                            1.6.1\r\nmypy-extensions                 1.0.0\r\nnh3                             0.2.14\r\npackaging                       24.0\r\nPasteDeploy                     3.1.0\r\npillow                          10.2.0\r\npip                             24.0\r\npkginfo                         1.10.0\r\nplaster                         1.1.2\r\nplaster-pastedeploy             1.0.1\r\npluggy                          1.4.0\r\nply                             3.11\r\nprogressbar2                    4.4.2\r\npycodestyle                     2.11.1\r\npycountry                       23.12.11\r\npycparser                       2.21\r\npyflakes                        3.2.0\r\nPygments                        2.17.2\r\nPyNaCl                          1.5.0\r\npyparsing                       3.1.2\r\npyramid                         2.0.2\r\npyramid-mailer                  0.15.1\r\npyramid-mako                    1.1.0\r\npyramid-tm                      2.5\r\npyRXP                           3.0.1\r\npytest                          8.0.2\r\npytest-cov                      4.1.0\r\npython-rapidjson                1.16\r\npython-utils                    3.8.2\r\npytz                            2024.1\r\nrcssmin                         1.1.2\r\nreadme_renderer                 43.0\r\nreportlab                       4.1.0\r\nrepoze.sendmail                 4.4.1\r\nrequests                        2.31.0\r\nrequests-toolbelt               1.0.0\r\nrfc3986                         2.0.0\r\nrich                            13.7.1\r\nrjsmin                          1.2.2\r\nruamel.yaml                     0.18.6\r\nruamel.yaml.clib                0.2.8\r\nruff                            0.1.1\r\nSecretStorage                   3.3.3\r\nsetuptools                      69.2.0\r\nsix                             1.16.0\r\nsnowballstemmer                 2.2.0\r\nSoL                             4.21     /home/lele/wip/sol5/src\r\nsoupsieve                       2.5\r\nSphinx                          7.2.6\r\nsphinxcontrib-applehelp         1.0.8\r\nsphinxcontrib-devhelp           1.0.6\r\nsphinxcontrib-htmlhelp          2.0.5\r\nsphinxcontrib-jsmath            1.0.1\r\nsphinxcontrib-qthelp            1.0.7\r\nsphinxcontrib-serializinghtml   1.1.10\r\nSQLAlchemy                      2.0.28\r\ntqdm                            4.66.2\r\ntransaction                     4.0\r\ntranslationstring               1.4\r\ntwine                           5.0.0\r\ntyping_extensions               4.10.0\r\nurllib3                         2.2.1\r\nvenusian                        3.1.0\r\nVersio                          0.5.0\r\nwaitress                        3.0.0\r\nwcwidth                         0.2.13\r\nwebencodings                    0.5.1\r\nWebOb                           1.8.7\r\nWebTest                         3.0.0\r\nwheel                           0.43.0\r\nXlsxWriter                      3.2.0\r\nzipp                            3.18.1\r\nzope.deprecation                5.0\r\nzope.interface                  6.2\r\nzope.sqlalchemy                 3.1\r\n```\r\n",
      "state": "CLOSED",
      "createdAt": "2024-03-16T11:48:19Z",
      "updatedAt": "2025-03-13T22:55:23Z",
      "closedAt": "2024-07-29T12:19:28Z",
      "author": {
        "login": "lelit"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "topic: collection"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 22
      }
    },
    {
      "number": 12120,
      "title": "Pytest crashes if there is a subdirectory it does not have read access to",
      "body": "<!--\r\nThanks for submitting an issue!\r\n\r\nQuick check-list while reporting bugs:\r\n-->\r\n\r\nPytest crashes if there is a subdirectory it does not have read access to.\r\n\r\nFor example:\r\n\r\n```bash\r\nrm -rf .venv chaff tests\r\nvirtualenv -p python3.10 .venv\r\nsource .venv/bin/activate\r\npip install pytest\r\npip list\r\nmkdir chaff\r\nmkdir tests\r\ncat <<EOF > tests/test_something.py\r\ndef test_something() -> None:\r\n    pass\r\nEOF\r\npytest tests\r\nchmod a-rwx chaff\r\npytest tests\r\n```\r\n\r\nyields:\r\n\r\n```\r\ncreated virtual environment CPython3.10.12.final.0-64 in 70ms\r\n  creator CPython3Posix(dest=/home/jn/src/pytesttest/.venv, clear=False, no_vcs_ignore=False, global=False)\r\n  seeder FromAppData(download=False, pip=bundle, setuptools=bundle, wheel=bundle, via=copy, app_data_dir=/home/jn/.local/share/virtualenv)\r\n    added seed packages: pip==22.0.2, setuptools==59.6.0, wheel==0.37.1\r\n  activators BashActivator,CShellActivator,FishActivator,NushellActivator,PowerShellActivator,PythonActivator\r\n\r\n<snip pip installation stuff...>\r\n\r\nInstalling collected packages: tomli, pluggy, packaging, iniconfig, exceptiongroup, pytest\r\nSuccessfully installed exceptiongroup-1.2.0 iniconfig-2.0.0 packaging-24.0 pluggy-1.4.0 pytest-8.1.1 tomli-2.0.1\r\n\r\nPackage        Version\r\n-------------- -------\r\nexceptiongroup 1.2.0\r\niniconfig      2.0.0\r\npackaging      24.0\r\npip            22.0.2\r\npluggy         1.4.0\r\npytest         8.1.1\r\nsetuptools     59.6.0\r\ntomli          2.0.1\r\nwheel          0.37.1\r\n\r\n=================================================================================================================== test session starts ====================================================================================================================\r\nplatform linux -- Python 3.10.12, pytest-8.1.1, pluggy-1.4.0 -- /home/jn/src/pytesttest/.venv/bin/python\r\ncachedir: .pytest_cache\r\nrootdir: /home/jn/src/pytesttest\r\ncollected 1 item\r\n\r\ntests/test_something.py::test_something PASSED\r\n\r\n==================================================================================================================== 1 passed in 0.00s =====================================================================================================================\r\n\r\n=================================================================================================================== test session starts ====================================================================================================================\r\nplatform linux -- Python 3.10.12, pytest-8.1.1, pluggy-1.4.0 -- /home/jn/src/pytesttest/.venv/bin/python\r\ncachedir: .pytest_cache\r\nrootdir: /home/jn/src/pytesttest\r\ncollected 0 items / 1 error\r\n\r\n========================================================================================================================== ERRORS ==========================================================================================================================\r\n____________________________________________________________________________________________________________________ ERROR collecting . ____________________________________________________________________________________________________________________\r\n.venv/lib/python3.10/site-packages/pluggy/_hooks.py:501: in __call__\r\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\r\n.venv/lib/python3.10/site-packages/pluggy/_manager.py:119: in _hookexec\r\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\r\n.venv/lib/python3.10/site-packages/_pytest/python.py:212: in pytest_collect_directory\r\n    if pkginit.is_file():\r\n/usr/lib/python3.10/pathlib.py:1322: in is_file\r\n    return S_ISREG(self.stat().st_mode)\r\n/usr/lib/python3.10/pathlib.py:1097: in stat\r\n    return self._accessor.stat(self, follow_symlinks=follow_symlinks)\r\nE   PermissionError: [Errno 13] Permission denied: '/home/jn/src/pytesttest/chaff/__init__.py'\r\n================================================================================================================= short test summary info ==================================================================================================================\r\nERROR . - PermissionError: [Errno 13] Permission denied: '/home/jn/src/pytesttest/chaff/__init__.py'\r\n===================================================================================================================== 1 error in 0.04s =====================================================================================================================\r\nERROR: found no collectors for /home/jn/src/pytesttest/tests\r\n```\r\n\r\nI do not believe pytest should be this sensitive to what other subdirectories there might exist.\r\n\r\nThis is run under Ubuntu 22.04.3 LTS under WSL.\r\n\r\n- [x] a detailed description of the bug or problem you are having\r\n- [x] output of `pip list` from the virtual environment you are using\r\n- [x] pytest and operating system versions\r\n- [x] minimal example if possible\r\n",
      "state": "CLOSED",
      "createdAt": "2024-03-15T10:13:25Z",
      "updatedAt": "2024-05-13T17:32:24Z",
      "closedAt": "2024-05-13T17:32:24Z",
      "author": {
        "login": "jesnie"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "topic: collection"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 6
      }
    },
    {
      "number": 12117,
      "title": "AttributeError: 'CollectReport' object has no attribute 'duration' ",
      "body": "When I triggered pytest.skip and allow_module_level=True, like\r\n\r\npytest.skip(\"Skipping this test, probably because the device does not support it. \", allow_module_level=True),\r\n\r\nhit this Traceback:\r\n```\r\ncmd: /root/.local/bin/pytest -srA enable-disable-vf.py\r\n                out: /root/.local/lib/python3.9/site-packages/_pytest/main.py:306: PluggyTeardownRaisedWarning: A plugin raised an exception during an old-style hookwrapper teardown.\r\n                out: Plugin: terminalreporter, Hook: pytest_sessionfinish\r\n                out: AttributeError: 'CollectReport' object has no attribute 'duration'\r\n                out: For more information see https://pluggy.readthedocs.io/en/stable/api_reference.html#pluggy.PluggyTeardownRaisedWarning\r\n                out:   config.hook.pytest_sessionfinish(\r\n                out: ============================= test session starts ==============================\r\n                out: platform linux -- Python 3.9.18, pytest-7.4.3, pluggy-1.4.0\r\n                out: rootdir: /var/tmp/tmt/run-107/plans/rdma/sriov/sriov/discover/sriov-test-suite/tests/tests\r\n                out: configfile: pytest.ini\r\n                out: plugins: testinfra-9.0.0, variables-3.1.0\r\n                out: {'ports': [PosixPath('/sys/class/infiniband/mlx5_0/ports/1'), PosixPath('/sys/class/infiniband/mlx5_0/ports/2')], 'ibdev': 'mlx5_0', 'path': PosixPath('/sys/class/infiniband/mlx5_0'), 'uevent': 'NAME=mlx5_0', 'node_guid': 'f452:1403:000e:4aa0', 'fw_ver': '10.12.1100', 'reg_pages': '0', 'sys_image_guid': 'f452:1403:000e:4aa0', 'fw_pages': '68833', 'hca_type': 'MT4113', 'board_id': 'MT_1210110019', 'hw_rev': '0', 'node_type': '1: CA', 'node_desc': 'rdma05 mlx5_0', 'ports_path': PosixPath('/sys/class/infiniband/mlx5_0/ports'), 'port_numbers': ['1', '2'], 'device_path': PosixPath('/sys/devices/pci0000:00/0000:00:03.0/0000:04:00.0'), 'net_path': PosixPath('/sys/devices/pci0000:00/0000:00:03.0/0000:04:00.0/net'), 'is_sriov_capable': True}\r\n                out: True\r\n                out: collected 0 items / 1 skipped\r\n                out: \r\n                out: =========================== short test summary info ============================\r\n                out: SKIPPED [1] enable-disable-vf.py:13: Skipping sriov tests, probably because the device does not support sriov.\r\n                out: Traceback (most recent call last):\r\n                out:   File \"/root/.local/bin/pytest\", line 8, in <module>\r\n                out:     sys.exit(console_main())\r\n                out:   File \"/root/.local/lib/python3.9/site-packages/_pytest/config/__init__.py\", line 192, in console_main\r\n                out:     code = main()\r\n                out:   File \"/root/.local/lib/python3.9/site-packages/_pytest/config/__init__.py\", line 169, in main\r\n                out:     ret: Union[ExitCode, int] = config.hook.pytest_cmdline_main(\r\n                out:   File \"/usr/local/lib/python3.9/site-packages/pluggy/_hooks.py\", line 501, in __call__\r\n                out:     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\r\n                out:   File \"/usr/local/lib/python3.9/site-packages/pluggy/_manager.py\", line 119, in _hookexec\r\n                out:     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\r\n                out:   File \"/usr/local/lib/python3.9/site-packages/pluggy/_callers.py\", line 138, in _multicall\r\n                out:     raise exception.with_traceback(exception.__traceback__)\r\n                out:   File \"/usr/local/lib/python3.9/site-packages/pluggy/_callers.py\", line 102, in _multicall\r\n                out:     res = hook_impl.function(*args)\r\n                out:   File \"/root/.local/lib/python3.9/site-packages/_pytest/main.py\", line 318, in pytest_cmdline_main\r\n                out:     return wrap_session(config, _main)\r\n                out:   File \"/root/.local/lib/python3.9/site-packages/_pytest/main.py\", line 306, in wrap_session\r\n                out:     config.hook.pytest_sessionfinish(\r\n                out:   File \"/usr/local/lib/python3.9/site-packages/pluggy/_hooks.py\", line 501, in __call__\r\n                out:     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\r\n                out:   File \"/usr/local/lib/python3.9/site-packages/pluggy/_manager.py\", line 119, in _hookexec\r\n                out:     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\r\n                out:   File \"/usr/local/lib/python3.9/site-packages/pluggy/_callers.py\", line 155, in _multicall\r\n                out:     teardown[0].send(outcome)\r\n                out:   File \"/root/.local/lib/python3.9/site-packages/_pytest/terminal.py\", line 867, in pytest_sessionfinish\r\n                out:     self.config.hook.pytest_terminal_summary(\r\n                out:   File \"/usr/local/lib/python3.9/site-packages/pluggy/_hooks.py\", line 501, in __call__\r\n                out:     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\r\n                out:   File \"/usr/local/lib/python3.9/site-packages/pluggy/_manager.py\", line 119, in _hookexec\r\n                out:     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\r\n                out:   File \"/usr/local/lib/python3.9/site-packages/pluggy/_callers.py\", line 181, in _multicall\r\n                out:     return outcome.get_result()\r\n                out:   File \"/usr/local/lib/python3.9/site-packages/pluggy/_result.py\", line 99, in get_result\r\n                out:     raise exc.with_traceback(exc.__traceback__)\r\n                out:   File \"/usr/local/lib/python3.9/site-packages/pluggy/_callers.py\", line 102, in _multicall\r\n                out:     res = hook_impl.function(*args)\r\n                out:   File \"/var/tmp/tmt/run-107/plans/rdma/sriov/sriov/discover/sriov-test-suite/tests/tests/conftest.py\", line 56, in pytest_terminal_summary\r\n                out:     duration = time.strftime('%H:%M:%S', time.gmtime(report.duration))\r\n                out: AttributeError: 'CollectReport' object has no attribute 'duration'\r\n```\r\n\r\nDoes not see this issue when using @pytest.mark.skipif decorator to skip individual test cases.\r\n\r\n```\r\n$ pip list\r\nPackage              Version\r\n-------------------- -----------------------------\r\nargcomplete          1.12.0\r\nchardet              4.0.0\r\nclick                8.1.7\r\nconfigobj            5.0.8\r\ndbus-python          1.2.18\r\ndecorator            4.4.2\r\ndistro               1.5.0\r\nexceptiongroup       1.2.0\r\nfile-magic           0.4.0\r\ngpg                  1.15.1\r\nidna                 2.10\r\niniconfig            2.0.0\r\niniparse             0.4\r\niotop                0.6\r\nlibcomps             0.1.18\r\nlxml                 4.6.5\r\nnftables             0.1\r\npackaging            24.0\r\npip                  21.2.3\r\npipx                 1.4.3\r\nplatformdirs         4.2.0\r\npluggy               1.4.0\r\nPyGObject            3.40.1\r\npyinotify            0.9.6\r\nPySocks              1.7.1\r\npytest               8.1.1\r\npytest-testinfra     10.1.0\r\npython-dateutil      2.8.1\r\nPyYAML               5.4.1\r\nrequests             2.25.1\r\nrpm                  4.16.1.3\r\nselinux              3.5\r\nsepolicy             3.5\r\nsetools              4.4.3\r\nsetuptools           53.0.0\r\nsix                  1.16.0\r\nsts-libs             0.1.dev396+g231115d.d20240314\r\nsubscription-manager 1.29.38\r\nsystemd-python       234\r\ntomli                2.0.1\r\nurllib3              1.26.5\r\nuserpath             1.9.2\r\n```\r\n```\r\n$ pip list | grep pytest\r\npytest               8.1.1\r\npytest-testinfra     10.1.0\r\n\r\non Red Hat Enterprise Linux release 9\r\n```\r\n<!--\r\nThanks for submitting an issue!\r\n\r\nQuick check-list while reporting bugs:\r\n-->\r\n\r\n- [ ] a detailed description of the bug or problem you are having\r\n- [ ] output of `pip list` from the virtual environment you are using\r\n- [ ] pytest and operating system versions\r\n- [ ] minimal example if possible\r\n",
      "state": "CLOSED",
      "createdAt": "2024-03-14T02:58:43Z",
      "updatedAt": "2024-04-02T06:24:44Z",
      "closedAt": "2024-04-02T06:24:44Z",
      "author": {
        "login": "guoguojenna"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "status: needs information"
          },
          {
            "name": "stale"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 5
      }
    },
    {
      "number": 12116,
      "title": "Capturing logs does not work with multiprocessing",
      "body": "### A detailed description of the bug or problem\r\nCapturing logs from spawned processes is not working - all calls to logging are missing in `caplog.records` and terminal output (live logs are printed correctly with `log_cli=1`).\r\n\r\n### `pip list` and system version\r\n```\r\nPackage        Version\r\n-------------- -------\r\nexceptiongroup 1.2.0\r\niniconfig      2.0.0\r\npackaging      24.0\r\npip            23.2.1\r\npluggy         1.4.0\r\npytest         8.1.1\r\nsetuptools     68.1.2\r\ntomli          2.0.1\r\nwheel          0.41.2\r\n```\r\nSystem version: `Ubuntu 22.04.3 LTS`\r\n\r\n### Minimal example\r\n```\r\nimport logging\r\nimport multiprocessing\r\n\r\n\r\ndef f(i):\r\n    logging.getLogger(\"some_logger\").error(f\"Found {i}\")\r\n\r\n\r\ndef run_multiprocessing():\r\n    with multiprocessing.Pool(2) as pool:\r\n        pool.map(f, [1, 2])\r\n    f(3)\r\n\r\ndef test_multiprocessing_missing(caplog):\r\n    run_multiprocessing()\r\n    assert len(caplog.records) == 3  # failed: 1 == 3\r\n```\r\n\r\n### Workaround\r\nIt's possible to add a workaround to this case when you know which logger you need to hack.\r\n```\r\ndef _iter_queue(queue):\r\n    sentinel = None\r\n    queue.put(sentinel)\r\n    return iter(queue.get, sentinel)\r\n\r\n\r\n@contextlib.contextmanager\r\ndef fix_caplog(name):\r\n    queue = multiprocessing.Queue()\r\n    logger = logging.getLogger(name)\r\n    handler = logging.handlers.QueueHandler(queue)\r\n    old_handlers = copy(logger.handlers)\r\n    old_propagate = logger.propagate\r\n    for old_handler in old_handlers:\r\n        logger.removeHandler(old_handler)\r\n    logger.addHandler(handler)\r\n    logger.propagate = False\r\n    yield\r\n    logger.propagate = old_propagate\r\n    logger.removeHandler(handler)\r\n    for old_handler in old_handlers:\r\n        logger.addHandler(old_handler)\r\n    for record in _iter_queue(queue):\r\n        logger.handle(record)\r\n\r\ndef test_multiprocessing_fix(caplog):\r\n    with fix_caplog(\"some_logger\"):\r\n        run_multiprocessing()\r\n    assert len(caplog.records) == 3  # ok\r\n```\r\nAs this workaround works correctly in my tests, I'm aware that it may not working correctly in some scenarios:\r\n* hierarchical loggers\r\n* parallel running tests, like `pytest-xdist` (probably, never tested)\r\n* ...\r\n\r\nAs this example is just simple reproduction, I encountered this issue while implementing tests for code based on luigi framework, where certain code segments are executed in child processes. I am curious whether it is feasible to support multiprocessing in caplog without resorting to hacks, and I am open to preparing a PR with your guidance.",
      "state": "CLOSED",
      "createdAt": "2024-03-13T13:37:51Z",
      "updatedAt": "2024-07-08T01:28:17Z",
      "closedAt": "2024-03-13T20:32:18Z",
      "author": {
        "login": "starhel"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 4
      }
    },
    {
      "number": 12114,
      "title": "Attribute error in pytest.approx for types implicitly convertible to numpy arrays",
      "body": "- [x] a detailed description of the bug or problem you are having\r\n\r\nWhen using pytest.approx with custom types which are implicitly convertible to numpy arrays, the following error is observed:\r\n\r\n```\r\nE       AssertionError: assert <test_matrix_...x7f9169ac4ca0> == approx([1.0 \u00b1....0 \u00b1 4.0e-06])\r\nE         (pytest_assertion plugin: representation of details failed: ~/.venv/lib/python3.10/site-packages/_pytest/python_api.py:175: AttributeError: 'MyType' object has no attribute 'shape'.\r\nE          Probably an object has a faulty __repr__.)\r\n```\r\n\r\nNote: The line number in the error message is a little off from the current head. That line is [here](https://github.com/pytest-dev/pytest/blob/14437788f07584fcf0578bdb952c720e0b9dd2ab/src/_pytest/python_api.py#L166).\r\n\r\nLooking at the code, `pytest.approx` sensibly chooses the numpy implementation `ApproxNumpy`, because the expected value is implicitly convertible to a numpy array. However, the shape check assumes that `other_side` **is** a numpy array (rather than assuming its implicitly convertible to a numpy array, like the expected value is) and so assumes that it has a `shape` attribute (which is not part of how approx [determines if something is a numpy array](https://github.com/pytest-dev/pytest/blob/14437788f07584fcf0578bdb952c720e0b9dd2ab/src/_pytest/python_api.py#L757)).\r\n\r\nIt seems like either:\r\n1. `ApproxNumpy._repr_compare()` needs to convert `other_side` to a numpy array (ie `_as_numpy_array(other_side)`)\r\n2. `_as_numpy_array` needs to check if the object has a `shape` attribute, if the code is going to assume that's the case\r\n\r\n- [x] output of `pip list` from the virtual environment you are using:\r\nRelevant packages:\r\nnumpy: 1.26.1\r\n\r\n- [x] pytest and operating system versions\r\n\r\npytest: 7.4.3\r\nUbuntu: 22.04\r\n\r\n- [x] minimal example if possible\r\n\r\n```\r\nimport numpy as np\r\nimport pytest\r\n\r\nclass MyType:\r\n    \"\"\"Type which is implicitly convertible to a numpy array.\"\"\"\r\n    def __init__(self, vals):\r\n        self.vals = vals\r\n\r\n    def __repr__(self):\r\n        return f\"{self.__class__.__name__}({self.vals})\"\r\n\r\n    def __array__(self, dtype=None, copy=None):\r\n        return np.array(self.vals)\r\n\r\ndef test_approx_eq():\r\n    vec1 = MyType([1.0, 2.0, 3.0])\r\n    vec2 = MyType([1.0, 2.0, 4.0])\r\n    assert vec1 == pytest.approx(vec2)\r\n```\r\n",
      "state": "CLOSED",
      "createdAt": "2024-03-12T18:15:35Z",
      "updatedAt": "2024-04-25T10:57:30Z",
      "closedAt": "2024-04-25T10:57:30Z",
      "author": {
        "login": "ascended121"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: bug"
          },
          {
            "name": "topic: approx"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 4
      }
    },
    {
      "number": 12113,
      "title": "regression in pytest 8.1.1: module level setup function doesn't seem to be run",
      "body": "<!--\r\nThanks for submitting an issue!\r\n\r\nQuick check-list while reporting bugs:\r\n-->\r\nThe following is a minimal reproducer for a real-life application in yt: \r\n```python\r\n# test.py\r\nobj = None\r\ndef setup():\r\n    global obj\r\n    obj = []\r\n\r\ndef test_foo():\r\n    assert len(obj) == 0\r\n```\r\nThis test worked as expected until pytest 8.0.2 but fails with version 8.1.1 as\r\n```\r\n=========================== test session starts ===========================\r\nplatform darwin -- Python 3.12.2, pytest-8.1.1, pluggy-1.4.0\r\nrootdir: /private/tmp\r\ncollected 1 item\r\n\r\ntest.py F                                                           [100%]\r\n\r\n================================ FAILURES =================================\r\n________________________________ test_foo _________________________________\r\n\r\n    def test_foo():\r\n>       assert len(obj) == 0\r\nE       TypeError: object of type 'NoneType' has no len()\r\n\r\ntest.py:7: TypeError\r\n========================= short test summary info =========================\r\nFAILED test.py::test_foo - TypeError: object of type 'NoneType' has no len()\r\n============================ 1 failed in 0.01s ===========================\r\n```\r\nwhich seems to indicate that the `setup` function wasn't run ahead of the test.\r\nPossibly related to https://github.com/pytest-dev/pytest/issues/12011 or how it was resolved ?\r\n\r\nexact env:\r\n```\r\nPackage   Version\r\n--------- -------\r\niniconfig 2.0.0\r\npackaging 24.0\r\npluggy    1.4.0\r\npytest    8.1.1\r\n```\r\nBug seen on MacOS 14 and ubuntu-latest on GHA\r\n\r\n- [x] a detailed description of the bug or problem you are having\r\n- [x] output of `pip list` from the virtual environment you are using\r\n- [x] pytest and operating system versions\r\n- [x] minimal example if possible\r\n\r\n",
      "state": "CLOSED",
      "createdAt": "2024-03-12T14:32:11Z",
      "updatedAt": "2024-03-14T15:13:14Z",
      "closedAt": "2024-03-14T15:13:14Z",
      "author": {
        "login": "neutrinoceros"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 6
      }
    },
    {
      "number": 12112,
      "title": "`pytest==8.1.1` Import regression in some namespace package layouts",
      "body": "As first noted in #12074, below is an example project structure with two packages under the `ns` namespace that now fail to import after the changes introduced in `8.1.x`:\r\n\r\n```\r\nns\r\n\u2514\u2500\u2500 python\r\n    \u251c\u2500\u2500 bar\r\n    \u2502   \u251c\u2500\u2500 ns\r\n    \u2502   \u2502   \u251c\u2500\u2500 bar\r\n    \u2502   \u2502   \u2514\u2500\u2500 test\r\n    \u2502   \u2502       \u251c\u2500\u2500 __init__.py\r\n    \u2502   \u2502       \u251c\u2500\u2500 bar.py\r\n    \u2502   \u2502       \u2514\u2500\u2500 test_bar.py\r\n    \u2502   \u2514\u2500\u2500 pyproject.toml\r\n    \u2514\u2500\u2500 foo\r\n        \u251c\u2500\u2500 ns\r\n        \u2502   \u251c\u2500\u2500 foo\r\n        \u2502   \u2514\u2500\u2500 test\r\n        \u2502       \u251c\u2500\u2500 __init__.py\r\n        \u2502       \u251c\u2500\u2500 foo.py\r\n        \u2502       \u2514\u2500\u2500 test_foo.py\r\n        \u2514\u2500\u2500 pyproject.toml\r\n```\r\n\r\nBelow are the contents of `test_foo.py` and `foo.py`. `test_bar.py` and `bar.py` look nearly identical.\r\n\r\n```\r\n# python/foo/ns/test/test_foo.py\r\nfrom .foo import value\r\n\r\ndef test_foo():\r\n    assert value == \"foo\"\r\n```\r\n\r\n```\r\n# python/foo/ns/test/foo.py\r\nvalue = \"foo\"\r\n```\r\n\r\nIn `pytest==8.0.2`, `python -m pytest --import-mode=importlib` correctly discovers and runs the tests from the top level `ns` directory. In `pytest==8.1.1`, `python -m pytest --import-mode=importlib -o \"consider_namespace_packages=true\"`, results in the following error during collection:\r\n\r\n```\r\n========================== test session starts ===========================\r\nplatform darwin -- Python 3.9.16, pytest-8.1.1, pluggy-1.4.0\r\nrootdir: /home/user/pytest-12074\r\ncollected 0 items / 2 errors\r\n\r\n================================= ERRORS =================================\r\n____________ ERROR collecting python/bar/ns/test/test_bar.py _____________\r\nImportError while importing test module '/home/user/pytest-12074/python/bar/ns/test/test_bar.py'.\r\nHint: make sure your test modules/packages have valid Python names.\r\nTraceback:\r\npython/bar/ns/test/test_bar.py:1: in <module>\r\n    from .bar import value\r\nE   ModuleNotFoundError: No module named 'test.bar'\r\n____________ ERROR collecting python/foo/ns/test/test_foo.py _____________\r\nImportError while importing test module '/home/user/pytest-12074/python/foo/ns/test/test_foo.py'.\r\nHint: make sure your test modules/packages have valid Python names.\r\nTraceback:\r\npython/foo/ns/test/test_foo.py:1: in <module>\r\n    from .foo import value\r\nE   ModuleNotFoundError: No module named 'test.foo'\r\n======================== short test summary info =========================\r\nERROR python/bar/ns/test/test_bar.py\r\nERROR python/foo/ns/test/test_foo.py\r\n!!!!!!!!!!!!!!!! Interrupted: 2 errors during collection !!!!!!!!!!!!!!!!!\r\n=========================== 2 errors in 0.04s ============================\r\n```\r\n\r\n\r\nTo reproduce the issue clone https://github.com/aaraney/pytest-12074, pip install `ns.foo` and `ns.bar`, pip install the different versions of `pytest` and run with the aforementioned commands.\r\n",
      "state": "CLOSED",
      "createdAt": "2024-03-12T14:29:43Z",
      "updatedAt": "2024-04-09T16:21:52Z",
      "closedAt": "2024-04-09T16:21:52Z",
      "author": {
        "login": "aaraney"
      },
      "assignees": {
        "nodes": [
          {
            "login": "nicoddemus"
          }
        ]
      },
      "labels": {
        "nodes": [
          {
            "name": "topic: collection"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 16
      }
    },
    {
      "number": 12111,
      "title": "Make truncation threshold (ellipsis) configurable regardless the verbosity level",
      "body": "I found multiple similar unanswered question online such [stackoverflow.com/questions/38000993/how-can-i-get-my-assertions-in-pytest-to-stop-being-abbreviated-with-ellipsis](https://stackoverflow.com/questions/38000993/how-can-i-get-my-assertions-in-pytest-to-stop-being-abbreviated-with-ellipsis)\r\n\r\nWe need to make the truncation values configurable regardless of pytest verbosity level, especially as we know that changing general verbosity level has other side effects.\r\n\r\nMy opinion is that most people would want to run in minimal verbosity level (especially) on CI but have verbose errors for failed tests. If I run in verbose by default displaying the console log in the browser can be problematic, true for github actions and also most CI/CD system I know (none behaves nice with very long console logs).\r\n\r\nRelated:\r\n- https://github.com/pytest-dev/pytest/issues/6682",
      "state": "CLOSED",
      "createdAt": "2024-03-12T12:38:47Z",
      "updatedAt": "2024-04-09T01:48:30Z",
      "closedAt": "2024-04-09T01:48:30Z",
      "author": {
        "login": "ssbarnea"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: bug"
          },
          {
            "name": "status: needs information"
          },
          {
            "name": "stale"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 12107,
      "title": "Pytest has not attribute `StashKey`",
      "body": "Hi All,\n\nOn our CI environment, we have been running our pytests for some time now, but weirdly now, we are seeing an error, which is `AttributeError: module 'pytest' has no attribute 'StashKey'`\n\nWe are running pytest with version 5.3.5 so my initial thought was maybe due to the 2 recent releases last week, maybe `StashKey` is not supported anymore so I had to do trial and error by installing different pytest versions and finding out which is the oldest pytest version that still supports this.\n\nAs of now, the oldest pytest version that supports `StashKey` seems to be 7.0.0. Could one of the devs please maybe update the docs so future pytesters would be able to figure this out?\n\nThanks",
      "state": "CLOSED",
      "createdAt": "2024-03-11T15:25:52Z",
      "updatedAt": "2024-03-11T16:36:18Z",
      "closedAt": "2024-03-11T16:36:18Z",
      "author": {
        "login": "EngineerHus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "status: needs information"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 5
      }
    },
    {
      "number": 12099,
      "title": "`pytest.raises` can supress a test failure exception that was unhandled during the raising of the expected exception",
      "body": "<!--\r\nThanks for submitting an issue!\r\n\r\nQuick check-list while reporting bugs:\r\n-->\r\n\r\nI tried searching for existing mention of this behavior, either in docs, issues, or discussions, but I don't see it brought up. Even if closed as wont-fix, someone in the future may find this information helpful.\r\n\r\n(Pytest version is `8.1.1`)\r\n\r\nThe following test passes, which is dubious:\r\n\r\n```python\r\ndef test_raises_drops_failure():\r\n    with pytest.raises(RuntimeError):\r\n        try:\r\n            assert 1 == 2\r\n        finally:\r\n            raise RuntimeError\r\n```\r\n\r\nThe `assert` statement will `raise`, but the `finally` block will then raise `RuntimeError`, leaving the `AssertionError` unhandled. The `RaisesContext.__exit__` will accept the `RuntimeError` but does not consider the unhandled `AssertionError` in the context and it is discarded.\r\n\r\nThe simple test case above exhibits the behavior, but it may be unconvincing that there's something suspicious. The original code that hit the issue looks more like this:\r\n\r\n```python\r\ndef test_raising_stuff():\r\n    with pytest.raises(OSError):  # [outer]\r\n        with some_context():\r\n            with pytest.raises(RuntimeError):  # [inner]\r\n                do_something()\r\n```\r\n\r\nIt is expected that the `__exit__` for `some_context()` will raise `OSError`, hence the `[outer]`. It is also expected that `do_something()` will raise `RuntimeError`. The problem manifests as:\r\n\r\n1. If the `[inner]` block fails for any reason other than `RuntimeError`, then the inner `pytest.raises` will raise a failure exception.\r\n2. During unwinding, the `some_context().__exit__` will raise the `OSError`, leaving the test failure unhandled (and living on the `__context__` of the `OSError`.\r\n3. Finally, the `[outer]` `pytest.raises` will swallow the test failure that was unhandled during the `__exit__` from `some_context()`, and the `OSError` is accepted.\r\n\r\nThis leads to a question: _should_ `pytest.raises` re-raise unhandled exceptions? I suspect that a non-zero amount of code is relying on this behavior, even if unintentionally.\r\n\r\n## Context vs cause\r\n\r\nIt may also be worth considering the distinction between \"unhandled\" versus \"caused by\":\r\n\r\n```python\r\ndef test_unhandled():\r\n  with pytest.raises(RuntimeError):\r\n    try:\r\n      raise NameError \r\n    except NameError:\r\n      raise RuntimeError\r\n\r\ndef test_with_cause():\r\n  with pytest.raises(RuntimeError):\r\n    try:\r\n      raise NameError \r\n    except NameError as e:\r\n      raise RuntimeError from e\r\n```\r\n\r\nIn current pytest, both above cases will pass. Modifying the behavior of `raises` would lead to `test_unhandled` failing with an unhandled `NameError`. In the `test_with_cause` case, the `NameError` is attached as the cause of `NameError` which grants a very clear \"this other exception occurred, but was handled, and now this new error occurred.\" In `test_unhandled` `raises` cannot see such a clear relationship between the `NameError` and the unhandled `RuntimeError` in its `__context__`. I suspect a large amount of Python code exists that does not use the `raise x from y` syntax even if it \"should\" according to the intended semantics.\r\n",
      "state": "CLOSED",
      "createdAt": "2024-03-10T03:30:14Z",
      "updatedAt": "2024-03-12T08:24:06Z",
      "closedAt": "2024-03-12T08:24:05Z",
      "author": {
        "login": "vector-of-bool"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: question"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 12097,
      "title": "8.1.1: pyetst fails wit error message `TypeError: 'property' object is not subscriptable`",
      "body": "Just started usng 8.1.1 and on first two modules testing (snappy and magic) pytest failed with:\r\n```console\r\n+ /usr/bin/pytest -ra -m 'not network' --deselect test_snappy_cffi.py::test_snappy_all_cffi --deselect test_snappy_cffi.py::test_snappy_cffi_enum\r\nTraceback (most recent call last):\r\n  File \"/usr/bin/pytest\", line 5, in <module>\r\n    from pytest import console_main\r\n  File \"/usr/lib/python3.9/site-packages/pytest/__init__.py\", line 5, in <module>\r\n    from _pytest._code import ExceptionInfo\r\n  File \"/usr/lib/python3.9/site-packages/_pytest/_code/__init__.py\", line 3, in <module>\r\n    from .code import Code\r\n  File \"/usr/lib/python3.9/site-packages/_pytest/_code/code.py\", line 446, in <module>\r\n    class ExceptionInfo(Generic[E]):\r\n  File \"/usr/lib/python3.9/site-packages/_pytest/_code/code.py\", line 612, in ExceptionInfo\r\n    self, exc: Union[type[BaseException], tuple[type[BaseException], ...]]\r\nTypeError: 'property' object is not subscriptable\r\n```\r\n\r\nI've retested as well and 8.1.0 still is OK.\r\n\r\n- [x] a detailed description of the bug or problem you are having\r\n- [ ] output of `pip list` from the virtual environment you are using\r\n- [x] pytest and operating system versions\r\n- [x] minimal example if possible\r\n",
      "state": "CLOSED",
      "createdAt": "2024-03-09T22:56:58Z",
      "updatedAt": "2024-03-09T23:11:47Z",
      "closedAt": "2024-03-09T23:11:47Z",
      "author": {
        "login": "kloczek"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      }
    },
    {
      "number": 12091,
      "title": "over-riden/extended fixtures that self-depend don't pass over dependend fixtures for parameterization",
      "body": "When I have the following situation:\r\n * A fixture `main` that uses another fixture `param`\r\n * A test class `TestFoo` that:\r\n   * overrides the `main` fixture with a fixture that uses the \"parent\" fixture\r\n   * has a test `test_foo` that uses the `main` fixture and is marked to be parametrised over `param`\r\n\r\npytest gives me the error \"Failed: In test_foo: function uses no argument 'param'\".\r\n\r\nI was expecting the \"parent\" `main` fixture to receive the parametrised `param` value.\r\n\r\nThe code:\r\n```python\r\nfrom pytest import fixture, mark\r\n\r\n\r\n@fixture\r\ndef param() -> int:\r\n    return 1\r\n\r\n\r\n@fixture\r\ndef main(param: int) -> int:\r\n    return sum(range(param + 1))\r\n\r\n\r\nclass TestFoo:\r\n    @fixture\r\n    def main(self, main: int) -> int:\r\n        return main\r\n\r\n    @mark.parametrize(\"param\", [2])\r\n    def test_foo(self, main: int) -> None:\r\n        assert main == 3\r\n\r\n```\r\n\r\nThe error:\r\n```\r\n$ pytest\r\n======================================== test session starts =========================================\r\nplatform linux -- Python 3.12.2, pytest-8.0.2, pluggy-1.4.0\r\nrootdir: /home/rob/tmp/py\r\ncollected 0 items / 1 error                                                                          \r\n\r\n=============================================== ERRORS ===============================================\r\n___________________________________ ERROR collecting test_class.py ___________________________________\r\nIn test_foo: function uses no argument 'param'\r\n====================================== short test summary info =======================================\r\nERROR test_class.py::TestFoo - Failed: In test_foo: function uses no argument 'param'\r\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n========================================== 1 error in 0.05s ==========================================\r\n```\r\n\r\n`pip list` output:\r\n```\r\n$ uv pip list\r\nPackage   Version\r\n--------- -------\r\niniconfig 2.0.0  \r\npackaging 23.2   \r\npluggy    1.4.0  \r\npytest    8.0.2\r\n```\r\n\r\nOS: Fedora 39.\r\n",
      "state": "OPEN",
      "createdAt": "2024-03-08T13:52:47Z",
      "updatedAt": "2024-03-11T09:08:50Z",
      "closedAt": null,
      "author": {
        "login": "rgilton"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: bug"
          },
          {
            "name": "topic: parametrize"
          },
          {
            "name": "topic: fixtures"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 4
      }
    },
    {
      "number": 12086,
      "title": "Scope of parameterized fixture doesn't work",
      "body": "I am fairly new to pytest and I see that scope of a parameterized fixture is not working.\r\n\r\nHere is an example of the fixture and the test:\r\n\r\n```\r\n@pytest.fixture(scope='session')\r\ndef my_fixture(request):\r\n       # make some API calls\r\n       # print API call response\r\n       return response\r\n```\r\n\r\nTests\r\n```\r\n@pytest.mark.parametrize('my_fixture',['a','b']):\r\ndef test_scenario_1(my_fixture):\r\n      assert response['text'] == 'abc' \r\n\r\n@pytest.mark.parametrize('my_fixture',['a','b']):\r\ndef test_scenario_2(my_fixture):\r\n      assert response['image'] == 'def' \r\n```\r\n\r\nWhen I run the tests I see the API responses printed 4 times(twice for `a` parameter and twice for `b` parameter). I was expecting it to be printed just twice(once for both the parameters - `a` and `b`) since both the tests use same set of parameters and the fixed is scoped `session`. Obviously, if I don't parameterize the fixture the api response is printed once. Pytest version is `7.4.2`\r\n",
      "state": "OPEN",
      "createdAt": "2024-03-07T21:29:11Z",
      "updatedAt": "2024-03-17T22:33:13Z",
      "closedAt": null,
      "author": {
        "login": "gjambaisivanandham"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: bug"
          },
          {
            "name": "topic: fixtures"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 12084,
      "title": "[minor QoL] allow specifying -k multiple times",
      "body": "#### What's the problem this feature will solve?\r\nIn projects with lots of parametrized tests across versions, behaviour, etc - or with lots of tests in general - I like to progressively exclude tests while working on features unrelated to those tests to save time on running the test suite. That means I can rack up a series of selected names, especially if working iteratively. Example invocation from my CLI history: `pytest -k 'asyncio and normal and noautofix' --no-cov -v -n auto`.\r\nStacking on qualifiers currently requires going back and modifying this one text string, and require quoting and the extra `and`, instead of being able to quickly step back in history and smack on an extra `-k`.\r\nCurrently doing `pytest -k asyncio -k normal` will throw out the first `-k` and resolve as `pytest -k normal`.\r\n\r\n#### Describe the solution you'd like\r\n`-k` to stack, with `and`, when specified multiple times [on the command line].\r\n\r\n#### Alternative Solutions\r\nAdd another flag that achieves the above, such as not to break any current behaviour which might rely on overriding it.\r\n\r\nI could also write a CLI function that preparses flags before passing on to pytest proper, in case you deem this too niche to bother with. Relying on plugins, or adding a custom flag to `conftest.py` would be a no-go as I use this in several different projects and is not something I'd want to commit to random repositories.",
      "state": "OPEN",
      "createdAt": "2024-03-06T11:16:55Z",
      "updatedAt": "2024-03-09T17:39:47Z",
      "closedAt": null,
      "author": {
        "login": "jakkdl"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: proposal"
          },
          {
            "name": "topic: selection"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 5
      }
    },
    {
      "number": 12083,
      "title": "Issue with duplicates handling in Pytest 8",
      "body": "Following an upgrade to Pytest 8, we are seeing a change in the way duplicate items are handled, which does not seem logical/expected to me.\r\n\r\n## Current behavior\r\n\r\nLet's assume we have the following directory structure:\r\n\r\n```plain\r\n> tree tests\r\ntests\r\n\u251c\u2500\u2500 subdirectory\r\n\u2502   \u2514\u2500\u2500 test_two.py\r\n\u2514\u2500\u2500 test_one.py\r\n```\r\n\r\nWith Pytest 7, if we call `pytest test_one.py tests --collect-only`, it returns 3\r\ntests:\r\n\r\n```plain\r\n============================= test session starts ==============================\r\nplatform linux -- Python 3.12.2, pytest-7.0.0, pluggy-1.4.0\r\nrootdir: /home\r\ncollected 3 items\r\n\r\n<Module tests/test_one.py>\r\n  <Function test_one>\r\n<Module tests/test_one.py>\r\n  <Function test_one>\r\n<Module tests/subdirectory/test_two.py>\r\n  <Function test_two>\r\n```\r\n\r\nWith Pytest 8, we get only one:\r\n\r\n```plain\r\n============================= test session starts ==============================\r\nplatform linux -- Python 3.12.2, pytest-8.0.2, pluggy-1.4.0\r\nrootdir: /home\r\ncollected 1 item\r\n\r\n<Dir home>\r\n  <Dir tests>\r\n    <Module test_one.py>\r\n      <Function test_one>\r\n```\r\n\r\nAfter looking a bit at Pytest's internals, the change looks related to the refactoring done in #11646, where the duplicates handling logic was moved away from the former `_collectfile` method (which, I guess, operate on a file-per-file basis), to be consolidated in `genitems()` (in which a single duplicate in a *node* will result in the complete node being ignored).\r\n\r\n## Expected behavior\r\n\r\nI would expect `test_one.py` not to prevent the further collection of tests in `subdirectory`, even though it's a duplicate.\r\n\r\nTo be honest, I'm also a bit puzzled by the previous behavior in Pytest 7, as I wouldn't have expected to see `tests/test_one.py` twice (as I didn't pass the `--keep-duplicates` option).\r\n\r\nAre my expectations correct in the first place, or did I misunderstand the changes to the test collection and the behavior is expected?\r\n\r\n## Additional information\r\n\r\n- With a bit of guidance, I would be willing to provide a patch (if it's a real bug of course \ud83d\ude42)\r\n- Reproduced on Pytest 8.0.2 / Linux & macOS\r\n- **I made [a repository](https://github.com/nonatomiclabs/2024-03-06-pytest-8-duplicate-tests-issue?tab=readme-ov-file#how-to-reproduce) that contains a Dockerfile to reproduce the issue easily, please let me know if you need any additional details**",
      "state": "OPEN",
      "createdAt": "2024-03-06T10:53:11Z",
      "updatedAt": "2024-10-23T03:35:08Z",
      "closedAt": null,
      "author": {
        "login": "nonatomiclabs"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "topic: collection"
          },
          {
            "name": "type: regression"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 4
      }
    },
    {
      "number": 12081,
      "title": "Capture: copy output when using readouterr() instead of consuming it",
      "body": "## Issue\r\nCurrently pytest's capfd/capsys fixtures (CaptureFixture) that allow stdout capturing via readouterr() consume stdout, meaning that logs are no longer available in the \"Captured stdout call\" up to the point in the test where readouterr() was called. [The documentation](https://docs.pytest.org/en/7.1.x/reference/reference.html?highlight=capsys#pytest.CaptureFixture.readouterr) indicates that this is expected behaviour (\"readouterr() : Read and return the captured output so far, **resetting the internal buffer**.\"), however the [\"How to capture stdout/stderr output\" tutorial](https://docs.pytest.org/en/7.1.x/how-to/capture-stdout-stderr.html#accessing-captured-output-from-a-test-function) seems to imply that the output is copied from the stdout/stderr streams instead of consumed and reset (\"The readouterr() call **snapshots the output** so far - and capturing will be continued. After the test function finishes the original streams will be restored.\")\r\n\r\n### Example\r\nCode:\r\n```\r\ndef method_under_test():\r\n    print(\"Hallo, Welt!\")\r\n    return 41\r\n\r\ndef test_result(capsys):\r\n    result = method_under_test()\r\n    out, err = capsys.readouterr()\r\n    assert out.startswith(\"Hello\")\r\n    assert result == 42\r\n```\r\nExpected:\r\n```\r\n================================== FAILURES ===================================\r\n______________________________ test_result _______________________________\r\n\r\n...\r\n\r\npytestest.py:9: AssertionError\r\n---------------------------- Captured stdout call -----------------------------\r\nHallo, Welt!\r\n========================== 1 failed in 0.03 seconds ===========================\r\n```\r\nActual (no captured stdout because it was consumed by `capsys.readouterr()`):\r\n```\r\n================================== FAILURES ===================================\r\n___________________________ test_result ____________________________\r\n\r\n...\r\n\r\npytestest.py:14: AssertionError\r\n========================== 1 failed in 0.03 seconds ===========================\r\n```\r\n\r\n## Current workaround\r\nAny tests requiring validation of stdout currently need to manually write-back the captured stdout and stderr immediately after capture in order to have them available for viewing under \"Captured stdout call\" in pytest results. It is not obvious that this is required from the documentation in order to both capture this output for test validation and have the output available for viewing to troubleshoot in the event of test failure.\r\n\r\n### Example\r\nCode:\r\n```\r\ndef method_under_test():\r\n    print(\"Hallo, Welt!\")\r\n    return 41\r\n\r\ndef test_result(capsys):\r\n    result = method_under_test()\r\n    out, err = capsys.readouterr()\r\n    sys.stdout.write(out)\r\n    sys.stderr.write(err)\r\n    assert out.startswith(\"Hello\")\r\n    assert result == 42\r\n```\r\nResult:\r\n```\r\n================================== FAILURES ===================================\r\n______________________________ test_result _______________________________\r\n\r\n...\r\n\r\npytestest.py:9: AssertionError\r\n---------------------------- Captured stdout call -----------------------------\r\nHallo, Welt!\r\n========================== 1 failed in 0.03 seconds ===========================\r\n```\r\n\r\n## Proposed solution\r\nEither\r\n1. Minor change: have `CaptureFixture.readouterr(...)` call `sys.stdout.write(out)` and `sys.stderr.write(err)` itself after performing the consuming capture. Can use a new method arg `capture_writeback` or similar which defaults to `False` in order to preserve backwards-compatibility. Update \"How to capture stdout/stderr output\" tutorial documentation to make it more clear that by default `readouterr` destructively consumes the output such that it won't be available in the \"Captured stdout call\" test results.\r\n2. Larger change: create a new `CaptureFixture.copyouterr()` method that does not destructively consume the stdout/stderror streams and instead copies them for use in test validation, such that the streams also remain intact for the \"Captured stdout call\" test results. Update \"How to capture stdout/stderr output\" tutorial documentation to make it more clear that `readouterr` destructively consumes the output such that it won't be available in the \"Captured stdout call\" test results, while `copyouterr` does the same thing non-destructively.\r\n\r\n## Additional context\r\nOriginally mentioned on Stackoverflow in 2014\r\nhttps://stackoverflow.com/questions/26561822/pytest-capsys-checking-output-and-getting-it-reported\r\n\r\nLogged as an Issue in this repo in 2018, but closed as \"completed\" for unknown reasons\r\nhttps://github.com/pytest-dev/pytest/issues/3448\r\n",
      "state": "CLOSED",
      "createdAt": "2024-03-06T00:03:25Z",
      "updatedAt": "2025-03-01T15:37:18Z",
      "closedAt": "2025-03-01T15:37:18Z",
      "author": {
        "login": "RedHellion"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: enhancement"
          },
          {
            "name": "plugin: capture"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 7
      }
    },
    {
      "number": 12080,
      "title": "8.1.0: self test fails with `AttributeError: 'PytestPluginManager' object has no attribute 'unblock'` errort message",
      "body": "- [x] a detailed description of the bug or problem you are having\r\n- [x] output of `pip list` from the virtual environment you are using\r\n- [x] pytest and operating system versions\r\n- [x] minimal example if possible\r\n\r\nI'm packaging your module as an rpm package so I'm using the typical PEP517 based build, install and test cycle used on building packages from non-root account.\r\n- `python3 -sBm build -w --no-isolation`\r\n- because I'm calling `build` with `--no-isolation` I'm using during all processes only locally installed modules\r\n- install .whl file in </install/prefix> using 'installer` module\r\n- run pytest with $PYTHONPATH pointing to sitearch and sitelib inside </install/prefix>\r\n- build is performed in env which is *`cut off from access to the public network`* (pytest is executed with `-m \"not network\"`)\r\n\r\n<details>\r\n<summary>Here is pytest output:</summary>\r\n\r\n```console\r\n+ cd pytest-8.1.0\r\n+ PYTHONDONTWRITEBYTECODE=1\r\n+ PATH=/home/tkloczko/rpmbuild/BUILDROOT/python-pytest-8.1.0-2.fc35.x86_64/usr/bin:/usr/bin:/usr/sbin:/usr/local/sbin\r\n+ PYTHONPATH=/home/tkloczko/rpmbuild/BUILDROOT/python-pytest-8.1.0-2.fc35.x86_64/usr/lib/python3.8/site-packages\r\n+ /home/tkloczko/rpmbuild/BUILDROOT/python-pytest-8.1.0-2.fc35.x86_64/usr/bin/pytest -ra -m 'not network' --import-mode=importlib -p no:flaky -p no:randomly\r\nTraceback (most recent call last):\r\n  File \"/home/tkloczko/rpmbuild/BUILDROOT/python-pytest-8.1.0-2.fc35.x86_64/usr/bin/pytest\", line 8, in <module>\r\n    sys.exit(console_main())\r\n  File \"/home/tkloczko/rpmbuild/BUILDROOT/python-pytest-8.1.0-2.fc35.x86_64/usr/lib/python3.8/site-packages/_pytest/config/__init__.py\", line 195, in console_main\r\n    code = main()\r\n  File \"/home/tkloczko/rpmbuild/BUILDROOT/python-pytest-8.1.0-2.fc35.x86_64/usr/lib/python3.8/site-packages/_pytest/config/__init__.py\", line 153, in main\r\n    config = _prepareconfig(args, plugins)\r\n  File \"/home/tkloczko/rpmbuild/BUILDROOT/python-pytest-8.1.0-2.fc35.x86_64/usr/lib/python3.8/site-packages/_pytest/config/__init__.py\", line 335, in _prepareconfig\r\n    config = pluginmanager.hook.pytest_cmdline_parse(\r\n  File \"/usr/lib/python3.8/site-packages/pluggy/_hooks.py\", line 493, in __call__\r\n    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)\r\n  File \"/usr/lib/python3.8/site-packages/pluggy/_manager.py\", line 115, in _hookexec\r\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\r\n  File \"/usr/lib/python3.8/site-packages/pluggy/_callers.py\", line 113, in _multicall\r\n    raise exception.with_traceback(exception.__traceback__)\r\n  File \"/usr/lib/python3.8/site-packages/pluggy/_callers.py\", line 96, in _multicall\r\n    teardown.throw(exception)  # type: ignore[union-attr]\r\n  File \"/home/tkloczko/rpmbuild/BUILDROOT/python-pytest-8.1.0-2.fc35.x86_64/usr/lib/python3.8/site-packages/_pytest/helpconfig.py\", line 105, in pytest_cmdline_parse\r\n    config = yield\r\n  File \"/usr/lib/python3.8/site-packages/pluggy/_callers.py\", line 77, in _multicall\r\n    res = hook_impl.function(*args)\r\n  File \"/home/tkloczko/rpmbuild/BUILDROOT/python-pytest-8.1.0-2.fc35.x86_64/usr/lib/python3.8/site-packages/_pytest/config/__init__.py\", line 1141, in pytest_cmdline_parse\r\n    self.parse(args)\r\n  File \"/home/tkloczko/rpmbuild/BUILDROOT/python-pytest-8.1.0-2.fc35.x86_64/usr/lib/python3.8/site-packages/_pytest/config/__init__.py\", line 1490, in parse\r\n    self._preparse(args, addopts=addopts)\r\n  File \"/home/tkloczko/rpmbuild/BUILDROOT/python-pytest-8.1.0-2.fc35.x86_64/usr/lib/python3.8/site-packages/_pytest/config/__init__.py\", line 1373, in _preparse\r\n    self.pluginmanager.consider_preparse(args, exclude_only=False)\r\n  File \"/home/tkloczko/rpmbuild/BUILDROOT/python-pytest-8.1.0-2.fc35.x86_64/usr/lib/python3.8/site-packages/_pytest/config/__init__.py\", line 783, in consider_preparse\r\n    self.consider_pluginarg(parg)\r\n  File \"/home/tkloczko/rpmbuild/BUILDROOT/python-pytest-8.1.0-2.fc35.x86_64/usr/lib/python3.8/site-packages/_pytest/config/__init__.py\", line 803, in consider_pluginarg\r\n    self.unblock(name)\r\nAttributeError: 'PytestPluginManager' object has no attribute 'unblock'\r\n```\r\n</details>\r\n\r\n<details>\r\n<summary>List of installed modules in build env:</summary>\r\n\r\n```console\r\nPackage                        Version\r\n------------------------------ ----------\r\nalabaster                      0.7.16\r\nappdirs                        1.4.4\r\nasynctest                      0.13.0\r\nattrs                          23.2.0\r\nAutomat                        22.10.0\r\nBabel                          2.14.0\r\nbuild                          1.1.1\r\ncharset-normalizer             3.3.2\r\nconstantly                     15.1.0\r\ncppclean                       0.13\r\ncssselect                      1.2.0\r\ndecorator                      5.1.1\r\ndistro                         1.9.0\r\ndnf                            4.19.0\r\ndocutils                       0.20.1\r\nelementpath                    4.3.0\r\nexceptiongroup                 1.1.3\r\nexecnet                        2.0.2\r\ngi-docgen                      2023.3\r\ngpg                            1.23.2\r\nhyperlink                      21.0.0\r\nhypothesis                     6.84.3\r\nidna                           3.6\r\nimagesize                      1.4.1\r\nimportlib_metadata             7.0.1\r\nincremental                    22.10.0\r\niniconfig                      2.0.0\r\ninstaller                      0.7.0\r\nJinja2                         3.1.3\r\nlibcst                         1.0.1\r\nlibdnf                         0.73.0\r\nlxml                           5.0.0\r\nMako                           1.3.2.dev0\r\nMarkdown                       3.5.2\r\nMarkupSafe                     2.1.3\r\nmaturin                        1.4.0\r\nmock                           5.1.0\r\nmypy_extensions                1.0.0\r\nnumpy                          1.24.4\r\nolefile                        0.47\r\npackaging                      23.2\r\nPallets-Sphinx-Themes          2.1.1\r\npillow                         10.2.0\r\npluggy                         1.3.0\r\npy                             1.11.0\r\nPygments                       2.17.2\r\npygments_pytest                2.3.0\r\npyproject_hooks                1.0.0\r\npytest                         8.0.2\r\npytest-xdist                   3.5.0\r\npython-dateutil                2.8.2\r\npytz                           2024.1\r\nPyYAML                         6.0.1\r\nrequests                       2.31.0\r\nscour                          0.38.2\r\nsetuptools                     69.1.1\r\nsetuptools-scm                 8.0.4\r\nsix                            1.16.0\r\nsmartypants                    2.0.1\r\nsnowballstemmer                2.2.0\r\nsortedcontainers               2.4.0\r\nSphinx                         7.1.2\r\nsphinx-removed-in              0.2.2\r\nsphinxcontrib-applehelp        1.0.4\r\nsphinxcontrib-devhelp          1.0.5\r\nsphinxcontrib-htmlhelp         2.0.5\r\nsphinxcontrib-jsmath           1.0.1\r\nsphinxcontrib-qthelp           1.0.7\r\nsphinxcontrib-serializinghtml  1.1.10\r\nsphinxcontrib-svg2pdfconverter 1.2.2\r\nsphinxcontrib-trio             1.1.2\r\ntokenize_rt                    5.2.0\r\ntomli                          2.0.1\r\nTwisted                        24.3.0\r\ntyping_extensions              4.10.0\r\ntyping_inspect                 0.9.0\r\ntypogrify                      2.0.7\r\nurllib3                        1.26.18\r\nwheel                          0.42.0\r\nxmlschema                      3.0.2\r\nzipp                           3.17.0\r\nzope.event                     5.0\r\nzope.interface                 6.2\r\n```\r\n</details>\r\n\r\nPlease let me know if you need more details or want me to perform some diagnostics.\r\n",
      "state": "CLOSED",
      "createdAt": "2024-03-05T16:57:32Z",
      "updatedAt": "2024-03-05T18:00:47Z",
      "closedAt": "2024-03-05T18:00:47Z",
      "author": {
        "login": "kloczek"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "status: needs information"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 4
      }
    },
    {
      "number": 12079,
      "title": "Read tests to be executed from a file instead of from positional arguments",
      "body": "<!--\r\nThanks for suggesting a feature!\r\n\r\nQuick check-list while suggesting features:\r\n-->\r\n\r\n#### What's the problem this feature will solve?\r\n<!-- What are you trying to do, that you are unable to achieve with pytest as it currently stands? -->\r\n\r\nI want to output a set of tests using `pytest --collect-only -q` to a file, and run selected subsets of it using `pytest` \r\n\r\n#### Describe the solution you'd like\r\n<!-- A clear and concise description of what you want to happen. -->\r\n\r\nI want to collect tests to run and put them in a file (supported today, except `-q` or a similar flag to leave out all output except the actual test names)):\r\n\r\n```\r\n> pytest --collect-only -q > tests_to_run.txt\r\n```\r\n\r\nAnd then tell `pytest` to run tests listed in that file (or from stdin), like e.g.:\r\n\r\n```\r\n> pytest --from-file tests_to_run.txt\r\n```\r\n\r\n<!-- Provide examples of real-world use cases that this would enable and how it solves the problem described above. -->\r\n\r\nI want to run selected subsets of the tests to find bugs caused by interdependencies between a set of tests.\r\n\r\n#### Alternative Solutions\r\n<!-- Have you tried to workaround the problem using a pytest plugin or other tools? Or a different approach to solving this issue? Please elaborate here. -->\r\n\r\n#### Additional context\r\n<!-- Add any other context, links, etc. about the feature here. -->\r\n",
      "state": "CLOSED",
      "createdAt": "2024-03-05T12:31:13Z",
      "updatedAt": "2024-03-05T12:38:22Z",
      "closedAt": "2024-03-05T12:38:22Z",
      "author": {
        "login": "levsa"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 12078,
      "title": "pytest 8.1.0 -\"E   AttributeError: 'str' object has no attribute 'iter_parents'\"",
      "body": "<!--\r\nThanks for submitting an issue!\r\n\r\nQuick check-list while reporting bugs:\r\n-->\r\n\r\n- [x] a detailed description of the bug or problem you are having'\r\n```\r\nAll tests failes with the following error because of `--alluredir=./allure-dir`, if I remove it it all works.\r\nI will report to allure\r\n============================= test session starts ==============================\r\nplatform linux -- Python 3.11.6, pytest-8.1.0, pluggy-1.4.0\r\n\r\nAll tests failed with this:\r\n\r\n__________________ ERROR at setup of TestClass.test01_safety ___________________\r\nE   AttributeError: 'str' object has no attribute 'iter_parents'\r\n\r\n```\r\n- [ ] output of `pip list` from the virtual environment you are using\r\n- [ ] pytest and operating system versions\r\n```\r\npip list\r\nPackage                   Version     Editable project location\r\n------------------------- ----------- ----------------------------\r\naenum                     3.1.15\r\naiohttp                   3.9.3\r\naiosignal                 1.3.1\r\nallure-pytest             2.13.2\r\nallure-python-commons     2.13.2\r\nansi2html                 1.9.1\r\nattrs                     23.1.0\r\nAuthlib                   1.3.0\r\nbeautifulsoup4            4.12.3\r\nblinker                   1.7.0\r\nBrotli                    1.1.0\r\ncertifi                   2023.11.17\r\ncffi                      1.16.0\r\ncharset-normalizer        3.3.2\r\nclick                     8.1.7\r\ncolorama                  0.4.6\r\ncoverage                  7.4.3\r\ncryptography              41.0.7\r\ncurlify                   2.2.1\r\ndeepdiff                  6.7.1\r\ndill                      0.3.8\r\ndparse                    0.6.4b0\r\nelastic-transport         8.12.0\r\nelasticsearch             8.12.1\r\nflatten-dict              0.4.2\r\nfrozenlist                1.4.1\r\nh11                       0.14.0\r\nh2                        4.1.0\r\nhpack                     4.0.0\r\nhyperframe                6.0.1\r\nidna                      3.6\r\niniconfig                 2.0.0\r\nJinja2                    3.1.3\r\njsonschema                4.21.1\r\njsonschema-specifications 2023.12.1\r\nkaitaistruct              0.10\r\nldap3                     2.9.1\r\nLevenshtein               0.25.0\r\nmarkdown-it-py            3.0.0\r\nMarkupSafe                2.1.5\r\nmarshmallow               3.21.0\r\nmdurl                     0.1.2\r\nmultidict                 6.0.5\r\nordered-set               4.1.0\r\noutcome                   1.3.0.post0\r\npackaging                 23.2\r\npillow                    10.2.0\r\npip                       24.0\r\npluggy                    1.4.0\r\npsutil                    5.9.8\r\npy                        1.11.0\r\npyasn1                    0.5.1\r\npycparser                 2.21\r\npydantic                  1.10.14\r\nPygments                  2.17.2\r\nPyJWT                     2.8.0\r\npyOpenSSL                 23.3.0\r\npyparsing                 3.1.1\r\nPySocks                   1.7.1\r\npytest                    8.1.0\r\npytest-cov                4.1.0\r\npytest-html-reporter      0.2.9\r\npytest-metadata           3.1.1\r\npytest-reportportal       5.4.0\r\npytest-timeout            2.2.0\r\npython-dateutil           2.9.0.post0\r\npython-Levenshtein        0.25.0\r\npytz                      2024.1\r\nrapidfuzz                 3.6.1\r\nreferencing               0.33.0\r\nreportportal-client       5.5.4\r\nrequests                  2.31.0\r\nrich                      13.7.1\r\nrpds-py                   0.18.0\r\nruamel.yaml               0.18.6\r\nruamel.yaml.clib          0.2.8\r\nsafety                    3.0.1\r\nsafety-schemas            0.0.2\r\nselenium                  4.15.2\r\nselenium-wire             5.1.0\r\nsetuptools                69.1.1\r\nsix                       1.16.0\r\nsnaptime                  0.2.4\r\nsniffio                   1.3.0\r\nsortedcontainers          2.4.0\r\nsoupsieve                 2.5\r\nthefuzz                   0.22.1\r\ntrio                      0.23.1\r\ntrio-websocket            0.11.1\r\ntyper                     0.9.0\r\ntyping_extensions         4.10.0\r\ntzlocal                   5.2\r\nurllib3                   2.1.0\r\nwsproto                   1.2.0\r\nyarl                      1.9.4\r\nzstandard                 0.22.0\r\n```\r\n- [ ] minimal example if possible\r\n```\r\nworks:\r\n# pytest --cov=. --cov-report=html --cov-report=xml -s --color=yes --tb=line --html=${TESTENV}.html --title='testing' --webhost=${TESTENV} --log=info --junitxml=report\r\n.xml tests/test_01_services_up.py -k test01\r\n20240305123149.749|DEBUG|/test/trk-fullstack-test/conftest.py:43|pytest arguments? : ['--cov=.', '--cov-report=html', '--cov-report=xml', '-s', '--color=yes', '--tb=line', '--html=test1.html', '--title=testing', '--junitxml=report.xml', 'tests/test_01_services_up.py', '-k', 'test01']\r\n20240305123149.750|INFO|/test/trk-fullstack-test/conftest.py:46|we found:test1.html\r\n================================================================================================= test session starts ==================================================================================================\r\nplatform linux -- Python 3.11.6, pytest-8.1.0, pluggy-1.4.0\r\nrootdir: /test/trk-fullstack-test\r\nconfigfile: pytest.ini\r\nplugins: timeout-2.2.0, allure-pytest-2.13.2, metadata-3.1.1, reportportal-5.4.0, cov-4.1.0, html-reporter-0.2.9, html-0.1.dev418\r\ntimeout: 3500.0s\r\ntimeout method: signal\r\ntimeout func_only: False\r\ncollected 8 items / 7 deselected / 1 selected\r\n\r\ntests/test_01_services_up.py::TestClass::test01_services_up[test1] 20240305123150.021|INFO|/test/trk-fullstack-test/tests/test_01_services_up.py:49|webhost:test1\r\n\r\n---------------------------------------------------------------------------------------------------- live log call -----------------------------------------------------------------------------------------------------\r\n20240305123150|INFO|webhost:test1\r\n\r\n\r\nDo not work:\r\n# pytest --cov=. --cov-report=html --cov-report=xml --alluredir=./allure-dir -s --color=yes --tb=line --html=${TESTENV}.html --title='testing' --webhost=${TESTENV} --log=info --junitxml=report.xml tests/test_01_services_up.py -k test01\r\n20240305123236.990|DEBUG|/test/trk-fullstack-test/conftest.py:43|pytest arguments? : ['--cov=.', '--cov-report=html', '--cov-report=xml', '--alluredir=./allure-dir', '-s', '--color=yes', '--tb=line', '--html=test1.html', '--title=testing', '--junitxml=report.xml', 'tests/test_01_services_up.py', '-k', 'test01']\r\n20240305123236.990|INFO|/test/trk-fullstack-test/conftest.py:46|we found:test1.html\r\n================================================================================================= test session starts ==================================================================================================\r\nplatform linux -- Python 3.11.6, pytest-8.1.0, pluggy-1.4.0\r\nrootdir: /test/trk-fullstack-test\r\nconfigfile: pytest.ini\r\nplugins: timeout-2.2.0, allure-pytest-2.13.2, metadata-3.1.1, reportportal-5.4.0, cov-4.1.0, html-reporter-0.2.9, html-0.1.dev418\r\ntimeout: 3500.0s\r\ntimeout method: signal\r\ntimeout func_only: False\r\ncollected 8 items / 7 deselected / 1 selected\r\n\r\ntests/test_01_services_up.py::TestClass::test01_services_up[test1] ERROR\r\n\r\n======================================================================================================== ERRORS ========================================================================================================\r\n________________________________________________________________________________ ERROR at setup of TestClass.test01_services_up[test1] _________________________________________________________________________________\r\nE   AttributeError: 'str' object has no attribute 'iter_parents'",
      "state": "CLOSED",
      "createdAt": "2024-03-05T11:34:57Z",
      "updatedAt": "2024-03-05T11:37:32Z",
      "closedAt": "2024-03-05T11:37:32Z",
      "author": {
        "login": "fenchu"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 12073,
      "title": "8.1.0: testing of pytest fails with installed and disabled plugins",
      "body": "- [x] a detailed description of the bug or problem you are having\r\n\r\nWhen I run tests for `pytest 8.1.0` with some additional pytest plugins installed and disabled, then more than 10 tests fails with errors like:\r\n```\r\n============================= test session starts ==============================\r\nplatform sunos5 -- Python 3.9.18, pytest-8.1.0, pluggy-1.4.0 -- $(BUILD_DIR)/.tox/py39/bin/python\r\ncachedir: .tox/py39/.pytest_cache\r\nhypothesis profile 'default' -> database=DirectoryBasedExampleDatabase(PosixPath('$(BUILD_DIR)/.hypothesis/examples'))\r\nrootdir: $(BUILD_DIR)\r\nconfigfile: pyproject.toml\r\ntestpaths: testing\r\nplugins: hypothesis-6.98.15, xdist-3.5.0\r\ncollecting ... collected 3626 items\r\n\r\n... snip ...\r\n\r\n__________________ TestConfigFromdictargs.test_basic_behavior __________________\r\n\r\nself = <test_config.TestConfigFromdictargs object at 0x7fffaba39610>\r\n_sys_snapshot = None\r\n\r\n    def test_basic_behavior(self, _sys_snapshot) -> None:\r\n        option_dict = {\"verbose\": 444, \"foo\": \"bar\", \"capture\": \"no\"}\r\n        args = [\"a\", \"b\"]\r\n\r\n>       config = Config.fromdictargs(option_dict, args)\r\n\r\ntesting/test_config.py:991:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n../prototype/i386/usr/lib/python3.9/vendor-packages/_pytest/config/__init__.py:1192: in fromdictargs\r\n    config.parse(args, addopts=False)\r\n../prototype/i386/usr/lib/python3.9/vendor-packages/_pytest/config/__init__.py:1490: in parse\r\n    self._preparse(args, addopts=addopts)\r\n../prototype/i386/usr/lib/python3.9/vendor-packages/_pytest/config/__init__.py:1377: in _preparse\r\n    self.pluginmanager.load_setuptools_entrypoints(\"pytest11\")\r\n/usr/lib/python3.9/vendor-packages/pluggy/_manager.py:415: in load_setuptools_entrypoints\r\n    self.register(plugin, name=ep.name)\r\n../prototype/i386/usr/lib/python3.9/vendor-packages/_pytest/config/__init__.py:497: in register\r\n    plugin_name = super().register(plugin, name)\r\n/usr/lib/python3.9/vendor-packages/pluggy/_manager.py:167: in register\r\n    self._verify_hook(hook, hookimpl)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <_pytest.config.PytestPluginManager object at 0x7fffa95f9580>\r\nhook = <HookCaller 'pytest_collect_file'>\r\nhookimpl = <HookImpl plugin_name='black', plugin=<module 'pytest_black' from '/usr/lib/python3.9/vendor-packages/pytest_black.py'>>\r\n\r\n    def _verify_hook(self, hook: HookCaller, hookimpl: HookImpl) -> None:\r\n        if hook.is_historic() and (hookimpl.hookwrapper or hookimpl.wrapper):\r\n            raise PluginValidationError(\r\n                hookimpl.plugin,\r\n                \"Plugin %r\\nhook %r\\nhistoric incompatible with yield/wrapper/hookwrapper\"\r\n                % (hookimpl.plugin_name, hook.name),\r\n            )\r\n\r\n        assert hook.spec is not None\r\n        if hook.spec.warn_on_impl:\r\n            _warn_for_function(hook.spec.warn_on_impl, hookimpl.function)\r\n\r\n        # positional arg checking\r\n        notinspec = set(hookimpl.argnames) - set(hook.spec.argnames)\r\n        if notinspec:\r\n>           raise PluginValidationError(\r\n                hookimpl.plugin,\r\n                \"Plugin %r for hook %r\\nhookimpl definition: %s\\n\"\r\n                \"Argument(s) %s are declared in the hookimpl but \"\r\n                \"can not be found in the hookspec\"\r\n                % ( \r\n                    hookimpl.plugin_name,\r\n                    hook.name,\r\n                    _formatdef(hookimpl.function),\r\n                    notinspec,\r\n                ),\r\n            )\r\nE           pluggy._manager.PluginValidationError: Plugin 'black' for hook 'pytest_collect_file'\r\nE           hookimpl definition: pytest_collect_file(file_path, path, parent)\r\nE           Argument(s) {'path'} are declared in the hookimpl but can not be found in the hookspec\r\n\r\n/usr/lib/python3.9/vendor-packages/pluggy/_manager.py:342: PluginValidationError\r\n```\r\nIn this case the `pytest-black` plugin is installed and disabled using `PYTEST_ADDOPTS=-p 'no:black'`.\r\n\r\nThis is regression since `pytest 8.0.2`.\r\n\r\n- [ ] output of `pip list` from the virtual environment you are using\r\n\r\nThe pytest testing is not run in virtual environment, but in real environment.\r\n\r\n- [x] pytest and operating system versions\r\n\r\npytest 8.1.0\r\nOpenIndiana (rolling release, up-to-date)\r\n\r\n- [ ] minimal example if possible\r\n",
      "state": "CLOSED",
      "createdAt": "2024-03-04T14:27:21Z",
      "updatedAt": "2024-03-04T22:31:39Z",
      "closedAt": "2024-03-04T15:18:06Z",
      "author": {
        "login": "mtelka"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 10
      }
    },
    {
      "number": 12072,
      "title": "`flaky` is broken with `pytest` 8.1",
      "body": "<!--\r\nThanks for submitting an issue!\r\n\r\nQuick check-list while reporting bugs:\r\n-->\r\n\r\n```\r\n  File \"<frozen importlib._bootstrap>\", line 1204, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 1176, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 1147, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 690, in _load_unlocked\r\n  File \"/home/travis/miniconda/envs/env/lib/python3.11/site-packages/_pytest/assertion/rewrite.py\", line 178, in exec_module\r\n    exec(co, module.__dict__)\r\n  File \"/home/travis/miniconda/envs/flaqumen/lib/python3.11/site-packages/flaky/flaky_pytest_plugin.py\", line 5, in <module>\r\n    from _pytest.runner import call_runtest_hook  # pylint:disable=import-error\r\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nImportError: cannot import name 'call_runtest_hook' from '_pytest.runner' (/home/travis/miniconda/envs/env/lib/python3.11/site-packages/_pytest/runner.py)\r\n```\r\n\r\nI'm not sure if this is a duplicate of #12069 (please feel free to close if so)\r\n\r\nbut I will note that `flaky` hasn't had a new release in almost 4 years:\r\nhttps://github.com/box/flaky\r\n\r\n",
      "state": "CLOSED",
      "createdAt": "2024-03-04T13:04:55Z",
      "updatedAt": "2024-03-04T14:21:52Z",
      "closedAt": "2024-03-04T13:15:29Z",
      "author": {
        "login": "qci-amos"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 4
      }
    },
    {
      "number": 12071,
      "title": "Test becomes flaky by upgrading pytest from 7.4.4 to 8.1.0 -> fails normally but is successfull when run in verbose more",
      "body": "<!--\r\nThanks for submitting an issue!\r\n\r\nQuick check-list while reporting bugs:\r\n-->\r\n- [x] a detailed description of the bug or problem you are having\r\n  In my github actions, I am seeing a strange behaviour of one of my unit tests failing when executed normally but when executed in debug mode or with -v ( verbose mode) the test passes. In the normal mode, it appears that my application cache / a object level dict attribute is being cleared, causing Key error later on.  Details of the test case and the logs from the test runs on github runner are provided below. This was not the behaviour with pytest 7.4.4\r\n \r\n\r\n- [x] output of `pip list` from the virtual environment you are using\r\n   The poetry lock file with all dependencies is [here](https://github.com/mkashwin/unifiednamespace/blob/main/05_sparkplugb/poetry.lock)\r\n\r\n- [x] pytest and operating system versions\r\n   Ubuntu 22.04.4 LTS ( as provided in the github runner) \r\n   pytest version 8.1.0\r\n\r\n- [x] minimal example if possible\r\n  The link to the unit test case which is failing is \r\n  [test_spb2unspublisher](https://github.com/mkashwin/unifiednamespace/blob/4d616a857ed0fe225a88812594fbcb58ea572877/05_sparkplugb/test/test_spb2unspublisher.py#L168)\r\n\r\n  [Run1 : done without debug mode and fails](https://github.com/mkashwin/unifiednamespace/actions/runs/8136886960/job/22234054817)\r\n   - The error here  ` KeyError: 'group1_/edge_node_1/MyDevice'`  makes no sense as the key was explicitly set in the actual code code\r\n      [Application Code](https://github.com/mkashwin/unifiednamespace/blob/4d616a857ed0fe225a88812594fbcb58ea572877/05_sparkplugb/src/uns_spb_mapper/spb2unspublisher.py#L203) with the logic to set the cache key \r\n\r\n  [Run3 : Done with debug mode and no further changes and passes](https://github.com/mkashwin/unifiednamespace/actions/runs/8136886960/job/22244913210)\r\n  ",
      "state": "CLOSED",
      "createdAt": "2024-03-04T12:49:59Z",
      "updatedAt": "2024-03-12T22:22:51Z",
      "closedAt": "2024-03-12T22:22:50Z",
      "author": {
        "login": "mkashwin"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 7
      }
    },
    {
      "number": 12069,
      "title": "[YANKED] pytest 8.1.0 removes many deprecations, but not mentioned in changelog",
      "body": "https://github.com/pytest-dev/pytest/pull/11757 is not mentioned as a breaking change for the Pytest 8.1.0 Release in https://docs.pytest.org/en/stable/changelog.html ; it breaks plugins who were still supporting the older signature.\r\n\r\nI'm opening this issue as a hint to others; is it possible to update the changelog after a release?",
      "state": "CLOSED",
      "createdAt": "2024-03-04T11:18:50Z",
      "updatedAt": "2024-03-10T14:35:36Z",
      "closedAt": "2024-03-08T23:06:48Z",
      "author": {
        "login": "mr-c"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 37
      }
    },
    {
      "number": 12068,
      "title": "warnings of early configuration hooks are not reported",
      "body": "it seems we missed warnings triggered by pluggy or pytest in early hooks \r\n\r\n_Originally posted by @bluetech in https://github.com/pytest-dev/pytest/issues/12061#issuecomment-1976300706_\r\n            ",
      "state": "OPEN",
      "createdAt": "2024-03-04T11:09:16Z",
      "updatedAt": "2024-03-04T11:09:43Z",
      "closedAt": null,
      "author": {
        "login": "RonnyPfannschmidt"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "plugin: warnings"
          },
          {
            "name": "topic: config"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      }
    },
    {
      "number": 12067,
      "title": "AttributeError: 'str' object has no attribute 'iter_parents'",
      "body": "pytest-allure fails with pytest version 8.1.0\r\n\r\nError traceback:\r\n```self = <allure_pytest.listener.AllureListener object at 0x000001E0979AE360>\r\nitem = <Function test_shipping_charged[CreditCard]>\r\n\r\n    @pytest.hookimpl(hookwrapper=True)\r\n    def pytest_runtest_setup(self, item):\r\n        if not self._cache.get(item.nodeid):\r\n            uuid = self._cache.push(item.nodeid)\r\n            test_result = TestResult(name=item.name, uuid=uuid, start=now(), stop=now())\r\n            self.allure_logger.schedule_test(uuid, test_result)\r\n        yield\r\n>       self._update_fixtures_children(item)\r\n\r\nvenv\\Lib\\site-packages\\allure_pytest\\listener.py:88:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\nvenv\\Lib\\site-packages\\allure_pytest\\listener.py:63: in _update_fixtures_children\r\n    for fixturedef in _test_fixtures(item):\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nitem = <Function test_shipping_charged[CreditCard]>\r\n\r\n    def _test_fixtures(item):\r\n        fixturemanager = item.session._fixturemanager\r\n        fixturedefs = []\r\n\r\n        if hasattr(item, \"_request\") and hasattr(item._request, \"fixturenames\"):\r\n            for name in item._request.fixturenames:\r\n>               fixturedefs_pytest = fixturemanager.getfixturedefs(name, item.nodeid)\r\nE               AttributeError: 'str' object has no attribute 'iter_parents'\r\n\r\nvenv\\Lib\\site-packages\\allure_pytest\\listener.py:303: AttributeError\r\n```\r\nPip list:\r\n```\r\n> pip list\r\nPackage                  Version\r\n------------------------ -----------\r\nallure-pytest            2.12.0\r\nallure-python-commons    2.12.0\r\nappdirs                  1.4.4\r\nattrs                    23.2.0\r\nAuthlib                  1.3.0\r\nAvalara                  23.11.0\r\nbeautifulsoup4           4.12.3\r\nbs4                      0.0.2\r\ncachetools               5.3.2\r\ncertifi                  2023.11.17\r\ncffi                     1.16.0\r\ncharset-normalizer       3.3.2\r\ncolorama                 0.4.6\r\ncryptography             42.0.1\r\ncssselect                1.2.0\r\ndeepdiff                 6.3.1\r\ndeepmerge                1.1.1\r\necdsa                    0.18.0\r\nexecnet                  2.0.2\r\nfake-useragent           1.4.0\r\ngoogle-api-core          2.16.0\r\ngoogle-auth              2.27.0\r\ngoogle-cloud-core        2.4.1\r\ngoogle-cloud-firestore   2.14.0\r\ngoogle-cloud-pubsub      2.19.0\r\ngoogleapis-common-protos 1.62.0\r\ngrpc-google-iam-v1       0.13.0\r\ngrpcio                   1.60.0\r\ngrpcio-status            1.60.0\r\nh11                      0.14.0\r\nidna                     3.6\r\nimportlib-metadata       7.0.1\r\niniconfig                2.0.0\r\nisodate                  0.6.1\r\nlxml                     5.1.0\r\nordered-set              4.1.0\r\noutcome                  1.3.0.post0\r\npackaging                23.2\r\nparse                    1.20.1\r\nPillow                   9.5.0\r\npip                      24.0\r\npixelmatch               0.3.0\r\nplatformdirs             4.1.0\r\npluggy                   1.4.0\r\nproto-plus               1.23.0\r\nprotobuf                 4.25.2\r\npyasn1                   0.5.1\r\npyasn1-modules           0.3.0\r\npycparser                2.21\r\npyee                     8.2.2\r\npyodbc                   5.0.1\r\npypdf                    4.0.1\r\npyppeteer                1.0.2\r\npyquery                  2.0.0\r\nPySocks                  1.7.1\r\npyspnego                 0.10.2\r\npytest                   8.1.0\r\npytest-rerunfailures     13.0\r\npytest-xdist             3.5.0\r\npython-dateutil          2.8.2\r\npython-jose              3.3.0\r\npytz                     2023.4\r\nPyYAML                   6.0.1\r\nrequests                 2.31.0\r\nrequests-file            2.0.0\r\nrequests-html            0.10.0\r\nrequests-toolbelt        1.0.0\r\nrsa                      4.9\r\nselenium                 4.16.0\r\nsimple-salesforce        1.11.6\r\nsix                      1.16.0\r\nsmbprotocol              1.12.0\r\nsniffio                  1.3.0\r\nsortedcontainers         2.4.0\r\nsoupsieve                2.5\r\nsspilib                  0.1.0\r\ntqdm                     4.66.1\r\ntrio                     0.24.0\r\ntrio-websocket           0.11.1\r\nurllib3                  1.26.18\r\nw3lib                    2.1.2\r\nwebsockets               10.4\r\nwsproto                  1.2.0\r\nxmltodict                0.13.0\r\nzeep                     4.2.1\r\nzipp                     3.17.0\r\n```",
      "state": "CLOSED",
      "createdAt": "2024-03-04T11:01:15Z",
      "updatedAt": "2024-03-04T11:05:47Z",
      "closedAt": "2024-03-04T11:05:47Z",
      "author": {
        "login": "orestk-adorama"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 12066,
      "title": "ImportError: cannot import name 'call_runtest_hook' from '_pytest.runner'",
      "body": "Hi while running pytest on github CI, i got the below error:\r\n```ImportError: cannot import name 'call_runtest_hook' from '_pytest.runner'```\r\n\r\nhere is the full trace:\r\n```bash\r\nTraceback (most recent call last):\r\n  File \"/home/runner/miniconda3/envs/deepchem/bin/pytest\", line 8, in <module>\r\n    sys.exit(console_main())\r\n  File \"/home/runner/miniconda3/envs/deepchem/lib/python3.9/site-packages/_pytest/config/__init__.py\", line 195, in console_main\r\n    code = main()\r\n  File \"/home/runner/miniconda3/envs/deepchem/lib/python3.9/site-packages/_pytest/config/__init__.py\", line 153, in main\r\n    config = _prepareconfig(args, plugins)\r\n  File \"/home/runner/miniconda3/envs/deepchem/lib/python3.9/site-packages/_pytest/config/__init__.py\", line 335, in _prepareconfig\r\n    config = pluginmanager.hook.pytest_cmdline_parse(\r\n  File \"/home/runner/miniconda3/envs/deepchem/lib/python3.9/site-packages/pluggy/_hooks.py\", line 501, in __call__\r\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\r\n  File \"/home/runner/miniconda3/envs/deepchem/lib/python3.9/site-packages/pluggy/_manager.py\", line 119, in _hookexec\r\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\r\n  File \"/home/runner/miniconda3/envs/deepchem/lib/python3.9/site-packages/pluggy/_callers.py\", line 138, in _multicall\r\n    raise exception.with_traceback(exception.__traceback__)\r\n  File \"/home/runner/miniconda3/envs/deepchem/lib/python3.9/site-packages/pluggy/_callers.py\", line 121, in _multicall\r\n    teardown.throw(exception)  # type: ignore[union-attr]\r\n  File \"/home/runner/miniconda3/envs/deepchem/lib/python3.9/site-packages/_pytest/helpconfig.py\", line 105, in pytest_cmdline_parse\r\n    config = yield\r\n  File \"/home/runner/miniconda3/envs/deepchem/lib/python3.9/site-packages/pluggy/_callers.py\", line 102, in _multicall\r\n    res = hook_impl.function(*args)\r\n  File \"/home/runner/miniconda3/envs/deepchem/lib/python3.9/site-packages/_pytest/config/__init__.py\", line 1141, in pytest_cmdline_parse\r\n    self.parse(args)\r\n  File \"/home/runner/miniconda3/envs/deepchem/lib/python3.9/site-packages/_pytest/config/__init__.py\", line 1490, in parse\r\n    self._preparse(args, addopts=addopts)\r\n  File \"/home/runner/miniconda3/envs/deepchem/lib/python3.9/site-packages/_pytest/config/__init__.py\", line 1377, in _preparse\r\n    self.pluginmanager.load_setuptools_entrypoints(\"pytest11\")\r\n  File \"/home/runner/miniconda3/envs/deepchem/lib/python3.9/site-packages/pluggy/_manager.py\", line 414, in load_setuptools_entrypoints\r\n    plugin = ep.load()\r\n  File \"/home/runner/miniconda3/envs/deepchem/lib/python3.9/importlib/metadata.py\", line 86, in load\r\n    module = import_module(match.group('module'))\r\n  File \"/home/runner/miniconda3/envs/deepchem/lib/python3.9/importlib/__init__.py\", line 127, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 1030, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 1007, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 986, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 680, in _load_unlocked\r\n  File \"/home/runner/miniconda3/envs/deepchem/lib/python3.9/site-packages/_pytest/assertion/rewrite.py\", line 178, in exec_module\r\n    exec(co, module.__dict__)\r\n  File \"/home/runner/miniconda3/envs/deepchem/lib/python3.9/site-packages/flaky/flaky_pytest_plugin.py\", line 5, in <module>\r\n    from _pytest.runner import call_runtest_hook  # pylint:disable=import-error\r\nImportError: cannot import name 'call_runtest_hook' from '_pytest.runner' (/home/runner/miniconda3/envs/deepchem/lib/python3.9/site-packages/_pytest/runner.py)\r\n```\r\nRequesting you to please help me fix the bug\r\n---\r\nSystem specifications:\r\nOS: Ubuntu 22.04\r\npython version: 3.8, 3.9, 3.10, 3.11\r\npytest version: 8.1.0\r\ncommand used: `pytest -v -m 'jax' deepchem`\r\n\r\n- [x] a detailed description of the bug or problem you are having\r\n- [ ] output of `pip list` from the virtual environment you are using\r\n- [x] pytest and operating system versions\r\n- [x] minimal example if possible\r\n",
      "state": "CLOSED",
      "createdAt": "2024-03-04T10:18:30Z",
      "updatedAt": "2024-03-15T10:45:38Z",
      "closedAt": "2024-03-04T10:35:12Z",
      "author": {
        "login": "shreyasvinaya"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 12065,
      "title": "Pytest 8.1.0 AttributeError: 'NoneType' object has no attribute 'setup_method' with staticmethod test",
      "body": "Hi, the code that was working fine with pytest==8.0.2 started giving the error below for pytest==8.1.0.\r\n\r\nLogs with pytest 8.0.2: https://github.com/BlueBrain/BlueCelluLab/actions/runs/8114860416/job/22181464420\r\nLogs with pytest 8.1.0: https://github.com/BlueBrain/BlueCelluLab/actions/runs/8138274377/job/22239015810?pr=142\r\n\r\n```\r\n  request = <SubRequest '_xunit_setup_method_fixture_TestSonataSimulationAccess' for <Function test_init_file_not_found>>\r\n  \r\n      def xunit_setup_method_fixture(request) -> Generator[None, None, None]:\r\n          instance = request.instance\r\n          method = request.function\r\n          if setup_method is not None:\r\n  >           func = getattr(instance, setup_name)\r\n  E           AttributeError: 'NoneType' object has no attribute 'setup_method'\r\n  \r\n  lib/python3.11/site-packages/_pytest/python.py:844: AttributeError\r\n```\r\nAll of the installed dependencies and the system versions are available in the CI logs.",
      "state": "CLOSED",
      "createdAt": "2024-03-04T10:13:18Z",
      "updatedAt": "2024-03-10T14:29:07Z",
      "closedAt": "2024-03-10T14:29:07Z",
      "author": {
        "login": "anilbey"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: bug"
          },
          {
            "name": "type: regression"
          },
          {
            "name": "python"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 6
      }
    },
    {
      "number": 12064,
      "title": "ERROR: not found: .yaml",
      "body": "I have a project, where I have a yaml file in the tests folder.\r\n```\r\ntests/\r\n  conftest.py\r\n  mock-send-batch-emails-queue.yaml\r\n  test_email_service.py\r\nmain.py\r\n```\r\nRunning pytest fails with the following error:\r\n```\r\npytest -v tests/* --junitxml=test-reports/report.xml\r\n============================= test session starts ==============================\r\nplatform linux -- Python 3.12.2, pytest-8.1.0, pluggy-1.4.0 -- /usr/local/bin/python\r\ncachedir: .pytest_cache\r\nrootdir: /opt/atlassian/pipelines/agent/build\r\nplugins: mock-3.12.0\r\nERROR: not found: /opt/atlassian/pipelines/agent/build/tests/mock-send-batch-emails-queue.yaml\r\n(no match in any of [<Dir tests>])\r\n```\r\nIt fails on bitbucket, running on linux, but succeeds on my dev windows machine. Both are running pytest 8.1.0 and python 3.12",
      "state": "CLOSED",
      "createdAt": "2024-03-04T10:02:26Z",
      "updatedAt": "2024-03-04T11:06:04Z",
      "closedAt": "2024-03-04T11:06:04Z",
      "author": {
        "login": "asztalosdani"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "status: needs information"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 12063,
      "title": "Fixture in pytest 8.1.0",
      "body": "Use Fixture in my tests. With version pytest 8.1.0 (2024-03-03) have problems when call them:\r\n\r\n```\r\nself = <allure_pytest.listener.AllureListener object at 0x7f3cc910a750>\r\nitem = <Function test_moscow_kladr>\r\n    @pytest.hookimpl(hookwrapper=True)\r\n    def pytest_runtest_setup(self, item):\r\n        if not self._cache.get(item.nodeid):\r\n            uuid = self._cache.push(item.nodeid)\r\n            test_result = TestResult(name=item.name, uuid=uuid, start=now(), stop=now())\r\n            self.allure_logger.schedule_test(uuid, test_result)\r\n        yield\r\n>       self._update_fixtures_children(item)\r\n/usr/local/lib/python3.11/site-packages/allure_pytest/listener.py:102: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n/usr/local/lib/python3.11/site-packages/allure_pytest/listener.py:71: in _update_fixtures_children\r\n    for fixturedef in _test_fixtures(item):\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\nitem = <Function test_moscow_kladr>\r\n    def _test_fixtures(item):\r\n        fixturemanager = item.session._fixturemanager\r\n        fixturedefs = []\r\n    \r\n        if hasattr(item, \"_request\") and hasattr(item._request, \"fixturenames\"):\r\n            for name in item._request.fixturenames:\r\n>               fixturedefs_pytest = fixturemanager.getfixturedefs(name, item.nodeid)\r\nE               AttributeError: 'str' object has no attribute 'iter_parents'\r\n/usr/local/lib/python3.11/site-packages/allure_pytest/listener.py:345: AttributeError\r\n```",
      "state": "CLOSED",
      "createdAt": "2024-03-04T10:02:03Z",
      "updatedAt": "2024-03-04T10:20:05Z",
      "closedAt": "2024-03-04T10:20:05Z",
      "author": {
        "login": "zheldashev"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 12062,
      "title": "`pytest_assertrepr_compare` is executed on passing assertions when a `pytest_assertion_pass` hook is defined",
      "body": "<!--\r\nThanks for submitting an issue!\r\n\r\nQuick check-list while reporting bugs:\r\n-->\r\n\r\n- [X] a detailed description of the bug or problem you are having\r\n  [the documentation for `pytest_assertrepr_compare`](https://docs.pytest.org/en/latest/reference/reference.html#pytest.hookspec.pytest_assertrepr_compare) states that this hook is only called when an assertion fails. however if a `pytest_assertion_pass` hook is present, then the `pytest_assertrepr_compare` hook also gets called when the assertion passes.\r\n\r\n  not sure if it's intentional or not, but if it is, this behavior should be mentioned in the docs\r\n- [ ] output of `pip list` from the virtual environment you are using\r\n  not using pip\r\n- [X] pytest and operating system versions\r\n  pytest 8.1.0, windows 10 & 11\r\n- [X] minimal example if possible\r\n  ```py\r\n  # conftest.py\r\n  def pytest_assertrepr_compare():\r\n    raise Exception # this gets called even though the assertion passed\r\n\r\n\r\n  def pytest_assertion_pass():\r\n      pass\r\n  ```\r\n  ```py\r\n  # test_foo.py\r\n  def test_foo():\r\n      assert 0 == 0\r\n  ```",
      "state": "OPEN",
      "createdAt": "2024-03-04T07:18:24Z",
      "updatedAt": "2024-03-12T08:22:14Z",
      "closedAt": null,
      "author": {
        "login": "DetachHead"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: docs"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      }
    },
    {
      "number": 12061,
      "title": "v8.1.0 changes plugin registration",
      "body": "Thanks for your work and effort in maintaining pytest! Unfortunately, the release of v8.1.0 seems to break all our test suites (e.g. at [ixmp](https://github.com/iiasa/ixmp/actions/runs/8136032924) and [message_ix](https://github.com/iiasa/message_ix/actions/runs/8136061354). I've tried to confirm this by updating just pytest locally in my venv and this did indeed break the tests locally as well.\r\nSo I had:\r\n\r\n```bash\r\nfridolin@fridolin-Latitude-5520 ~/ixmp (main)> (mix312) pip list\r\nPackage                       Version                                Editable project location\r\n----------------------------- -------------------------------------- --------------------------------\r\nalabaster                     0.7.16\r\nanyio                         4.2.0\r\nargon2-cffi                   23.1.0\r\nargon2-cffi-bindings          21.2.0\r\narrow                         1.3.0\r\nasttokens                     2.4.1\r\nasync-lru                     2.0.4\r\nasyncssh                      2.14.2\r\nattrs                         23.2.0\r\nBabel                         2.14.0\r\nbeautifulsoup4                4.12.3\r\nbleach                        6.1.0\r\nbottle                        0.12.25\r\ncattrs                        23.2.3\r\ncertifi                       2023.11.17\r\ncffi                          1.16.0\r\ncharset-normalizer            3.3.2\r\nclick                         8.1.7\r\ncloudpickle                   3.0.0\r\ncolorama                      0.4.6\r\ncomm                          0.2.1\r\ncontourpy                     1.2.0\r\ncoverage                      7.4.1\r\ncryptography                  42.0.2\r\ncycler                        0.12.1\r\ndask                          2024.1.1\r\ndebugpy                       1.8.0\r\ndecorator                     5.1.1\r\ndefusedxml                    0.7.1\r\ndocutils                      0.20.1\r\net-xmlfile                    1.1.0\r\nexecnet                       2.0.2\r\nexecuting                     2.0.1\r\nfastjsonschema                2.19.1\r\nfonttools                     4.47.2\r\nfqdn                          1.5.1\r\nfsspec                        2023.12.2\r\ngenno                         1.23.0\r\ngitdb                         4.0.11\r\nGitPython                     3.1.41\r\ngraphviz                      0.20.1\r\niam-units                     2023.9.12\r\nidna                          3.6\r\nimagesize                     1.4.1\r\nimportlib-metadata            7.0.1\r\niniconfig                     2.0.0\r\nipykernel                     6.29.0\r\nipython                       8.21.0\r\nipywidgets                    8.1.1\r\nisoduration                   20.11.0\r\nixmp                          3.8.1.dev9+g9b93531                    /home/fridolin/ixmp\r\nJayDeBeApi                    1.2.3\r\njedi                          0.19.1\r\nJinja2                        3.1.3\r\njoblib                        1.3.2\r\nJPype1                        1.5.0\r\njson5                         0.9.14\r\njsonpointer                   2.4\r\njsonschema                    4.21.1\r\njsonschema-specifications     2023.12.1\r\njupyter                       1.0.0\r\njupyter_client                8.6.0\r\njupyter-console               6.6.3\r\njupyter_core                  5.7.1\r\njupyter-events                0.9.0\r\njupyter-lsp                   2.2.2\r\njupyter_server                2.12.5\r\njupyter_server_terminals      0.5.2\r\njupyterlab                    4.0.12\r\njupyterlab_pygments           0.3.0\r\njupyterlab_server             2.25.2\r\njupyterlab-widgets            3.0.9\r\nkiwisolver                    1.4.5\r\nlatexcodec                    2.0.1\r\nlocket                        1.0.0\r\nlxml                          5.1.0\r\nMarkupSafe                    2.1.4\r\nmatplotlib                    3.8.2\r\nmatplotlib-inline             0.1.6\r\nmemory-profiler               0.61.0\r\nmessage_data                  2020.6.21.dev2803+g4b651605c.d20240201 /home/fridolin/message_data\r\nmessage_ix                    3.8.1.dev4+g4dae41e                    /home/fridolin/message_ix\r\nmessage-ix-models             2023.11.25.dev61+g99244af2             /home/fridolin/message-ix-models\r\nmistune                       3.0.2\r\nmizani                        0.9.3\r\nmypy                          1.8.0\r\nmypy-extensions               1.0.0\r\nnbclient                      0.9.0\r\nnbconvert                     7.14.2\r\nnbformat                      5.9.2\r\nnest-asyncio                  1.6.0\r\nnotebook                      7.0.7\r\nnotebook_shim                 0.2.3\r\nnumpy                         1.26.3\r\nnumpydoc                      1.6.0\r\nopenpyxl                      3.1.0\r\noracledb                      2.0.1\r\noverrides                     7.7.0\r\npackaging                     23.2\r\npandas                        2.2.0\r\npandocfilters                 1.5.1\r\nparso                         0.8.3\r\npartd                         1.4.1\r\npatsy                         0.5.6\r\npexpect                       4.9.0\r\npillow                        10.2.0\r\nPint                          0.17\r\npip                           23.3.2\r\nplatformdirs                  4.2.0\r\nplotnine                      0.12.4\r\npluggy                        1.4.0\r\npooch                         1.8.0\r\npprint36                      3.9.16.0\r\npretenders                    1.4.5\r\nprometheus-client             0.19.0\r\nprompt-toolkit                3.0.43\r\npsutil                        5.9.8\r\nptyprocess                    0.7.0\r\npure-eval                     0.2.2\r\npy-cpuinfo                    9.0.0\r\npyam-iamc                     1.3.1\r\npyarrow                       15.0.0\r\npybtex                        0.24.0\r\npybtex-docutils               1.0.3\r\npycountry                     23.12.11\r\npycparser                     2.21\r\nPygments                      2.17.2\r\npyparsing                     3.1.1\r\npytest                        8.0.0\r\npytest-benchmark              4.0.0\r\npytest-cov                    4.1.0\r\npytest-rerunfailures          13.0\r\npytest-xdist                  3.5.0\r\npython-dateutil               2.8.2\r\npython-json-logger            2.0.7\r\npytz                          2023.4\r\nPyYAML                        6.0.1\r\npyzmq                         25.1.2\r\nqtconsole                     5.5.1\r\nQtPy                          2.4.1\r\nreferencing                   0.33.0\r\nrequests                      2.31.0\r\nrequests-cache                1.1.1\r\nrequests-ftp                  0.3.1\r\nrfc3339-validator             0.1.4\r\nrfc3986-validator             0.1.1\r\nrpds-py                       0.17.1\r\nruff                          0.1.15\r\nscipy                         1.12.0\r\nsdmx1                         2.13.1\r\nseaborn                       0.13.2\r\nSend2Trash                    1.8.2\r\nsetuptools                    69.0.3\r\nsetuptools-scm                8.0.4\r\nsix                           1.16.0\r\nsmmap                         5.0.1\r\nsniffio                       1.3.0\r\nsnowballstemmer               2.2.0\r\nsoupsieve                     2.5\r\nSphinx                        7.2.6\r\nsphinx-rtd-theme              2.0.0\r\nsphinxcontrib-applehelp       1.0.8\r\nsphinxcontrib-bibtex          2.6.2\r\nsphinxcontrib-devhelp         1.0.6\r\nsphinxcontrib-htmlhelp        2.0.5\r\nsphinxcontrib-jquery          4.1\r\nsphinxcontrib-jsmath          1.0.1\r\nsphinxcontrib-qthelp          1.0.7\r\nsphinxcontrib-serializinghtml 1.1.10\r\nstack-data                    0.6.3\r\nstatsmodels                   0.14.1\r\ntabulate                      0.9.0\r\nteamcity-messages             1.32\r\nterminado                     0.18.0\r\ntinycss2                      1.2.1\r\ntoolz                         0.12.1\r\ntornado                       6.4\r\ntqdm                          4.66.1\r\ntraitlets                     5.14.1\r\ntransport-energy              2021.5.4\r\ntypes-python-dateutil         2.8.19.20240106\r\ntypes-tqdm                    4.66.0.20240106\r\ntyping_extensions             4.9.0\r\ntzdata                        2023.4\r\nuri-template                  1.3.0\r\nurl-normalize                 1.4.3\r\nurllib3                       2.2.0\r\nwcwidth                       0.2.13\r\nwebcolors                     1.13\r\nwebencodings                  0.5.1\r\nwebsocket-client              1.7.0\r\nwheel                         0.42.0\r\nwidgetsnbextension            4.0.9\r\nxarray                        2024.1.1\r\nxlrd                          2.0.1\r\nXlsxWriter                    3.1.9\r\nzipp                          3.17.0\r\n\r\n[notice] A new release of pip is available: 23.3.2 -> 24.0\r\n[notice] To update, run: pip install --upgrade pip\r\nfridolin@fridolin-Latitude-5520 ~/ixmp (main)> (mix312) pytest ixmp/tests/test_config.py \r\n=========================================================== test session starts ============================================================\r\nplatform linux -- Python 3.12.2, pytest-8.0.0, pluggy-1.4.0\r\nbenchmark: 4.0.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)\r\nixmp config: Values(platform={'default': 'local', 'local': {'class': 'jdbc', 'driver': 'hsqldb'}}, message_buildings_dir=None)\r\nrootdir: /home/fridolin/ixmp\r\nconfigfile: pyproject.toml\r\nplugins: xdist-3.5.0, cov-4.1.0, benchmark-4.0.0, teamcity-messages-1.32, anyio-4.2.0, rerunfailures-13.0\r\ncollected 8 items                                                                                                                          \r\n\r\nixmp/tests/test_config.py ........                                                                                                   [100%]\r\n\r\n============================================================= warnings summary =============================================================\r\n../.virtualenvs/mix312/lib/python3.12/site-packages/dateutil/tz/tz.py:37\r\n  /home/fridolin/.virtualenvs/mix312/lib/python3.12/site-packages/dateutil/tz/tz.py:37: DeprecationWarning: datetime.datetime.utcfromtimestamp() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.fromtimestamp(timestamp, datetime.UTC).\r\n    EPOCH = datetime.datetime.utcfromtimestamp(0)\r\n\r\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\r\n======================================================= 8 passed, 1 warning in 0.21s =======================================================\r\nfridolin@fridolin-Latitude-5520 ~/ixmp (main)> (mix312) pip install --upgrade pytest\r\nRequirement already satisfied: pytest in /home/fridolin/.virtualenvs/mix312/lib/python3.12/site-packages (8.0.0)\r\nCollecting pytest\r\n  Downloading pytest-8.1.0-py3-none-any.whl.metadata (7.6 kB)\r\nRequirement already satisfied: iniconfig in /home/fridolin/.virtualenvs/mix312/lib/python3.12/site-packages (from pytest) (2.0.0)\r\nRequirement already satisfied: packaging in /home/fridolin/.virtualenvs/mix312/lib/python3.12/site-packages (from pytest) (23.2)\r\nRequirement already satisfied: pluggy<2.0,>=1.4 in /home/fridolin/.virtualenvs/mix312/lib/python3.12/site-packages (from pytest) (1.4.0)\r\nDownloading pytest-8.1.0-py3-none-any.whl (335 kB)\r\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 335.5/335.5 kB 4.2 MB/s eta 0:00:00\r\nInstalling collected packages: pytest\r\n  Attempting uninstall: pytest\r\n    Found existing installation: pytest 8.0.0\r\n    Uninstalling pytest-8.0.0:\r\n      Successfully uninstalled pytest-8.0.0\r\nSuccessfully installed pytest-8.1.0\r\n```\r\n\r\nAnd this lead to the following error and traceback:\r\n```bash\r\nfridolin@fridolin-Latitude-5520 ~/ixmp (main)> (mix312) pytest ixmp/tests/test_config.py\r\nTraceback (most recent call last):\r\n  File \"/home/fridolin/.virtualenvs/mix312/bin/pytest\", line 8, in <module>\r\n    sys.exit(console_main())\r\n             ^^^^^^^^^^^^^^\r\n  File \"/home/fridolin/.virtualenvs/mix312/lib/python3.12/site-packages/_pytest/config/__init__.py\", line 195, in console_main\r\n    code = main()\r\n           ^^^^^^\r\n  File \"/home/fridolin/.virtualenvs/mix312/lib/python3.12/site-packages/_pytest/config/__init__.py\", line 153, in main\r\n    config = _prepareconfig(args, plugins)\r\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/fridolin/.virtualenvs/mix312/lib/python3.12/site-packages/_pytest/config/__init__.py\", line 335, in _prepareconfig\r\n    config = pluginmanager.hook.pytest_cmdline_parse(\r\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/fridolin/.virtualenvs/mix312/lib/python3.12/site-packages/pluggy/_hooks.py\", line 501, in __call__\r\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/fridolin/.virtualenvs/mix312/lib/python3.12/site-packages/pluggy/_manager.py\", line 119, in _hookexec\r\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/fridolin/.virtualenvs/mix312/lib/python3.12/site-packages/pluggy/_callers.py\", line 138, in _multicall\r\n    raise exception.with_traceback(exception.__traceback__)\r\n  File \"/home/fridolin/.virtualenvs/mix312/lib/python3.12/site-packages/pluggy/_callers.py\", line 121, in _multicall\r\n    teardown.throw(exception)  # type: ignore[union-attr]\r\n    ^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/fridolin/.virtualenvs/mix312/lib/python3.12/site-packages/_pytest/helpconfig.py\", line 105, in pytest_cmdline_parse\r\n    config = yield\r\n             ^^^^^\r\n  File \"/home/fridolin/.virtualenvs/mix312/lib/python3.12/site-packages/pluggy/_callers.py\", line 102, in _multicall\r\n    res = hook_impl.function(*args)\r\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/fridolin/.virtualenvs/mix312/lib/python3.12/site-packages/_pytest/config/__init__.py\", line 1141, in pytest_cmdline_parse\r\n    self.parse(args)\r\n  File \"/home/fridolin/.virtualenvs/mix312/lib/python3.12/site-packages/_pytest/config/__init__.py\", line 1490, in parse\r\n    self._preparse(args, addopts=addopts)\r\n  File \"/home/fridolin/.virtualenvs/mix312/lib/python3.12/site-packages/_pytest/config/__init__.py\", line 1394, in _preparse\r\n    self.hook.pytest_load_initial_conftests(\r\n  File \"/home/fridolin/.virtualenvs/mix312/lib/python3.12/site-packages/pluggy/_hooks.py\", line 501, in __call__\r\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/fridolin/.virtualenvs/mix312/lib/python3.12/site-packages/pluggy/_manager.py\", line 119, in _hookexec\r\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/fridolin/.virtualenvs/mix312/lib/python3.12/site-packages/pluggy/_callers.py\", line 138, in _multicall\r\n    raise exception.with_traceback(exception.__traceback__)\r\n  File \"/home/fridolin/.virtualenvs/mix312/lib/python3.12/site-packages/pluggy/_callers.py\", line 121, in _multicall\r\n    teardown.throw(exception)  # type: ignore[union-attr]\r\n    ^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/fridolin/.virtualenvs/mix312/lib/python3.12/site-packages/_pytest/warnings.py\", line 150, in pytest_load_initial_conftests\r\n    return (yield)\r\n            ^^^^^\r\n  File \"/home/fridolin/.virtualenvs/mix312/lib/python3.12/site-packages/pluggy/_callers.py\", line 121, in _multicall\r\n    teardown.throw(exception)  # type: ignore[union-attr]\r\n    ^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/fridolin/.virtualenvs/mix312/lib/python3.12/site-packages/_pytest/capture.py\", line 153, in pytest_load_initial_conftests\r\n    yield\r\n  File \"/home/fridolin/.virtualenvs/mix312/lib/python3.12/site-packages/pluggy/_callers.py\", line 102, in _multicall\r\n    res = hook_impl.function(*args)\r\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/fridolin/.virtualenvs/mix312/lib/python3.12/site-packages/_pytest/config/__init__.py\", line 1219, in pytest_load_initial_conftests\r\n    self.pluginmanager._set_initial_conftests(\r\n  File \"/home/fridolin/.virtualenvs/mix312/lib/python3.12/site-packages/_pytest/config/__init__.py\", line 577, in _set_initial_conftests\r\n    self._try_load_conftest(\r\n  File \"/home/fridolin/.virtualenvs/mix312/lib/python3.12/site-packages/_pytest/config/__init__.py\", line 615, in _try_load_conftest\r\n    self._loadconftestmodules(\r\n  File \"/home/fridolin/.virtualenvs/mix312/lib/python3.12/site-packages/_pytest/config/__init__.py\", line 655, in _loadconftestmodules\r\n    mod = self._importconftest(\r\n          ^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/fridolin/.virtualenvs/mix312/lib/python3.12/site-packages/_pytest/config/__init__.py\", line 731, in _importconftest\r\n    self.consider_conftest(mod, registration_name=conftestpath_plugin_name)\r\n  File \"/home/fridolin/.virtualenvs/mix312/lib/python3.12/site-packages/_pytest/config/__init__.py\", line 812, in consider_conftest\r\n    self.register(conftestmodule, name=registration_name)\r\n  File \"/home/fridolin/.virtualenvs/mix312/lib/python3.12/site-packages/_pytest/config/__init__.py\", line 508, in register\r\n    self.consider_module(plugin)\r\n  File \"/home/fridolin/.virtualenvs/mix312/lib/python3.12/site-packages/_pytest/config/__init__.py\", line 820, in consider_module\r\n    self._import_plugin_specs(getattr(mod, \"pytest_plugins\", []))\r\n  File \"/home/fridolin/.virtualenvs/mix312/lib/python3.12/site-packages/_pytest/config/__init__.py\", line 827, in _import_plugin_specs\r\n    self.import_plugin(import_spec)\r\n  File \"/home/fridolin/.virtualenvs/mix312/lib/python3.12/site-packages/_pytest/config/__init__.py\", line 864, in import_plugin\r\n    self.register(mod, modname)\r\n  File \"/home/fridolin/.virtualenvs/mix312/lib/python3.12/site-packages/_pytest/config/__init__.py\", line 497, in register\r\n    plugin_name = super().register(plugin, name)\r\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/fridolin/.virtualenvs/mix312/lib/python3.12/site-packages/pluggy/_manager.py\", line 167, in register\r\n    self._verify_hook(hook, hookimpl)\r\n  File \"/home/fridolin/.virtualenvs/mix312/lib/python3.12/site-packages/pluggy/_manager.py\", line 342, in _verify_hook\r\n    raise PluginValidationError(\r\npluggy._manager.PluginValidationError: Plugin 'ixmp.testing' for hook 'pytest_report_header'\r\nhookimpl definition: pytest_report_header(config, startdir)\r\nArgument(s) {'startdir'} are declared in the hookimpl but can not be found in the hookspec\r\n```\r\n\r\nAnd to confirm\r\n```bash\r\nfridolin@fridolin-Latitude-5520 ~/ixmp (main) [1]> (mix312) pip list | grep pytest\r\npytest                        8.1.0\r\npytest-benchmark              4.0.0\r\npytest-cov                    4.1.0\r\npytest-rerunfailures          13.0\r\npytest-xdist                  3.5.0\r\n```\r\n\r\nLocally, I'm running this on Ubuntu 22.04 with Python 3.12, but as I said above, the exact same error occurs on all OS and from Python 3.8 through 3.12 in our CI. \r\n\r\nThe version of pluggy hasn't changed (neither on CI nor locally), same is true for ixmp, though that might be ill-configured so that the plugin is not properly registered. If that is the case, please let me know what we need to change on our end to accommodate v8.1.0 :)\r\n",
      "state": "CLOSED",
      "createdAt": "2024-03-04T06:45:19Z",
      "updatedAt": "2024-03-04T10:50:43Z",
      "closedAt": "2024-03-04T07:09:52Z",
      "author": {
        "login": "glatterf42"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 7
      }
    },
    {
      "number": 12060,
      "title": "pytest 8.1 no longer calls the teardown() method and i cannot find where this change is documented",
      "body": "example case:\r\n\r\n```py\r\nclass TestSuite:\r\n    def test_thing(self):\r\n        print(\"test thing\")\r\n        assert True\r\n\r\n    def teardown(self):\r\n        print(\"teardown\")\r\n```\r\n\r\npytest 8.0.2:\r\n\r\n```\r\n$ pytest mytest.py  -s\r\n================================================================================= test session starts ==================================================================================\r\nplatform linux -- Python 3.12.2, pytest-8.0.2, pluggy-1.4.0 -- /home/classic/.venv3/bin/python\r\ncachedir: .pytest_cache\r\nrootdir: /home/classic/dev/alembic\r\nconfigfile: setup.cfg\r\nplugins: xdist-3.4.0, anyio-4.1.0, random-0.2, repeat-0.9.3\r\ncollected 1 item                                                                                                                                                                       \r\n\r\nmytest.py::TestSuite::test_thing test thing\r\nPASSEDteardown\r\n\r\n```\r\n\r\npytest 8.1:\r\n\r\n```\r\n$ pytest mytest.py  -s\r\n================================================================================= test session starts ==================================================================================\r\nplatform linux -- Python 3.12.2, pytest-8.1.0, pluggy-1.4.0 -- /home/classic/.venv3/bin/python\r\ncachedir: .pytest_cache\r\nrootdir: /home/classic/dev/alembic\r\nconfigfile: setup.cfg\r\nplugins: xdist-3.4.0, anyio-4.1.0, random-0.2, repeat-0.9.3\r\ncollected 1 item                                                                                                                                                                       \r\n\r\nmytest.py::TestSuite::test_thing test thing\r\nPASSED\r\n\r\n```\r\n\r\nteardown is no longer called.      it looks like these methods now have to be called things like \"teardown_method()\" and such, plain \"teardown()\" (which I guess comes from nose?) I can't find in the docs...\r\n\r\nwhen did this change and is it documented at https://docs.pytest.org/en/stable/changelog.html ?  Im not able to recognize anything regarding this.",
      "state": "CLOSED",
      "createdAt": "2024-03-04T03:53:07Z",
      "updatedAt": "2024-03-04T03:55:49Z",
      "closedAt": "2024-03-04T03:55:48Z",
      "author": {
        "login": "zzzeek"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 12059,
      "title": "Newest version 8.1.0 leads an  unexpected error in my testcase.",
      "body": "<!--\r\nThanks for submitting an issue!\r\n\r\nQuick check-list while reporting bugs:\r\n-->\r\n\r\n- [ ] a detailed description of the bug or problem you are having\r\n- [ ] output of `pip list` from the virtual environment you are using\r\n- [ ] pytest and operating system versions\r\n- [ ] minimal example if possible\r\n\r\n\r\n```\r\n\r\nerror stack is:\r\n\r\n    def _test_fixtures(item):\r\n        fixturemanager = item.session._fixturemanager\r\n        fixturedefs = []\r\n    \r\n        if hasattr(item, \"_request\") and hasattr(item._request, \"fixturenames\"):\r\n            for name in item._request.fixturenames:\r\n>               fixturedefs_pytest = fixturemanager.getfixturedefs(name, item.nodeid)\r\nE               AttributeError: 'str' object has no attribute 'iter_parents'\r\n\r\n\r\n```\r\nRollback to vertion 8.0.2, it works fine.",
      "state": "CLOSED",
      "createdAt": "2024-03-04T03:48:11Z",
      "updatedAt": "2024-03-04T05:21:53Z",
      "closedAt": "2024-03-04T05:21:53Z",
      "author": {
        "login": "zhulinJulia24"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 12053,
      "title": "pdbcls as a configuration option?",
      "body": "#### What's the problem this feature will solve?\r\n\r\nFor some projects, I always use `--pdb` together with `--pdbcls=IPython.terminal.debugger:TerminalPdb`.  Unfortunately, `pytest --pdb --pdbcls=IPython.terminal.debugger:TerminalPdb` is a bit long and difficult to write. \r\n\r\n#### Describe the solution you'd like\r\n\r\nI like to be able to write in a configuration file (in my case, pyproject.toml) that I prefer `IPython.terminal.debugger:TerminalPdb` so that I can just call `pytest --pdb` and use the IPython debugger.\r\n\r\nSomething like\r\n\r\n```toml\r\n[tool.pytest.ini_options]\r\npdbcls = \"IPython.terminal.debugger:TerminalPdb\"\r\n```\r\n\r\nIt seems to me that it is currently not possible (https://docs.pytest.org/en/stable/reference/reference.html#ini-options-ref).\r\n",
      "state": "CLOSED",
      "createdAt": "2024-03-03T14:58:35Z",
      "updatedAt": "2024-03-04T10:29:18Z",
      "closedAt": "2024-03-03T18:36:13Z",
      "author": {
        "login": "paugier"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      }
    },
    {
      "number": 12047,
      "title": "When multiple fixture finalizers raise, only first exception is reported",
      "body": "As mentioned in the XXX comment here:\r\n\r\nhttps://github.com/pytest-dev/pytest/blob/6ed005161d329cc079e6439a17e7ac935c7c02e0/src/_pytest/fixtures.py#L1019-L1032\r\n\r\nThis means information on the extra errors that occurred is not reported, which should never happen ideally.\r\n\r\nWe should instead raise an exception group in this case, like we do for nodes since pytest 7.3 (#10226).",
      "state": "CLOSED",
      "createdAt": "2024-03-02T21:18:36Z",
      "updatedAt": "2024-03-03T13:09:37Z",
      "closedAt": "2024-03-03T13:09:37Z",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": [
          {
            "login": "bluetech"
          }
        ]
      },
      "labels": {
        "nodes": [
          {
            "name": "topic: reporting"
          },
          {
            "name": "topic: fixtures"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      }
    },
    {
      "number": 12045,
      "title": "multiprocessing spawn and monkeypatch",
      "body": "Monkeypatching in spawned up processes is not behaving as expected (e.g. as fork processes).\r\nIt seems that if we monkeypatch an attribute, and another object uses the attribute, the other object does not see the patch.\r\n\r\nThis is very relevant because for Python 3.14 forking up processes is going to be unavailable, [see](https://github.com/python/cpython/issues/84559). Current behavior makes it impossible to test whatever goes on in the child process on a lower level.\r\n\r\nI tested the following script on a docker container in a Mac, running\r\nUbuntu 20.04.6\r\nPython 3.12.1\r\npytest==8.0.2.\r\n\r\nIn the script, I test 2 scenarios, the first one a spawn child process and the second one a fork child process.\r\nFor each scenario, I mock a function and execute it via a wrapper function (and directly). In the case of the spawn process via wrapper, the function is not mocked. Am I missing something?\r\n\r\nNote: module name in monkeypatch needs to be specified for below script to run.\r\n\r\n```py\r\nfrom multiprocessing import get_context\r\nimport os\r\nimport pytest\r\nimport time\r\n\r\ndef mock_function(wrapper_flag= None):\r\n    print('Function was mocked! wrapped:', wrapper_flag, os.getpid())\r\n\r\ndef function_to_mock(wrapper_flag=None):\r\n    print('Function is not mocked. wrapped:', wrapper_flag, os.getpid())\r\n\r\ndef wrapper(wrapper_flag):\r\n    function_to_mock(wrapper_flag)\r\n\r\ndef create_process_and_execute_function_to_mock(ctx, wrapper_flag=False):\r\n    to_target = function_to_mock\r\n    if wrapper_flag:\r\n        to_target = wrapper\r\n    ctx_ = get_context(ctx)\r\n    process = ctx_.Process(target=to_target, kwargs={'wrapper_flag': wrapper_flag})\r\n    process.start()\r\n    print(process)\r\n    process.join()\r\n    time.sleep(1)\r\n\r\ndef test_mocking_spawn(monkeypatch):\r\n    monkeypatch.setattr(\"__name__\", mock_function)\r\n    print()\r\n    print('In current process:')\r\n    function_to_mock()\r\n    print('In Spawn:')\r\n    create_process_and_execute_function_to_mock('spawn')\r\n    #The following line results in the unexpected behavior\r\n    create_process_and_execute_function_to_mock('spawn', wrapper_flag=True)\r\n\r\ndef test_mocking_fork(monkeypatch):\r\n    monkeypatch.setattr(\"__name__\", mock_function)\r\n    print()\r\n    print('In current process:')\r\n    function_to_mock()\r\n    print('In Fork:')\r\n    create_process_and_execute_function_to_mock('fork')\r\n    create_process_and_execute_function_to_mock('fork', wrapper_flag=True)\r\n\r\nif __name__ == \"__main__\":\r\n    pytest.main(['-v', '-s',__file__])\r\n```",
      "state": "CLOSED",
      "createdAt": "2024-03-02T00:08:00Z",
      "updatedAt": "2024-08-19T11:29:46Z",
      "closedAt": "2024-03-24T01:49:24Z",
      "author": {
        "login": "gpadres"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "status: needs information"
          },
          {
            "name": "plugin: monkeypatch"
          },
          {
            "name": "stale"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 7
      }
    },
    {
      "number": 12044,
      "title": "--import-mode=importlib breaks assertion rewriting",
      "body": "```\r\n[tool.pytest.ini_options]\r\nminversion = \"8.0\"\r\npython_files = \"*.test.py\"\r\naddopts = [\r\n    \"--import-mode=importlib\",\r\n    ]\r\n```\r\nUsing `--import-mode=importlib` is more lenient than the default `import-mode`, and so it allowed me to use `*.test.py` rather than a valid module name e.g. `*_.test.py`.\r\n\r\nEverything seemed to work correctly except explanations were missing:\r\n```\r\n    def test_answer():\r\n>       assert inc(3) == 5\r\nE       AssertionError\r\n\r\ninsync/db.test.py:34: AssertionError\r\n```\r\ninstead of\r\n```\r\n    def test_answer():\r\n>       assert inc(3) == 5\r\nE       assert 4 == 5\r\nE        +  where 4 = inc(3)\r\n\r\ninsync/db_test.py:34: AssertionError\r\n```",
      "state": "OPEN",
      "createdAt": "2024-03-01T17:44:58Z",
      "updatedAt": "2024-08-03T18:35:21Z",
      "closedAt": null,
      "author": {
        "login": "y2kbugger"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "topic: rewrite"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 12
      }
    },
    {
      "number": 12041,
      "title": "[BUG?] Segfaults and modification of variables by pytest",
      "body": "<!--\r\nThanks for submitting an issue!\r\n\r\nQuick check-list while reporting bugs:\r\n-->\r\n## What happened?\r\n\r\nI am developing a [Python extension](...) in C and having some trouble setting up a minimal testing environment for the project. In my case, `pytest` seems to alter variables. For instance,\r\n\r\n```python\r\nclass MyClass:\r\n    foo: CpAtom()\r\n\r\n# let this be our constant\r\nS = CpStruct(MyClass)\r\n\r\ndef test1():\r\n    field = S.members[\"foo\"].field\r\n    assert field.name == \"foo\" # oops, segfault already\r\n    # field.name is now Item.location \r\n\r\n# calling the method without pytest does not result in errors\r\ntest1()\r\n```\r\n\r\nOkay, the segfault only happens if I run `pytest` globally - running the test alone does not throw any error.  What am I doing wrong?\r\n\r\n\r\n\r\n\r\n- [x] output of `pip list` from the virtual environment you are using\r\n```\r\nPackage                       Version  Editable project location\r\n----------------------------- -------- ------------------------------------------------------\r\n...\r\n```\r\n- [x] pytest and operating system versions\r\n```\r\npytest 8.0.2\r\nPython 3.12\r\n```\r\n- [ ] minimal example if possible (see above)\r\n",
      "state": "CLOSED",
      "createdAt": "2024-02-29T17:42:27Z",
      "updatedAt": "2024-03-01T07:41:52Z",
      "closedAt": "2024-03-01T07:38:40Z",
      "author": {
        "login": "MatrixEditor"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      }
    },
    {
      "number": 12040,
      "title": "setup_modules seems to be ignored with 8.0.1 + `--doctest-modules`",
      "body": "Hi Pytest team,\r\n\r\nIn [DIPY project](https://github.com/dipy/dipy), we use a lot `setup_module` and `teardown_module` and everything was working like a charm.\r\n\r\nSince pytest 8.0.1 and 8.0.2, it seems that `setup_module` and `teardown_module` are incompatible with `--doctest-modules` flag.\r\n\r\nAll our  tests fails when you add this flag due to unrecognized variable defined in `setup_module`.\r\n\r\nThis problem appears on Windows, Linux and macOS.\r\n\r\nLet me know if you need more information concerning this issue. For now, we will just pin pytest to 8.0.0\r\n\r\nThank you for you feedback",
      "state": "CLOSED",
      "createdAt": "2024-02-28T15:15:49Z",
      "updatedAt": "2024-02-29T15:22:20Z",
      "closedAt": "2024-02-28T21:43:16Z",
      "author": {
        "login": "skoudoro"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      }
    },
    {
      "number": 12039,
      "title": "Pytest 8.0.2 may collect tests multiple times under Windows",
      "body": "I'm not quite sure if this is a bug, or a problem with the test or GitHub Actions, but since version 8.0.2 a test in `pytest-order` fails in the CI under Windows, which worked fine in 8.0.1 and previous versions. Linux and macOS tests are not affected.\r\n\r\nPytest run environment in the CI:\r\n```\r\nplatform win32 -- Python 3.11.8, pytest-8.0.2, pluggy-1.4.0 -- D:\\a\\pytest-order\\pytest-order\\.tox\\py311-pytest80\\Scripts\\python.EXE\r\ncachedir: .tox\\py311-pytest80\\.pytest_cache\r\nrootdir: D:\\a\\pytest-order\\pytest-order\r\nplugins: cov-2.9.0, dependency-0.6.0, mock-3.12.0, xdist-3.5.0\r\n```\r\nThe same happens for Python 3.8 - 3.12.\r\n\r\nThe [actual test](https://github.com/pytest-dev/pytest-order/blob/main/tests/test_xdist_handling.py) should collect 6 items (3 tests per test module, in 2 modules) that are created in the directory provided by the `tempdir` fixture, \r\nbut collects 24 tests in the CI instead. Locally, it works as expected.\r\n\r\nChecking the failed tests revealed that the tests have been collected from different locations. The tempdir had been at:\r\n`C:\\\\Users\\\\runneradmin\\\\AppData\\\\Local\\\\Temp\\\\pytest-of-runneradmin\\\\pytest-9\\\\test_xdist_ordering0` \r\n(for a specific run), but the same tests have been discovered with a test ID with just the qualified test name, and additionally with the test IDs:\r\n`::::Users::runneradmin::AppData::Local::Temp::pytest-of-runneradmin::pytest-9:::xxx` and \r\n`::::Documents and Settings::runneradmin::AppData::Local::Temp::pytest-of-runneradmin::pytest-9::xxx`,\r\nwhich are most likely aliases.\r\n\r\nI haven't dug into this yet, but I suspect it may have something to do with the fix for [the problem with short paths](https://github.com/pytest-dev/pytest/issues/11895).\r\n",
      "state": "CLOSED",
      "createdAt": "2024-02-27T20:52:31Z",
      "updatedAt": "2024-03-03T12:41:33Z",
      "closedAt": "2024-03-03T12:41:32Z",
      "author": {
        "login": "mrbean-bremen"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 11
      }
    },
    {
      "number": 12036,
      "title": "PermissionError: [WinError 5] Access is denied: 'C:\\\\Documents and Settings'",
      "body": "<!--\r\nThanks for submitting an issue!\r\n\r\nQuick check-list while reporting bugs:\r\n-->\r\n\r\n## a detailed description of the bug or problem you are having\r\n\r\nGithub CI starts failing on Windows since `8.0.2` release inside conda environment. Observed in multiple repos.\r\nMost likely regression bug, since it appeared only over the weekend with `8.0.2` release. Downgrading to `8.0.1` solved the problem. May be due to this commit: \r\nhttps://github.com/pytest-dev/pytest/commit/8d9b95dcdb131716b72b300abe969d4bf5209bd9\r\n## Workaround\r\n\r\nDowngrade to `8.0.1`\r\n\r\n\r\n## output of `conda list` from the virtual environment you are using\r\n```\r\n# packages in environment at C:\\Users\\runneradmin\\miniconda3\\envs\\test:\r\n#\r\n# Name                    Version                   Build  Channel\r\narchspec                  0.2.2              pyhd8ed1ab_0    conda-forge\r\nattrs                     23.2.0             pyh71513ae_0    conda-forge\r\nbeautifulsoup4            4.12.3             pyha770c72_0    conda-forge\r\nboltons                   23.1.1             pyhd8ed1ab_0    conda-forge\r\nbrotli-python             1.1.0            py39h99910a6_1    conda-forge\r\nbzip2                     1.0.8                hcfcfb64_5    conda-forge\r\nca-certificates           2024.2.2             h56e8100_0    conda-forge\r\ncertifi                   2024.2.2           pyhd8ed1ab_0    conda-forge\r\ncffi                      1.16.0           py39ha55989b_0    conda-forge\r\nchardet                   5.2.0            py39hcbf5309_1    conda-forge\r\ncharset-normalizer        3.3.2              pyhd8ed1ab_0    conda-forge\r\nclick                     8.1.7           win_pyh7428d3b_0    conda-forge\r\ncolorama                  0.4.6              pyhd8ed1ab_0    conda-forge\r\nconda                     24.1.2           py39hcbf5309_0    conda-forge\r\nconda-build               24.1.2           py39hcbf5309_0    conda-forge\r\nconda-index               0.4.0              pyhd8ed1ab_0    conda-forge\r\nconda-libmamba-solver     24.1.0             pyhd8ed1ab_0    conda-forge\r\nconda-package-handling    2.2.0              pyh38be061_0    conda-forge\r\nconda-package-streaming   0.9.0              pyhd8ed1ab_0    conda-forge\r\nconda-tree                1.1.0              pyhd8ed1ab_2    conda-forge\r\ncoverage                  7.4.3            py39ha55989b_1    conda-forge\r\ndistro                    1.9.0              pyhd8ed1ab_0    conda-forge\r\ndpcpp-cpp-rt              2024.0.2            intel_49896    intel\r\ndpcpp-llvm-spirv          2024.0.0        py39h717461b_49602    intel\r\ndpctl                     0.17.0dev0      py39h859585b_20    dppy/label/dev\r\ndpnp                      0.15.0dev0      py39h2e52968_16    dppy/label/dev\r\nexceptiongroup            1.2.0              pyhd8ed1ab_2    conda-forge\r\nfilelock                  3.13.1             pyhd8ed1ab_0    conda-forge\r\nfmt                       10.2.1               h181d51b_0    conda-forge\r\nicc_rt                    2024.0.2            intel_49896    intel\r\nidna                      3.6                pyhd8ed1ab_0    conda-forge\r\nimportlib_resources       6.1.2              pyhd8ed1ab_0    conda-forge\r\niniconfig                 2.0.0              pyhd8ed1ab_0    conda-forge\r\nintel-cmplr-lib-rt        2024.0.2            intel_49896    intel\r\nintel-cmplr-lic-rt        2024.0.2            intel_49896    intel\r\nintel-opencl-rt           2024.0.2            intel_49896    intel\r\nintel-openmp              2024.0.2            intel_49896    intel\r\njinja2                    3.1.3              pyhd8ed1ab_0    conda-forge\r\njsonpatch                 1.33               pyhd8ed1ab_0    conda-forge\r\njsonpointer               2.4              py39hcbf5309_3    conda-forge\r\njsonschema                4.21.1             pyhd8ed1ab_0    conda-forge\r\njsonschema-specifications 2023.12.1          pyhd8ed1ab_0    conda-forge\r\nkrb5                      1.21.2               heb0366b_0    conda-forge\r\nlibarchive                3.7.2                h313118b_1    conda-forge\r\nlibblas                   3.9.0           21_win64_openblas    conda-forge\r\nlibcblas                  3.9.0           21_win64_openblas    conda-forge\r\nlibcurl                   8.5.0                hd5e4a3a_0    conda-forge\r\nlibffi                    3.4.4                hd77b12b_0  \r\nlibflang                  5.0.0           h6538335_20180525    conda-forge\r\nlibhwloc                  2.9.3           default_haede6df_1009    conda-forge\r\nlibiconv                  1.17                 hcfcfb64_2    conda-forge\r\nliblapack                 3.9.0           21_win64_openblas    conda-forge\r\nliblief                   0.12.3               h63175ca_0    conda-forge\r\nlibmamba                  1.5.6                h3f09ed1_0    conda-forge\r\nlibmambapy                1.5.6            py39h2690a07_0    conda-forge\r\nlibopenblas               0.3.26          pthreads_hc140b1d_0    conda-forge\r\nlibsolv                   0.7.28               h12be248_0    conda-forge\r\nlibsqlite                 3.45.1               hcfcfb64_0    conda-forge\r\nlibssh2                   1.11.0               h7dfc565_0    conda-forge\r\nlibxml2                   2.12.5               hc3477c8_0    conda-forge\r\nlibzlib                   1.2.13               hcfcfb64_5    conda-forge\r\nllvm-meta                 5.0.0                         0    conda-forge\r\nllvmlite                  0.42.0           py39hd28a505_1    conda-forge\r\nlz4-c                     1.9.4                hcfcfb64_0    conda-forge\r\nlzo                       2.10              he7745[22](https://github.com/IntelPython/numba-dpex/actions/runs/8034588423/job/21988809424#step:15:23)_1000    conda-forge\r\nm2-conda-epoch            20[23](https://github.com/IntelPython/numba-dpex/actions/runs/8034588423/job/21988809424#step:15:24)0914               0_x86_64    conda-forge\r\nm2-patch                  2.7.6.2              hd8ed1ab_0    conda-forge\r\nmarkupsafe                2.1.5            py39ha55989b_0    conda-forge\r\nmenuinst                  2.0.2            py39h99910a6_0    conda-forge\r\nmkl                       20[24](https://github.com/IntelPython/numba-dpex/actions/runs/8034588423/job/21988809424#step:15:25).0.0            intel_49657    intel\r\nmkl-dpcpp                 2024.0.0            intel_49657    intel\r\nmore-itertools            10.2.0             pyhd8ed1ab_0    conda-forge\r\nnetworkx                  3.2.1              pyhd8ed1ab_0    conda-forge\r\nnumba                     0.59.0           py39h6836801_1    conda-forge\r\nnumba-dpex                0.22.1          py39h2e52968_[25](https://github.com/IntelPython/numba-dpex/actions/runs/8034588423/job/21988809424#step:15:26)    file:///D:/a/numba-dpex/numba-dpex/channel\r\nnumpy                     1.[26](https://github.com/IntelPython/numba-dpex/actions/runs/8034588423/job/21988809424#step:15:27).4           py39hddb5d58_0    conda-forge\r\nonemkl-sycl-blas          2024.0.0            intel_49657    intel\r\nonemkl-sycl-datafitting   2024.0.0            intel_49657    intel\r\nonemkl-sycl-dft           2024.0.0            intel_49657    intel\r\nonemkl-sycl-lapack        2024.0.0            intel_49657    intel\r\nonemkl-sycl-rng           2024.0.0            intel_49657    intel\r\nonemkl-sycl-sparse        2024.0.0            intel_49657    intel\r\nonemkl-sycl-stats         2024.0.0            intel_49657    intel\r\nonemkl-sycl-vm            2024.0.0            intel_49657    intel\r\nopenmp                    5.0.0                    vc14_1    conda-forge\r\nopenssl                   3.2.1                hcfcfb64_0    conda-forge\r\npackaging                 23.2               pyhd8ed1ab_0    conda-forge\r\npip                       24.0               pyhd8ed1ab_0    conda-forge\r\npkginfo                   1.9.6              pyhd8ed1ab_0    conda-forge\r\npkgutil-resolve-name      1.3.10             pyhd8ed1ab_1    conda-forge\r\nplatformdirs              4.2.0              pyhd8ed1ab_0    conda-forge\r\npluggy                    1.4.0              pyhd8ed1ab_0    conda-forge\r\npsutil                    5.9.8            py39ha55989b_0    conda-forge\r\npthreads-win32            2.9.1                hfa6e2cd_3    conda-forge\r\npy-lief                   0.12.3           py39h99910a6_0    conda-forge\r\npybind11-abi              4                    hd8ed1ab_3    conda-forge\r\npycosat                   0.6.6            py39ha55989b_0    conda-forge\r\npycparser                 2.21               pyhd8ed1ab_0    conda-forge\r\npysocks                   1.7.1            py39hcbf5309_5    conda-forge\r\npytest                    8.0.2              pyhd8ed1ab_0    conda-forge\r\npytest-cov                4.1.0              pyhd8ed1ab_0    conda-forge\r\npython                    3.9.18          h4de0772_1_cpython    conda-forge\r\npython-libarchive-c       5.0              py39hcbf5309_2    conda-forge\r\npython_abi                3.9                      4_cp39    conda-forge\r\npytz                      2024.1             pyhd8ed1ab_0    conda-forge\r\npyyaml                    6.0.1            py39ha55989b_1    conda-forge\r\nreferencing               0.33.0             pyhd8ed1ab_0    conda-forge\r\nreproc                    14.2.4.post0         hcfcfb64_1    conda-forge\r\nreproc-cpp                14.2.4.post0         h63175ca_1    conda-forge\r\nrequests                  2.31.0             pyhd8ed1ab_0    conda-forge\r\nripgrep                   11.0.2                        1    conda-forge\r\nrpds-py                   0.18.0           py39hf21820d_0    conda-forge\r\nruamel.yaml               0.18.6           py39ha55989b_0    conda-forge\r\nruamel.yaml.clib          0.2.8            py39ha55989b_0    conda-forge\r\nsetuptools                69.1.1             pyhd8ed1ab_0    conda-forge\r\nsoupsieve                 2.5                pyhd8ed1ab_1    conda-forge\r\ntbb                       2021.11.0            h91493d7_1    conda-forge\r\ntk                        8.6.13               h5226925_1    conda-forge\r\ntoml                      0.10.2             pyhd8ed1ab_0    conda-forge\r\ntomli                     2.0.1              pyhd8ed1ab_0    conda-forge\r\ntqdm                      4.66.2             pyhd8ed1ab_0    conda-forge\r\ntzdata                    2024a                h0c530f3_0    conda-forge\r\nucrt                      10.0.22621.0         h579[28](https://github.com/IntelPython/numba-dpex/actions/runs/8034588423/job/21988809424#step:15:29)b3_0    conda-forge\r\nurllib3                   2.2.1              pyhd8ed1ab_0    conda-forge\r\nvc                        14.3                hcf57466_18    conda-forge\r\nvc14_runtime              14.38.33130         h82b7239_18    conda-forge\r\nvs2015_runtime            14.38.33130         hcb4865c_18    conda-forge\r\nwheel                     0.42.0             pyhd8ed1ab_0    conda-forge\r\nwin_inet_pton             1.1.0            py39hcbf5309_5    conda-forge\r\nxz                        5.4.5                h8cc25b3_0  \r\nyaml                      0.2.5                h8ffe710_2    conda-forge\r\nyaml-cpp                  0.8.0                h63175ca_0    conda-forge\r\nzipp                      3.17.0             pyhd8ed1ab_0    conda-forge\r\nzstandard                 0.22.0           py39h95af8[29](https://github.com/IntelPython/numba-dpex/actions/runs/8034588423/job/21988809424#step:15:30)_0    conda-forge\r\nzstd                      1.5.5                h12be2[48](https://github.com/IntelPython/numba-dpex/actions/runs/8034588423/job/21988809424#step:15:49)_0    conda-forge\r\n```\r\n\r\n## pytest and operating system versions\r\n8.0.2, Windows Public Github CI\r\n## minimal example if possible\r\nPytest run inside conda environment inside `windows-latest` github ci\r\n\r\n```bash\r\npython -m pytest -q -ra --disable-warnings --pyargs numba_dpex -vv\r\n```\r\n\r\n### The output log\r\n```\r\nRun python -m pytest -q -ra --disable-warnings --pyargs numba_dpex -vv\r\n============================= test session starts =============================\r\nplatform win32 -- Python 3.9.18, pytest-8.0.2, pluggy-1.4.0 -- C:\\Users\\runneradmin\\miniconda3\\envs\\test\\python.exe\r\ncachedir: .pytest_cache\r\nrootdir: D:\\a\\numba-dpex\\numba-dpex\r\nconfigfile: pyproject.toml\r\nplugins: cov-4.1.0\r\ncollecting ... collected 2953 items / 1 error\r\n=================================== ERRORS ====================================\r\n________________________ ERROR collecting test session ________________________\r\nC:\\Users\\runneradmin\\miniconda3\\envs\\test\\lib\\site-packages\\_pytest\\runner.py:342: in from_call\r\n    result: Optional[TResult] = func()\r\nC:\\Users\\runneradmin\\miniconda3\\envs\\test\\lib\\site-packages\\_pytest\\runner.py:387: in collect\r\n    return list(collector.collect())\r\nC:\\Users\\runneradmin\\miniconda3\\envs\\test\\lib\\site-packages\\_pytest\\main.py:508: in collect\r\n    for direntry in scandir(self.path):\r\nC:\\Users\\runneradmin\\miniconda3\\envs\\test\\lib\\site-packages\\_pytest\\pathlib.py:701: in scandir\r\n    with os.scandir(path) as s:\r\nE   PermissionError: [WinError 5] Access is denied: 'C:\\\\Documents and Settings'\r\n=========================== short test summary info ===========================\r\nERROR ::::Documents and Settings - PermissionError: [WinError 5] Access is denied: 'C:\\\\Documents and Settings'\r\n!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\r\n======================== 2 warnings, 1 error in 3.[27](https://github.com/IntelPython/numba-dpex/actions/runs/8051468532/job/21990196799?pr=1366#step:20:28)s =========================\r\n```\r\n\r\nhttps://github.com/IntelPython/numba-dpex/actions/runs/8034588423/job/21988809424",
      "state": "CLOSED",
      "createdAt": "2024-02-26T16:14:55Z",
      "updatedAt": "2024-02-27T08:16:43Z",
      "closedAt": "2024-02-27T08:16:42Z",
      "author": {
        "login": "ZzEeKkAa"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      }
    },
    {
      "number": 12034,
      "title": "Getting permission error with latest pytest versions 8.0.2",
      "body": "\r\nDescription\r\nWhen attempting to run pytest with a JSON file specified as an argument (pytest <test_file.py> -T <json_file>), I encounter a permission error with pytest versions higher than 7.4.4. The error is as follows:\r\n```\r\n/auto/cafy-ott/pasverma-cafykit/cafykit/env/lib/python3.11/site-packages/pluggy/_hooks.py:501: in __call__\r\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\r\n/auto/cafy-ott/pasverma-cafykit/cafykit/env/lib/python3.11/site-packages/pluggy/_manager.py:119: in _hookexec\r\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\r\n/auto/cafy-ott/pasverma-cafykit/cafykit/env/lib/python3.11/site-packages/_pytest/python.py:211: in pytest_collect_directory\r\n    if pkginit.is_file():\r\n/auto/cafy-ott/python3.11.4/lib/python3.11/pathlib.py:1267: in is_file\r\n    return S_ISREG(self.stat().st_mode)\r\n/auto/cafy-ott/python3.11.4/lib/python3.11/pathlib.py:1013: in stat\r\n    return os.stat(self, follow_symlinks=follow_symlinks)\r\nE   PermissionError: [Errno 13] Permission denied: '/lost+found/__init__.py'\r\n```\r\nThis issue occurs specifically when the JSON file has read-only access with pytest version higher than 7.4.4\r\nSteps to Reproduce:\r\n  Upgrade pytest to version 8.0.0 or higher.\r\n  Run pytest with the command pytest <test_file.py> -T <json_file> where <json_file> has read-only access.\r\n\r\nExpected Behavior:\r\nPytest should be able to execute without encountering permission errors, even when the JSON file has read-only access, which is working with pytest version lower than equal to 7.4.4\r\n\r\nObservation:\r\nProviding an additional argument --rootdir='<non_empty_root_dir>' along with the pytest command resolves the permission error, even when the JSON file has read-only access.\r\n\r\npytest version : 8.0.2\r\n\r\n \r\n\r\n\r\n\r\n",
      "state": "CLOSED",
      "createdAt": "2024-02-26T05:53:08Z",
      "updatedAt": "2024-02-27T09:17:41Z",
      "closedAt": "2024-02-26T10:58:01Z",
      "author": {
        "login": "pashupati123"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 6
      }
    },
    {
      "number": 12028,
      "title": "Pytest misbehaves if a forked test doesn't exit properly",
      "body": "Currently, `pytest` doesn't properly handle tests that call `os.fork` if the child fails to exit with `os._exit`. This results in a duplicate `pytest` instance, including tearing down fixtures twice, running all subsequent tests twice, and generating two (possibly intermingled) reports.\r\n\r\nPytest 7.4.4 on Debian Linux, 'testing' release\r\n\r\nThis is the minimal test case that demonstrates the problem. The child returning normally will also trigger the bug.\r\n```\r\ndef test_minimal():\r\n    import os\r\n    pid = os.fork()\r\n    if pid == 0:\r\n        # child process\r\n        assert False\r\n    # parent process\r\n    os.waitpid(pid, 0)\r\n```\r\n\r\nThe simplest solution is to check `os.getpid()` immediately before and after the test, and if they are different to call `os._exit`. These checks should be done after any other setup and before any other tear-down is performed.\r\n```\r\nfixture setup\r\npid = os.getpid()\r\nrun test\r\nif pid != os.getpid():\r\n    os._exit(1)\r\nfixture tear-down\r\n```\r\n\r\nWriting a warning to `stderr` just before calling `os._exit` is the simplest method of warning the user that there is a problem. For a more robust solution, a rogue child process can be detected and reported by using a `socketpair`.\r\n```\r\nfixture setup\r\na, b = socket.socketpair() # call `b.set_inheritable` to also detect rogue subprocess children\r\npid = os.getpid()\r\nrun test\r\nif pid != os.getpid():\r\n  write an error message to a per-test log file\r\n  os._exit(1)\r\nb.close()\r\na.recv(1) # wait for all children to exit\r\nfixture teardown\r\ncheck for above error log, fail test if present\r\n```\r\nThis method can hang if the child is hung, but that's little different from any other hung test and gives a clear warning that there is a problem.\r\n\r\nI'm willing to write a patch, but I'm not familiar with pytest's codebase to know where to start. Any help would be appreciated.\r\n\r\n- [X] a detailed description of the bug or problem you are having\r\n- [ ] output of `pip list` from the virtual environment you are using\r\n- [X] pytest and operating system versions\r\n- [X] minimal example if possible\r\n",
      "state": "CLOSED",
      "createdAt": "2024-02-24T21:31:53Z",
      "updatedAt": "2024-02-28T07:24:09Z",
      "closedAt": "2024-02-28T07:24:09Z",
      "author": {
        "login": "spikethehobbitmage"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: bug"
          },
          {
            "name": "status: help wanted"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 12026,
      "title": "8.0.2 and 8.1.0 release planning",
      "body": "I propose we:\r\n\r\nRelease pytest 8.0.2 tomorrow (2024-02-24)\r\n\r\nRelease pytest 8.1.0 next week (~2024-03-02)",
      "state": "CLOSED",
      "createdAt": "2024-02-23T13:42:30Z",
      "updatedAt": "2024-03-03T21:33:39Z",
      "closedAt": "2024-03-03T21:33:39Z",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": [
          {
            "login": "bluetech"
          }
        ]
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 4
      }
    },
    {
      "number": 12021,
      "title": "Pytest 8.0.0 `--maxfail` fix caused a regression in pytest-xdist",
      "body": "See https://github.com/pytest-dev/pytest-xdist/issues/1024. When using `--maxfail` and the max fails is reached in a certain worker, the worker executes session fixture teardown twice. A fix in pytest-xdist is not very simple from what I can tell.",
      "state": "CLOSED",
      "createdAt": "2024-02-23T09:42:11Z",
      "updatedAt": "2024-02-23T13:34:33Z",
      "closedAt": "2024-02-23T13:34:33Z",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": [
          {
            "login": "bluetech"
          }
        ]
      },
      "labels": {
        "nodes": [
          {
            "name": "type: bug"
          },
          {
            "name": "type: regression"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      }
    },
    {
      "number": 12018,
      "title": "Cannot select parametrised test where there are special characters",
      "body": "we have the following test:\r\n\r\n```python\r\n@pytest.mark.parametrize(\r\n    \"ext,magic\",\r\n    [\r\n        (\"py\", \"# Databricks notebook source\"),\r\n        (\"scala\", \"// Databricks notebook source\"),\r\n        (\"sql\", \"-- Databricks notebook source\"),\r\n    ],\r\n)\r\ndef test_uploading_notebooks_get_correct_urls(ext, magic, new_installation):\r\n    ...\r\n```\r\n\r\nthat results in `Wrong expression passed to '-k': test_uploading_notebooks_get_correct_urls[py-# Databricks notebook source]: at column 46: unexpected character \"#\"` when invoked with `-k`. I'm trying to figure out if we can escape values before passing them through `-k` or have some more lower-level interface, like [here](https://github.com/databrickslabs/sandbox/blob/main/acceptance/ecosystem/pytest_collect.py), that would allow filtering runs by test (which is also an option). please help.\r\n\r\n<img width=\"987\" alt=\"image\" src=\"https://github.com/pytest-dev/pytest/assets/259697/3c84b331-7348-4f67-b1e1-e0f82638d72f\">\r\n\r\n# Workaround\r\n\r\nSomething like this works:\r\n\r\n```python\r\ndef pytest_collection_modifyitems(items: list[pytest.Item], config: pytest.Config):\r\n    deselected = []\r\n    remaining = []\r\n    for item in items:\r\n        if item.name != os.environ['TEST_FILTER']:\r\n            deselected.append(item)\r\n            continue\r\n        remaining.append(item)\r\n    if not deselected:\r\n        return\r\n    config.hook.pytest_deselected(items=deselected)\r\n    items[:] = remaining\r\n```",
      "state": "CLOSED",
      "createdAt": "2024-02-21T17:06:51Z",
      "updatedAt": "2024-02-21T19:38:57Z",
      "closedAt": "2024-02-21T19:38:57Z",
      "author": {
        "login": "nfx"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 12016,
      "title": "Add mode to only autodiscover paths with pyproject.toml or setup.py",
      "body": "#### What's the problem this feature will solve?\r\nThere is no easy way to only discover the paths that actually contain a valid python package and only run tests in those directories (or subdirectories).\r\n\r\nImagine you have a monorepo that mixes python and other languages all under the `packages` directory (and subdirectories). There are other places where random python tests might exists for validation/ci purposes but should not be run when running pytest in the root directory. It will be anoying to specify every module you want to be included during collection since this is a monorepo and more packages could be added at any time.\r\n\r\n#### Describe the solution you'd like\r\nI would like a .ini option something like `only_discover_packages = true` which will discover only those paths that contain a valid python package (one that contains a pyproject.toml or setup.py), then that path will be added both to pythonpath and testpaths.\r\n\r\n#### Alternative Solutions\r\nThe easiest way I found to achieve is by doing something like this in my pyproject.toml:\r\n```toml\r\n[tool.pytest.ini_options]\r\naddopts = \"--import-mode=importlib\"\r\ntestpaths = [\r\n    \"packages/pkg1\",\r\n    \"packages/pkg3\"\r\n]\r\npythonpath = [\r\n    \"packages/pkg1\",\r\n    \"packages/pkg3\"  # Let's say pkg2 only has C++ code so we skip it\r\n]\r\n```\r\nalternatively a different option could be added that only looks in subdirectories which contain a valid pytest configuration file (ie: pytest.ini, pyproject.toml...) and collects tests in those.\r\n\r\nIf needed I could try and write a PR though I am not sure I have the time nor am I familiar with the pytest codebase.\r\n\r\n",
      "state": "OPEN",
      "createdAt": "2024-02-20T20:55:06Z",
      "updatedAt": "2024-02-23T06:15:10Z",
      "closedAt": null,
      "author": {
        "login": "germaniuss"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: proposal"
          },
          {
            "name": "topic: collection"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      }
    },
    {
      "number": 12011,
      "title": "pytest 8.0.1 regression: setup_module is not run with --doctest-modules",
      "body": "It seems like `setup_module` is not being run in 8.0.1 when using `--doctest-modules`. This works fine with 8.0.0.\r\n\r\nThis was seen in https://github.com/scikit-learn/scikit-learn/pull/28461.\r\n\r\nTo reproduce:\r\n\r\n```py\r\n# test.py\r\nCONSTANT = 0\r\n\r\ndef setup_module():\r\n    global CONSTANT\r\n    CONSTANT = 1\r\n\r\n\r\ndef test():\r\n    assert CONSTANT == 1\r\n```\r\n\r\n```\r\npytest --doctest-modules test.py\r\n```\r\n\r\nExpected output: no failures\r\n\r\nActual output: failure\r\n```\r\n\u276f pytest --doctest-modules test.py\r\n======================================== test session starts ========================================\r\nplatform linux -- Python 3.12.2, pytest-8.0.1, pluggy-1.4.0\r\nrootdir: /tmp/test\r\ncollected 1 item                                                                                    \r\n\r\ntest.py F                                                                                     [100%]\r\n\r\n============================================= FAILURES ==============================================\r\n_______________________________________________ test ________________________________________________\r\n\r\n    def test():\r\n>       assert CONSTANT == 1\r\nE       assert 0 == 1\r\n\r\ntest.py:9: AssertionError\r\n====================================== short test summary info ======================================\r\nFAILED test.py::test - assert 0 == 1\r\n========================================= 1 failed in 0.01s =========================================\r\n\r\n```\r\n\r\n```\r\n\u276f pip list              \r\nPackage    Version\r\n---------- -------\r\niniconfig  2.0.0\r\npackaging  23.2\r\npip        24.0\r\npluggy     1.4.0\r\npytest     8.0.1\r\nsetuptools 69.1.0\r\nwheel      0.42.0\r\n```\r\n",
      "state": "CLOSED",
      "createdAt": "2024-02-19T11:54:59Z",
      "updatedAt": "2024-03-04T07:43:20Z",
      "closedAt": "2024-03-03T21:34:03Z",
      "author": {
        "login": "lesteve"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: bug"
          },
          {
            "name": "plugin: doctests"
          },
          {
            "name": "type: regression"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 7
      }
    },
    {
      "number": 12009,
      "title": "(\ud83d\udc1e) pytester is influenced by an external `CI` environment variable",
      "body": "<!--\r\nThanks for submitting an issue!\r\n\r\nQuick check-list while reporting bugs:\r\n-->\r\n\r\n- [\ud83d\ude80] a detailed description of the bug or problem you are having\r\n- [\ud83d\ude80] output of `pip list` from the virtual environment you are using\r\n- [\ud83d\ude80 ] pytest and operating system versions\r\n- [\ud83d\ude80] minimal example if possible\r\n\r\npytest 8.0.1, windows/mac/linux\r\n\r\nThis is very unfortunate, as unexpected differences in behaviour are observed between local development and CI execution.\r\n\r\n```py\r\ndef test_ci(pytester):\r\n    pytester.makepyfile(\"\"\"\r\ndef test_something():\r\n    assert [1, 2, 3] == [1, 4, 3]\r\n    \"\"\")\r\n    pytester.runpytest()\r\n    assert 0\r\n```\r\n```\r\n> pytest test.py\r\n...\r\n================================== FAILURES ===================================\r\n_______________________________ test_something ________________________________\r\n\r\n    def test_something():\r\n>       assert [1, 2, 3] == [1, 4, 3]\r\nE       assert [1, 2, 3] == [1, 4, 3]\r\nE\r\nE         At index 1 diff: 2 != 4\r\nE         Use -v to get more diff\r\n\r\ntest_ci.py:2: AssertionError\r\n=========================== short test summary info ===========================\r\nFAILED test_ci.py::test_something - assert [1, 2, 3] == [1, 4, 3]\r\n============================== 1 failed in 0.11s ==============================\r\n...\r\n```\r\n```\r\n> CI=1 pytest test.py\r\n...\r\n================================== FAILURES ===================================\r\n_______________________________ test_something ________________________________\r\n\r\n    def test_something():\r\n>       assert [1, 2, 3] == [1, 4, 3]\r\nE       assert [1, 2, 3] == [1, 4, 3]\r\nE\r\nE         At index 1 diff: 2 != 4\r\nE\r\nE         Full diff:\r\nE           [\r\nE               1,\r\nE         -     4,\r\nE         ?     ^\r\nE         +     2,\r\nE         ?     ^\r\nE               3,\r\nE           ]\r\n\r\ntest_ci.py:2: AssertionError\r\n=========================== short test summary info ===========================\r\nFAILED test_ci.py::test_something - assert [1, 2, 3] == [1, 4, 3]\r\n\r\n  At index 1 diff: 2 != 4\r\n\r\n  Full diff:\r\n    [\r\n        1,\r\n  -     4,\r\n  ?     ^\r\n  +     2,\r\n  ?     ^\r\n        3,\r\n    ]\r\n============================== 1 failed in 0.13s ==============================\r\n...\r\n```",
      "state": "CLOSED",
      "createdAt": "2024-02-19T07:14:21Z",
      "updatedAt": "2024-07-02T05:05:09Z",
      "closedAt": "2024-03-12T01:47:32Z",
      "author": {
        "login": "KotlinIsland"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "status: needs information"
          },
          {
            "name": "stale"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 8
      }
    },
    {
      "number": 12008,
      "title": "pytest 8.0 sorting tests with multiple parameterization is broken",
      "body": "\u0421ontinue #11976\r\n\r\nThe solution from #11976 did not solve the problem with sorting tests with multiple parameters\r\n\r\nTests\r\n\r\n```python\r\nimport pytest\r\n\r\n\r\n@pytest.mark.parametrize('proto', ['serial', 'telnet', 'ssh'], scope='class')\r\n@pytest.mark.parametrize('unit', [1, 2, 3], scope='class')\r\nclass TestA:\r\n    def test_one(self, proto, unit):\r\n        pass\r\n\r\n    def test_two(self, proto, unit):\r\n        pass\r\n```\r\n\r\nCollecting items with pytest 7.4.4\r\n\r\n```\r\n11:07 $ pytest --co\r\n=========================================================================== test session starts ===========================================================================\r\nplatform linux -- Python 3.11.6, pytest-7.4.4, pluggy-1.4.0 -- /home/lolik/.cache/pypoetry/virtualenvs/pytest_strain-FQAfhJsh-py3.11/bin/python\r\ncachedir: .pytest_cache\r\nmetadata: {'Python': '3.11.6', 'Platform': 'Linux-6.7.4-arch1-1-x86_64-with-glibc2.39', 'Packages': {'pytest': '7.4.4', 'pluggy': '1.4.0'}, 'Plugins': {'metadata': '3.1.0'}, 'GIT_BRANCH': 'master'}\r\nrootdir: /home/lolik/Projects/straing/pytest\r\nconfigfile: pytest.ini\r\nplugins: metadata-3.1.0\r\ncollected 18 items                                                                                                                                                        \r\n\r\n<Package tests>\r\n  <Module test_asd.py>\r\n    <Class TestA>\r\n      <Function test_one[1-serial]>\r\n      <Function test_two[1-serial]>\r\n      <Function test_one[1-telnet]>\r\n      <Function test_two[1-telnet]>\r\n      <Function test_one[1-ssh]>\r\n      <Function test_two[1-ssh]>\r\n      <Function test_one[2-serial]>\r\n      <Function test_two[2-serial]>\r\n      <Function test_one[2-telnet]>\r\n      <Function test_two[2-telnet]>\r\n      <Function test_one[2-ssh]>\r\n      <Function test_two[2-ssh]>\r\n      <Function test_one[3-serial]>\r\n      <Function test_two[3-serial]>\r\n      <Function test_one[3-telnet]>\r\n      <Function test_two[3-telnet]>\r\n      <Function test_one[3-ssh]>\r\n      <Function test_two[3-ssh]>\r\n\r\n======================================================================= 18 tests collected in 0.01s =======================================================================\r\n```\r\n\r\nCollecting items with pytest 8.0.1\r\n\r\n```\r\n11:08 $ pytest --co\r\n=========================================================================== test session starts ===========================================================================\r\nplatform linux -- Python 3.11.6, pytest-8.0.1, pluggy-1.4.0 -- /home/lolik/.cache/pypoetry/virtualenvs/pytest_strain-FQAfhJsh-py3.11/bin/python\r\ncachedir: .pytest_cache\r\nmetadata: {'Python': '3.11.6', 'Platform': 'Linux-6.7.4-arch1-1-x86_64-with-glibc2.39', 'Packages': {'pytest': '8.0.1', 'pluggy': '1.4.0'}, 'Plugins': {'metadata': '3.1.0'}, 'GIT_BRANCH': 'master'}\r\nrootdir: /home/lolik/Projects/straing/pytest\r\nconfigfile: pytest.ini\r\nplugins: metadata-3.1.0\r\ncollected 18 items                                                                                                                                                        \r\n\r\n<Dir pytest>\r\n  <Package tests>\r\n    <Module test_asd.py>\r\n      <Class TestA>\r\n        <Function test_one[1-serial]>\r\n        <Function test_two[1-serial]>\r\n        <Function test_one[2-serial]>\r\n        <Function test_two[2-serial]>\r\n        <Function test_one[2-telnet]>\r\n        <Function test_two[2-telnet]>\r\n        <Function test_one[1-telnet]>\r\n        <Function test_two[1-telnet]>\r\n        <Function test_one[3-telnet]>\r\n        <Function test_two[3-telnet]>\r\n        <Function test_one[3-serial]>\r\n        <Function test_two[3-serial]>\r\n        <Function test_one[3-ssh]>\r\n        <Function test_two[3-ssh]>\r\n        <Function test_one[2-ssh]>\r\n        <Function test_two[2-ssh]>\r\n        <Function test_one[1-ssh]>\r\n        <Function test_two[1-ssh]>\r\n\r\n======================================================================= 18 tests collected in 0.01s =======================================================================\r\n\r\n```",
      "state": "CLOSED",
      "createdAt": "2024-02-19T04:14:55Z",
      "updatedAt": "2024-08-11T04:36:34Z",
      "closedAt": "2024-08-11T04:36:34Z",
      "author": {
        "login": "ShurikMen"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: bug"
          },
          {
            "name": "topic: parametrize"
          },
          {
            "name": "type: regression"
          },
          {
            "name": "topic: fixtures"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 13
      }
    },
    {
      "number": 12004,
      "title": "simple test example fails for Python 3.12",
      "body": "I  am using Python 3.12 and this simple pytest fails to run. \r\n\r\n### Simple test example\r\n```\r\nimport pytest\r\n\r\n@pytest.fixture(name= \"static_component_with_details\",\r\n                params = [({'tag': 'span', 'text' : \"hello\", 'classes':\"p-1\"}, \"the_object\"),\r\n                          ]\r\n                )\r\ndef _static_component_with_details(request):\r\n    return request.param\r\n\r\n\r\ndef test_to_html_iter(static_component_with_details):\r\n    details, component = static_component_with_details\r\n    assert component == \"the_object\"\r\n\r\n```\r\n\r\n### The error output \r\n\r\n```bash\r\n pytest -s test_html_render_create_issue.py\r\n==================================== test session starts ====================================\r\nplatform openbsd7 -- Python 3.12.2, pytest-8.0.1, pluggy-1.4.0\r\nrootdir: /home/kabiraatmonallabs/Debug\r\nplugins: anyio-4.2.0, cases-3.8.2, hypothesis-6.97.4, timeout-2.2.0, mock-3.11.1, speed-0.3.5, pretty-1.2.0\r\ncollected 0 items / 1 error                                                                 \r\n\r\n========================================== ERRORS ===========================================\r\n_____________________ ERROR collecting test_html_render_create_issue.py _____________________\r\n../.local/share/virtualenvs/ofjustpy-IRz21Ee9/lib/python3.12/site-packages/_pytest/nodes.py:153: in _create\r\n    return super().__call__(*k, **kw)\r\n../.local/share/virtualenvs/ofjustpy-IRz21Ee9/lib/python3.12/site-packages/_pytest/python.py:1796: in __init__\r\n    fixtureinfo = fm.getfixtureinfo(self, self.obj, self.cls)\r\n../.local/share/virtualenvs/ofjustpy-IRz21Ee9/lib/python3.12/site-packages/_pytest/fixtures.py:1479: in getfixtureinfo\r\n    names_closure, arg2fixturedefs = self.getfixtureclosure(\r\nE   TypeError: getfixtureclosure() got an unexpected keyword argument 'initialnames'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n../.local/share/virtualenvs/ofjustpy-IRz21Ee9/lib/python3.12/site-packages/pluggy/_hooks.py:501: in __call__\r\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\r\n../.local/share/virtualenvs/ofjustpy-IRz21Ee9/lib/python3.12/site-packages/pluggy/_manager.py:119: in _hookexec\r\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\r\n../.local/share/virtualenvs/ofjustpy-IRz21Ee9/lib/python3.12/site-packages/_pytest/python.py:278: in pytest_pycollect_makeitem\r\n    return list(collector._genfunctions(name, obj))\r\n../.local/share/virtualenvs/ofjustpy-IRz21Ee9/lib/python3.12/site-packages/_pytest/python.py:487: in _genfunctions\r\n    definition: FunctionDefinition = FunctionDefinition.from_parent(\r\n../.local/share/virtualenvs/ofjustpy-IRz21Ee9/lib/python3.12/site-packages/_pytest/python.py:1804: in from_parent\r\n    return super().from_parent(parent=parent, **kw)\r\n../.local/share/virtualenvs/ofjustpy-IRz21Ee9/lib/python3.12/site-packages/_pytest/nodes.py:276: in from_parent\r\n    return cls._create(parent=parent, **kw)\r\n../.local/share/virtualenvs/ofjustpy-IRz21Ee9/lib/python3.12/site-packages/_pytest/nodes.py:168: in _create\r\n    return super().__call__(*k, **known_kw)\r\n../.local/share/virtualenvs/ofjustpy-IRz21Ee9/lib/python3.12/site-packages/_pytest/python.py:1796: in __init__\r\n    fixtureinfo = fm.getfixtureinfo(self, self.obj, self.cls)\r\n../.local/share/virtualenvs/ofjustpy-IRz21Ee9/lib/python3.12/site-packages/_pytest/fixtures.py:1479: in getfixtureinfo\r\n    names_closure, arg2fixturedefs = self.getfixtureclosure(\r\nE   TypeError: getfixtureclosure() got an unexpected keyword argument 'initialnames'\r\n===================================== warnings summary ======================================\r\n../.local/share/virtualenvs/ofjustpy-IRz21Ee9/lib/python3.12/site-packages/_pytest/nodes.py:159\r\n  /home/kabiraatmonallabs/.local/share/virtualenvs/ofjustpy-IRz21Ee9/lib/python3.12/site-packages/_pytest/nodes.py:159: PytestDeprecationWarning: <class '_pytest.python.FunctionDefinition'> is not using a cooperative constructor and only takes {'parent', 'callobj', 'name'}.\r\n  See https://docs.pytest.org/en/stable/deprecations.html#constructors-of-custom-pytest-node-subclasses-should-take-kwargs for more details.\r\n    warnings.warn(\r\n\r\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\r\n!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nResults (0.72s):\r\n         1 warning\r\n         1 error\r\n\r\n```\r\n\r\n### Output of pip list\r\n\r\n```\r\naddict            2.4.0\r\naenum             3.1.15\r\naiofiles          23.2.1\r\nanyio             4.2.0\r\nasttokens         2.4.1\r\nattrs             23.2.0\r\nblake2signer      3.0.0\r\ncachetools        5.3.2\r\ncertifi           2024.2.2\r\ncfgv              3.4.0\r\nclick             8.1.7\r\ncolorama          0.4.6\r\ncoverage          7.4.1\r\ndecopatch         1.4.10\r\ndecorator         5.1.1\r\ndirty-equals      0.7.1.post0\r\ndistlib           0.3.8\r\ndnspython         2.6.0\r\ndpath             2.1.6\r\nEditorConfig      0.12.4\r\nemail-validator   2.1.0.post1\r\nexecuting         2.0.1\r\nfilelock          3.13.1\r\ngriffe            0.40.0\r\nh11               0.14.0\r\nhjson             3.1.0\r\nhttpcore          1.0.3\r\nhttpx             0.26.0\r\nhypothesis        6.97.4\r\nidentify          2.5.34\r\nidna              3.6\r\niniconfig         2.0.0\r\nipython           8.21.0\r\nitsdangerous      2.1.2\r\njedi              0.19.1\r\nJinja2            3.1.3\r\njsbeautifier      1.15.1\r\njson-fix          1.0.0\r\njsonpath-ng       1.6.1\r\nlxml              5.1.0\r\nmakefun           1.15.2\r\nmarkdown-it-py    3.0.0\r\nMarkupSafe        2.1.5\r\nmatplotlib-inline 0.1.6\r\nmdurl             0.1.2\r\nmypy              1.8.0\r\nmypy-extensions   1.0.0\r\nnodeenv           1.8.0\r\npackaging         23.2\r\nparso             0.8.3\r\npexpect           4.9.0\r\npip               24.0\r\nplatformdirs      4.2.0\r\npluggy            1.4.0\r\nply               3.11\r\npre-commit        3.6.1\r\nprompt-toolkit    3.0.43\r\npsutil            5.9.8\r\nptyprocess        0.7.0\r\npure-eval         0.2.2\r\nPygments          2.17.2\r\npyright           1.1.349\r\nPySnooper         1.2.0\r\npytest            8.0.1\r\npytest-cases      3.8.2\r\npytest-mock       3.11.1\r\npytest-pretty     1.2.0\r\npytest-speed      0.3.5\r\npytest-timeout    2.2.0\r\npython-dateutil   2.8.3.dev33+gf229320\r\npytz              2023.4\r\nPyYAML            6.0.1\r\nrich              13.7.0\r\nruff              0.1.15\r\nsetuptools        69.1.0\r\nsix               1.16.0\r\nsniffio           1.3.0\r\nsortedcontainers  2.4.0\r\nstack-data        0.6.3\r\nstarlette         0.37.1\r\ntraitlets         5.14.1\r\ntyping_extensions 4.9.0\r\nuvicorn           0.27.1\r\nvirtualenv        20.25.0\r\nwcwidth           0.2.13\r\nwebsockets        12.0\r\nwheel             0.42.0\r\nWTForms           3.1.2\r\n```",
      "state": "CLOSED",
      "createdAt": "2024-02-18T03:48:22Z",
      "updatedAt": "2024-02-18T10:21:55Z",
      "closedAt": "2024-02-18T10:21:31Z",
      "author": {
        "login": "Monallabs"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 11994,
      "title": "Multiprocessing Issue",
      "body": "<!--\r\nThanks for submitting an issue!\r\nI am facing below issues when using Proces, Manager, Queue modules from multiprocessing package.\r\nIssue 1:\r\nWhen running unit test case with make python-test job, when I press CNTRL+C, the the processes created with pytest remains there and does not terminate on its own.\r\n\r\nIssue2:\r\nIn integration test case, though the test case gets passed the pod created for pytest does not terminate and remains there.\r\n\r\nThe destructor code is as below:\r\nself.process_manager.shutdown()\r\nself.sub_process.terminate()\r\nself.sub_process.join()\r\n\r\nAfter removing the multiprocessing modules pytest behaves normally.\r\n\r\nPlease guide in this regard to handle the multiprocessing with pytest.\r\nPlease let me know if more inputs required.\r\nAwaiting for your response.\r\nRegards.\r\n\r\nQuick check-list while reporting bugs:\r\n-->\r\n\r\n- [x] a detailed description of the bug or problem you are having\r\n- [x] output of `pip list` from the virtual environment you are using\r\n- [x] pytest and operating system versions\r\n- [x] minimal example if possible\r\n",
      "state": "CLOSED",
      "createdAt": "2024-02-16T15:24:21Z",
      "updatedAt": "2024-03-10T01:48:59Z",
      "closedAt": "2024-03-10T01:48:58Z",
      "author": {
        "login": "roshant-ska"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "status: needs information"
          },
          {
            "name": "stale"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 4
      }
    },
    {
      "number": 11988,
      "title": "Search documentation in 8.x",
      "body": "It seems like the documentation lost the search field in 8.x. In 7.x it is at the top of the sidebar on the left. I can't find it in the 8.x documentation.",
      "state": "CLOSED",
      "createdAt": "2024-02-16T09:43:26Z",
      "updatedAt": "2024-02-17T21:00:37Z",
      "closedAt": "2024-02-17T20:46:59Z",
      "author": {
        "login": "fschulze"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: docs"
          },
          {
            "name": "type: regression"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 11987,
      "title": "Module/session scoped fixtures are run not like in test order",
      "body": "Hi!\r\n\r\nI've run into problem that when I want to prepare one fixture after another, it doesn't work if that fixture is in module/session scope: it is executed before, regardless of the order.\r\n\r\nExample to reproduce:\r\n```python\r\nimport pytest\r\n\r\ndef pytest_configure(config: pytest.Config) -> None: \r\n    if config.getoption(\"-n\"):\r\n        config.option.dist = \"loadscope\"\r\n\r\n@pytest.fixture\r\ndef first_fixture() -> None:\r\n    print(\"I should be first\")\r\n\r\n@pytest.fixture(scope=\"module\")\r\ndef second_fixture() -> None:\r\n    print(\"I should be second\")\r\n\r\ndef test_fixture_scope(first_fixture: None, second_fixture: None) -> None:\r\n    pass\r\n```\r\npyproject.toml:\r\n```toml\r\n[tool.pytest.ini_options]\r\ntestpaths = \"src\"\r\nlog_cli = 1\r\n```\r\n\r\nAfter run `pytest --setup-show` I see that module scoped fixture runs first, but in test fixture order it should be second:\r\n![image](https://github.com/pytest-dev/pytest/assets/61578484/e94ee427-1cb1-484b-b841-cd98eb86ec3d)\r\n\r\npytest version: 8.0.0\r\nos: Linux 5.13.19-2-MANJARO\r\n\r\npip list:\r\n```bash\r\nPackage           Version\r\n----------------- -------\r\nasgiref           3.7.2\r\nasttokens         2.4.1\r\ndecorator         5.1.1\r\nDjango            5.0.2\r\nexecuting         2.0.1\r\niniconfig         2.0.0\r\nipdb              0.13.13\r\nipython           8.21.0\r\njedi              0.19.1\r\nmatplotlib-inline 0.1.6\r\npackaging         23.2\r\nparso             0.8.3\r\npexpect           4.9.0\r\npillow            10.2.0\r\npip               23.2.1\r\npluggy            1.4.0\r\nprompt-toolkit    3.0.43\r\npsycopg2          2.9.9\r\nptyprocess        0.7.0\r\npure-eval         0.2.2\r\nPygments          2.17.2\r\npytest            8.0.0\r\nsix               1.16.0\r\nsqlparse          0.4.4\r\nstack-data        0.6.3\r\ntraitlets         5.14.1\r\nwcwidth           0.2.13\r\n```\r\n\r\n- [x] a detailed description of the bug or problem you are having\r\n- [x] output of `pip list` from the virtual environment you are using\r\n- [x] pytest and operating system versions\r\n- [x] minimal example if possible\r\n",
      "state": "CLOSED",
      "createdAt": "2024-02-16T09:26:05Z",
      "updatedAt": "2024-02-16T11:02:31Z",
      "closedAt": "2024-02-16T11:02:31Z",
      "author": {
        "login": "M1troll"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "status: needs information"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      }
    },
    {
      "number": 11985,
      "title": "pytest-robotframework is missing from the plugin list",
      "body": "my plugin, [pytest-robotframework](https://pypi.org/project/pytest_robotframework/) is no longer in the [plugin list](https://docs.pytest.org/en/stable/reference/plugin_list.html).\r\n\r\nit appeared on the list after #11328 was merged, but seems to have disappeared since and i'm not sure why.",
      "state": "CLOSED",
      "createdAt": "2024-02-15T23:55:32Z",
      "updatedAt": "2024-02-16T22:49:08Z",
      "closedAt": "2024-02-16T11:01:26Z",
      "author": {
        "login": "DetachHead"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 11984,
      "title": "`pytest_assertrepr_compare` hook should take the same arguments as `pytest_assertion_pass`",
      "body": "<!--\r\nThanks for suggesting a feature!\r\n\r\nQuick check-list while suggesting features:\r\n-->\r\n\r\n#### What's the problem this feature will solve?\r\nin my plugin ([pytest-robotframework](https://github.com/DetachHead/pytest-robotframework/)), i want to be able to log both passing and failing assertions in the same way, as a keyword in the robot log with the original expression from the `assert` statement. for example,  the following test would produce this output in the robot log:\r\n```py\r\ndef test_foo():\r\n    left = 1\r\n    right = 1\r\n    assert left == right\r\n```\r\n\r\n![265295074-c2525ccf-c1c6-4c06-be79-c36fefd3bed4](https://github.com/pytest-dev/pytest/assets/57028336/91f88ed3-4577-49db-b79c-cf3ea44da951)\r\n\r\n\r\nhowever i can't do that with failing assertions, because `pytest_assertrepr_compare` does not have an `orig` argument, so only the actual values can be displayed, not the original `left == right` expression from the `assert` statement:\r\n\r\n![image](https://github.com/pytest-dev/pytest/assets/57028336/e2e561a9-73bd-4912-9c04-23260738897c)\r\n\r\n\r\n#### Describe the solution you'd like\r\neither:\r\n\r\n1. add the `orig` argument from `pytest_assertion_pass` to `pytest_assertrepr_compare`. the other arguments would be useful too: `item`, `lineno`, `expl` (`expl` would be the default explanation or the explanation returned from a previous hook)\r\n2. create a new `pytest_assertion_fail` hook that takes the same arguments as `pytest_assertion_pass`\r\n\r\n<!-- Provide examples of real-world use cases that this would enable and how it solves the problem described above. -->",
      "state": "OPEN",
      "createdAt": "2024-02-15T22:47:36Z",
      "updatedAt": "2024-06-03T18:32:49Z",
      "closedAt": null,
      "author": {
        "login": "DetachHead"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: proposal"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 11983,
      "title": "pytest 8 regressions with warnings found on the setuptools_scm testsuite",
      "body": "on setuptools_scm a testuriously started to fail with pytest 8.0 while passing on pytest 7.x\r\n\r\na example of a breaking run is https://github.com/pypa/setuptools_scm/actions/runs/7886105844/job/21518684207\r\n\r\nthe reason is unclear to me and i will work on investigating it after i finish the next setuptools_scm release\r\n",
      "state": "CLOSED",
      "createdAt": "2024-02-15T16:16:31Z",
      "updatedAt": "2024-02-15T16:46:49Z",
      "closedAt": "2024-02-15T16:46:49Z",
      "author": {
        "login": "RonnyPfannschmidt"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: regression"
          },
          {
            "name": "plugin: warnings"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      }
    },
    {
      "number": 11980,
      "title": "`AssertionError`s with differing items in dict of lists do not display properly when not running in verbose mode",
      "body": "<!--\r\nThanks for submitting an issue!\r\n\r\nQuick check-list while reporting bugs:\r\n-->\r\n\r\n- [X] a detailed description of the bug or problem you are having\r\nwhen an `assert` statement fails where the values being compared are `dict`s of `list`s with 8 or more items in the list, it does not show what part of the list was different in the output.\r\n- [ ] output of `pip list` from the virtual environment you are using\r\nnot using pip\r\n- [X] pytest and operating system versions py\r\npytest 8.0, windows 10/11\r\n- [X] minimal example if possible\r\n```py\r\ndef test_something():\r\n    value1 = {\"asdf\": [1, 1, 1, 1, 1, 1, 1, 1]}\r\n    value2 = {\"asdf\": [1, 1, 1, 1, 1, 1, 1, 2]}\r\n    assert value1 == value2\r\n```\r\n```\r\nAssertionError: assert {'asdf': [1, ...1, 1, 1, ...]} == {'asdf': [1, ...1, 1, 1, ...]}\r\n  \r\n  Differing items:\r\n  {'asdf': [1, 1, 1, 1, 1, 1, ...]} != {'asdf': [1, 1, 1, 1, 1, 1, ...]}\r\n  Use -v to get more diff\r\n```\r\n\r\nthe truncated diff does not show what part was different. it should instead display something like:\r\n```\r\n  Differing items:\r\n  {'asdf': [1, 1, 1, ...1, 1]} != {'asdf': [1, 1, 1, ...1, 2]}\r\n```",
      "state": "OPEN",
      "createdAt": "2024-02-15T06:08:46Z",
      "updatedAt": "2024-08-11T09:22:04Z",
      "closedAt": null,
      "author": {
        "login": "DetachHead"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: enhancement"
          },
          {
            "name": "topic: reporting"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 11978,
      "title": "Add `log-file-mode` option to enable appending instead of truncating",
      "body": "<!--\r\nThanks for suggesting a feature!\r\n\r\nQuick check-list while suggesting features:\r\n-->\r\n\r\n#### What's the problem this feature will solve?\r\n<!-- What are you trying to do, that you are unable to achieve with pytest as it currently stands? -->\r\nI'm trying to add custom headers to my log-files before running pytest. This is currently impossible because the `LoggingPlugin` hard-codes the `_FileHandler` mode to be `\"w\"` which truncates the log-file before printing logs.\r\n\r\n#### Describe the solution you'd like\r\n<!-- A clear and concise description of what you want to happen. -->\r\nI'd like to be able to pass a `--log-file-mode=a` option that is respected by the `LoggingPlugin` and enables it to append to, rather than truncate, the log-file. \r\n\r\n<!-- Provide examples of real-world use cases that this would enable and how it solves the problem described above. -->\r\nThis would allow me to add custom headers to my log-files, providing additional context of the test run and the state of the system. These log-files are provided to users for debugging purposes and, as such, additional context is valuable.\r\n\r\n#### Alternative Solutions\r\n<!-- Have you tried to workaround the problem using a pytest plugin or other tools? Or a different approach to solving this issue? Please elaborate here. -->\r\nIt would be possible to achieve this post hoc by reading the contents of the log-file, adding the custom header, then rewriting the contents, but this seems inefficient.\r\n\r\n#### Additional context\r\n<!-- Add any other context, links, etc. about the feature here. -->\r\nDuring my search, I found this seemingly related [issue](https://github.com/pytest-dev/pytest/issues/10456) that was closed due to a lack of information.\r\n\r\nI'm happy to provide a PR with the required changes and tests.\r\n",
      "state": "CLOSED",
      "createdAt": "2024-02-15T01:30:22Z",
      "updatedAt": "2024-02-21T12:02:20Z",
      "closedAt": "2024-02-21T12:02:20Z",
      "author": {
        "login": "Leithal3"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: proposal"
          },
          {
            "name": "plugin: logging"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      }
    },
    {
      "number": 11976,
      "title": "The sorting of parameterized tests broke down in pytest 8.0.0",
      "body": "In release 8.0.0, the order of test execution has changed.\r\nThe logic of the new order is not clear.\r\nFor illustration simple parameterized tests\r\n\r\n```python\r\nimport pytest\r\n\r\n\r\n@pytest.mark.parametrize('proto', ['serial', 'telnet', 'ssh'], scope='class')\r\n@pytest.mark.parametrize('unit', [1, 2, 3], scope='class')\r\nclass TestA:\r\n    def test_one(self, proto, unit):\r\n        pass\r\n\r\n    def test_two(self, proto, unit):\r\n        pass\r\n```\r\n\r\nOrder in pytest <=7.4.4\r\n\r\n```\r\n<Package tests>\r\n  <Module test_asd.py>\r\n    <Class TestA>\r\n      <Function test_one[1-serial]>\r\n      <Function test_two[1-serial]>\r\n      <Function test_one[1-telnet]>\r\n      <Function test_two[1-telnet]>\r\n      <Function test_one[1-ssh]>\r\n      <Function test_two[1-ssh]>\r\n      <Function test_one[2-serial]>\r\n      <Function test_two[2-serial]>\r\n      <Function test_one[2-telnet]>\r\n      <Function test_two[2-telnet]>\r\n      <Function test_one[2-ssh]>\r\n      <Function test_two[2-ssh]>\r\n      <Function test_one[3-serial]>\r\n      <Function test_two[3-serial]>\r\n      <Function test_one[3-telnet]>\r\n      <Function test_two[3-telnet]>\r\n      <Function test_one[3-ssh]>\r\n      <Function test_two[3-ssh]>\r\n```\r\n\r\nOrder in pytest >=8.0.0\r\n\r\n```\r\n<Dir pytest>\r\n  <Package tests>\r\n    <Module test_asd.py>\r\n      <Class TestA>\r\n        <Function test_one[1-serial]>\r\n        <Function test_two[1-serial]>\r\n        <Function test_one[2-serial]>\r\n        <Function test_two[2-serial]>\r\n        <Function test_one[2-telnet]>\r\n        <Function test_two[2-telnet]>\r\n        <Function test_one[1-telnet]>\r\n        <Function test_two[1-telnet]>\r\n        <Function test_one[3-telnet]>\r\n        <Function test_two[3-telnet]>\r\n        <Function test_one[3-serial]>\r\n        <Function test_two[3-serial]>\r\n        <Function test_one[3-ssh]>\r\n        <Function test_two[3-ssh]>\r\n        <Function test_one[2-ssh]>\r\n        <Function test_two[2-ssh]>\r\n        <Function test_one[1-ssh]>\r\n        <Function test_two[1-ssh]>\r\n\r\n```",
      "state": "CLOSED",
      "createdAt": "2024-02-14T10:50:04Z",
      "updatedAt": "2024-02-14T12:06:26Z",
      "closedAt": "2024-02-14T12:06:26Z",
      "author": {
        "login": "ShurikMen"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 11975,
      "title": "conditionally rewrite assertions / support assertion descriptions in `pytest_assertion_pass` and `pytest_assertrepr_compare` hooks",
      "body": "<!--\r\nThanks for suggesting a feature!\r\n\r\nQuick check-list while suggesting features:\r\n-->\r\n\r\n#### What's the problem this feature will solve?\r\nin my plugin, i want to be able to customize or rewrite assertions based on the second argument to the `assert` statement:\r\n```py\r\nassert False, \"value was false\"\r\n```\r\n\r\n#### Describe the solution you'd like\r\neither of these two solutions:\r\n1. a hook to determine whether to rewrite an assertion:\r\n    ```py\r\n    @hookimpl(firstresult=True) # first non-None result means don't rewrite\r\n    def pytest_rewrite_assertion(item: Item, lineno: int, orig: str, description: object):\r\n        ...\r\n    ```\r\n2. add a new \"description\" argument to these existing hooks:\r\n    ```py\r\n    def pytest_assertion_pass(item: Item, lineno: int, orig: str, expl: str, description: object):\r\n        ...\r\n    ```\r\n    ```py\r\n    def pytest_assertrepr_compare(config: Config, op: str, left: object, right: object, description: object):\r\n        ...\r\n    ```\r\n\r\n#### Additional context\r\n<!-- Add any other context, links, etc. about the feature here. -->\r\nthis is mainly for the concept of \"user-facing\" vs \"non-user-facing\" assertions\r\n\r\n##### user-facing assertions\r\na user-facing assertion is written as part of the test (ie. ensuring that the function being tested has the correct value)\r\n```py\r\ndef test_get_value():\r\n    assert get_value(1) == 1\r\n```\r\n\r\n##### non-user-facing assertions\r\na non-user-facing assertion is used for things like narrowing types, typically in utility functions which have nothing to do with the test itself\r\n```py\r\ndef get_value(value: object):\r\n    assert isinstance(value, int)\r\n    ...\r\n\r\ndef test_get_value():\r\n    assert get_value(1) == 1\r\n```\r\n\r\nmy plugin is a robotframework test runner: https://github.com/DetachHead/pytest-robotframework. robotframework assertions are different to pytest assertions, since they use functions (called keywords) like `should_be_equal`, `should_not_be_equal`, etc.\r\n\r\nwe are in the process of converting an existing robotframework codebase to python using this plugin, however since the user-facing assertions were handled by those keywords, there are hundreds of `assert` statements in the codebase that were written as regular python non-user-facing `assert` statements and are not meant to be displayed to the user. we want to replace them all with pytest assertions though.\r\n\r\ni know you can use `register_assert_rewrite` to control which modules have their `assert` statements rewritten, but in many cases there are user-facing and non-user-facing assertions in the same module.",
      "state": "OPEN",
      "createdAt": "2024-02-14T03:15:31Z",
      "updatedAt": "2024-02-17T20:20:51Z",
      "closedAt": null,
      "author": {
        "login": "DetachHead"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: proposal"
          },
          {
            "name": "topic: rewrite"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 11974,
      "title": "pytest 8.0.0 now collects all files in current directory even if you specify test files",
      "body": "After https://github.com/pytest-dev/pytest/commit/385796ba494e7ae65d55892d4a358b371ac7a6b6, pytest sends all files in the current directory to every plugin's `pytest_collect_file` hook, even if you are only wanting to run/collect tests from one file. If you have pytest-cpp installed, it means it executes all executable files in the current directory, which isn't desired behavior at all, or at least unexpected.\r\n\r\n```\r\nsafety/\r\n  test_toyota.py\r\n  test_coverage.sh  # shouldn't be run\r\n```\r\n\r\n`pytest test_toyota.py` -> runs test_coverage.sh (which in my case is long running and runs another pytest causing a recursive loop)\r\n\r\nNow, this isn't because of pytest per se, but the pytest-cpp plugin which [runs all executable files with `--help`](https://github.com/pytest-dev/pytest-cpp/blob/d25bc69396720aaabb1e6688be68eaaa2bb0f006/src/pytest_cpp/google.py#L28) to discover if it's a certain test suite file. If this new behavior of collecting every file, despite specifying your file filter is intentional, we can close this.\r\n\r\n---\r\n\r\nA worse case is just:\r\n\r\n```\r\nsafety/\r\n  test_toyota.py\r\n  test.sh\r\n```\r\n\r\nwhere test.sh has a pytest command inside it with some extra setup:\r\n\r\n```\r\npytest -n auto test_*.py -k 'not Base'\r\n```\r\n\r\ncurrently, it will recursively run itself with `pytest-cpp` installed.",
      "state": "CLOSED",
      "createdAt": "2024-02-14T00:25:35Z",
      "updatedAt": "2024-02-14T12:08:25Z",
      "closedAt": "2024-02-14T12:08:24Z",
      "author": {
        "login": "sshane"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 11973,
      "title": "Use the `Framework :: Pytest` trove classifier to build the plugin list",
      "body": "<!--\r\nThanks for suggesting a feature!\r\n\r\nQuick check-list while suggesting features:\r\n-->\r\n\r\n#### What's the problem this feature will solve?\r\n<!-- What are you trying to do, that you are unable to achieve with pytest as it currently stands? -->\r\n\r\nI've just released a `pytest` plugin called [`logot`](https://github.com/etianen/logot), but because it isn't named `pytest-XXX`, it needs to be manually added to the plugin list (see #11972).\r\n\r\n#### Describe the solution you'd like\r\n<!-- A clear and concise description of what you want to happen. -->\r\n\r\nIt would be great if the `scripts/update-plugin-list.py` discovered plugins based on the `Framework :: Pytest` trove classifier.\r\n\r\n<!-- Provide examples of real-world use cases that this would enable and how it solves the problem described above. -->\r\n\r\nAs well as `logot`, this would correctly discover the `logassert`, `nuts` and `flask_fixture` plugins that currently require manual adding to the list. It would allow the manual list to be completely eliminated! \ud83d\udd25 \r\n\r\n#### Alternative Solutions\r\n<!-- Have you tried to workaround the problem using a pytest plugin or other tools? Or a different approach to solving this issue? Please elaborate here. -->\r\n\r\nN/A\r\n\r\n#### Additional context\r\n<!-- Add any other context, links, etc. about the feature here. -->\r\n\r\nMaybe this is impossible! But if you think this feature is a good idea, I'd be happy to investigate more and provide a PR! \u2764\ufe0f \r\n",
      "state": "CLOSED",
      "createdAt": "2024-02-13T22:51:19Z",
      "updatedAt": "2024-02-13T23:06:17Z",
      "closedAt": "2024-02-13T23:01:48Z",
      "author": {
        "login": "etianen"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      }
    },
    {
      "number": 11971,
      "title": "Hangs on \"collecting...\" no matter what I try!",
      "body": "**Description:**\r\n* Pretty simple issue, no matter what I try, if I run `pytest` it hangs forever at \"Collecting...\". It also uses up more memory than one would expect.\r\n* At first I thought it could be a TMUX problem, but I ran it in the base ubuntu shell and still had the issue.\r\n* The odd thing is this is happening on my new machine, however I had a previous DELL laptop (Intel chip) with the same Windows + Ubuntu OS and it worked just fine. My new laptop is a Lenovo with an AMD Ryzen CPU.\r\n* Pretty annoying as pytest is core to my dev workflow. This is a brand new machine, with very limited amount of software installed.\r\n\r\n**pytest version + OS:** \r\n* 6.2.5, but I had the same problem with the latest version!\r\n* Ubuntu 22.04 running from WSL.\r\n\r\n**pip list:**\r\n```\r\nPackage                           Version\r\n--------------------------------- --------\r\naffine                            2.4.0\r\naiobotocore                       2.5.2\r\naiohttp                           3.9.3\r\naioitertools                      0.11.0\r\naiosignal                         1.3.1\r\nannotated-types                   0.6.0\r\nasync-timeout                     4.0.3\r\nattrs                             23.2.0\r\naws-cdk.asset-awscli-v1           2.2.202\r\naws-cdk.asset-kubectl-v20         2.1.2\r\naws-cdk.asset-node-proxy-agent-v5 2.0.166\r\naws-cdk.aws-lambda-python-alpha   2.86.0a0\r\naws-cdk-lib                       2.86.0\r\naws-lambda-powertools             2.31.0\r\naws-xray-sdk                      2.12.1\r\nblack                             23.12.1\r\nboto3                             1.26.19\r\nbotocore                          1.29.161\r\nbounded-pool-executor             0.0.3\r\ncattrs                            23.2.3\r\ncertifi                           2024.2.2\r\ncffi                              1.16.0\r\ncharset-normalizer                3.3.2\r\nclick                             8.1.7\r\nclick-plugins                     1.1.1\r\ncligj                             0.7.2\r\ncloudpickle                       3.0.0\r\nconstructs                        10.3.0\r\ncryptography                      42.0.2\r\ndask                              2024.1.1\r\nearthaccess                       0.8.2\r\nexceptiongroup                    1.2.0\r\nfastjsonschema                    2.19.1\r\nfrozenlist                        1.4.1\r\nfsspec                            2023.6.0\r\ngeojson-pydantic                  1.0.1\r\nidna                              3.6\r\nimportlib-metadata                7.0.1\r\nimportlib-resources               6.1.1\r\niniconfig                         2.0.0\r\nJinja2                            3.1.3\r\njmespath                          1.0.1\r\njsii                              1.94.0\r\nlocket                            1.0.0\r\nMarkupSafe                        2.1.5\r\nmoto                              4.0.11\r\nmultidict                         6.0.5\r\nmultimethod                       1.11\r\nmypy-extensions                   1.0.0\r\nnodeenv                           1.8.0\r\nnumpy                             1.26.4\r\npackaging                         23.2\r\npandas                            2.2.0\r\npartd                             1.4.1\r\npathspec                          0.12.1\r\npip                               24.0\r\nplatformdirs                      4.2.0\r\npluggy                            1.4.0\r\npqdm                              0.2.0\r\npublication                       0.0.3\r\npy                                1.11.0\r\npycparser                         2.21\r\npydantic                          2.6.1\r\npydantic_core                     2.16.2\r\npyparsing                         3.1.1\r\npyproj                            3.6.1\r\npyright                           1.1.350\r\npytest                            6.2.5\r\npython-cmr                        0.9.0\r\npython-dateutil                   2.8.2\r\npytz                              2024.1\r\nPyYAML                            6.0.1\r\nrasterio                          1.3.9\r\nrequests                          2.31.0\r\nresponses                         0.24.1\r\nrioxarray                         0.15.0\r\ns3fs                              2023.6.0\r\ns3transfer                        0.6.2\r\nsetuptools                        58.1.0\r\nsix                               1.16.0\r\nsnuggs                            1.4.7\r\ntinynetrc                         1.3.1\r\ntoml                              0.10.2\r\ntomli                             2.0.1\r\ntoolz                             0.12.1\r\ntqdm                              4.66.2\r\ntypeguard                         2.13.3\r\ntyping_extensions                 4.9.0\r\ntzdata                            2024.1\r\nurllib3                           1.26.18\r\nWerkzeug                          3.0.1\r\nwrapt                             1.16.0\r\nxarray                            2024.1.1\r\nxmltodict                         0.13.0\r\nyarl                              1.9.4\r\nzipp                              3.17.0\r\n```\r\n\r\n\r\n**Checklist:**\r\n- [ x] a detailed description of the bug or problem you are having\r\n- [ x] output of `pip list` from the virtual environment you are using\r\n- [ x] pytest and operating system versions\r\n- [ ] minimal example if possible\r\n",
      "state": "CLOSED",
      "createdAt": "2024-02-13T20:47:05Z",
      "updatedAt": "2024-02-13T21:49:24Z",
      "closedAt": "2024-02-13T21:49:24Z",
      "author": {
        "login": "xaviernogueira"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 11969,
      "title": "8.0.1 release planning",
      "body": "I plan to release pytest 8.0.1 this weekend (Friday or Saturday), we have fixed many regressions.\r\n\r\nCurrent nice-to-haves that are not yet merged:\r\n\r\n- #11917 (waiting on author)\r\n- #11959 (maybe; might be only relevant for 8.1, need to check)\r\n- #11920 (waiting on review)\r\n- #11936 (maybe; might wait for next patch release depending on review time and whether @nicoddemus would want to backport)",
      "state": "CLOSED",
      "createdAt": "2024-02-13T07:53:30Z",
      "updatedAt": "2024-02-17T09:58:55Z",
      "closedAt": "2024-02-17T09:58:55Z",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": [
          {
            "login": "bluetech"
          }
        ]
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 11960,
      "title": "I'm sad and tire of the way PyTest handles sys.path",
      "body": "The sun has long set, but I'm still sitting in my chair after all the hours fighting with PyTest. PyTest surely is magical, but when the magic does not work as intended, it can drive you mad like a company's \"voice assistant\" that does not help you, but also does not let you talk to a human. Sometimes I really long for Python's unittest way of doing what the user asks.\r\n\r\nOur tests system is complex. Everything happens remotely. I'm not running pytest, the system does. The system runs pytest program and allows me to specify CLI args.\r\n\r\nHere is our dir structure\r\n\r\n```\r\nthird_party/\r\n\u251c\u2500 databricks_cli/\r\n\u2502  \u251c\u2500 __init__.py\r\n\u2502  \u251c\u2500 ...\r\n\u2502  \u251c\u2500 tests/\r\n\u2502  \u2502  \u251c\u2500 __init__.py\r\n\u2502  \u2502  \u251c\u2500 conftest.py\r\n\u2502  \u2502  \u251c\u2500 utils.py\r\n\u2502  \u2502  \u251c\u2500 group_foo/\r\n\u2502  \u2502  \u2502  \u251c\u2500 __init__.py\r\n\u2502  \u2502  \u2502  \u251c\u2500 test_foo.py\r\n```\r\n\r\n`test_foo.py`:\r\n```\r\nfrom tests import utils\r\nE   ModuleNotFoundError: No module named 'tests'\r\n```\r\n\r\nAlso\r\n```\r\n    from tests import conftest\r\nE   ModuleNotFoundError: No module named 'tests'\r\n```\r\n\r\nAlso\r\n```\r\n    import conftest\r\nE   ModuleNotFoundError: No module named 'conftest'\r\n```\r\n\r\n\r\nWhen I do the equivalent of `cd \"third_party/databricks_cli\" && pytest`, the `sys.path` only has `third_party`, not `third_party/databricks_cli`.\r\n\r\nWhen I do the equivalent of `cd \"third_party/databricks_cli/tests\" && pytest`, the `sys.path` only has `third_party`, not `third_party/databricks_cli`.\r\n\r\n\r\n`unittest` has `--start-directory` and `--top-level-directory` and changing them results in actual changes.\r\n\r\nWherever I run, there are only walls.\r\nI know that using `python -m pytest` instead of `pytest` would solve the issue. But I cannot replace the `pytest`  command executable.\r\nI see people trying to use `rootdir` to affect `sys.path`. The documentation now tells in bold letters that's wrong. https://github.com/pytest-dev/pytest/issues/4594\r\nI was hopeful when I saw that a PR added a `pythonpath` option. https://github.com/pytest-dev/pytest/pull/9134 I tried `pytest --override-ini='pythonpath=foo'`, but this option is not really working for me and some other users: https://github.com/pytest-dev/pytest/issues/11311 And it looks like `pythonpath` is not really `PYTHONPATH`. Back to square one.\r\n\r\nI feel powerless. There seems to be nothing I can do to change the PyTests's `sys.path` behaviors.\r\n\r\nA simple thing. Adding current directory to `sys.path`. Impossible.\r\n\r\nI'm sad and tired. Thank you for listening. You can close this bug as \"works as intended\" now.\r\n",
      "state": "CLOSED",
      "createdAt": "2024-02-10T03:47:51Z",
      "updatedAt": "2024-02-10T15:42:47Z",
      "closedAt": "2024-02-10T12:47:54Z",
      "author": {
        "login": "Ark-kun"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 11955,
      "title": "8.0.0: pytest fails in many modules test suites on `.::project` unit",
      "body": "- [x] a detailed description of the bug or problem you are having\r\n- [x] output of `pip list` from the virtual environment you are using\r\n- [x] pytest and operating system versions\r\n- [x] minimal example if possible\r\n\r\nLinux x86/64.\r\nI just started testing all my modules packaged as rpm packages (+1.2k) with new pytates 8.0.0 and found that many test suites fails in the same `.::project` unit.\r\n<details>\r\n<summary>Example with installer module</summary>\r\n\r\n```console\r\n+ PYTHONPATH=/home/tkloczko/rpmbuild/BUILDROOT/python-installer-0.7.0-7.fc35.x86_64/usr/lib64/python3.8/site-packages:/home/tkloczko/rpmbuild/BUILDROOT/python-installer-0.7.0-7.fc35.x86_64/usr/lib/python3.8/site-packages\r\n+ /usr/bin/pytest -ra -m 'not network'\r\n==================================================================================== test session starts ====================================================================================\r\nplatform linux -- Python 3.8.18, pytest-8.0.0, pluggy-1.3.0\r\nrootdir: /home/tkloczko/rpmbuild/BUILD/installer-0.7.0\r\nplugins: checkdocs-2.10.1\r\ncollected 121 items\r\n\r\n. F                                                                                                                                                                                   [  0%]\r\ntests/test_core.py ........                                                                                                                                                           [  7%]\r\ntests/test_destinations.py .........                                                                                                                                                  [ 14%]\r\ntests/test_main.py .....                                                                                                                                                              [ 19%]\r\ntests/test_records.py ..........................................                                                                                                                      [ 53%]\r\ntests/test_scripts.py ...........                                                                                                                                                     [ 62%]\r\ntests/test_sources.py ..................                                                                                                                                              [ 77%]\r\ntests/test_utils.py ...........................                                                                                                                                       [100%]\r\n\r\n========================================================================================= FAILURES ==========================================================================================\r\n_______________________________________________________________________________________ test session ________________________________________________________________________________________\r\n\r\ncls = <class '_pytest.runner.CallInfo'>, func = <function call_runtest_hook.<locals>.<lambda> at 0x7fac98c1c700>, when = 'call'\r\nreraise = (<class '_pytest.outcomes.Exit'>, <class 'KeyboardInterrupt'>)\r\n\r\n    @classmethod\r\n    def from_call(\r\n        cls,\r\n        func: Callable[[], TResult],\r\n        when: Literal[\"collect\", \"setup\", \"call\", \"teardown\"],\r\n        reraise: Optional[\r\n            Union[Type[BaseException], Tuple[Type[BaseException], ...]]\r\n        ] = None,\r\n    ) -> \"CallInfo[TResult]\":\r\n        \"\"\"Call func, wrapping the result in a CallInfo.\r\n\r\n        :param func:\r\n            The function to call. Called without arguments.\r\n        :param when:\r\n            The phase in which the function is called.\r\n        :param reraise:\r\n            Exception or exceptions that shall propagate if raised by the\r\n            function, instead of being wrapped in the CallInfo.\r\n        \"\"\"\r\n        excinfo = None\r\n        start = timing.time()\r\n        precise_start = timing.perf_counter()\r\n        try:\r\n>           result: Optional[TResult] = func()\r\n\r\n/usr/lib/python3.8/site-packages/_pytest/runner.py:345:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\n>       lambda: ihook(item=item, **kwds), when=when, reraise=reraise\r\n    )\r\n\r\n/usr/lib/python3.8/site-packages/_pytest/runner.py:266:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <HookCaller 'pytest_runtest_call'>, kwargs = {'item': <CheckdocsItem project>}, firstresult = False\r\n\r\n    def __call__(self, **kwargs: object) -> Any:\r\n        \"\"\"Call the hook.\r\n\r\n        Only accepts keyword arguments, which should match the hook\r\n        specification.\r\n\r\n        Returns the result(s) of calling all registered plugins, see\r\n        :ref:`calling`.\r\n        \"\"\"\r\n        assert (\r\n            not self.is_historic()\r\n        ), \"Cannot directly call a historic hook - use call_historic instead.\"\r\n        self._verify_all_args_are_provided(kwargs)\r\n        firstresult = self.spec.opts.get(\"firstresult\", False) if self.spec else False\r\n>       return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)\r\n\r\n/usr/lib/python3.8/site-packages/pluggy/_hooks.py:493:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <_pytest.config.PytestPluginManager object at 0x7fac99f98850>, hook_name = 'pytest_runtest_call'\r\nmethods = [<HookImpl plugin_name='runner', plugin=<module '_pytest.runner' from '/usr/lib/python3.8/site-packages/_pytest/runner...eption', plugin=<module '_pytest.threadexception' from '/usr/lib/python3.8/site-packages/_pytest/threadexception.py'>>]\r\nkwargs = {'item': <CheckdocsItem project>}, firstresult = False\r\n\r\n    def _hookexec(\r\n        self,\r\n        hook_name: str,\r\n        methods: Sequence[HookImpl],\r\n        kwargs: Mapping[str, object],\r\n        firstresult: bool,\r\n    ) -> object | list[object]:\r\n        # called from all hookcaller instances.\r\n        # enable_tracing will set its own wrapping function at self._inner_hookexec\r\n>       return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\r\n\r\n/usr/lib/python3.8/site-packages/pluggy/_manager.py:115:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nhook_name = 'pytest_runtest_call'\r\nhook_impls = [<HookImpl plugin_name='runner', plugin=<module '_pytest.runner' from '/usr/lib/python3.8/site-packages/_pytest/runner...eption', plugin=<module '_pytest.threadexception' from '/usr/lib/python3.8/site-packages/_pytest/threadexception.py'>>]\r\ncaller_kwargs = {'item': <CheckdocsItem project>}, firstresult = False\r\n\r\n    def _multicall(\r\n        hook_name: str,\r\n        hook_impls: Sequence[HookImpl],\r\n        caller_kwargs: Mapping[str, object],\r\n        firstresult: bool,\r\n    ) -> object | list[object]:\r\n        \"\"\"Execute a call into multiple python functions/methods and return the\r\n        result(s).\r\n\r\n        ``caller_kwargs`` comes from HookCaller.__call__().\r\n        \"\"\"\r\n        __tracebackhide__ = True\r\n        results: list[object] = []\r\n        exception = None\r\n        only_new_style_wrappers = True\r\n        try:  # run impl and wrapper setup functions in a loop\r\n            teardowns: list[Teardown] = []\r\n            try:\r\n                for hook_impl in reversed(hook_impls):\r\n                    try:\r\n                        args = [caller_kwargs[argname] for argname in hook_impl.argnames]\r\n                    except KeyError:\r\n                        for argname in hook_impl.argnames:\r\n                            if argname not in caller_kwargs:\r\n                                raise HookCallError(\r\n                                    f\"hook call must provide argument {argname!r}\"\r\n                                )\r\n\r\n                    if hook_impl.hookwrapper:\r\n                        only_new_style_wrappers = False\r\n                        try:\r\n                            # If this cast is not valid, a type error is raised below,\r\n                            # which is the desired response.\r\n                            res = hook_impl.function(*args)\r\n                            wrapper_gen = cast(Generator[None, Result[object], None], res)\r\n                            next(wrapper_gen)  # first yield\r\n                            teardowns.append((wrapper_gen,))\r\n                        except StopIteration:\r\n                            _raise_wrapfail(wrapper_gen, \"did not yield\")\r\n                    elif hook_impl.wrapper:\r\n                        try:\r\n                            # If this cast is not valid, a type error is raised below,\r\n                            # which is the desired response.\r\n                            res = hook_impl.function(*args)\r\n                            function_gen = cast(Generator[None, object, object], res)\r\n                            next(function_gen)  # first yield\r\n                            teardowns.append(function_gen)\r\n                        except StopIteration:\r\n                            _raise_wrapfail(function_gen, \"did not yield\")\r\n                    else:\r\n                        res = hook_impl.function(*args)\r\n                        if res is not None:\r\n                            results.append(res)\r\n                            if firstresult:  # halt further impl calls\r\n                                break\r\n            except BaseException as exc:\r\n                exception = exc\r\n        finally:\r\n            # Fast path - only new-style wrappers, no Result.\r\n            if only_new_style_wrappers:\r\n                if firstresult:  # first result hooks return a single value\r\n                    result = results[0] if results else None\r\n                else:\r\n                    result = results\r\n\r\n                # run all wrapper post-yield blocks\r\n                for teardown in reversed(teardowns):\r\n                    try:\r\n                        if exception is not None:\r\n                            teardown.throw(exception)  # type: ignore[union-attr]\r\n                        else:\r\n                            teardown.send(result)  # type: ignore[union-attr]\r\n                        # Following is unreachable for a well behaved hook wrapper.\r\n                        # Try to force finalizers otherwise postponed till GC action.\r\n                        # Note: close() may raise if generator handles GeneratorExit.\r\n                        teardown.close()  # type: ignore[union-attr]\r\n                    except StopIteration as si:\r\n                        result = si.value\r\n                        exception = None\r\n                        continue\r\n                    except BaseException as e:\r\n                        exception = e\r\n                        continue\r\n                    _raise_wrapfail(teardown, \"has second yield\")  # type: ignore[arg-type]\r\n\r\n                if exception is not None:\r\n>                   raise exception.with_traceback(exception.__traceback__)\r\n\r\n/usr/lib/python3.8/site-packages/pluggy/_callers.py:113:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nhook_name = 'pytest_runtest_call'\r\nhook_impls = [<HookImpl plugin_name='runner', plugin=<module '_pytest.runner' from '/usr/lib/python3.8/site-packages/_pytest/runner...eption', plugin=<module '_pytest.threadexception' from '/usr/lib/python3.8/site-packages/_pytest/threadexception.py'>>]\r\ncaller_kwargs = {'item': <CheckdocsItem project>}, firstresult = False\r\n\r\n    def _multicall(\r\n        hook_name: str,\r\n        hook_impls: Sequence[HookImpl],\r\n        caller_kwargs: Mapping[str, object],\r\n        firstresult: bool,\r\n    ) -> object | list[object]:\r\n        \"\"\"Execute a call into multiple python functions/methods and return the\r\n        result(s).\r\n\r\n        ``caller_kwargs`` comes from HookCaller.__call__().\r\n        \"\"\"\r\n        __tracebackhide__ = True\r\n        results: list[object] = []\r\n        exception = None\r\n        only_new_style_wrappers = True\r\n        try:  # run impl and wrapper setup functions in a loop\r\n            teardowns: list[Teardown] = []\r\n            try:\r\n                for hook_impl in reversed(hook_impls):\r\n                    try:\r\n                        args = [caller_kwargs[argname] for argname in hook_impl.argnames]\r\n                    except KeyError:\r\n                        for argname in hook_impl.argnames:\r\n                            if argname not in caller_kwargs:\r\n                                raise HookCallError(\r\n                                    f\"hook call must provide argument {argname!r}\"\r\n                                )\r\n\r\n                    if hook_impl.hookwrapper:\r\n                        only_new_style_wrappers = False\r\n                        try:\r\n                            # If this cast is not valid, a type error is raised below,\r\n                            # which is the desired response.\r\n                            res = hook_impl.function(*args)\r\n                            wrapper_gen = cast(Generator[None, Result[object], None], res)\r\n                            next(wrapper_gen)  # first yield\r\n                            teardowns.append((wrapper_gen,))\r\n                        except StopIteration:\r\n                            _raise_wrapfail(wrapper_gen, \"did not yield\")\r\n                    elif hook_impl.wrapper:\r\n                        try:\r\n                            # If this cast is not valid, a type error is raised below,\r\n                            # which is the desired response.\r\n                            res = hook_impl.function(*args)\r\n                            function_gen = cast(Generator[None, object, object], res)\r\n                            next(function_gen)  # first yield\r\n                            teardowns.append(function_gen)\r\n                        except StopIteration:\r\n                            _raise_wrapfail(function_gen, \"did not yield\")\r\n                    else:\r\n                        res = hook_impl.function(*args)\r\n                        if res is not None:\r\n                            results.append(res)\r\n                            if firstresult:  # halt further impl calls\r\n                                break\r\n            except BaseException as exc:\r\n                exception = exc\r\n        finally:\r\n            # Fast path - only new-style wrappers, no Result.\r\n            if only_new_style_wrappers:\r\n                if firstresult:  # first result hooks return a single value\r\n                    result = results[0] if results else None\r\n                else:\r\n                    result = results\r\n\r\n                # run all wrapper post-yield blocks\r\n                for teardown in reversed(teardowns):\r\n                    try:\r\n                        if exception is not None:\r\n>                           teardown.throw(exception)  # type: ignore[union-attr]\r\n\r\n/usr/lib/python3.8/site-packages/pluggy/_callers.py:96:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\n    @pytest.hookimpl(wrapper=True, tryfirst=True)\r\n    def pytest_runtest_call() -> Generator[None, None, None]:\r\n>       yield from thread_exception_runtest_hook()\r\n\r\n/usr/lib/python3.8/site-packages/_pytest/threadexception.py:87:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\n    def thread_exception_runtest_hook() -> Generator[None, None, None]:\r\n        with catch_threading_exception() as cm:\r\n            try:\r\n>               yield\r\n\r\n/usr/lib/python3.8/site-packages/_pytest/threadexception.py:63:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nhook_name = 'pytest_runtest_call'\r\nhook_impls = [<HookImpl plugin_name='runner', plugin=<module '_pytest.runner' from '/usr/lib/python3.8/site-packages/_pytest/runner...eption', plugin=<module '_pytest.threadexception' from '/usr/lib/python3.8/site-packages/_pytest/threadexception.py'>>]\r\ncaller_kwargs = {'item': <CheckdocsItem project>}, firstresult = False\r\n\r\n    def _multicall(\r\n        hook_name: str,\r\n        hook_impls: Sequence[HookImpl],\r\n        caller_kwargs: Mapping[str, object],\r\n        firstresult: bool,\r\n    ) -> object | list[object]:\r\n        \"\"\"Execute a call into multiple python functions/methods and return the\r\n        result(s).\r\n\r\n        ``caller_kwargs`` comes from HookCaller.__call__().\r\n        \"\"\"\r\n        __tracebackhide__ = True\r\n        results: list[object] = []\r\n        exception = None\r\n        only_new_style_wrappers = True\r\n        try:  # run impl and wrapper setup functions in a loop\r\n            teardowns: list[Teardown] = []\r\n            try:\r\n                for hook_impl in reversed(hook_impls):\r\n                    try:\r\n                        args = [caller_kwargs[argname] for argname in hook_impl.argnames]\r\n                    except KeyError:\r\n                        for argname in hook_impl.argnames:\r\n                            if argname not in caller_kwargs:\r\n                                raise HookCallError(\r\n                                    f\"hook call must provide argument {argname!r}\"\r\n                                )\r\n\r\n                    if hook_impl.hookwrapper:\r\n                        only_new_style_wrappers = False\r\n                        try:\r\n                            # If this cast is not valid, a type error is raised below,\r\n                            # which is the desired response.\r\n                            res = hook_impl.function(*args)\r\n                            wrapper_gen = cast(Generator[None, Result[object], None], res)\r\n                            next(wrapper_gen)  # first yield\r\n                            teardowns.append((wrapper_gen,))\r\n                        except StopIteration:\r\n                            _raise_wrapfail(wrapper_gen, \"did not yield\")\r\n                    elif hook_impl.wrapper:\r\n                        try:\r\n                            # If this cast is not valid, a type error is raised below,\r\n                            # which is the desired response.\r\n                            res = hook_impl.function(*args)\r\n                            function_gen = cast(Generator[None, object, object], res)\r\n                            next(function_gen)  # first yield\r\n                            teardowns.append(function_gen)\r\n                        except StopIteration:\r\n                            _raise_wrapfail(function_gen, \"did not yield\")\r\n                    else:\r\n                        res = hook_impl.function(*args)\r\n                        if res is not None:\r\n                            results.append(res)\r\n                            if firstresult:  # halt further impl calls\r\n                                break\r\n            except BaseException as exc:\r\n                exception = exc\r\n        finally:\r\n            # Fast path - only new-style wrappers, no Result.\r\n            if only_new_style_wrappers:\r\n                if firstresult:  # first result hooks return a single value\r\n                    result = results[0] if results else None\r\n                else:\r\n                    result = results\r\n\r\n                # run all wrapper post-yield blocks\r\n                for teardown in reversed(teardowns):\r\n                    try:\r\n                        if exception is not None:\r\n>                           teardown.throw(exception)  # type: ignore[union-attr]\r\n\r\n/usr/lib/python3.8/site-packages/pluggy/_callers.py:96:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\n    @pytest.hookimpl(wrapper=True, tryfirst=True)\r\n    def pytest_runtest_call() -> Generator[None, None, None]:\r\n>       yield from unraisable_exception_runtest_hook()\r\n\r\n/usr/lib/python3.8/site-packages/_pytest/unraisableexception.py:90:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\n    def unraisable_exception_runtest_hook() -> Generator[None, None, None]:\r\n        with catch_unraisable_exception() as cm:\r\n            try:\r\n>               yield\r\n\r\n/usr/lib/python3.8/site-packages/_pytest/unraisableexception.py:65:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nhook_name = 'pytest_runtest_call'\r\nhook_impls = [<HookImpl plugin_name='runner', plugin=<module '_pytest.runner' from '/usr/lib/python3.8/site-packages/_pytest/runner...eption', plugin=<module '_pytest.threadexception' from '/usr/lib/python3.8/site-packages/_pytest/threadexception.py'>>]\r\ncaller_kwargs = {'item': <CheckdocsItem project>}, firstresult = False\r\n\r\n    def _multicall(\r\n        hook_name: str,\r\n        hook_impls: Sequence[HookImpl],\r\n        caller_kwargs: Mapping[str, object],\r\n        firstresult: bool,\r\n    ) -> object | list[object]:\r\n        \"\"\"Execute a call into multiple python functions/methods and return the\r\n        result(s).\r\n\r\n        ``caller_kwargs`` comes from HookCaller.__call__().\r\n        \"\"\"\r\n        __tracebackhide__ = True\r\n        results: list[object] = []\r\n        exception = None\r\n        only_new_style_wrappers = True\r\n        try:  # run impl and wrapper setup functions in a loop\r\n            teardowns: list[Teardown] = []\r\n            try:\r\n                for hook_impl in reversed(hook_impls):\r\n                    try:\r\n                        args = [caller_kwargs[argname] for argname in hook_impl.argnames]\r\n                    except KeyError:\r\n                        for argname in hook_impl.argnames:\r\n                            if argname not in caller_kwargs:\r\n                                raise HookCallError(\r\n                                    f\"hook call must provide argument {argname!r}\"\r\n                                )\r\n\r\n                    if hook_impl.hookwrapper:\r\n                        only_new_style_wrappers = False\r\n                        try:\r\n                            # If this cast is not valid, a type error is raised below,\r\n                            # which is the desired response.\r\n                            res = hook_impl.function(*args)\r\n                            wrapper_gen = cast(Generator[None, Result[object], None], res)\r\n                            next(wrapper_gen)  # first yield\r\n                            teardowns.append((wrapper_gen,))\r\n                        except StopIteration:\r\n                            _raise_wrapfail(wrapper_gen, \"did not yield\")\r\n                    elif hook_impl.wrapper:\r\n                        try:\r\n                            # If this cast is not valid, a type error is raised below,\r\n                            # which is the desired response.\r\n                            res = hook_impl.function(*args)\r\n                            function_gen = cast(Generator[None, object, object], res)\r\n                            next(function_gen)  # first yield\r\n                            teardowns.append(function_gen)\r\n                        except StopIteration:\r\n                            _raise_wrapfail(function_gen, \"did not yield\")\r\n                    else:\r\n                        res = hook_impl.function(*args)\r\n                        if res is not None:\r\n                            results.append(res)\r\n                            if firstresult:  # halt further impl calls\r\n                                break\r\n            except BaseException as exc:\r\n                exception = exc\r\n        finally:\r\n            # Fast path - only new-style wrappers, no Result.\r\n            if only_new_style_wrappers:\r\n                if firstresult:  # first result hooks return a single value\r\n                    result = results[0] if results else None\r\n                else:\r\n                    result = results\r\n\r\n                # run all wrapper post-yield blocks\r\n                for teardown in reversed(teardowns):\r\n                    try:\r\n                        if exception is not None:\r\n>                           teardown.throw(exception)  # type: ignore[union-attr]\r\n\r\n/usr/lib/python3.8/site-packages/pluggy/_callers.py:96:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <_pytest.logging.LoggingPlugin object at 0x7fac98deaeb0>, item = <CheckdocsItem project>\r\n\r\n    @hookimpl(wrapper=True)\r\n    def pytest_runtest_call(self, item: nodes.Item) -> Generator[None, None, None]:\r\n        self.log_cli_handler.set_when(\"call\")\r\n\r\n>       yield from self._runtest_for(item, \"call\")\r\n\r\n/usr/lib/python3.8/site-packages/_pytest/logging.py:839:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <_pytest.logging.LoggingPlugin object at 0x7fac98deaeb0>, item = <CheckdocsItem project>, when = 'call'\r\n\r\n    def _runtest_for(self, item: nodes.Item, when: str) -> Generator[None, None, None]:\r\n        \"\"\"Implement the internals of the pytest_runtest_xxx() hooks.\"\"\"\r\n        with catching_logs(\r\n            self.caplog_handler,\r\n            level=self.log_level,\r\n        ) as caplog_handler, catching_logs(\r\n            self.report_handler,\r\n            level=self.log_level,\r\n        ) as report_handler:\r\n            caplog_handler.reset()\r\n            report_handler.reset()\r\n            item.stash[caplog_records_key][when] = caplog_handler.records\r\n            item.stash[caplog_handler_key] = caplog_handler\r\n\r\n            try:\r\n>               yield\r\n\r\n/usr/lib/python3.8/site-packages/_pytest/logging.py:822:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nhook_name = 'pytest_runtest_call'\r\nhook_impls = [<HookImpl plugin_name='runner', plugin=<module '_pytest.runner' from '/usr/lib/python3.8/site-packages/_pytest/runner...eption', plugin=<module '_pytest.threadexception' from '/usr/lib/python3.8/site-packages/_pytest/threadexception.py'>>]\r\ncaller_kwargs = {'item': <CheckdocsItem project>}, firstresult = False\r\n\r\n    def _multicall(\r\n        hook_name: str,\r\n        hook_impls: Sequence[HookImpl],\r\n        caller_kwargs: Mapping[str, object],\r\n        firstresult: bool,\r\n    ) -> object | list[object]:\r\n        \"\"\"Execute a call into multiple python functions/methods and return the\r\n        result(s).\r\n\r\n        ``caller_kwargs`` comes from HookCaller.__call__().\r\n        \"\"\"\r\n        __tracebackhide__ = True\r\n        results: list[object] = []\r\n        exception = None\r\n        only_new_style_wrappers = True\r\n        try:  # run impl and wrapper setup functions in a loop\r\n            teardowns: list[Teardown] = []\r\n            try:\r\n                for hook_impl in reversed(hook_impls):\r\n                    try:\r\n                        args = [caller_kwargs[argname] for argname in hook_impl.argnames]\r\n                    except KeyError:\r\n                        for argname in hook_impl.argnames:\r\n                            if argname not in caller_kwargs:\r\n                                raise HookCallError(\r\n                                    f\"hook call must provide argument {argname!r}\"\r\n                                )\r\n\r\n                    if hook_impl.hookwrapper:\r\n                        only_new_style_wrappers = False\r\n                        try:\r\n                            # If this cast is not valid, a type error is raised below,\r\n                            # which is the desired response.\r\n                            res = hook_impl.function(*args)\r\n                            wrapper_gen = cast(Generator[None, Result[object], None], res)\r\n                            next(wrapper_gen)  # first yield\r\n                            teardowns.append((wrapper_gen,))\r\n                        except StopIteration:\r\n                            _raise_wrapfail(wrapper_gen, \"did not yield\")\r\n                    elif hook_impl.wrapper:\r\n                        try:\r\n                            # If this cast is not valid, a type error is raised below,\r\n                            # which is the desired response.\r\n                            res = hook_impl.function(*args)\r\n                            function_gen = cast(Generator[None, object, object], res)\r\n                            next(function_gen)  # first yield\r\n                            teardowns.append(function_gen)\r\n                        except StopIteration:\r\n                            _raise_wrapfail(function_gen, \"did not yield\")\r\n                    else:\r\n                        res = hook_impl.function(*args)\r\n                        if res is not None:\r\n                            results.append(res)\r\n                            if firstresult:  # halt further impl calls\r\n                                break\r\n            except BaseException as exc:\r\n                exception = exc\r\n        finally:\r\n            # Fast path - only new-style wrappers, no Result.\r\n            if only_new_style_wrappers:\r\n                if firstresult:  # first result hooks return a single value\r\n                    result = results[0] if results else None\r\n                else:\r\n                    result = results\r\n\r\n                # run all wrapper post-yield blocks\r\n                for teardown in reversed(teardowns):\r\n                    try:\r\n                        if exception is not None:\r\n>                           teardown.throw(exception)  # type: ignore[union-attr]\r\n\r\n/usr/lib/python3.8/site-packages/pluggy/_callers.py:96:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <CaptureManager _method='fd' _global_capturing=<MultiCapture out=<FDCapture 1 oldfd=5 _state='suspended' tmpfile=<_io....xtIOWrapper name='/dev/null' mode='r' encoding='utf-8'>> _state='suspended' _in_suspended=False> _capture_fixture=None>\r\nitem = <CheckdocsItem project>\r\n\r\n    @hookimpl(wrapper=True)\r\n    def pytest_runtest_call(self, item: Item) -> Generator[None, None, None]:\r\n        with self.item_capture(\"call\", item):\r\n>           return (yield)\r\n\r\n/usr/lib/python3.8/site-packages/_pytest/capture.py:882:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nhook_name = 'pytest_runtest_call'\r\nhook_impls = [<HookImpl plugin_name='runner', plugin=<module '_pytest.runner' from '/usr/lib/python3.8/site-packages/_pytest/runner...eption', plugin=<module '_pytest.threadexception' from '/usr/lib/python3.8/site-packages/_pytest/threadexception.py'>>]\r\ncaller_kwargs = {'item': <CheckdocsItem project>}, firstresult = False\r\n\r\n    def _multicall(\r\n        hook_name: str,\r\n        hook_impls: Sequence[HookImpl],\r\n        caller_kwargs: Mapping[str, object],\r\n        firstresult: bool,\r\n    ) -> object | list[object]:\r\n        \"\"\"Execute a call into multiple python functions/methods and return the\r\n        result(s).\r\n\r\n        ``caller_kwargs`` comes from HookCaller.__call__().\r\n        \"\"\"\r\n        __tracebackhide__ = True\r\n        results: list[object] = []\r\n        exception = None\r\n        only_new_style_wrappers = True\r\n        try:  # run impl and wrapper setup functions in a loop\r\n            teardowns: list[Teardown] = []\r\n            try:\r\n                for hook_impl in reversed(hook_impls):\r\n                    try:\r\n                        args = [caller_kwargs[argname] for argname in hook_impl.argnames]\r\n                    except KeyError:\r\n                        for argname in hook_impl.argnames:\r\n                            if argname not in caller_kwargs:\r\n                                raise HookCallError(\r\n                                    f\"hook call must provide argument {argname!r}\"\r\n                                )\r\n\r\n                    if hook_impl.hookwrapper:\r\n                        only_new_style_wrappers = False\r\n                        try:\r\n                            # If this cast is not valid, a type error is raised below,\r\n                            # which is the desired response.\r\n                            res = hook_impl.function(*args)\r\n                            wrapper_gen = cast(Generator[None, Result[object], None], res)\r\n                            next(wrapper_gen)  # first yield\r\n                            teardowns.append((wrapper_gen,))\r\n                        except StopIteration:\r\n                            _raise_wrapfail(wrapper_gen, \"did not yield\")\r\n                    elif hook_impl.wrapper:\r\n                        try:\r\n                            # If this cast is not valid, a type error is raised below,\r\n                            # which is the desired response.\r\n                            res = hook_impl.function(*args)\r\n                            function_gen = cast(Generator[None, object, object], res)\r\n                            next(function_gen)  # first yield\r\n                            teardowns.append(function_gen)\r\n                        except StopIteration:\r\n                            _raise_wrapfail(function_gen, \"did not yield\")\r\n                    else:\r\n                        res = hook_impl.function(*args)\r\n                        if res is not None:\r\n                            results.append(res)\r\n                            if firstresult:  # halt further impl calls\r\n                                break\r\n            except BaseException as exc:\r\n                exception = exc\r\n        finally:\r\n            # Fast path - only new-style wrappers, no Result.\r\n            if only_new_style_wrappers:\r\n                if firstresult:  # first result hooks return a single value\r\n                    result = results[0] if results else None\r\n                else:\r\n                    result = results\r\n\r\n                # run all wrapper post-yield blocks\r\n                for teardown in reversed(teardowns):\r\n                    try:\r\n                        if exception is not None:\r\n>                           teardown.throw(exception)  # type: ignore[union-attr]\r\n\r\n/usr/lib/python3.8/site-packages/pluggy/_callers.py:96:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nitem = <CheckdocsItem project>\r\n\r\n    @hookimpl(wrapper=True)\r\n    def pytest_runtest_call(item: Item) -> Generator[None, None, None]:\r\n        xfailed = item.stash.get(xfailed_key, None)\r\n        if xfailed is None:\r\n            item.stash[xfailed_key] = xfailed = evaluate_xfail_marks(item)\r\n\r\n        if xfailed and not item.config.option.runxfail and not xfailed.run:\r\n            xfail(\"[NOTRUN] \" + xfailed.reason)\r\n\r\n        try:\r\n>           return (yield)\r\n\r\n/usr/lib/python3.8/site-packages/_pytest/skipping.py:257:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nhook_name = 'pytest_runtest_call'\r\nhook_impls = [<HookImpl plugin_name='runner', plugin=<module '_pytest.runner' from '/usr/lib/python3.8/site-packages/_pytest/runner...eption', plugin=<module '_pytest.threadexception' from '/usr/lib/python3.8/site-packages/_pytest/threadexception.py'>>]\r\ncaller_kwargs = {'item': <CheckdocsItem project>}, firstresult = False\r\n\r\n    def _multicall(\r\n        hook_name: str,\r\n        hook_impls: Sequence[HookImpl],\r\n        caller_kwargs: Mapping[str, object],\r\n        firstresult: bool,\r\n    ) -> object | list[object]:\r\n        \"\"\"Execute a call into multiple python functions/methods and return the\r\n        result(s).\r\n\r\n        ``caller_kwargs`` comes from HookCaller.__call__().\r\n        \"\"\"\r\n        __tracebackhide__ = True\r\n        results: list[object] = []\r\n        exception = None\r\n        only_new_style_wrappers = True\r\n        try:  # run impl and wrapper setup functions in a loop\r\n            teardowns: list[Teardown] = []\r\n            try:\r\n                for hook_impl in reversed(hook_impls):\r\n                    try:\r\n                        args = [caller_kwargs[argname] for argname in hook_impl.argnames]\r\n                    except KeyError:\r\n                        for argname in hook_impl.argnames:\r\n                            if argname not in caller_kwargs:\r\n                                raise HookCallError(\r\n                                    f\"hook call must provide argument {argname!r}\"\r\n                                )\r\n\r\n                    if hook_impl.hookwrapper:\r\n                        only_new_style_wrappers = False\r\n                        try:\r\n                            # If this cast is not valid, a type error is raised below,\r\n                            # which is the desired response.\r\n                            res = hook_impl.function(*args)\r\n                            wrapper_gen = cast(Generator[None, Result[object], None], res)\r\n                            next(wrapper_gen)  # first yield\r\n                            teardowns.append((wrapper_gen,))\r\n                        except StopIteration:\r\n                            _raise_wrapfail(wrapper_gen, \"did not yield\")\r\n                    elif hook_impl.wrapper:\r\n                        try:\r\n                            # If this cast is not valid, a type error is raised below,\r\n                            # which is the desired response.\r\n                            res = hook_impl.function(*args)\r\n                            function_gen = cast(Generator[None, object, object], res)\r\n                            next(function_gen)  # first yield\r\n                            teardowns.append(function_gen)\r\n                        except StopIteration:\r\n                            _raise_wrapfail(function_gen, \"did not yield\")\r\n                    else:\r\n>                       res = hook_impl.function(*args)\r\n\r\n/usr/lib/python3.8/site-packages/pluggy/_callers.py:77:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nitem = <CheckdocsItem project>\r\n\r\n    def pytest_runtest_call(item: Item) -> None:\r\n        _update_current_test_var(item, \"call\")\r\n        try:\r\n            del sys.last_type\r\n            del sys.last_value\r\n            del sys.last_traceback\r\n        except AttributeError:\r\n            pass\r\n        try:\r\n            item.runtest()\r\n        except Exception as e:\r\n            # Store trace info to allow postmortem debugging\r\n            sys.last_type = type(e)\r\n            sys.last_value = e\r\n            assert e.__traceback__ is not None\r\n            # Skip *this* frame\r\n            sys.last_traceback = e.__traceback__.tb_next\r\n>           raise e\r\n\r\n/usr/lib/python3.8/site-packages/_pytest/runner.py:181:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nitem = <CheckdocsItem project>\r\n\r\n    def pytest_runtest_call(item: Item) -> None:\r\n        _update_current_test_var(item, \"call\")\r\n        try:\r\n            del sys.last_type\r\n            del sys.last_value\r\n            del sys.last_traceback\r\n        except AttributeError:\r\n            pass\r\n        try:\r\n>           item.runtest()\r\n\r\n/usr/lib/python3.8/site-packages/_pytest/runner.py:173:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <CheckdocsItem project>\r\n\r\n    def runtest(self):\r\n>       desc = self.get_long_description()\r\n\r\n/usr/lib/python3.8/site-packages/pytest_checkdocs/__init__.py:30:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <CheckdocsItem project>\r\n\r\n    def get_long_description(self):\r\n>       return Description.from_md(ensure_clean(load_metadata('.')))\r\n\r\n/usr/lib/python3.8/site-packages/pytest_checkdocs/__init__.py:61:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nsource_dir = '.', isolated = True\r\n\r\n    def project_wheel_metadata(\r\n        source_dir: PathType,\r\n        isolated: bool = True,\r\n        *,\r\n        runner: RunnerType = pyproject_hooks.quiet_subprocess_runner,\r\n    ) -> metadata.PackageMetadata:\r\n        \"\"\"\r\n        Return the wheel metadata for a project.\r\n\r\n        Uses the ``prepare_metadata_for_build_wheel`` hook if available,\r\n        otherwise ``build_wheel``.\r\n\r\n        :param source_dir: Project source directory\r\n        :param isolated: Whether or not to run invoke the backend in the current\r\n                         environment or to create an isolated one and invoke it\r\n                         there.\r\n        :param runner: An alternative runner for backend subprocesses\r\n        \"\"\"\r\n\r\n        if isolated:\r\n>           with DefaultIsolatedEnv() as env:\r\n\r\n/usr/lib/python3.8/site-packages/build/util.py:41:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <build.env.DefaultIsolatedEnv object at 0x7fac98a0d3a0>\r\n\r\n    def __enter__(self) -> DefaultIsolatedEnv:\r\n        try:\r\n            self._path = tempfile.mkdtemp(prefix='build-env-')\r\n            # use virtualenv when available (as it's faster than venv)\r\n            if _should_use_virtualenv():\r\n                self.log('Creating virtualenv isolated environment...')\r\n                self._python_executable, self._scripts_dir = _create_isolated_env_virtualenv(self._path)\r\n            else:\r\n                self.log('Creating venv isolated environment...')\r\n\r\n                # Call ``realpath`` to prevent spurious warning from being emitted\r\n                # that the venv location has changed on Windows. The username is\r\n                # DOS-encoded in the output of tempfile - the location is the same\r\n                # but the representation of it is different, which confuses venv.\r\n                # Ref: https://bugs.python.org/issue46171\r\n                self._path = os.path.realpath(tempfile.mkdtemp(prefix='build-env-'))\r\n>               self._python_executable, self._scripts_dir = _create_isolated_env_venv(self._path)\r\n\r\n/usr/lib/python3.8/site-packages/build/env.py:89:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\npath = '/tmp/build-env-3kcm_ott'\r\n\r\n    def _create_isolated_env_venv(path: str) -> tuple[str, str]:\r\n        \"\"\"\r\n        On Python 3 we use the venv package from the standard library.\r\n\r\n        :param path: The path where to create the isolated build environment\r\n        :return: The Python executable and script folder\r\n        \"\"\"\r\n        import venv\r\n\r\n        import packaging.version\r\n\r\n        if sys.version_info < (3, 8):\r\n            import importlib_metadata as metadata\r\n        else:\r\n            from importlib import metadata\r\n\r\n        symlinks = _fs_supports_symlink()\r\n        try:\r\n            with warnings.catch_warnings():\r\n                if sys.version_info[:3] == (3, 11, 0):\r\n                    warnings.filterwarnings('ignore', 'check_home argument is deprecated and ignored.', DeprecationWarning)\r\n                venv.EnvBuilder(with_pip=True, symlinks=symlinks).create(path)\r\n        except subprocess.CalledProcessError as exc:\r\n>           raise FailedProcessError(exc, 'Failed to create venv. Maybe try installing virtualenv.') from None\r\nE           build._exceptions.FailedProcessError: Failed to create venv. Maybe try installing virtualenv.\r\nE             Command '/tmp/build-env-3kcm_ott/bin/python3 -Im ensurepip --upgrade --default-pip' failed with return code 1\r\nE             stdout:\r\nE               Traceback (most recent call last):\r\nE                 File \"/usr/lib64/python3.8/runpy.py\", line 185, in _run_module_as_main\r\nE                   mod_name, mod_spec, code = _get_module_details(mod_name, _Error)\r\nE                 File \"/usr/lib64/python3.8/runpy.py\", line 144, in _get_module_details\r\nE                   return _get_module_details(pkg_main_name, error)\r\nE                 File \"/usr/lib64/python3.8/runpy.py\", line 111, in _get_module_details\r\nE                   __import__(pkg_name)\r\nE                 File \"/usr/lib64/python3.8/ensurepip/__init__.py\", line 29, in <module>\r\nE                   _SETUPTOOLS_VERSION = _get_most_recent_wheel_version(\"setuptools\")\r\nE                 File \"/usr/lib64/python3.8/ensurepip/__init__.py\", line 26, in _get_most_recent_wheel_version\r\nE                   return str(max(_wheels[pkg], key=distutils.version.LooseVersion))\r\nE               ValueError: max() arg is an empty sequence\r\n\r\n/usr/lib/python3.8/site-packages/build/env.py:220: FailedProcessError\r\n================================================================================== short test summary info ==================================================================================\r\nFAILED .::project - build._exceptions.FailedProcessError: Failed to create venv. Maybe try installing virtualenv.\r\n=============================================================================== 1 failed, 120 passed in 0.70s ===============================================================================\r\n```\r\n</details>\r\n\r\nWhy pytest wants to test test this unit in venv? \ud83e\udd14 \r\n\r\n<details>\r\n<summary>List of installed modules in build env for above case</summary>\r\n\r\n```console\r\nPackage                       Version\r\n----------------------------- -------\r\nalabaster                     0.7.16\r\nBabel                         2.14.0\r\nbuild                         1.0.3\r\ncharset-normalizer            3.3.2\r\ncppclean                      0.13\r\ndistro                        1.9.0\r\ndnf                           4.18.2\r\ndocutils                      0.20.1\r\nexceptiongroup                1.1.3\r\ngpg                           1.23.2\r\nidna                          3.6\r\nimagesize                     1.4.1\r\nimportlib_metadata            7.0.1\r\niniconfig                     2.0.0\r\ninvoke                        2.2.0\r\nJinja2                        3.1.3\r\nlibdnf                        0.72.0\r\nmarkdown-it-py                3.0.0\r\nMarkupSafe                    2.1.3\r\nmdit-py-plugins               0.4.0\r\nmdurl                         0.1.2\r\nmock                          5.1.0\r\nmyst-parser                   2.0.0\r\npackaging                     23.2\r\npluggy                        1.3.0\r\nPygments                      2.17.2\r\npyproject_hooks               1.0.0\r\npytest                        8.0.0\r\npython-dateutil               2.8.2\r\npytz                          2024.1\r\nPyYAML                        6.0.1\r\nrequests                      2.31.0\r\nsix                           1.16.0\r\nsnowballstemmer               2.2.0\r\nSphinx                        7.1.2\r\nsphinx-argparse               0.4.0\r\nsphinxcontrib-applehelp       1.0.4\r\nsphinxcontrib-devhelp         1.0.5\r\nsphinxcontrib-htmlhelp        2.0.5\r\nsphinxcontrib-jsmath          1.0.1\r\nsphinxcontrib-qthelp          1.0.7\r\nsphinxcontrib-serializinghtml 1.1.10\r\ntomli                         2.0.1\r\nurllib3                       1.26.18\r\nwheel                         0.42.0\r\nzipp                          3.17.0\r\n```\r\n</details>\r\n",
      "state": "CLOSED",
      "createdAt": "2024-02-08T22:01:47Z",
      "updatedAt": "2024-02-08T23:15:23Z",
      "closedAt": "2024-02-08T22:13:21Z",
      "author": {
        "login": "kloczek"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 9
      }
    },
    {
      "number": 11954,
      "title": "pytest 8.1.0.dev gives TypeError: Warning message must be str",
      "body": "<!--\r\nThanks for submitting an issue!\r\n\r\nQuick check-list while reporting bugs:\r\n-->\r\n\r\nStarted noticing failures with `pytest 8.1.0.dev171+g9454fc38d`. I suspect it is caused by https://github.com/pytest-dev/pytest/pull/11804 .\r\n\r\nIn astropy , we have a warning class that is a grandchild of Python built-in `Warning` class, defined as follows (don't ask me why, I am just the messenger):\r\n\r\n```python\r\nclass IllegalMinuteWarning(AstropyWarning):\r\n    \"\"\"\r\n    Raised when a minute value is 60.\r\n\r\n    Parameters\r\n    ----------\r\n    minute : int, float\r\n    \"\"\"\r\n\r\n    def __init__(self, minute, alternativeactionstr=None):\r\n        self.minute = minute\r\n        self.alternativeactionstr = alternativeactionstr\r\n\r\n    def __str__(self):\r\n        message = (\r\n            f\"'minute' was found  to be '{self.minute}', which is not in range [0,60).\"\r\n        )\r\n        if self.alternativeactionstr is not None:\r\n            message += \" \" + self.alternativeactionstr\r\n        return message\r\n```\r\n\r\nWorks fine for years, until today. I think pytest type check is now too strict. Is this something you are able to relax a little on your end? Thanks!\r\n\r\nDetailed log and more info here:\r\n\r\n* https://github.com/astropy/astropy/issues/16016",
      "state": "CLOSED",
      "createdAt": "2024-02-08T19:42:24Z",
      "updatedAt": "2024-02-16T12:00:38Z",
      "closedAt": "2024-02-16T12:00:38Z",
      "author": {
        "login": "pllim"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      }
    },
    {
      "number": 11953,
      "title": "Internal IndexError when testing",
      "body": "<!--\r\nThanks for submitting an issue!\r\n\r\nQuick check-list while reporting bugs:\r\n-->\r\n\r\nI've encountered a strange IndexError when testing my package on GitHub Actions. It doesn't happen locally and only Python 3.11+ is affected.\r\n\r\npytest is 8.0.0, OS is ubuntu-20.04\r\nHere's the log from the failed action: [logs.txt](https://github.com/pytest-dev/pytest/files/14210376/logs.txt)\r\n\r\nYou can check my repository for details: https://github.com/solaluset/pwcp/tree/rename",
      "state": "CLOSED",
      "createdAt": "2024-02-08T14:21:08Z",
      "updatedAt": "2024-02-17T16:59:11Z",
      "closedAt": "2024-02-17T16:59:11Z",
      "author": {
        "login": "solaluset"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: bug"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 4
      }
    },
    {
      "number": 11952,
      "title": "Duplicated test collection when importing",
      "body": "### Discussed in https://github.com/pytest-dev/pytest/discussions/11949\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **joaodaher** February  7, 2024</sup>\r\nWhen I import a test in another file, pytest duplicates the test case.\r\nHere's a minimal example:\r\n\r\n`/test_a.py`\r\n```\r\ndef test_case_a():\r\n    print(\"Test A :: Case A\")\r\n```\r\n\r\n`/test_b.py`\r\n```\r\nfrom test_a import test_case_a\r\n\r\ndef test_case_b():\r\n    print(\"Test B :: Case B\")\r\n```\r\n\r\nWhen I run `pytest --co` I get:\r\n```\r\nplatform darwin -- Python 3.12.0, pytest-8.0.0, pluggy-1.4.0\r\nrootdir: [suppressed]/pytest-dups\r\ncollected 3 items\r\n\r\n<Dir pytest-dups>\r\n  <Module test_a.py>\r\n    <Function test_case_a>\r\n  <Module test_b.py>\r\n    <Function test_case_a>\r\n    <Function test_case_b>\r\n```\r\n\r\nAs you can see, `test_case_a` is collected twice (probably due to being present on test_b's namespace?).\r\n\r\nThis can get a lot worse with class-based tests, since all of them are duplicated.\r\n\r\nIs this a feature or a bug?\r\nIs there a way of preventing tests from being imported in the \"wrong\" module?</div>",
      "state": "CLOSED",
      "createdAt": "2024-02-08T11:16:31Z",
      "updatedAt": "2024-02-09T11:47:53Z",
      "closedAt": "2024-02-09T11:47:53Z",
      "author": {
        "login": "joaodaher"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 4
      }
    },
    {
      "number": 11945,
      "title": "`pytest.approx()` incorrectly flags nested sequences as unequal",
      "body": "Consider this:\r\n```python\r\n>>> a = [(1.20000000000001,)]\r\n>>> b = [(1.2,)]\r\n>>> a == pytest.approx(b)\r\nFalse\r\n```\r\n\r\nOn the other hand:\r\n```python\r\n>>> a[0] == pytest.approx(b[0])\r\nTrue\r\n```\r\n\r\nSo I am assuming it is thrown off by the nested sequences.\r\n\r\nI am using pytest  8.0.0.\r\n",
      "state": "OPEN",
      "createdAt": "2024-02-07T14:54:08Z",
      "updatedAt": "2024-02-25T14:01:55Z",
      "closedAt": null,
      "author": {
        "login": "polwel"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "topic: approx"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 11944,
      "title": "Add public API to get value of fixture by its name",
      "body": "#### What's the problem this feature will solve?\r\nIn lower version, it was possible to perform sth like this:\r\n```python\r\nfrom pytest import FixtureRequest\r\n\r\nvalue = FixtureRequest(item).getfixturevalue('fixture_name')\r\n```\r\nWith pytest 8.0 this is not possible because FixtureRequest is abstract. Public API to get value of fixture would mitigate this problem.\r\n\r\n#### Describe the solution you'd like\r\nThe best will be to add method to `Item` | `Function` to get fixture value. Alternatively will be to add similar API somewhere in `_pytest.fixtures.py` and reexport it in `pytest.__init__.py`\r\nAbility to get value from fixture by its name would be really useful to perform actions which requires fixture at hook level. In my example, I am using `driver` fixture to pass `selenium` `WebDriver` to tests. After test teardown I am taking screenshot if test was failed at `pytest_runtest_makereport` scope. Lack of available API at pytest level makes it impossible to get fixture if error happens at `setup` (`driver` is not present at `item.funcargs`:\r\n```\r\nclass TestFoo:\r\n    @pytest.fixture(autouse=True)\r\n    def setup(self, driver: WebDriver):\r\n        ...\r\n    \r\n    def test_foo():\r\n        ...\r\n```\r\n#### Alternative Solutions\r\nMissing. All code to inspect fixtures is hidden under private API (in `_pytest`)",
      "state": "CLOSED",
      "createdAt": "2024-02-07T13:13:16Z",
      "updatedAt": "2024-03-08T12:38:16Z",
      "closedAt": "2024-03-08T12:38:16Z",
      "author": {
        "login": "gryznar"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: proposal"
          },
          {
            "name": "topic: fixtures"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 8
      }
    },
    {
      "number": 11942,
      "title": "a public method to change pytester's working directory",
      "body": "<!--\r\nThanks for suggesting a feature!\r\n\r\nQuick check-list while suggesting features:\r\n-->\r\n\r\n#### What's the problem this feature will solve?\r\ni'm writing a test for my own pytest plugin that changes the working directory to a child of the temporary directory created by pytester, because there was a bug in my plugin that caused it to break when it was run in a different directory to where the tests were located. however there doesn't seem to be a public method to do this\r\n\r\n#### Describe the solution you'd like\r\nthe `Pytester.chdir` method could take an optional argument to specify what path to change the working directory to:\r\n```py\r\ndef chdir(self, new_path: Path | None = None) -> None:\r\n    \"\"\"Cd into the temporary directory.\r\n\r\n    This is done automatically upon instantiation.\r\n    \"\"\"\r\n    if new_path:\r\n        self._path = new_path\r\n    self._monkeypatch.chdir(self.path)\r\n```\r\n#### Alternative Solutions\r\nas a workaround i modified the private `_path` attribute and called `chdir` at the start of the test:\r\n\r\n```py\r\ndef test_foo(pytester: Pytester):\r\n    pytester.mkdir(\"foo\")\r\n    pytester._path = pytester.path / \"foo\"\r\n    pytester.chdir()\r\n````",
      "state": "CLOSED",
      "createdAt": "2024-02-07T01:32:07Z",
      "updatedAt": "2024-02-10T00:43:30Z",
      "closedAt": "2024-02-10T00:43:30Z",
      "author": {
        "login": "DetachHead"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: enhancement"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 4
      }
    },
    {
      "number": 11940,
      "title": "Allow plugins to cause a \"command line usage error\"",
      "body": "#### What's the problem this feature will solve?\r\nI am trying to write a `pytest` plugin that has several command line flags. Some combinations of these flags are \"illegal\", for example in the sense that they contradict each other. However, I noticed that there seems to be no way to terminate the program with the standard \"usage error\" output as for example seen from `argparse`.\r\n\r\n#### Describe the solution you'd like\r\nThere should be a method, for example named `cmdline_error`, for example at the `Config` class, that causes the usage error message \"ERROR: usage: pytest [options] ...\" to appear, followed by the termination of the program with the appropriate exit code.\r\n\r\n#### Alternative Solutions\r\nCurrently, the way I achieve this is by accessing the `error` function of the underlying `argparse` parser via `config._parser._getparser().error` in the `pytest_configure` hook. But of course, accessing names starting with underscores is not generally a good idea.",
      "state": "OPEN",
      "createdAt": "2024-02-06T17:21:41Z",
      "updatedAt": "2024-02-24T13:13:00Z",
      "closedAt": null,
      "author": {
        "login": "devds96"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: proposal"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 8
      }
    },
    {
      "number": 11937,
      "title": "8.0.0 reverses order of parametrize when calling individual tests ",
      "body": "**Summary**\r\nMarking a test with `@pytest.mark.parametrize('i', [1, 2, 3, 4])`, I expect the test to run 1, 2, 3, 4.\r\nAs a file, pytest does this as expected.\r\nRunning individual tests, though, results in 4, 3, 2, 1.\r\nThis is surprising behavior and new to 8.0.0.\r\n```\r\n(foo) $ pytest test_param.py::test_param -v\r\n...\r\nplatform win32 -- Python 3.11.7, pytest-8.0.0, ...\r\n...\r\ntest_param.py::test_param[4] PASSED                                      [ 25%]\r\ntest_param.py::test_param[3] PASSED                                      [ 50%]\r\ntest_param.py::test_param[2] PASSED                                      [ 75%]\r\ntest_param.py::test_param[1] PASSED                                      [100%]\r\n...\r\n```\r\n\r\nVersion 7.4.4 runs the test cases in the expected 1, 2, 3, 4 order.\r\n```\r\n(foo) $ pytest test_param.py::test_param -v\r\n...\r\nplatform win32 -- Python 3.11.7, pytest-7.4.4, ...\r\n...\r\ntest_param.py::test_param[1] PASSED                                      [ 25%]\r\ntest_param.py::test_param[2] PASSED                                      [ 50%]\r\ntest_param.py::test_param[3] PASSED                                      [ 75%]\r\ntest_param.py::test_param[4] PASSED                                      [100%]\r\n...\r\n```\r\n\r\n\r\n**Detail**\r\n- [x] a detailed description of the bug or problem you are having\r\nWhen running individual parametrized tests, the order is reversed. \r\nThis is new in 8.0.0, and not the case in 7.4.4\r\nSince 8.0.0 doesn't guarantee backward compatibility, I'm not sure if this is a bug or a feature. :)\r\nBut I didn't see it in the notes, so I'm guessing this is an unintended change, and it is an unexpected, surprising behavior.\r\n\r\n- [x] output of `pip list` from the virtual environment you are using\r\n\r\n```\r\n$ pip list\r\nPackage    Version\r\n---------- -------\r\ncolorama   0.4.6\r\niniconfig  2.0.0\r\npackaging  23.2\r\npip        23.3.1\r\npluggy     1.3.0\r\npytest     8.0.0\r\nsetuptools 65.5.0\r\n```\r\n\r\n- [x] pytest and operating system versions\r\n\r\nplatform win32 -- Python 3.11.7, pytest-8.0.0, pluggy-1.3.0\r\n\r\n- [x] minimal example if possible\r\n```\r\n$ cat test_param.py\r\nimport pytest\r\n\r\n@pytest.mark.parametrize('i', [1, 2, 3, 4])\r\ndef test_param(i):\r\n    ...\r\n```\r\n\r\n\r\nOutput from 8.0.0, shows expected 1,2,3,4 order with file invocation, but reverse order with individual test, 4, 3, 2, 1\r\n```\r\n(foo) $ pytest test_param.py -v\r\n============================= test session starts =============================\r\nplatform win32 -- Python 3.11.7, pytest-8.0.0, pluggy-1.3.0 -- C:\\Users\\okken\\projects\\foo\\venv\\Scripts\\python.exe\r\ncachedir: .pytest_cache\r\nrootdir: C:\\Users\\okken\\projects\\foo\r\nconfigfile: pytest.ini\r\ncollecting ... collected 4 items\r\n\r\ntest_param.py::test_param[1] PASSED                                      [ 25%]\r\ntest_param.py::test_param[2] PASSED                                      [ 50%]\r\ntest_param.py::test_param[3] PASSED                                      [ 75%]\r\ntest_param.py::test_param[4] PASSED                                      [100%]\r\n\r\n============================== 4 passed in 0.01s ==============================\r\n(foo) $ pytest test_param.py::test_param -v\r\n============================= test session starts =============================\r\nplatform win32 -- Python 3.11.7, pytest-8.0.0, pluggy-1.3.0 -- C:\\Users\\okken\\projects\\foo\\venv\\Scripts\\python.exe\r\ncachedir: .pytest_cache\r\nrootdir: C:\\Users\\okken\\projects\\foo\r\nconfigfile: pytest.ini\r\ncollecting ... collected 4 items\r\n\r\ntest_param.py::test_param[4] PASSED                                      [ 25%]\r\ntest_param.py::test_param[3] PASSED                                      [ 50%]\r\ntest_param.py::test_param[2] PASSED                                      [ 75%]\r\ntest_param.py::test_param[1] PASSED                                      [100%]\r\n\r\n============================== 4 passed in 0.02s ==============================\r\n```\r\n\r\n\r\nOutput from 7.4.4, shows expected 1,2,3,4 order with both file and individual test invocation.\r\n```\r\n(foo) $ pytest test_param.py -v\r\n============================= test session starts =============================\r\nplatform win32 -- Python 3.11.7, pytest-7.4.4, pluggy-1.3.0 -- C:\\Users\\okken\\projects\\foo\\venv\\Scripts\\python.exe\r\ncachedir: .pytest_cache\r\nrootdir: C:\\Users\\okken\\projects\\foo\r\nconfigfile: pytest.ini\r\ncollecting ... collected 4 items\r\n\r\ntest_param.py::test_param[1] PASSED                                      [ 25%]\r\ntest_param.py::test_param[2] PASSED                                      [ 50%]\r\ntest_param.py::test_param[3] PASSED                                      [ 75%]\r\ntest_param.py::test_param[4] PASSED                                      [100%]\r\n\r\n============================== 4 passed in 0.02s ==============================\r\n(foo) $ pytest test_param.py::test_param -v\r\n============================= test session starts =============================\r\nplatform win32 -- Python 3.11.7, pytest-7.4.4, pluggy-1.3.0 -- C:\\Users\\okken\\projects\\foo\\venv\\Scripts\\python.exe\r\ncachedir: .pytest_cache\r\nrootdir: C:\\Users\\okken\\projects\\foo\r\nconfigfile: pytest.ini\r\ncollecting ... collected 4 items\r\n\r\ntest_param.py::test_param[1] PASSED                                      [ 25%]\r\ntest_param.py::test_param[2] PASSED                                      [ 50%]\r\ntest_param.py::test_param[3] PASSED                                      [ 75%]\r\ntest_param.py::test_param[4] PASSED                                      [100%]\r\n\r\n============================== 4 passed in 0.00s ==============================\r\n```\r\n",
      "state": "CLOSED",
      "createdAt": "2024-02-05T21:51:10Z",
      "updatedAt": "2024-02-13T07:44:14Z",
      "closedAt": "2024-02-13T07:44:14Z",
      "author": {
        "login": "okken"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: bug"
          },
          {
            "name": "topic: collection"
          },
          {
            "name": "type: regression"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 4
      }
    },
    {
      "number": 11933,
      "title": "recwarn: warnings are re-emitted with wrong module",
      "body": "While reviewing #11917 I noticed a problem with the warning re-emitting code added in pytest 8.0. I think the `module=w.__module__` line below is wrong:\r\n\r\nhttps://github.com/pytest-dev/pytest/blob/aaa9ca7327de16ca07e5d169e4cf1ad5d810d1da/src/_pytest/recwarn.py#L324-L331\r\n\r\n`w` here is a `warnings.WarningMessage` so `w.__module__` is always `\"warnings\"`. But the [`warning.warn_explicit`](https://docs.python.org/3/library/warnings.html#warnings.warn_explicit) say this should rather be the module of the warning that is used for filtering.\r\n\r\nIf I'm reading the `warnings` code correctly, the `module` originally passed by the user is not preserved, so the warning cannot be re-emitted faithfully in this regard, but we can probably do something better than the current situation.\r\n\r\ncc @reaganjlee @Zac-HD ",
      "state": "OPEN",
      "createdAt": "2024-02-05T20:19:34Z",
      "updatedAt": "2024-10-21T11:30:33Z",
      "closedAt": null,
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: bug"
          },
          {
            "name": "plugin: warnings"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 6
      }
    },
    {
      "number": 11929,
      "title": "pytest 8.0.0 ignores autouse fixtures in doctest modules when collecting packages",
      "body": "pyspacewar has a test suite written back when I still thought doctest modules were neat.  It uses --doctest-modules and relies on some module-global setup/teardown specified in a `@pytest.fixture(autouse=True)`.\r\n\r\nThis [broke](https://github.com/mgedmin/pyspacewar/issues/19) with the pytest 8.0.0 release.  If I run\r\n\r\n    pytest src/pyspacewar/tests/ --setup-show\r\n\r\nI can see that the autouse fixtures defined in my conftest.py are being called, but the autouse fixture in [src/pyspacewar/tests/test_main.py](https://github.com/mgedmin/pyspacewar/blob/5bbae0d47876e614c15a180dc7d9cb8f1940a2c6/src/pyspacewar/tests/test_main.py#L47-L50) (fake_game_ui) is not.  This breaks the tests or makes them hang:\r\n\r\n    src/pyspacewar/tests/test_main.py \r\n            src/pyspacewar/tests/test_main.py::pyspacewar.tests.test_main.doctest_main (fixtures used: setUp)\r\n\r\nCuriously, if I run just a single file or all the test files in the directory, this doesn't happen:\r\n\r\n    pytest src/pyspacewar/tests/*.py --setup-show\r\n\r\nshows \r\n\r\n    ...\r\n    src/pyspacewar/tests/test_main.py \r\n        SETUP    M fake_game_ui\r\n            src/pyspacewar/tests/test_main.py::pyspacewar.tests.test_main.doctest_main (fixtures used: fake_game_ui, setUp).\r\n        TEARDOWN M fake_game_ui\r\n    ...\r\n\r\nwhich is also what pytest 7.4.4 used to do.\r\n\r\nI've verified by `pip install \"pytest<8\"` and `pip install -U pytest` that pytest being 7.4.4 vs 8.0.0 is the only difference between a working and a not-working tox environment.  A full pip list is here:\r\n\r\n```\r\nPackage    Version\r\n---------- ----------\r\niniconfig  2.0.0\r\nmock       5.1.0\r\npackaging  23.2\r\npip        23.2.1\r\npluggy     1.4.0\r\npygame     2.5.2\r\npyspacewar 1.2.0.dev0\r\npytest     8.0.0\r\n```\r\n\r\nOS: Ubuntu 23.10.\r\n\r\nI have not yet tried to produce a separate minimal example, but you should be able to quickly reproduce this if you\r\n\r\n    git clone https://github.com/mgedmin/pyspacewar\r\n    tox -e py312 --notest\r\n    .tox/py312/bin/pip install -U pytest    # because I pinned to <8 as a workaround for now\r\n    .tox/py312/bin/pytest src/pyspacewar/tests/ --setup-show\r\n",
      "state": "CLOSED",
      "createdAt": "2024-02-05T12:27:25Z",
      "updatedAt": "2024-02-07T20:09:19Z",
      "closedAt": "2024-02-07T20:09:19Z",
      "author": {
        "login": "mgedmin"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: bug"
          },
          {
            "name": "plugin: doctests"
          },
          {
            "name": "type: regression"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 11919,
      "title": "pytest hang when run with multiprocessing",
      "body": "code:\r\n```\r\nimport os\r\nimport multiprocessing\r\nimport gevent.monkey\r\ngevent.monkey.patch_all()\r\nimport threading\r\n\r\nclass EventThread(threading.Thread):\r\n    def __init__(self, event=multiprocessing.Event()):\r\n        super(EventThread, self).__init__()\r\n        self.daemon = True\r\n        self.event= event\r\n        #forksafe.register(self._restart_on_fork)\r\n\r\n    def _restart_on_fork(self):\r\n        new_thread = EventThread(self.event)\r\n        new_thread.start()\r\n\r\n    def run(self):\r\n        while self.event.wait():\r\n            print(\"hello\")\r\n\r\nprint(\"a\")\r\ndef test_a():\r\n   pid = os.fork()\r\n   t = EventThread()\r\n   t.start()\r\n```\r\n",
      "state": "CLOSED",
      "createdAt": "2024-02-04T05:57:39Z",
      "updatedAt": "2024-03-10T01:49:00Z",
      "closedAt": "2024-03-10T01:48:59Z",
      "author": {
        "login": "zdyj3170101136"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "status: needs information"
          },
          {
            "name": "stale"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 11908,
      "title": "When combining multiple marks, it is found that as long as the previous mark is satisfied, the subsequent marks will not be checked",
      "body": "pytest tests/rdma/perftest_tcp/test_*_bw.py -vx -m \"(lv0 or lv1) and smoke and not huge\"\r\n When the \u201csmoke\u201d mark is satisfied, the \"not Huge\" mark will not take effect\r\n\r\n\r\n",
      "state": "CLOSED",
      "createdAt": "2024-02-02T07:31:54Z",
      "updatedAt": "2024-03-01T01:49:18Z",
      "closedAt": "2024-03-01T01:49:17Z",
      "author": {
        "login": "guoweifeng216"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "status: needs information"
          },
          {
            "name": "stale"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 11907,
      "title": "`pytest.warns()` asserts when `pytest.skip()` is called",
      "body": "When `pytest.skip()` is used inside `pytest.warns()` (and no warning is emitted), the test fails. I'm not sure if this is intentional but it feels a bit off, given that the test would normally be skipped instead. I've hit this in the wild in [urllib3](https://github.com/urllib3/urllib3/)'s test suite.\r\n\r\nQuick reproducer:\r\n\r\n```python\r\nimport pytest\r\n\r\n\r\ndef test_foo():\r\n    with pytest.warns(UserWarning):\r\n        pytest.skip(\"skipping\")\r\n```\r\n\r\nYields:\r\n\r\n```pytb\r\n$ python -m pytest\r\n========================================================= test session starts =========================================================\r\nplatform linux -- Python 3.11.7, pytest-8.1.0.dev116+g4546d5445, pluggy-1.4.0\r\nrootdir: /tmp/test\r\ncollected 1 item                                                                                                                      \r\n\r\ntest_foo.py F                                                                                                                   [100%]\r\n\r\n============================================================== FAILURES ===============================================================\r\n______________________________________________________________ test_foo _______________________________________________________________\r\n\r\n    def test_foo():\r\n        with pytest.warns(UserWarning):\r\n>           pytest.skip(\"skipping\")\r\nE           Skipped: skipping\r\n\r\ntest_foo.py:6: Skipped\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\n    def test_foo():\r\n>       with pytest.warns(UserWarning):\r\nE       Failed: DID NOT WARN. No warnings of type (<class 'UserWarning'>,) were emitted.\r\nE        Emitted warnings: [].\r\n\r\ntest_foo.py:5: Failed\r\n======================================================= short test summary info =======================================================\r\nFAILED test_foo.py::test_foo - Failed: DID NOT WARN. No warnings of type (<class 'UserWarning'>,) were emitted.\r\n========================================================== 1 failed in 0.02s ==========================================================\r\n```\r\n\r\npip list:\r\n\r\n```\r\nPackage    Version\r\n---------- -----------------------\r\niniconfig  2.0.0\r\npackaging  23.2\r\npip        23.3.2\r\npluggy     1.4.0\r\npytest     8.1.0.dev116+g4546d5445\r\nsetuptools 69.0.3\r\n```\r\n\r\n------\r\n\r\n- [x] a detailed description of the bug or problem you are having\r\n- [x] output of `pip list` from the virtual environment you are using\r\n- [x] pytest and operating system versions\r\n- [x] minimal example if possible\r\n\r\n",
      "state": "CLOSED",
      "createdAt": "2024-02-01T17:08:46Z",
      "updatedAt": "2024-02-16T10:22:53Z",
      "closedAt": "2024-02-16T10:22:53Z",
      "author": {
        "login": "mgorny"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: bug"
          },
          {
            "name": "type: regression"
          },
          {
            "name": "plugin: warnings"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 11906,
      "title": "Bug in 8.0.0 `pytest.warns` handling",
      "body": "<!--\r\nThanks for submitting an issue!\r\n\r\nQuick check-list while reporting bugs:\r\n-->\r\n\r\nThere seems to be a handling error in 8.0.0, when `pytest.warns` fails to match the message. **Seems that the warning class itself is being called towards the end of the handling...**\r\n\r\n```python\r\nimport pytest\r\nimport warnings\r\n\r\nassert pytest.__version__ == \"8.0.0\"\r\n\r\nclass AWarning(UserWarning):\r\n    \r\n    def __init__(self, a, b):\r\n        pass\r\n\r\na, b = 1, 2\r\nwith pytest.warns(AWarning, match=\"not gonna match\"):\r\n    warnings.warn(AWarning(a, b))\r\n```\r\n```\r\n---------------------------------------------------------------------------\r\nFailed                                    Traceback (most recent call last)\r\n    [... skipping hidden 1 frame]\r\n\r\nFile ~\\...\\market_prices\\.venv\\lib\\site-packages\\_pytest\\outcomes.py:187, in fail(reason, pytrace, msg)\r\n    186 reason = _resolve_msg_to_reason(\"fail\", reason, msg)\r\n--> 187 raise Failed(msg=reason, pytrace=pytrace)\r\n\r\nFailed: DID NOT WARN. No warnings of type (<class '__main__.AWarning'>,) matching the regex were emitted.\r\n Regex: not gonna match\r\n Emitted warnings: [AWarning(1, 2)].\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTypeError                                 Traceback (most recent call last)\r\nCell In[1], line 13\r\n     11 a, b = 1, 2\r\n     12 with pytest.warns(AWarning, match=\"not gonna match\"):\r\n---> 13     warnings.warn(AWarning(a, b))\r\n\r\nFile ~\\...\\market_prices\\.venv\\lib\\site-packages\\_pytest\\recwarn.py:333, in WarningsChecker.__exit__(self, exc_type, exc_val, exc_tb)\r\n    331 for w in self:\r\n    332     if not self.matches(w):\r\n--> 333         warnings.warn_explicit(\r\n    334             str(w.message),\r\n    335             w.message.__class__,  # type: ignore[arg-type]\r\n    336             w.filename,\r\n    337             w.lineno,\r\n    338             module=w.__module__,\r\n    339             source=w.source,\r\n    340         )\r\n\r\nTypeError: __init__() missing 1 required positional argument: 'b'\r\n```\r\n\r\n**NB: only seems to happen if the Warning class takes more than one argument.** For example, if arg b is stripped from all the above then the failure to match is handled as expected.\r\n\r\nAlso, worked fine in 7.4.4:\r\n\r\n```python\r\nimport pytest\r\nimport warnings\r\n\r\nassert pytest.__version__ == \"7.4.4\"\r\n\r\nclass AWarning(UserWarning):\r\n    \r\n    def __init__(self, a, b):\r\n        pass\r\n\r\na, b = 1, 2\r\nwith pytest.warns(AWarning, match=\"not gonna match\"):\r\n    warnings.warn(AWarning(a, b))\r\n```\r\n```\r\n---------------------------------------------------------------------------\r\nFailed                                    Traceback (most recent call last)\r\nCell In[1], line 13\r\n     11 a, b = 1, 2\r\n     12 with pytest.warns(AWarning, match=\"not gonna match\"):\r\n---> 13     warnings.warn(AWarning(a, b))\r\n\r\n    [... skipping hidden 1 frame]\r\n\r\nFile ~\\...\\market_prices\\.venv\\lib\\site-packages\\_pytest\\outcomes.py:198, in fail(reason, pytrace, msg)\r\n    196 __tracebackhide__ = True\r\n    197 reason = _resolve_msg_to_reason(\"fail\", reason, msg)\r\n--> 198 raise Failed(msg=reason, pytrace=pytrace)\r\n\r\nFailed: DID NOT WARN. No warnings of type (<class '__main__.AWarning'>,) matching the regex were emitted.\r\n Regex: not gonna match\r\n Emitted warnings: [AWarning(1, 2)]\r\n```\r\n\r\nThanks is advance for looking at this!\r\n\r\nOS: 'Windows-10-10.0.22631-SP0'",
      "state": "CLOSED",
      "createdAt": "2024-02-01T13:20:19Z",
      "updatedAt": "2024-02-19T12:44:04Z",
      "closedAt": "2024-02-16T12:29:20Z",
      "author": {
        "login": "maread99"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 8
      }
    },
    {
      "number": 11904,
      "title": "8.0.0 + pyargs + permissions causes failures",
      "body": "Example of a successful test-install build on 7.4.4:\r\n\r\nhttps://github.com/pulkin/pyteleport/actions/runs/7603885071/job/20706143053\r\n\r\nOn 8.0.0 it starts looking into inaccessible folders and fails right away:\r\n\r\nhttps://github.com/pulkin/pyteleport/actions/runs/7733355863/job/21085241736",
      "state": "CLOSED",
      "createdAt": "2024-01-31T23:00:26Z",
      "updatedAt": "2024-04-28T01:30:09Z",
      "closedAt": "2024-03-02T19:09:21Z",
      "author": {
        "login": "pulkin"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: bug"
          },
          {
            "name": "topic: collection"
          },
          {
            "name": "topic: selection"
          },
          {
            "name": "type: regression"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 8
      }
    },
    {
      "number": 11902,
      "title": "Updated test collection breaks on adjacent restricted directories",
      "body": "# Problem\r\nIn pytest 8.0.0 the test collection breaks (at least on python 3.10 and 3.11) if there is an adjacent unrelated directory with restricted access in the current working directory.\r\n\r\n## Minimum reproducer\r\n```bash\r\n$ mkdir example/test -p\r\n$ touch example/test/test_example.py\r\n$ mkdir other\r\n$ chown root:root other\r\n$ chmod 700 other\r\n$ pytest --collect-only test/\r\n<--snip-->\r\n... Permission denied: '<home>/other/__init__.py'\r\n```\r\n\r\nI confirmed that the `--ignore` option properly filters out the problematic directory. But this could be resolved by first checking access to the directory [here](https://github.com/pytest-dev/pytest/blob/4546d5445aaefe6a03957db028c263521dfb5c4b/src/_pytest/python.py#L206) prior to testing the directory contains an `__init__`.",
      "state": "CLOSED",
      "createdAt": "2024-01-31T21:10:06Z",
      "updatedAt": "2024-02-08T11:11:03Z",
      "closedAt": "2024-02-08T11:11:02Z",
      "author": {
        "login": "ntjohnson1"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 11895,
      "title": "Short paths in Windows seem to fail to be collected",
      "body": "This is an initial report of an issue I observed when updating xdoctest to support pytest 8.0. \r\n\r\nWhat I found is that when I ran a test effectivly using the invocation:\r\n\r\n```\r\nC:\\hostedtoolcache\\windows\\Python\\3.12.1\\x64\\python.exe -m pytest C:\\Users\\RUNNER~1\\AppData\\Local\\Temp\\tmpcttcs8zz\r\n```\r\n\r\nPytest would collect 0 tests even though there was a python file with a test in that directory. \r\n\r\nBy adding this code to convert the short path to a long path, the xdoctest failure went away, and things seem to be working now. \r\n\r\n```python\r\ndpath = tempfile.mkdtemp()\r\n# https://stackoverflow.com/questions/11420689/how-to-get-long-file-system-path-from-python-on-windows\r\nfrom ctypes import create_unicode_buffer, windll\r\nBUFFER_SIZE = 500\r\nbuffer = create_unicode_buffer(BUFFER_SIZE)\r\nget_long_path_name = windll.kernel32.GetLongPathNameW\r\nget_long_path_name(dpath, buffer, BUFFER_SIZE)\r\ndpath = buffer.value\r\n```\r\n\r\nI've documented more of the problem here https://github.com/Erotemic/xdoctest/issues/151\r\n\r\nI don't have a MWE as I don't have a windows machine, but I'm reasonably confident that something in pytest 8 broke short path recognition on windows. I'll leave it to other devs to test further.\r\n\r\n",
      "state": "CLOSED",
      "createdAt": "2024-01-30T18:16:07Z",
      "updatedAt": "2024-02-23T10:51:16Z",
      "closedAt": "2024-02-23T10:51:16Z",
      "author": {
        "login": "Erotemic"
      },
      "assignees": {
        "nodes": [
          {
            "login": "nicoddemus"
          }
        ]
      },
      "labels": {
        "nodes": [
          {
            "name": "topic: collection"
          },
          {
            "name": "platform: windows"
          },
          {
            "name": "type: regression"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 6
      }
    },
    {
      "number": 11893,
      "title": "[conda-forge package] `pytest==8.0.0` conflicts with newer `pytest-metadata==3.0.0` and rolls back `pytest-metadata` to 2.0.0",
      "body": "Hi folks, quick touching base on the new package off conda, this may explain a lot of issues folk see and may come over report them here: https://github.com/conda-forge/pytest-feedstock/issues/170\r\n\r\nI'll try help at the feedstock to fix this, but I thought it's useful to have a pointer here too, we're seeing quite a number of issues stemming from this, will close as soon as the fix is in and the pkg rebuilt and deployed :+1: \r\n\r\nUPDATE: `pytest-metadata` have a hard pin on pytest<8.0.0 see https://github.com/conda-forge/pytest-metadata-feedstock/blob/main/recipe/meta.yaml so they need to embrace the new pytest soon :hugs: ",
      "state": "CLOSED",
      "createdAt": "2024-01-30T14:33:20Z",
      "updatedAt": "2024-01-30T16:12:14Z",
      "closedAt": "2024-01-30T15:59:31Z",
      "author": {
        "login": "valeriupredoi"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 11890,
      "title": "`pytest` 8.0 keeps returning `AttributeError: 'CallSpec2' object has no attribute 'funcargs'`",
      "body": "<!--\r\nThanks for submitting an issue!\r\n\r\nQuick check-list while reporting bugs:\r\n-->\r\nAfter upgrading to `pytest` 8.0, I see a lot of tests failed with the error.  \r\nI observe that failed tests happen when there is usage of `pytest_lazyfixture` with `pytest` 8.0.0.\r\n![image](https://github.com/pytest-dev/pytest/assets/76842571/e4346b3b-2420-4794-a252-49372a5188c3)\r\n\r\nOperating System: Ubuntu 22.04\r\n\r\n- [ ] a detailed description of the bug or problem you are having\r\n- [ ] output of `pip list` from the virtual environment you are using\r\n- [x] pytest and operating system versions\r\n- [x] minimal example if possible\r\n",
      "state": "CLOSED",
      "createdAt": "2024-01-30T02:12:36Z",
      "updatedAt": "2024-01-30T06:36:17Z",
      "closedAt": "2024-01-30T06:36:17Z",
      "author": {
        "login": "vanloc1808"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "status: needs information"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 11886,
      "title": "flaky behavior that warning log is not captured by caplog in pytest 8",
      "body": "<!--\r\nThanks for submitting an issue!\r\n\r\nQuick check-list while reporting bugs:\r\n-->\r\n\r\n- [ ] a detailed description of the bug or problem you are having\r\n- [ ] output of `pip list` from the virtual environment you are using\r\n- [ ] pytest and operating system versions\r\n- [ ] minimal example if possible\r\n\r\n- after upgrading to pytest 8, we have some flaky test failures because of the `caplog` doesn't capture the warnings log.\r\npytest < 8 does not have this issue. The issue takes place on multiple OS (mac, windows, linux) and different Python versions (3.8 - 3.11).\r\n\r\n- details can be found in our pipeline:\r\nhttps://github.com/snowflakedb/snowpark-python/actions/runs/7701541832/job/20987856477?pr=1221\r\n\r\nthe way how we use warning is\r\n\r\n```\r\nimport logging\r\nlogger = logging.getLogger(\"<mymodule>\")\r\nlogger.warning(\"some text\")\r\n```\r\n\r\nI checked the changelog but didn't find anything related to this, did I miss anything here?",
      "state": "CLOSED",
      "createdAt": "2024-01-29T22:40:43Z",
      "updatedAt": "2024-03-16T01:46:59Z",
      "closedAt": "2024-03-16T01:46:58Z",
      "author": {
        "login": "sfc-gh-aling"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: regression"
          },
          {
            "name": "status: needs information"
          },
          {
            "name": "plugin: logging"
          },
          {
            "name": "stale"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 11884,
      "title": "Fixture not found in 8.0 that is found in 7.4.4",
      "body": "In this run:\r\n\r\nhttps://github.com/openmeeg/openmeeg/actions/runs/7700673043/job/20985097864?pr=631#step:6:8200\r\n\r\nYou can see the 3.7 wheel work during testing (which uses 7.4.4), but fail in 3.8 testing (which uses 8.0.0). If I use `pytest --fixtures $TEST_PATH` the fixture is there:\r\n```\r\n  ---------------- fixtures defined from openmeeg.tests.conftest ----------------\r\n  data_path [session scope] -- ..\\venv-test\\lib\\site-packages\\openmeeg\\tests\\conftest.py:15\r\n      no docstring available\r\n  \r\n  run_some_parallel [session scope] -- ..\\venv-test\\lib\\site-packages\\openmeeg\\tests\\conftest.py:27\r\n      Run some stuff in parallel.\r\n```\r\nBut when I run the tests with `pytest --tb=short -ra -m 'not slow' -vv $TEST_PATH` I get for all tests:\r\n```\r\n  ============================= test session starts =============================\r\n  platform win32 -- Python 3.8.10, pytest-8.0.0, pluggy-1.4.0 -- C:\\Users\\runneradmin\\AppData\\Local\\Temp\\cibw-run-32upad1x\\cp38-win_amd64\\venv-test\\Scripts\\python.exe\r\n  cachedir: .pytest_cache\r\n  rootdir: C:\\Users\\runneradmin\\AppData\\Local\\Temp\\cibw-run-32upad1x\\cp38-win_amd64\r\n  collecting ... collected 13 items / 2 deselected / 11 selected\r\n  \r\n  ..\\venv-test\\Lib\\site-packages\\openmeeg\\tests\\test_doc.py::test_doc <- venv-test\\lib\\site-packages\\openmeeg\\tests\\test_doc.py ERROR [  9%]\r\n\r\n...\r\n\r\n  =================================== ERRORS ====================================\r\n  _________________________ ERROR at setup of test_doc __________________________\r\n  file C:\\Users\\runneradmin\\AppData\\Local\\Temp\\cibw-run-32upad1x\\cp38-win_amd64\\venv-test\\lib\\site-packages\\openmeeg\\tests\\test_doc.py, line 6\r\n    def test_doc():\r\n  E       fixture 'run_some_parallel' not found\r\n  >       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory\r\n  >       use 'pytest --fixtures [testpath]' for help on them.\r\n```\r\n\r\nNotably, **this only happens on the Windows `cibuildwheel` run** -- the Linux one in that same GHA is green. So the issue seems isolated to 8.0.0 on Windows. Nonetheless I am a bit mystified at why `pytest --fixtures` seems to see a different set of fixtures compared to 7.4.4 :shrug:\r\n\r\n- [x] a detailed description of the bug or problem you are having\r\n- [x] pytest and operating system versions\r\n- [ ] output of `pip list` from the virtual environment you are using\r\n- [ ] minimal example if possible\r\n\r\nNot sure how to make this one mimimal but I could put some time into this on my Windows VM at some point if it's not clear enough what's going on.",
      "state": "OPEN",
      "createdAt": "2024-01-29T18:52:53Z",
      "updatedAt": "2025-01-07T17:35:21Z",
      "closedAt": null,
      "author": {
        "login": "larsoner"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "platform: windows"
          },
          {
            "name": "type: regression"
          },
          {
            "name": "topic: fixtures"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 10
      }
    },
    {
      "number": 11882,
      "title": "incorrect docs for excinfo.group_contains",
      "body": "https://docs.pytest.org/en/stable/how-to/assert.html#assert-matching-exception-groups v: stable\r\n\r\ngives the following as example:\r\n```python\r\ndef test_exception_in_group():\r\n    with pytest.raises(RuntimeError) as excinfo:\r\n        raise ExceptionGroup(\r\n            \"Group message\",\r\n            [\r\n                RuntimeError(\"Exception 123 raised\"),\r\n            ],\r\n        )\r\n    assert excinfo.group_contains(RuntimeError, match=r\".* 123 .*\")\r\n    assert not excinfo.group_contains(TypeError)\r\n```\r\nrunning that code on pytest==8.0.0, python==3.11.6, Linux gives\r\n```\r\n$ pytest test_bar.py \r\n===================================== test session starts =====================================\r\nplatform linux -- Python 3.11.6, pytest-8.0.0, pluggy-1.4.0\r\nrootdir: /tmp/pytest_8\r\ncollected 1 item                                                                              \r\n\r\ntest_bar.py F                                                                           [100%]\r\n\r\n========================================== FAILURES ===========================================\r\n___________________________________ test_exception_in_group ___________________________________\r\n  + Exception Group Traceback (most recent call last):\r\n...\r\n  +-+---------------- 1 ----------------\r\n    | RuntimeError: Exception 123 raised\r\n    +------------------------------------\r\n=================================== short test summary info ===================================\r\nFAILED test_bar.py::test_exception_in_group - ExceptionGroup: Group message (1 sub-exception)\r\n====================================== 1 failed in 0.01s ======================================\r\n```\r\n\r\n\r\nI'm pretty sure the example is supposed to be\r\n```python\r\nimport pytest\r\ndef test_exception_in_group():\r\n    with pytest.raises(ExceptionGroup) as excinfo:\r\n        raise ExceptionGroup(\r\n            \"Group message\",\r\n            [\r\n                RuntimeError(\"Exception 123 raised\"),\r\n            ],\r\n        )\r\n    assert excinfo.group_contains(RuntimeError, match=r\".* 123 .*\")\r\n    assert not excinfo.group_contains(TypeError)\r\n```\r\nchanging `pytest.raises(RuntimeError)` to `pytest.raises(ExceptionGroup)`",
      "state": "CLOSED",
      "createdAt": "2024-01-29T11:41:24Z",
      "updatedAt": "2024-01-30T20:00:40Z",
      "closedAt": "2024-01-30T20:00:40Z",
      "author": {
        "login": "jakkdl"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 11880,
      "title": "pytest_configure: injecting variables into pytest namespace is mypy-incompatible with pytest 8",
      "body": "Hello, thanks for your great and invaluable work on pytest. I just updated to pytest 8 and I'm getting linter errors on the following scenario: \r\n\r\nhttps://docs.pytest.org/en/latest/deprecations.html#pytest-namespace\r\n\r\n```python\r\nimport pytest\r\n\r\n\r\ndef pytest_configure():\r\n    pytest.my_symbol = MySymbol()\r\n```\r\n\r\nThe error:\r\n\r\n```\r\nerror: Module has no attribute \"my_symbol\" [attr-defined]\r\n```\r\n\r\nAs this approach is mentioned in the docs I'd expect it to still work. \r\n\r\n- Is there a way to still do this without disabling mypy everywhere the variable is used? \r\n- Is there a different approach that is considered better? \r\n \r\nContext: I'm using the variable to share data between a pytest plugin I develop and the module (i.e. module defines the variable - plugin uses it).\r\n\r\n`pytest 8.0.0, mypy 1.8.0`\r\n\r\n- [x] a detailed description of the bug or problem you are having\r\n- [x] output of `pip list` from the virtual environment you are using\r\n- [x] pytest and operating system versions\r\n- [x] minimal example if possible\r\n",
      "state": "CLOSED",
      "createdAt": "2024-01-29T09:17:17Z",
      "updatedAt": "2024-01-29T09:21:40Z",
      "closedAt": "2024-01-29T09:21:40Z",
      "author": {
        "login": "sigma67"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: question"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 11874,
      "title": "Using Python 3.13.0a3+ on Windows when `USERNAME` env var is masked/unset, `get_user()` leaks `OSError` and breaks (at least) `tmp_path` usage",
      "body": "Fetching the username for temporary paths is failing for Windows on Python 3.13a3 when the `USERNAME` is not set. This is a common situation with `tox`, for instance, since it masks all the env vars.\r\n\r\n`getpass.getuser()` was [updated](https://github.com/python/cpython/pull/29739) to always raise `OSError` instead of the `ImportError` it was leaking before.\r\n\r\nAdditionally [catching](https://github.com/pytest-dev/pytest/blob/8853a57532899b124578af7baa217acc26061070/src/_pytest/tmpdir.py#L207) `OSError` would presumably resolve this.\r\n\r\nExample:\r\n```\r\n_______________ ERROR at setup of test_bundle_path[debian-bullseye] _______________\r\n\r\n    def getuser():\r\n        \"\"\"Get the username from the environment or password database.\r\n\r\n        First try various environment variables, then the password\r\n        database.  This works on Windows as long as USERNAME is set.\r\n        Any failure to find a username raises OSError.\r\n\r\n        .. versionchanged:: 3.13\r\n            Previously, various exceptions beyond just :exc:`OSError`\r\n            were raised.\r\n        \"\"\"\r\n\r\n        for name in ('LOGNAME', 'USER', 'LNAME', 'USERNAME'):\r\n            user = os.environ.get(name)\r\n            if user:\r\n                return user\r\n\r\n        try:\r\n>           import pwd\r\nE           ModuleNotFoundError: No module named 'pwd'\r\n\r\n..\\..\\..\\.pyenv\\pyenv-win\\versions\\3.13.0a3\\Lib\\getpass.py:172: ModuleNotFoundError\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\n    def getuser():\r\n        \"\"\"Get the username from the environment or password database.\r\n\r\n        First try various environment variables, then the password\r\n        database.  This works on Windows as long as USERNAME is set.\r\n        Any failure to find a username raises OSError.\r\n\r\n        .. versionchanged:: 3.13\r\n            Previously, various exceptions beyond just :exc:`OSError`\r\n            were raised.\r\n        \"\"\"\r\n\r\n        for name in ('LOGNAME', 'USER', 'LNAME', 'USERNAME'):\r\n            user = os.environ.get(name)\r\n            if user:\r\n                return user\r\n\r\n        try:\r\n            import pwd\r\n            return pwd.getpwuid(os.getuid())[0]\r\n        except (ImportError, KeyError) as e:\r\n>           raise OSError('No username set in the environment') from e\r\nE           OSError: No username set in the environment\r\n\r\n..\\..\\..\\.pyenv\\pyenv-win\\versions\\3.13.0a3\\Lib\\getpass.py:175: OSError\r\n```\r\nCI example: https://github.com/beeware/briefcase/actions/runs/7688404294/job/20949599385\r\n\r\n<details>\r\n<summary>python -m pip list</summary>\r\n\r\n```\r\n\u276f python -m pip list\r\nPackage                     Version                 Editable project location\r\n--------------------------- ----------------------- -------------------------------------------------\r\narrow                       1.3.0\r\nbinaryornot                 0.4.4\r\nbriefcase                   0.3.17.dev246+g22bc0a0b C:\\Users\\user\\github\\beeware\\briefcase\r\nbriefcase-automation        0.3.17.dev117+gd2187c76\r\nbuild                       1.0.3\r\ncachetools                  5.3.2\r\ncertifi                     2023.11.17\r\ncfgv                        3.4.0\r\nchardet                     5.2.0\r\ncharset-normalizer          3.3.2\r\nclick                       8.1.7\r\ncolorama                    0.4.6\r\ncookiecutter                2.5.0\r\ncoverage                    7.4.1\r\ncoverage-conditional-plugin 0.9.0\r\ndistlib                     0.3.8\r\nexecnet                     2.0.2\r\nfilelock                    3.13.1\r\ngitdb                       4.0.11\r\nGitPython                   3.1.41\r\nidentify                    2.5.33\r\nidna                        3.6\r\niniconfig                   2.0.0\r\nJinja2                      3.1.3\r\nmarkdown-it-py              3.0.0\r\nMarkupSafe                  2.1.4\r\nmdurl                       0.1.2\r\nnodeenv                     1.8.0\r\npackaging                   23.2\r\npip                         23.3.2\r\nplatformdirs                4.1.0\r\npluggy                      1.4.0\r\npre-commit                  3.6.0\r\npsutil                      5.9.8\r\nPygments                    2.17.2\r\npyproject-api               1.6.1\r\npyproject_hooks             1.0.0\r\npytest                      8.0.0\r\npytest-xdist                3.5.0\r\npython-dateutil             2.8.2\r\npython-slugify              8.0.2\r\nPyYAML                      6.0.1\r\nrequests                    2.31.0\r\nrich                        13.7.0\r\nsetuptools                  69.0.3\r\nsetuptools-scm              8.0.4\r\nsix                         1.16.0\r\nsmmap                       5.0.1\r\ntext-unidecode              1.3\r\ntomli_w                     1.0.0\r\ntox                         4.12.1\r\ntypes-python-dateutil       2.8.19.20240106\r\ntyping_extensions           4.9.0\r\nurllib3                     2.1.0\r\nvirtualenv                  20.25.0\r\nwheel                       0.42.0\r\nx-briefcase-automation      0.3.17.dev246+g22bc0a0b C:\\Users\\user\\github\\beeware\\briefcase\\automation\r\n```\r\n\r\n</details>\r\n\r\nOS: Windows 11, Server 2022\r\nPython: 3.13.0a3\r\npytest: 8.0.0\r\n\r\n- [X] a detailed description of the bug or problem you are having\r\n- [X] output of `pip list` from the virtual environment you are using\r\n- [X] pytest and operating system versions\r\n- [X] minimal example if possible\r\n",
      "state": "CLOSED",
      "createdAt": "2024-01-28T21:50:51Z",
      "updatedAt": "2024-01-29T02:07:19Z",
      "closedAt": "2024-01-29T02:07:19Z",
      "author": {
        "login": "rmartin16"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      }
    },
    {
      "number": 11873,
      "title": "add_marker with usefixtures no longer works with pytest 8.0.0",
      "body": "I believe this may be related to https://github.com/pytest-dev/pytest/issues/3664.\r\n\r\nIn pandas, we dynamically add a marker for our doctests so that we don't need `import pandas as pd` and `import numpy as np` in every docstring.\r\n\r\nhttps://github.com/pandas-dev/pandas/blob/9008ee5810c09bc907b5fdc36fc3c1dff4a50c55/pandas/conftest.py#L191-L198\r\n\r\nThe `add_doctest_imports` fixture is here.\r\n\r\nhttps://github.com/pandas-dev/pandas/blob/9008ee5810c09bc907b5fdc36fc3c1dff4a50c55/pandas/conftest.py#L253-L259\r\n\r\nWith pytest 8.0.0, add_marker no longer has any effect. Is the intentional, and if so, is there an alternative?",
      "state": "OPEN",
      "createdAt": "2024-01-28T19:57:55Z",
      "updatedAt": "2024-08-05T15:38:56Z",
      "closedAt": null,
      "author": {
        "login": "rhshadrach"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: regression"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 7
      }
    },
    {
      "number": 11872,
      "title": "BUG: pytest.raises(HTTPError, match=\"...\") breaks on Python 3.9 + pytest 8.0",
      "body": "```python\r\nimport pytest\r\nfrom urllib.error import HTTPError\r\n\r\ndef test_foo():\r\n    with pytest.raises(HTTPError, match=\"Not Found\"):\r\n        raise HTTPError(code=404, msg=\"Not Found\", fp=None, hdrs=None, url=\"\")\r\n```\r\nthis test pass with Python 3.9 + pytest 7.4.4, but fails if I upgrade to pytest 8.0.0\r\nHere's the short traceback (simply running `pytest t.py`)\r\n```\r\n========================================= test session starts ==========================================\r\nplatform darwin -- Python 3.9.18, pytest-8.0.0, pluggy-1.4.0\r\nrootdir: /private/tmp\r\ncollected 1 item\r\n\r\nt.py F                                                                                           [100%]\r\n\r\n=============================================== FAILURES ===============================================\r\n_______________________________________________ test_foo _______________________________________________\r\n\r\n    def test_foo():\r\n        with pytest.raises(HTTPError, match=\"Not Found\"):\r\n>           raise HTTPError(code=404, msg=\"Not Found\", fp=None, hdrs=None, url=\"\")\r\nE           urllib.error.HTTPError: HTTP Error 404: Not Found\r\n\r\nt.py:5: HTTPError\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\n    def test_foo():\r\n        with pytest.raises(HTTPError, match=\"Not Found\"):\r\n>           raise HTTPError(code=404, msg=\"Not Found\", fp=None, hdrs=None, url=\"\")\r\n\r\nt.py:5:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n.venv/lib/python3.9/site-packages/_pytest/_code/code.py:704: in _stringify_exception\r\n    *getattr(exc, \"__notes__\", []),\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <HTTPError 404: 'Not Found'>, name = '__notes__'\r\n\r\n    def __getattr__(self, name):\r\n        # Attribute lookups are delegated to the underlying file\r\n        # and cached for non-numeric results\r\n        # (i.e. methods are cached, closed and friends are not)\r\n>       file = self.__dict__['file']\r\nE       KeyError: 'file'\r\n\r\n/Users/clm/.pyenv/versions/3.9.18/lib/python3.9/tempfile.py:473: KeyError\r\n======================================= short test summary info ========================================\r\nFAILED t.py::test_foo - KeyError: 'file'\r\n========================================== 1 failed in 0.03s ===========================================\r\n```\r\n\r\nAnd attached, the [full-trace](https://github.com/pytest-dev/pytest/files/14076585/log.txt) (`pytest t.py --full-trace`)\r\n\r\nI haven't bisected yet, but git blame seems to indicate that #11424 is probably the breaking patch\r\n\r\n- [x] a detailed description of the bug or problem you are having\r\n- [x] output of `pip list` from the virtual environment you are using\r\n```\r\nPackage        Version\r\n-------------- -------\r\nexceptiongroup 1.2.0\r\niniconfig      2.0.0\r\npackaging      23.2\r\npip            23.0.1\r\npluggy         1.4.0\r\npytest         8.0.0\r\nsetuptools     58.1.0\r\ntomli          2.0.1\r\n```\r\n- [x] pytest and operating system versions:\r\nsee on MacOS 14.3 and Ubuntu 22.04.3, but I don't think that's relevant\r\n- [x] minimal example if possible\r\n",
      "state": "CLOSED",
      "createdAt": "2024-01-28T15:44:03Z",
      "updatedAt": "2024-01-30T15:20:32Z",
      "closedAt": "2024-01-30T15:20:31Z",
      "author": {
        "login": "neutrinoceros"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 8
      }
    },
    {
      "number": 11871,
      "title": "Proposing a new flag, `--list-of-files-or-dirs`, to compliment the positional `file_or_dir` argument",
      "body": "#### What's the problem this feature will solve?\r\nPassing a long list of test files/dirs into the pytest CLI can make reading the pytest command confusing.\r\n\r\n#### Describe the solution you'd like\r\nA new flag, `--list-of-files-or-dirs`, to compliment the positional `file_or_dir` argument.\r\n\r\nThe new flag will accept a single text file, with each line in the file representing a positional argument to pytest.\r\n\r\nSo, instead of calling pytest like this:\r\n`pytest test_file1.py test_file2.py test_file3.py ...`\r\nOne would call:\r\n`pytest --list-of-files-or-dirs list_file.txt`\r\nWith `list_file.txt` containing:\r\n\r\n```\r\ntest_file1.py\r\ntest_file2.py\r\ntest_file3.py\r\n...\r\n```\r\n\r\n#### Alternative Solutions\r\nYou can currently just call pytest with a list of all the files/dirs you want to test, but a long list passed through the CLI isn't such a clean interface.\r\n\r\n#### Additional context\r\nHappy to work take a stab at working on this if there's consensus that such a PR would be accepted.",
      "state": "CLOSED",
      "createdAt": "2024-01-28T13:22:06Z",
      "updatedAt": "2024-03-09T06:51:53Z",
      "closedAt": "2024-03-09T06:51:53Z",
      "author": {
        "login": "jbkkd"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "status: help wanted"
          },
          {
            "name": "type: proposal"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 10
      }
    },
    {
      "number": 11869,
      "title": "docs.pytest.org don't have 8.0.x in releases list",
      "body": "It looks like there is no 8.0.x version on https://docs.pytest.org:\r\n<details>\r\n<summary>Screenshot</summary>\r\n\r\n![Screenshot_20240128_121402_Chrome.jpg](https://github.com/pytest-dev/pytest/assets/4661021/59f223da-8826-479d-9e63-c16a108418f8)\r\n</details>\r\n\r\n8.0 documentation is available as [latest](https://docs.pytest.org/en/latest/changelog.html) version, but it is probably built from `main` branch, not 8.0.0 release tag.\r\n\r\n[stable](https://docs.pytest.org/en/stable/changelog.html) version has title `pytest-0.1` but contains 8.0.0 documentation:\r\n<details>\r\n<summary>Screenshot</summary>\r\n\r\n![Screenshot_20240128_123345_Chrome.jpg](https://github.com/pytest-dev/pytest/assets/4661021/5ee49981-fea0-46cf-9208-53a7880cb94f)\r\n</details>\r\n\r\nAlso after going to https://docs.pytest.org I was redirected to 7.4.x release documentation, this probably should be updated as well.",
      "state": "CLOSED",
      "createdAt": "2024-01-28T09:31:57Z",
      "updatedAt": "2024-01-30T13:12:29Z",
      "closedAt": "2024-01-30T13:06:21Z",
      "author": {
        "login": "dolfinus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 4
      }
    },
    {
      "number": 11868,
      "title": "Latest 8.0.0 is breaking on 3.8+",
      "body": "### Comment by pytest maintainers: pytest-asyncio is not yet compatible with pytest 8; if you're using pytest-asyncio, stick with pytest<8 until the issue is resolved.\r\n\r\n---\r\n\r\n## Description\r\n\r\nPrior to 8.0.0 all tests on 3.7 -- 3.11 were passing. Then today when 8.0.0 was released 3.8+ started failing.\r\n\r\nSee screen shot, rerunning tests that passed on 27 Jan, failed today on 28 Jan.\r\n![Screenshot from 2024-01-28 13-43-43](https://github.com/pytest-dev/pytest/assets/14807032/a836855c-31a3-4e64-8ae0-cb383fe2e444)\r\n\r\nFailure is happening on 3.8+\r\n![Screenshot from 2024-01-28 13-43-25](https://github.com/pytest-dev/pytest/assets/14807032/48e36aae-f55b-4d96-92d6-fbbdf11840cc)\r\n\r\nThe only requirements for the project are `pytest` and `pytest-asyncio`. For reference, the project is [FairAsyncRLock](https://github.com/Joshuaalbert/FairAsyncRLock). The git action workflow for the Ci/Cd is [here](https://github.com/Joshuaalbert/FairAsyncRLock/blob/main/.github/workflows/unittests.yml).\r\n\r\n\r\n## Traceback\r\n\r\nThis is the problem. It's the same for all 3.8+.\r\n\r\n```\r\nINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/_pytest/main.py\", line 272, in wrap_session\r\nINTERNALERROR>     session.exitstatus = doit(config, session) or 0\r\nINTERNALERROR>                          ^^^^^^^^^^^^^^^^^^^^^\r\nINTERNALERROR>   File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/_pytest/main.py\", line 325, in _main\r\nINTERNALERROR>     config.hook.pytest_collection(session=session)\r\nINTERNALERROR>   File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/pluggy/_hooks.py\", line 501, in __call__\r\nINTERNALERROR>     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\r\nINTERNALERROR>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nINTERNALERROR>   File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/pluggy/_manager.py\", line 119, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\r\nINTERNALERROR>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nINTERNALERROR>   File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 138, in _multicall\r\nINTERNALERROR>     raise exception.with_traceback(exception.__traceback__)\r\nINTERNALERROR>   File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 121, in _multicall\r\nINTERNALERROR>     teardown.throw(exception)  # type: ignore[union-attr]\r\nINTERNALERROR>     ^^^^^^^^^^^^^^^^^^^^^^^^^\r\nINTERNALERROR>   File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/_pytest/logging.py\", line 783, in pytest_collection\r\nINTERNALERROR>     return (yield)\r\nINTERNALERROR>             ^^^^^\r\nINTERNALERROR>   File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 121, in _multicall\r\nINTERNALERROR>     teardown.throw(exception)  # type: ignore[union-attr]\r\nINTERNALERROR>     ^^^^^^^^^^^^^^^^^^^^^^^^^\r\nINTERNALERROR>   File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/_pytest/warnings.py\", line 1[18](https://github.com/Joshuaalbert/FairAsyncRLock/actions/runs/7680017808/job/20940748975#step:6:19), in pytest_collection\r\nINTERNALERROR>     return (yield)\r\nINTERNALERROR>             ^^^^^\r\nINTERNALERROR>   File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 121, in _multicall\r\nINTERNALERROR>     teardown.throw(exception)  # type: ignore[union-attr]\r\nINTERNALERROR>     ^^^^^^^^^^^^^^^^^^^^^^^^^\r\nINTERNALERROR>   File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/_pytest/config/__init__.py\", line 1365, in pytest_collection\r\nINTERNALERROR>     return (yield)\r\nINTERNALERROR>             ^^^^^\r\nINTERNALERROR>   File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 102, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>           ^^^^^^^^^^^^^^^^^^^^^^^^^\r\nINTERNALERROR>   File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/_pytest/main.py\", line 336, in pytest_collection\r\nINTERNALERROR>     session.perform_collect()\r\nINTERNALERROR>   File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/_pytest/main.py\", line 799, in perform_collect\r\nINTERNALERROR>     self.items.extend(self.genitems(node))\r\nINTERNALERROR>   File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/_pytest/main.py\", line 942, in genitems\r\nINTERNALERROR>     yield from self.genitems(subnode)\r\nINTERNALERROR>   File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/_pytest/main.py\", line 937, in genitems\r\nINTERNALERROR>     rep, duplicate = self._collect_one_node(node, handle_dupes)\r\nINTERNALERROR>                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nINTERNALERROR>   File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/_pytest/main.py\", line 825, in _collect_one_node\r\nINTERNALERROR>     rep = collect_one_node(node)\r\nINTERNALERROR>           ^^^^^^^^^^^^^^^^^^^^^^\r\nINTERNALERROR>   File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/_pytest/runner.py\", line 566, in collect_one_node\r\nINTERNALERROR>     ihook.pytest_collectstart(collector=collector)\r\nINTERNALERROR>   File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/pluggy/_hooks.py\", line 501, in __call__\r\nINTERNALERROR>     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\r\nINTERNALERROR>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nINTERNALERROR>   File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/pluggy/_manager.py\", line 1[19](https://github.com/Joshuaalbert/FairAsyncRLock/actions/runs/7680017808/job/20940748975#step:6:20), in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\r\nINTERNALERROR>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nINTERNALERROR>   File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 138, in _multicall\r\nINTERNALERROR>     raise exception.with_traceback(exception.__traceback__)\r\nINTERNALERROR>   File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 102, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>           ^^^^^^^^^^^^^^^^^^^^^^^^^\r\nINTERNALERROR>   File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/pytest_asyncio/plugin.py\", line 6[26](https://github.com/Joshuaalbert/FairAsyncRLock/actions/runs/7680017808/job/20940748975#step:6:27), in pytest_collectstart\r\nINTERNALERROR>     pyobject = collector.obj\r\nINTERNALERROR>                ^^^^^^^^^^^^^\r\nINTERNALERROR> AttributeError: 'Package' object has no attribute 'obj'\r\n```\r\n\r\n",
      "state": "CLOSED",
      "createdAt": "2024-01-28T08:21:06Z",
      "updatedAt": "2024-01-31T19:26:34Z",
      "closedAt": "2024-01-28T21:54:53Z",
      "author": {
        "login": "Joshuaalbert"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 22
      }
    },
    {
      "number": 11860,
      "title": "Cannot log debug and info from ` pytest_configure` hook",
      "body": "Default level (warning) logs are printed no matter the value provide to `--log-cli-level` or `--log-level`.\r\n\r\n```python\r\n# conftest.py\r\nimport logging\r\n\r\nimport pytest\r\n\r\n\r\ndef pytest_configure(config: pytest.Config):\r\n    logger = logging.getLogger(__file__)\r\n    logger.info(\"info\")\r\n    logger.debug(\"debug\")\r\n    logger.warning(\"warning\")\r\n    logger.error(\"error\")\r\n    logger.critical(\"critical\")\r\n\r\n```\r\n\r\n```shell\r\npytest -o log_cli=true -o log_cli_level=INFO -o log_level=INFO\r\n\r\nwarning\r\nerror\r\ncritical\r\n======================== test session starts ========================\r\nplatform darwin -- Python 3.9.16, pytest-7.4.4, pluggy-1.4.0\r\nrootdir: /home/user/pytest-wont-log\r\ncollected 0 items\r\n\r\n======================== no tests ran in 0.00s ========================\r\n```\r\n\r\n<details><summary><code>pip freeze</code> output</summary>\r\n\r\n```shell\r\nexceptiongroup==1.2.0\r\niniconfig==2.0.0\r\npackaging==23.2\r\npluggy==1.4.0\r\npytest==7.4.4\r\ntomli==2.0.1\r\n```\r\n\r\n</details>\r\n",
      "state": "CLOSED",
      "createdAt": "2024-01-25T21:48:27Z",
      "updatedAt": "2024-02-18T01:48:59Z",
      "closedAt": "2024-02-18T01:48:58Z",
      "author": {
        "login": "aaraney"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "status: needs information"
          },
          {
            "name": "stale"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 11850,
      "title": "Set `sys.last_exc` in addition to `last_type`/`last_value`/`last_traceback` on Python>=3.12",
      "body": "Python 3.12 added [`sys.last_exc`](https://docs.python.org/3/library/sys.html#sys.last_exc). We should set it [like we do the older variants](https://github.com/pytest-dev/pytest/blob/c3fc717ff74cb8be6fb04c630b28b720d6c041ad/src/_pytest/runner.py#L166-L181).",
      "state": "CLOSED",
      "createdAt": "2024-01-21T20:30:04Z",
      "updatedAt": "2024-02-23T20:41:15Z",
      "closedAt": "2024-02-23T20:41:15Z",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: enhancement"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 11847,
      "title": "Check xfail Test Status with Plugin",
      "body": "Started an discussion on this but wanted to move it over as I think it is a bug, apologies if that is incorrect. Thanks!\r\n\r\nMy goal is to correctly store the status xfail tests. Below is the code I am running, the plugin I wrote to connect to the given hook, and the output from the plugin. Im confused because the outcome of this xfail tests is \"passed\" during \"setup\" and \"teardown\" but then is listed as \"skipped\" during \"call\". Why does the xfail tests list as \"skipped\" during \"call\"? With all other tests I have written, the \"call\" phase has been accurate in collecting pass/fails etc but I wasn't sure about xfail. What does the skip mean and is it always going to say skip for xfail tests during this phase? Thanks and I appreciate any help!\r\n\r\n```\r\n@pytest.mark.xfail\r\ndef test_example():\r\n    assert 1 == 2, \"This test is expected to fail because 1 is not equal to 2\"\r\n```\r\n\r\n```\r\n@pytest.hookimpl(tryfirst=True, hookwrapper=True)\r\ndef pytest_runtest_makereport(item):\r\n    outcome = yield\r\n    report = outcome.get_result()\r\n    print(\"pytest_report_teststatus\")\r\n    print(\"when\", report.when)\r\n    print(\"outcome\", report.outcome)\r\n    print(\"xfail\", hasattr(report, \"wasxfail\"))\r\n```\r\n```\r\ntest_xfail.py \r\npytest_report_teststatus\r\nwhen setup\r\noutcome passed\r\nxfail False\r\npytest_report_teststatus\r\nwhen call\r\noutcome skipped\r\nxfail True\r\nxpytest_report_teststatus\r\nwhen teardown\r\noutcome passed\r\nxfail False\r\n```\r\n\r\noriginally commented on this related thread but it seems inactive: https://github.com/pytest-dev/pytest/discussions/10255\r\nThis question is related to a bug fix on the VS Code python extension, related issue: https://github.com/microsoft/vscode-python/issues/4963",
      "state": "CLOSED",
      "createdAt": "2024-01-19T22:15:05Z",
      "updatedAt": "2024-03-01T01:49:19Z",
      "closedAt": "2024-03-01T01:49:18Z",
      "author": {
        "login": "eleanorjboyd"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "status: needs information"
          },
          {
            "name": "stale"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 5
      }
    },
    {
      "number": 11829,
      "title": "Assertion hook trace outputs unexpectedly differs",
      "body": "## Overview\r\n\r\nI'm trying to run pytest within another python project, using the documented `pytest.main([path], plugins=[])` mechanism (let's call this **env 1**).\r\n\r\nHowever, when I execute the test this way, the `pytest_assertrepr_compare` and `pytest_assertion_pass` do not execute. \r\n\r\nThe contents of my `pytest_assertion_pass` (which I will focus on because that is really the goal here- based on trace debug logging, `pytest_assertrepr_compare` does not seem to be executed either so they may be related) is as follows:\r\n\r\n```python\r\n@pytest.hookimpl(tryfirst=True, hookwrapper=True)\r\ndef pytest_assertion_pass(item, lineno, orig, expl):\r\n    print(\"-- ASSERTION PASS\")\r\n    yield\r\n    print(\"-- ASSERTION PASS AFTER!!\")\r\n```\r\n\r\nI have `enable_assertion_pass_hook = true` in my `pytest.ini`, and I have verified the expected behavior by both executing the test directly via the CLI, and writing a simple two-line script to run it (let's call this **env 2**). In both cases, the messages are printed. This indicates the config option is set correctly.\r\n\r\nIn all experiments, the working directory is identical, and the test path is identical.\r\n\r\nThe python version is 3.11.6.\r\n\r\nThe pytest version is 7.4.3.\r\n\r\n## RCA so far\r\n\r\nI enabled `PYTEST_DEBUG`, and compared the differences between the runs where the hook was called, and the runs where the hook was not.\r\n\r\nHere is the output from a successful run:\r\n\r\n**env 2**\r\n\r\n```bash\r\n        pytest_runtest_call [hook]\r\n            item: <Function test_1>\r\n          pytest_pyfunc_call [hook]\r\n              pyfuncitem: <Function test_1>\r\n2024-01-16 19:16:24,914 - [    INFO] - Info from test case - (test_suite_no_class.py:4)\r\n            pytest_assertrepr_compare [hook]\r\n                config: <_pytest.config.Config object at 0x1062e7610>\r\n                op: ==\r\n                left: 1\r\n                right: 1\r\n            finish pytest_assertrepr_compare --> [] [hook]\r\n            pytest_assertion_pass [hook]\r\n                item: <Function test_1>\r\n                lineno: 6\r\n                orig: 1 == 1\r\n                expl: 1 == 1\r\n            finish pytest_assertion_pass --> [] [hook]\r\n          finish pytest_pyfunc_call --> True [hook]\r\n        finish pytest_runtest_call --> [] [hook]\r\n        pytest_runtest_makereport [hook]\r\n            item: <Function test_1>\r\n            call: <CallInfo when='call' result: []>\r\n        finish pytest_runtest_makereport --> <TestReport 'pytest_tests/test_suite_no_class.py::test_1' when='call' outcome='passed'> [hook]\r\n        pytest_runtest_logreport [hook]\r\n            report: <TestReport 'pytest_tests/test_suite_no_class.py::test_1' when='call' outcome='passed'>\r\n          pytest_report_teststatus [hook]\r\n              report: <TestReport 'pytest_tests/test_suite_no_class.py::test_1' when='call' outcome='passed'>\r\n              config: <_pytest.config.Config object at 0x1062e7610>\r\n          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]\r\n== ASSERT REPR COMPARE \r\n-- ASSERTION PASS\r\n-- ASSERTION PASS AFTER!!\r\n\u001b[32mPASSED\u001b[0m        finish pytest_runtest_logreport --> [] [hook]\r\n        pytest_runtest_teardown [hook]\r\n            item: <Function test_1>\r\n            nextitem: <Function test_2>\r\n        finish pytest_runtest_teardown --> [] [hook]\r\n```\r\n\r\nHere is the surprising output:\r\n\r\n**env 1**\r\n\r\n```\r\n        pytest_runtest_call [hook]\r\n            item: <Function test_1>\r\n          pytest_pyfunc_call [hook]\r\n              pyfuncitem: <Function test_1>\r\n2024-01-16 19:16:21,006 - [    INFO] - Info from test case - (test_suite_no_class.py:4)\r\n          finish pytest_pyfunc_call --> True [hook]\r\n        finish pytest_runtest_call --> [] [hook]\r\n        pytest_runtest_makereport [hook]\r\n            item: <Function test_1>\r\n            call: <CallInfo when='call' result: []>\r\n        finish pytest_runtest_makereport --> <TestReport 'pytest_tests/test_suite_no_class.py::test_1' when='call' outcome='passed'> [hook]\r\n        pytest_runtest_logreport [hook]\r\n            report: <TestReport 'pytest_tests/test_suite_no_class.py::test_1' when='call' outcome='passed'>\r\n          pytest_report_teststatus [hook]\r\n              report: <TestReport 'pytest_tests/test_suite_no_class.py::test_1' when='call' outcome='passed'>\r\n              config: <_pytest.config.Config object at 0x1040d92d0>\r\n          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]\r\n\u001b[32mPASSED\u001b[0m        finish pytest_runtest_logreport --> [] [hook]\r\n        pytest_runtest_teardown [hook]\r\n            item: <Function test_1>\r\n            nextitem: <Function test_2>\r\n        finish pytest_runtest_teardown --> [] [hook]\r\n```\r\n\r\nWhat is confusing to me is that the `pytest_runtest_call` is logged, but then neither assertion hook is apparently executed.\r\n\r\nAlthough there is a decent amount going on in **env 1** (it is a proprietary python tool that I am not able to disclose code from, unfortunately), the pytest invocation is exactly the line listed above, from the same working directory as in **env 2**. It is run in its own thread, though running it on the main thread makes no different in the outcome.\r\n\r\nI tried using the PyCharm debugger to better understand the execution flow, but it failed to step into the pytest code. Might need to hook up something there.\r\n\r\nIt is quite possible that this is not a PyTest bug. The difficulty is in determining the root cause of the behavior. I am hoping that someone with more expertise in PyTest can tell me what additional experiments I can run to narrow down what is happening, and then we can determine if it is a corner case bug in PyTest, or some other package interfering in some way, in which case this issue can be closed and other opened in the offending project.",
      "state": "CLOSED",
      "createdAt": "2024-01-17T03:28:05Z",
      "updatedAt": "2024-01-19T20:43:01Z",
      "closedAt": "2024-01-19T20:43:01Z",
      "author": {
        "login": "jmwilkinson"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 4
      }
    },
    {
      "number": 11827,
      "title": "Pytest executed in PyCharm or IntelliJ and executed on command-line resolve in different directories",
      "body": "**Bug when executing pytest via Terminal.**\r\n\r\nHello together, I have the following issue: \r\nI am running pytest in PyCharm. It runs Python tests in tests. In my testcode I have a test sql file which I need to open and to execute during the test run. I am using the method **str(Path(\"path/to/sql\").resolve())** to get the absolute path. When this method gets executed in tests in PyCharm it returns than the correct absolute path: \"~/project_dir/tests/path/to/sql\". So via PyCharm or IntelliJ UI the tests are working fine.\r\n\r\nBut now I have a problem when I try to execute pytest via terminal: **pytest ./tests --cov=./src --cov-branch**. The test case fails since I get a FileNotFoundError. The absolute path which I get back from the method above is than \"~/project_dir/path/to/sql\". It resolves it to the project_dir and not to tests. Why does this happen and what should I need to adjust in order to fix it? \r\n\r\nI know that one option is to add the absolute path in my device instead of resolving it, but I will also execute test than in a ci-cd pipeline, where the tests are execute in a container. There I will have a complete different folder structure. I want to have it generic in that way. I also could now do a workaround where I can check what is the working_directory if it is tests than **str(Path(\"path/to/sql\").resolve())** is enough, else go with **str(Path(\"tests/path/to/sql\").resolve())**. Than it would also work. But I assume that there should be a way to fix it via command-line and I want it to fix it there to avoid doing these kind of workarounds.\r\n\r\nThe problem is that the working_directory in terminal is the project folder and in PyCharm it is set to /tests. But there is no possible way to set the working directory in pytest command line. Also when I specify --rootdir=./tests this does not work. \r\n\r\nMore info about my project: it is pretty simple structured:\r\nmy_project\r\n- .github\r\n- src\r\n- tests\r\n- .gitignore \r\n\r\n\r\nKind regards,\r\nMaxim",
      "state": "CLOSED",
      "createdAt": "2024-01-16T21:07:53Z",
      "updatedAt": "2024-01-16T22:41:50Z",
      "closedAt": "2024-01-16T22:41:50Z",
      "author": {
        "login": "MaximM95"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      }
    },
    {
      "number": 11816,
      "title": "Main and 8.0.x (not released yet): cannot find fixture when using --pyargs",
      "body": "<!--\r\nThanks for submitting an issue!\r\n\r\nQuick check-list while reporting bugs:\r\n-->\r\n\r\n- [x] a detailed description of the bug or problem you are having\r\n- [x] output of `pip list` from the virtual environment you are using\r\n- [x] pytest and operating system versions\r\n- [x] minimal example if possible\r\n\r\nWhile adding a comment to https://github.com/pytest-dev/pytest/issues/9765#issuecomment-1891056936 to reproduce that issue, I noticed another problem (not released yet, only the `main` and `8.0.x` branches).\r\n\r\n## Reproduce the issue\r\n\r\n```\r\npython -m pip install \"ewokscore[test]==0.7.1\" git+https://github.com/pytest-dev/pytest.git@main\r\npython -m pytest -v --pyargs ewokscore.tests\r\n```\r\n\r\nor also\r\n\r\n```\r\npython -m pip install \"ewokscore[test]==0.7.1\" git+https://github.com/pytest-dev/pytest.git@8.0.x\r\npython -m pytest -v --pyargs ewokscore.tests\r\n```\r\n\r\nReleased pytest versions do not show the problem. For example this works find:\r\n\r\n```\r\npython -m pip install \"ewokscore[test]==0.7.1\" \"pytest==7.4.4\"\r\npython -m pytest -v --pyargs ewokscore.tests\r\n```\r\n\r\n## Os and python version\r\n\r\n* Ubuntu 20.04, python 3.10.12: works\r\n* **Windows 11, python 3.8.10: fails**\r\n\r\n## Error message\r\n\r\nThe error says it cannot find the `varinfo` dependency which is defined in the module `ewokscore.tests.conftest`.\r\n\r\n```\r\n  @pytest.mark.parametrize(\"value\", VALUES)\r\n  def test_variable_references(value, varinfo):\r\nE       fixture 'varinfo' not found\r\n>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory\r\n>       use 'pytest --fixtures [testpath]' for help on them.\r\n```",
      "state": "CLOSED",
      "createdAt": "2024-01-14T20:17:34Z",
      "updatedAt": "2024-01-17T14:31:38Z",
      "closedAt": "2024-01-17T13:29:30Z",
      "author": {
        "login": "woutdenolf"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": {
        "title": "8.0",
        "dueOn": null
      },
      "comments": {
        "totalCount": 15
      }
    },
    {
      "number": 11807,
      "title": "Running pytest within pytest fails with pytest==8.0.0rc1",
      "body": "Thanks for maintaining and developing `pytest`. This is such an amazing tool!\r\n\r\nI have setup a `--pre` version of the CI on one of the projects that I maintain, and it happens that one test fails with the release candidate `pytest==8.0.0rc1`.\r\n\r\nHere are the logs of the action: https://github.com/mwouts/jupytext/actions/runs/7487800603/job/20381150371\r\n\r\nThe failing test does the following:\r\n- It creates a temporary `.py` file from a Markdown document\r\n- And then it calls `pytest` on that `.py` file, so in the end it's calling `pytest /tmp/notebook_lx_y64ur.py`.\r\n\r\nWith `pytest==8.0.0rc1`, the test fails with the following error:\r\n```\r\nE   PermissionError: [Errno 13] Permission denied: '/tmp/snap-private-tmp/__init__.py'\r\n```\r\n\r\nI am not sure how to extract a simpler minimal example from this, but I can look into this if you think that would help. Thanks!",
      "state": "CLOSED",
      "createdAt": "2024-01-12T21:57:31Z",
      "updatedAt": "2024-01-13T20:32:23Z",
      "closedAt": "2024-01-12T22:22:20Z",
      "author": {
        "login": "mwouts"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 11806,
      "title": "Mark.parametrize eccepting type-annotated arguments as argnames string argument",
      "body": "#### What's the problem this feature will solve?\r\nThe decorator pytest.mark.parameterize() could use arglist which contains type-annotated arguments. \r\nThis way one can quickly copy function signature and clean it later.\r\n\r\n#### Describe the solution you'd like\r\nI'd like to see\r\n\r\n```python\r\n@pytest.mark.parametrize(\"flag: bool, context: Tuple[BaseModel], error_message: Optional[str]\")\r\ndef test_func(flag: bool, context: Tuple[BaseModel], error_message: Optional[str]):\r\n    ...\r\n```\r\n\r\nFor this I change the parsing of string argnames value in https://github.com/pytest-dev/pytest/blob/5645fa45fb063027aab6d49d4d64090446d82292/src/_pytest/mark/structures.py#L128\r\n\r\nIf I detect colons in the argnames after splitting with ',', I split by colons and take the correct half before stripping spaces.\r\n\r\nThe existing functionality is not affected, only extended.\r\n\r\n#### Alternative Solutions\r\n\r\n#### Additional context\r\n",
      "state": "CLOSED",
      "createdAt": "2024-01-12T18:45:06Z",
      "updatedAt": "2024-02-19T01:48:26Z",
      "closedAt": "2024-02-19T01:48:26Z",
      "author": {
        "login": "peroksid"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "status: needs information"
          },
          {
            "name": "stale"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 6
      }
    },
    {
      "number": 11805,
      "title": "`pytester`: setting `HOME` to `tmpdir` causes `pytest` no to be found",
      "body": "https://github.com/pytest-dev/pytest/pull/4941 caused `HOME` to be set to `tmpdir` when invoking `pytester.runpytest_subprocess()`. \r\n\r\nBecause of this, if `pytest` is installed in `USER_SITE`, it will not be found when running `pytester`:\r\n\r\n```console\r\n-------------------------------------------------------------------------------------- Captured stdout call --------------------------------------------------------------------------------------\r\nrunning: /usr/local/bin/python -mpytest --basetemp=/tmp/pytest-of-vscode/pytest-0/test_valid_input_success0/runpytest-0\r\n     in: /tmp/pytest-of-vscode/pytest-0/test_valid_input_success0\r\n-------------------------------------------------------------------------------------- Captured stderr call --------------------------------------------------------------------------------------\r\n/usr/local/bin/python: No module named pytest\r\n```\r\n\r\nThis issue can be seen by invoking `python -m site` from both environments:\r\n\r\n- From the host:\r\n\r\n```console\r\nsys.path = [\r\n    '/workspace/app',\r\n    '/usr/local/lib/python310.zip',\r\n    '/usr/local/lib/python3.10',\r\n    '/usr/local/lib/python3.10/lib-dynload',\r\n    '/home/vscode/.local/lib/python3.10/site-packages',\r\n    '/usr/local/lib/python3.10/site-packages',\r\n]\r\nUSER_BASE: '/home/vscode/.local' (exists)\r\nUSER_SITE: '/home/vscode/.local/lib/python3.10/site-packages' (exists)\r\nENABLE_USER_SITE: True\r\n```\r\n\r\n--> `'/home/vscode/.local/lib/python3.10/site-packages` is where `pytest` (and all other packages) are installed \r\n\r\n- From `pytester`\r\n\r\n```console\r\nsys.path = [\r\n    '/tmp/pytest-of-vscode/pytest-10/test_valid_input_success0',\r\n    '/usr/local/lib/python310.zip',\r\n    '/usr/local/lib/python3.10',\r\n    '/usr/local/lib/python3.10/lib-dynload',\r\n    '/usr/local/lib/python3.10/site-packages',\r\n]\r\nUSER_BASE: '/tmp/pytest-of-vscode/pytest-10/test_valid_input_success0/.local' (doesn't exist)\r\nUSER_SITE: '/tmp/pytest-of-vscode/pytest-10/test_valid_input_success0/.local/lib/python3.10/site-packages' (doesn't exist)\r\nENABLE_USER_SITE: True\r\n```\r\n\r\nIndeed:\r\n\r\n```console\r\n\u279c  app git:(main) \u2717 HOME=/tmp/pytest-of-vscode/pytest-10/test_valid_input_success0 python -m pytest --version\r\n/usr/local/bin/python: No module named pytest\r\n```\r\n\r\nOne workaround is to run `pytest` with:\r\n\r\n```console\r\nPYTHONPATH=/home/vscode/.local/lib/python3.10/site-packages pytest .\r\n```\r\n\r\nPytest version: `7.4.4`",
      "state": "OPEN",
      "createdAt": "2024-01-12T10:20:25Z",
      "updatedAt": "2024-02-08T11:23:15Z",
      "closedAt": null,
      "author": {
        "login": "superlevure"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "plugin: pytester"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      }
    },
    {
      "number": 11797,
      "title": "`approx` representation of details failed when using a `ApproxSequenceLike` which is not `list` or `tuple`",
      "body": "## Description\r\n\r\nWhen using a custom sequence like type then the comparison of `pytest.approx` works as expected if the assert is `True`. But in case the assertion fails, the detailed output of what went wrong is broken.\r\n\r\nGiven the following example:\r\n\r\n```python\r\nimport pytest\r\n\r\nclass MyVec3:\r\n    def __init__(self, x, y, z):\r\n        self._x, self._y, self._z = x, y, z\r\n\r\n    def __len__(self):\r\n        return 3\r\n\r\n    def __getitem__(self, key):\r\n        if key == 0:\r\n            return self._x\r\n        if key == 1:\r\n            return self._y\r\n        if key == 2:\r\n            return self._z\r\n        raise IndexError\r\n\r\n\r\ndef test_vec_approx():\r\n    assert MyVec3(0, 1, 2) == pytest.approx(MyVec3(1, 2, 3), abs=2)\r\n    assert MyVec3(0, 1, 2) == pytest.approx(MyVec3(1, 2, 3), abs=0.5)\r\n```\r\n\r\nThe first assert statement is fine, as expected.\r\n\r\nIn the second assert fails, as expected.\r\n\r\nBut I get this output:\r\n\r\n```\r\n============================================ test session starts ============================================\r\nplatform linux -- Python 3.10.12, pytest-7.4.4, pluggy-1.3.0\r\nrootdir: /home/user\r\ncollected 1 item                                                                                            \r\n\r\ntest_approx.py F                                                                                      [100%]\r\n\r\n================================================= FAILURES ==================================================\r\n______________________________________________ test_vec_approx ______________________________________________\r\n\r\n    def test_vec_approx():\r\n        assert MyVec3(0, 1, 2) == pytest.approx(MyVec3(1, 2, 3), abs=2)\r\n>       assert MyVec3(0, 1, 2) == pytest.approx(MyVec3(1, 2, 3), abs=0.5)\r\nE       AssertionError: assert <test_approx....x7f657f208880> == approx([1 \u00b1 5... 3 \u00b1 5.0e-01])\r\nE         (pytest_assertion plugin: representation of details failed: /home/user/venv/lib/python3.10/site-packages/_pytest/python_api.py:342: TypeError: object of type 'ApproxScalar' has no len().\r\nE          Probably an object has a faulty __repr__.)\r\n\r\ntest_approx.py:22: AssertionError\r\n========================================== short test summary info ==========================================\r\nFAILED test_approx.py::test_vec_approx - AssertionError: assert <test_approx....x7f657f208880> == approx([1 \u00b1 5... 3 \u00b1 5.0e-01])\r\n============================================= 1 failed in 0.01s =============================================\r\n```\r\n\r\n## Setup\r\n```\r\nPackage        Version\r\n-------------- -------\r\nexceptiongroup 1.2.0\r\niniconfig      2.0.0\r\npackaging      23.2\r\npip            22.0.2\r\npluggy         1.3.0\r\npytest         7.4.4\r\nsetuptools     59.6.0\r\ntomli          2.0.1\r\n```\r\n\r\nAlso happens with pytest version 7.1.2 and 7.1.3\r\n\r\nOS is Ubuntu 22.04\r\n",
      "state": "CLOSED",
      "createdAt": "2024-01-10T14:13:46Z",
      "updatedAt": "2024-06-19T09:25:56Z",
      "closedAt": "2024-06-19T09:25:56Z",
      "author": {
        "login": "thorink"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "topic: approx"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 7
      }
    },
    {
      "number": 11790,
      "title": "Document tmp_path fixture does not support concurrent runs of the same test by default",
      "body": "The `tmp_path` fixture documentation (https://docs.pytest.org/en/7.1.x/how-to/tmp_path.html#the-tmp-path-fixture) states that temporary directories are unique for each \"test invocation\". This is correct in the sense that each test **function** is associated by a single unique temporary directory.\r\n\r\nHowever, this is not correct when considering running **the same test function concurrently** by distinct pytest invocations. We are doing this all the time using Tox where tests are executed from multiple virtualenvs (different Python versions), concurrently.\r\n\r\nIn that scenario, the `tmp_path` generated directory is shared/clashes between multiple invocations.\r\n\r\nI appreciate that the solution is to uniqueify the temp path prefix, similar to what the `pytest-xdist` extension does. With Tox, that is trivial to achieve. Reading the Pytest docs, I do not necessarily know that I need that solution.",
      "state": "CLOSED",
      "createdAt": "2024-01-08T11:22:02Z",
      "updatedAt": "2024-01-17T12:08:27Z",
      "closedAt": "2024-01-11T11:01:08Z",
      "author": {
        "login": "faph"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: docs"
          },
          {
            "name": "good first issue"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 7
      }
    },
    {
      "number": 11789,
      "title": "Document temp dir retention in how-to guide",
      "body": "I discovered by accident Pytest's feature to retain temporary directories by default after tests complete. I feel the how-to guide \"How to use temporary directories and files in tests\" (https://docs.pytest.org/en/7.1.x/how-to/tmp_path.html) could do with documenting this feature as this may be the first and only page a developer reads before using the `tmp_path` fixture.\r\n\r\nCurrently, the documentation simply refers to \"a temporary directory unique to the test (...)\". As an engineer, I read that as something that goes away automatically as soon as the fixture is being tore down.\r\n\r\nThis may be an issue when using large temporary files, for example, in automated pipelines. \r\n\r\nI don't mind what wording is used, but a reference to the API reference docs (e.g. https://docs.pytest.org/en/7.3.x/reference/reference.html#confval-tmp_path_retention_policy) might be extremely useful. ",
      "state": "CLOSED",
      "createdAt": "2024-01-08T11:13:06Z",
      "updatedAt": "2024-01-18T10:21:51Z",
      "closedAt": "2024-01-18T10:21:51Z",
      "author": {
        "login": "faph"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      }
    },
    {
      "number": 11783,
      "title": "Assertion rewriting issue with editable-installed plugins",
      "body": "### Problem\r\n\r\nWhen I look into/debug external plugins, my workflow is:\r\n\r\n- Create a venv\r\n- Run `pip install -e .` (this is with a recent pip and setuptools backend, so is using \"new style\" [PEP 660](https://peps.python.org/pep-0660/) editable installs. `editable_mode=strict` doesn't seem to make a difference)\r\n- Run `pytest`\r\n\r\nWhile doing this for several plugins recently (e.g. pytest-asyncio), I've noticed pytest issues a warning:\r\n\r\n```\r\n../../../../home/ran/src/pytest/src/_pytest/config/__init__.py:759\r\n  /home/ran/src/pytest/src/_pytest/config/__init__.py:759: PytestAssertRewriteWarning: Module already imported so cannot be rewritten: pytest_asyncio\r\n    self.import_plugin(import_spec)\r\n```\r\n\r\n### Analysis\r\n\r\nThis is my understanding of why this happens:\r\n\r\n- pytest's assertion rewriting requires that a module be marked for rewrite before it is imported.\r\n- For external plugins this is done by the [_mark_plugins_for_rewrite](https://github.com/pytest-dev/pytest/blob/13eacdad8ac434b4336cf1e6496869815a6457c7/src/_pytest/config/__init__.py#L1211) function.\r\n- This function iterates over all files of all installed distributions which have a `pytest11` entry point, and marks their modules for rewrite if necessary.\r\n\r\nThis ends up now working with my workflow because the `distribution.files` doesn't contain any of the actual package python files. Relevant issues: https://github.com/python/cpython/issues/96144 https://github.com/pypa/packaging-problems/issues/620\r\n\r\nCurrently there is no solution from the packaging side. It might be possible to add a workaround on the pytest side, I'm not sure.",
      "state": "OPEN",
      "createdAt": "2024-01-06T20:05:47Z",
      "updatedAt": "2024-01-06T20:05:47Z",
      "closedAt": null,
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: bug"
          },
          {
            "name": "topic: rewrite"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      }
    },
    {
      "number": 11782,
      "title": "AttributeError Exception when accessing class dunders directly from a classmethod fixture",
      "body": "<!--\r\nThanks for submitting an issue!\r\n\r\nQuick check-list while reporting bugs:\r\n-->\r\n\r\n- [x] a detailed description of the bug or problem you are having\r\nAccessing a class dunder directly from a classmethod fixture (e.g., `cls.__name__`) results in `AttributeError` exception.\r\nTo reproduce, copy the following test code into classmethod-fixture.py and run it via `pytest -s classmethod-fixture.py`. You will note that calling `cls.get_class_name()` from the fixture works fine. However, accessing `cls.__name__` directly from the fixture triggers AttributeError exception.\r\n\r\n```\r\nimport pytest\r\n\r\nclass Test1:\r\n    @classmethod\r\n    @pytest.fixture(scope='class', autouse=True)\r\n    def setup_and_teardown(cls):\r\n      print(f'\\nZZZ setting up {cls.get_class_name()}')\r\n\r\n      yield\r\n\r\n      print('\\nZZZ tearing down ' + cls.__name__)\r\n\r\n    @classmethod\r\n    def get_class_name(cls):\r\n      return cls.__name__\r\n\r\n    def test_me(self):\r\n      return\r\n```\r\n\r\n```\r\n$ pytest -s classmethod-fixture.py \r\n============================= test session starts =============================\r\nplatform darwin -- Python 3.10.13, pytest-7.4.3, pluggy-1.3.0\r\nrootdir: /Users/vkruglik/xdist-debug/classmethod-fixture\r\nplugins: xdist-3.5.0\r\ncollected 1 item                                                              \r\n\r\nclassmethod-fixture.py \r\nZZZ setting up Test1\r\n.E\r\n\r\n=================================== ERRORS ====================================\r\n_____________________ ERROR at teardown of Test1.test_me ______________________\r\n\r\ncls = <classmethod-fixture.Test1 object at 0x10170f460>\r\n\r\n    @classmethod\r\n    @pytest.fixture(scope='class', autouse=True)\r\n    def setup_and_teardown(cls):\r\n      print(f'\\nZZZ setting up {cls.get_class_name()}')\r\n    \r\n      yield\r\n    \r\n>     print('\\nZZZ tearing down ' + cls.__name__)\r\nE     AttributeError: 'Test1' object has no attribute '__name__'. Did you mean: '__ne__'?\r\n\r\nclassmethod-fixture.py:11: AttributeError\r\n=========================== short test summary info ===========================\r\nERROR classmethod-fixture.py::Test1::test_me - AttributeError: 'Test1' object has no attribute '__name__'. Did you mean: ...\r\n========================= 1 passed, 1 error in 0.02s ==========================\r\n```\r\n\r\n- [x] output of `pip list` from the virtual environment you are using\r\n```\r\n$ pip list\r\nPackage           Version\r\n----------------- -------\r\nastroid           3.0.1\r\ndill              0.3.7\r\nexceptiongroup    1.1.3\r\nexecnet           2.0.2\r\nfilelock          3.13.1\r\niniconfig         2.0.0\r\nisort             5.12.0\r\nmccabe            0.7.0\r\npackaging         23.2\r\npip               23.3.1\r\nplatformdirs      4.0.0\r\npluggy            1.3.0\r\npylint            3.0.2\r\npytest            7.4.3\r\npytest-xdist      3.5.0\r\nsetproctitle      1.3.3\r\nsetuptools        68.1.2\r\ntomli             2.0.1\r\ntomlkit           0.12.3\r\ntyping_extensions 4.8.0\r\n```\r\n\r\n- [x] pytest and operating system versions\r\n```\r\n$ pytest --version\r\npytest 7.4.3\r\n```\r\n\r\n- [x] minimal example if possible\r\nSee the section \"detailed description of the bug or problem you are having\" at the top for the minimal example. \r\n",
      "state": "CLOSED",
      "createdAt": "2024-01-06T15:42:21Z",
      "updatedAt": "2024-02-17T20:19:45Z",
      "closedAt": "2024-02-17T20:19:44Z",
      "author": {
        "login": "vitaly-krugl"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      }
    },
    {
      "number": 11781,
      "title": "rootdir for pytester identified as /tmp when passing a tmpfile in /tmp as part of a argument",
      "body": "<!--\r\nThanks for submitting an issue!\r\n\r\nQuick check-list while reporting bugs:\r\n-->\r\n\r\n- [x] a detailed description of the bug or problem you are having\r\n- [x] output of `pip list` from the virtual environment you are using\r\n- [x] pytest and operating system versions\r\n- [ ] minimal example if possible\r\n\r\nPlease feel free to edit the title \ud83d\ude05 \r\n\r\nThis PR made some of my tests start to fail with `PermissionError: [Errno 13] Permission denied: '/tmp/snap-private-tmp/__init__.py'`\r\n\r\nhttps://github.com/pytest-dev/pytest-metadata/actions/runs/7365057317/job/20046008077\r\n\r\nThe tests pass against [c7ee5599](https://github.com/pytest-dev/pytest/commit/c7ee55993b77315f0031b629a2fb7db17ad5cee1),  but fail on this merge.\r\n\r\nRunning it locally I also get some warnings:\r\n\r\n<details><summary>warnings</summary>\r\n<p>\r\n\r\n```sh\r\n=============================== warnings summary ===============================\r\n../../../../../../../../../Users/jimbrannlund/dev/pytest/pytest/src/_pytest/config/__init__.py:1211\r\n  /Users/jimbrannlund/dev/pytest/pytest/src/_pytest/config/__init__.py:1211: PytestAssertRewriteWarning: Module already imported so cannot be rewritten: pytest_metadata\r\n    self._mark_plugins_for_rewrite(hook)\r\n\r\n../../../../../../../../../Users/jimbrannlund/dev/pytest/pytest/src/_pytest/config/__init__.py:1211\r\n  /Users/jimbrannlund/dev/pytest/pytest/src/_pytest/config/__init__.py:1211: PytestAssertRewriteWarning: Module already imported so cannot be rewritten: tests\r\n    self._mark_plugins_for_rewrite(hook)\r\n\r\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\r\n```\r\n\r\n</p>\r\n</details> \r\n\r\nI tried to figure out exactly where it goes wrong, but failed. It's entirely possible there's something wrong in my plugin that was just surfaced by the changes in this PR.\r\n\r\nPlease let me know what information I can contribute with.\r\n\r\n<details><summary>pip list</summary>\r\n<p>\r\n\r\n```sh\r\nPackage           Version                  Editable project location\r\n----------------- ------------------------ ----------------------------------------------\r\nattrs             21.4.0\r\nblack             22.1.0\r\ncfgv              3.3.1\r\nclick             8.0.4\r\ndistlib           0.3.4\r\nexceptiongroup    1.2.0\r\nfilelock          3.6.0\r\nflake8            4.0.1\r\nidentify          2.4.12\r\niniconfig         1.1.1\r\nmccabe            0.6.1\r\nmypy-extensions   0.4.3\r\nnodeenv           1.6.0\r\npackaging         21.3\r\npathspec          0.9.0\r\npip               22.0.3\r\nplatformdirs      2.5.1\r\npluggy            1.3.0\r\npre-commit        2.17.0\r\npy                1.11.0\r\npycodestyle       2.8.0\r\npyflakes          2.4.0\r\npyparsing         3.0.7\r\npytest            7.2.0.dev1110+gacd445a3f /Users/jimbrannlund/dev/pytest/pytest\r\npytest-metadata   2.0.4                    /Users/jimbrannlund/dev/pytest/pytest-metadata\r\nPyYAML            6.0\r\nsetuptools        60.6.0\r\nsix               1.16.0\r\ntoml              0.10.2\r\ntomli             2.0.1\r\ntox               3.24.5\r\ntyping_extensions 4.1.1\r\nvirtualenv        20.14.0\r\nwheel             0.37.1\r\n\r\n```\r\n\r\n</p>\r\n</details> \r\n\r\nI've tried the code on python 3.9...3.13 and it fails on all of them.\r\n\r\nCI is Linux\r\nLocally I'm on a Mac\r\n",
      "state": "OPEN",
      "createdAt": "2024-01-06T12:12:31Z",
      "updatedAt": "2024-03-28T09:33:03Z",
      "closedAt": null,
      "author": {
        "login": "BeyondEvil"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "topic: collection"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 10
      }
    },
    {
      "number": 11779,
      "title": "pytest 8.1.dev gives  {'path'} are declared in the hookimpl but can not be found in the hookspec",
      "body": "Hi. With pytest 8.1.dev , I see this error when collecting plugins in a couple of repos:\r\n\r\n` {'path'} are declared in the hookimpl but can not be found in the hookspec`\r\n\r\nThis is not a problem even with pytest 8.0rc.\r\n\r\nRelated issues/comments:\r\n\r\n* https://github.com/astropy/astropy/issues/15810\r\n* https://github.com/astropy/pytest-filter-subpackage/issues/14\r\n* https://github.com/astropy/pytest-arraydiff/issues/45#issuecomment-1877750442 cc @bsipocz\r\n\r\nExample logs:\r\n\r\n* https://github.com/scientific-python/pytest-doctestplus/actions/runs/7382066201/job/20176149354#step:5:112 (note that for this one, only pytest-dev in OSX failed but not pytest-dev in Windows or Linux)\r\n* https://github.com/astropy/astropy/actions/runs/7375363390/job/20170602594 (this one fails on Linux, no other OS runs pytest-dev here)\r\n\r\nPlugins:\r\n\r\n* https://github.com/astropy/pytest-filter-subpackage\r\n* https://github.com/scientific-python/pytest-doctestplus\r\n\r\nCan you please advise how to fix? Thank you! \ud83d\ude4f ",
      "state": "CLOSED",
      "createdAt": "2024-01-05T23:34:27Z",
      "updatedAt": "2024-01-08T16:36:47Z",
      "closedAt": "2024-01-06T05:09:52Z",
      "author": {
        "login": "pllim"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 4
      }
    },
    {
      "number": 11777,
      "title": "Verbosity setting does not affect truncation of sequences when comparing their length",
      "body": "If a comparison on the length of a sequence fails, the sequence is truncated in the failure explanation regardless of the verbosity setting.\r\n\r\nExample script:\r\n\r\n```python\r\ndef test_list():\r\n    l = list(range(50))\r\n    assert l == []\r\n\r\ndef test_list_len():\r\n    l = list(range(50))\r\n    assert len(l) == 49\r\n\r\ndef test_dict():\r\n    d = dict(zip(range(50), range(50)))\r\n    assert d == {}\r\n\r\ndef test_dict_len():\r\n    d = dict(zip(range(50), range(50)))\r\n    assert len(d) == 49\r\n```\r\nOutput of `python3 -m pytest test_truncation.py`:\r\n\r\n```\r\n====================================================== FAILURES ======================================================\r\n_____________________________________________________ test_list ______________________________________________________\r\n\r\n    def test_list():\r\n        l = list(range(50))\r\n>       assert l == []\r\nE       assert [0, 1, 2, 3, 4, 5, ...] == []\r\nE         Left contains 50 more items, first extra item: 0\r\nE         Use -v to get more diff\r\n\r\ntest_truncation.py:3: AssertionError\r\n___________________________________________________ test_list_len ____________________________________________________\r\n\r\n    def test_list_len():\r\n        l = list(range(50))\r\n>       assert len(l) == 49\r\nE       assert 50 == 49\r\nE        +  where 50 = len([0, 1, 2, 3, 4, 5, ...])\r\n\r\ntest_truncation.py:7: AssertionError\r\n_____________________________________________________ test_dict ______________________________________________________\r\n\r\n    def test_dict():\r\n        d = dict(zip(range(50), range(50)))\r\n>       assert d == {}\r\nE       AssertionError: assert {0: 0, 1: 1, 2: 2, 3: 3, ...} == {}\r\nE         Left contains 50 more items:\r\nE         {0: 0,\r\nE          1: 1,\r\nE          2: 2,\r\nE          3: 3,\r\nE          4: 4,\r\nE          5: 5,...\r\nE         \r\nE         ...Full output truncated (45 lines hidden), use '-vv' to show\r\n\r\ntest_truncation.py:11: AssertionError\r\n___________________________________________________ test_dict_len ____________________________________________________\r\n\r\n    def test_dict_len():\r\n        d = dict(zip(range(50), range(50)))\r\n>       assert len(d) == 49\r\nE       assert 50 == 49\r\nE        +  where 50 = len({0: 0, 1: 1, 2: 2, 3: 3, ...})\r\n\r\ntest_truncation.py:15: AssertionError\r\n============================================== short test summary info ===============================================\r\nFAILED test_truncation.py::test_list - assert [0, 1, 2, 3, 4, 5, ...] == []\r\nFAILED test_truncation.py::test_list_len - assert 50 == 49\r\nFAILED test_truncation.py::test_dict - AssertionError: assert {0: 0, 1: 1, 2: 2, 3: 3, ...} == {}\r\nFAILED test_truncation.py::test_dict_len - assert 50 == 49\r\n```\r\n\r\nOutput of `python3 -m pytest test_truncation.py -v`:\r\n\r\n```\r\n====================================================== FAILURES ======================================================\r\n_____________________________________________________ test_list ______________________________________________________\r\n\r\n    def test_list():\r\n        l = list(range(50))\r\n>       assert l == []\r\nE       AssertionError: assert [0, 1, 2, 3, 4, 5, ...] == []\r\nE         Left contains 50 more items, first extra item: 0\r\nE         Full diff:\r\nE           [\r\nE         -  ,\r\nE         +  0,\r\nE         ?  +\r\nE         +  1,...\r\nE         \r\nE         ...Full output truncated (49 lines hidden), use '-vv' to show\r\n\r\ntest_truncation.py:3: AssertionError\r\n___________________________________________________ test_list_len ____________________________________________________\r\n\r\n    def test_list_len():\r\n        l = list(range(50))\r\n>       assert len(l) == 49\r\nE       assert 50 == 49\r\nE        +  where 50 = len([0, 1, 2, 3, 4, 5, ...])\r\n\r\ntest_truncation.py:7: AssertionError\r\n_____________________________________________________ test_dict ______________________________________________________\r\n\r\n    def test_dict():\r\n        d = dict(zip(range(50), range(50)))\r\n>       assert d == {}\r\nE       AssertionError: assert {0: 0, 1: 1, 2: 2, 3: 3, ...} == {}\r\nE         Left contains 50 more items:\r\nE         {0: 0,\r\nE          1: 1,\r\nE          2: 2,\r\nE          3: 3,\r\nE          4: 4,\r\nE          5: 5,...\r\nE         \r\nE         ...Full output truncated (98 lines hidden), use '-vv' to show\r\n\r\ntest_truncation.py:11: AssertionError\r\n___________________________________________________ test_dict_len ____________________________________________________\r\n\r\n    def test_dict_len():\r\n        d = dict(zip(range(50), range(50)))\r\n>       assert len(d) == 49\r\nE       assert 50 == 49\r\nE        +  where 50 = len({0: 0, 1: 1, 2: 2, 3: 3, ...})\r\n\r\ntest_truncation.py:15: AssertionError\r\n============================================== short test summary info ===============================================\r\nFAILED test_truncation.py::test_list - AssertionError: assert [0, 1, 2, 3, 4, 5, ...] == []\r\nFAILED test_truncation.py::test_list_len - assert 50 == 49\r\nFAILED test_truncation.py::test_dict - AssertionError: assert {0: 0, 1: 1, 2: 2, 3: 3, ...} == {}\r\nFAILED test_truncation.py::test_dict_len - assert 50 == 49\r\n```\r\n\r\nOutput of `python3 -m pytest test_truncation.py -vv`:\r\n\r\n```\r\n====================================================== FAILURES ======================================================\r\n_____________________________________________________ test_list ______________________________________________________\r\n\r\n    def test_list():\r\n        l = list(range(50))\r\n>       assert l == []\r\nE       assert [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49] == []\r\nE         Left contains 50 more items, first extra item: 0\r\nE         Full diff:\r\nE           [\r\nE         -  ,\r\nE         +  0,\r\nE         ?  +\r\nE         +  1,\r\nE         +  2,\r\nE         +  3,\r\nE         +  4,\r\nE         +  5,\r\nE         +  6,\r\nE         +  7,\r\nE         +  8,\r\nE         +  9,\r\nE         +  10,\r\nE         +  11,\r\nE         +  12,\r\nE         +  13,\r\nE         +  14,\r\nE         +  15,\r\nE         +  16,\r\nE         +  17,\r\nE         +  18,\r\nE         +  19,\r\nE         +  20,\r\nE         +  21,\r\nE         +  22,\r\nE         +  23,\r\nE         +  24,\r\nE         +  25,\r\nE         +  26,\r\nE         +  27,\r\nE         +  28,\r\nE         +  29,\r\nE         +  30,\r\nE         +  31,\r\nE         +  32,\r\nE         +  33,\r\nE         +  34,\r\nE         +  35,\r\nE         +  36,\r\nE         +  37,\r\nE         +  38,\r\nE         +  39,\r\nE         +  40,\r\nE         +  41,\r\nE         +  42,\r\nE         +  43,\r\nE         +  44,\r\nE         +  45,\r\nE         +  46,\r\nE         +  47,\r\nE         +  48,\r\nE         +  49,\r\nE           ]\r\n\r\ntest_truncation.py:3: AssertionError\r\n___________________________________________________ test_list_len ____________________________________________________\r\n\r\n    def test_list_len():\r\n        l = list(range(50))\r\n>       assert len(l) == 49\r\nE       assert 50 == 49\r\nE        +  where 50 = len([0, 1, 2, 3, 4, 5, ...])\r\n\r\ntest_truncation.py:7: AssertionError\r\n_____________________________________________________ test_dict ______________________________________________________\r\n\r\n    def test_dict():\r\n        d = dict(zip(range(50), range(50)))\r\n>       assert d == {}\r\nE       assert {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, 10: 10, 11: 11, 12: 12, 13: 13, 14: 14, 15: 15, 16: 16, 17: 17, 18: 18, 19: 19, 20: 20, 21: 21, 22: 22, 23: 23, 24: 24, 25: 25, 26: 26, 27: 27, 28: 28, 29: 29, 30: 30, 31: 31, 32: 32, 33: 33, 34: 34, 35: 35, 36: 36, 37: 37, 38: 38, 39: 39, 40: 40, 41: 41, 42: 42, 43: 43, 44: 44, 45: 45, 46: 46, 47: 47, 48: 48, 49: 49} == {}\r\nE         Left contains 50 more items:\r\nE         {0: 0,\r\nE          1: 1,\r\nE          2: 2,\r\nE          3: 3,\r\nE          4: 4,\r\nE          5: 5,\r\nE          6: 6,\r\nE          7: 7,\r\nE          8: 8,\r\nE          9: 9,\r\nE          10: 10,\r\nE          11: 11,\r\nE          12: 12,\r\nE          13: 13,\r\nE          14: 14,\r\nE          15: 15,\r\nE          16: 16,\r\nE          17: 17,\r\nE          18: 18,\r\nE          19: 19,\r\nE          20: 20,\r\nE          21: 21,\r\nE          22: 22,\r\nE          23: 23,\r\nE          24: 24,\r\nE          25: 25,\r\nE          26: 26,\r\nE          27: 27,\r\nE          28: 28,\r\nE          29: 29,\r\nE          30: 30,\r\nE          31: 31,\r\nE          32: 32,\r\nE          33: 33,\r\nE          34: 34,\r\nE          35: 35,\r\nE          36: 36,\r\nE          37: 37,\r\nE          38: 38,\r\nE          39: 39,\r\nE          40: 40,\r\nE          41: 41,\r\nE          42: 42,\r\nE          43: 43,\r\nE          44: 44,\r\nE          45: 45,\r\nE          46: 46,\r\nE          47: 47,\r\nE          48: 48,\r\nE          49: 49}\r\nE         Full diff:\r\nE           {\r\nE         -  ,\r\nE         +  0: 0,\r\nE         +  1: 1,\r\nE         +  2: 2,\r\nE         +  3: 3,\r\nE         +  4: 4,\r\nE         +  5: 5,\r\nE         +  6: 6,\r\nE         +  7: 7,\r\nE         +  8: 8,\r\nE         +  9: 9,\r\nE         +  10: 10,\r\nE         +  11: 11,\r\nE         +  12: 12,\r\nE         +  13: 13,\r\nE         +  14: 14,\r\nE         +  15: 15,\r\nE         +  16: 16,\r\nE         +  17: 17,\r\nE         +  18: 18,\r\nE         +  19: 19,\r\nE         +  20: 20,\r\nE         +  21: 21,\r\nE         +  22: 22,\r\nE         +  23: 23,\r\nE         +  24: 24,\r\nE         +  25: 25,\r\nE         +  26: 26,\r\nE         +  27: 27,\r\nE         +  28: 28,\r\nE         +  29: 29,\r\nE         +  30: 30,\r\nE         +  31: 31,\r\nE         +  32: 32,\r\nE         +  33: 33,\r\nE         +  34: 34,\r\nE         +  35: 35,\r\nE         +  36: 36,\r\nE         +  37: 37,\r\nE         +  38: 38,\r\nE         +  39: 39,\r\nE         +  40: 40,\r\nE         +  41: 41,\r\nE         +  42: 42,\r\nE         +  43: 43,\r\nE         +  44: 44,\r\nE         +  45: 45,\r\nE         +  46: 46,\r\nE         +  47: 47,\r\nE         +  48: 48,\r\nE         +  49: 49,\r\nE           }\r\n\r\ntest_truncation.py:11: AssertionError\r\n___________________________________________________ test_dict_len ____________________________________________________\r\n\r\n    def test_dict_len():\r\n        d = dict(zip(range(50), range(50)))\r\n>       assert len(d) == 49\r\nE       assert 50 == 49\r\nE        +  where 50 = len({0: 0, 1: 1, 2: 2, 3: 3, ...})\r\n\r\ntest_truncation.py:15: AssertionError\r\n============================================== short test summary info ===============================================\r\nFAILED test_truncation.py::test_list - assert [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28,...\r\nFAILED test_truncation.py::test_list_len - assert 50 == 49\r\nFAILED test_truncation.py::test_dict - assert {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, 10: 10, 11: 11, 12: 12, 13: 13, 14: 14, 15: 1...\r\nFAILED test_truncation.py::test_dict_len - assert 50 == 49\r\n```\r\n\r\nWhy are the sequences always truncated in the explanations of the length comparison failures, regardless of verbosity?\r\n\r\nPython 3.10.12, pytest-7.4.4, my OS is Linux Mint 21.2.\r\n\r\n`pip list` output attached:\r\n\r\n[pip_list.txt](https://github.com/pytest-dev/pytest/files/13845351/pip_list.txt)",
      "state": "CLOSED",
      "createdAt": "2024-01-05T18:33:33Z",
      "updatedAt": "2024-04-10T11:07:19Z",
      "closedAt": "2024-04-10T11:07:19Z",
      "author": {
        "login": "dpitch40"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: question"
          },
          {
            "name": "topic: reporting"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 11773,
      "title": "Reference leaks caused by `@pytest.mark.parametrize` on newer Python versions",
      "body": "The combination of PyTest, and `@pytest.mark.parametrize` causes reference leaks: by this, I mean that the objects parameterizing the test case are not always reliably freed by the time the Python interpreter has shut down. The behavior is somewhat erratic appears most noticeable with the latest Python 3.12.\r\n\r\nHere is a basic example involving pure Python code:\r\n\r\n```python\r\nimport pytest\r\n\r\nclass Foo:\r\n    def __init__(self, value):\r\n        self.value = value\r\n        print(f'created {self.value}')\r\n\r\n    def __del__(self):\r\n        print(f'deleted {self.value}')\r\n\r\ni1 = Foo(1)\r\ni2 = Foo(2)\r\n\r\n@pytest.mark.parametrize('i', [i1])\r\ndef test_foo(i):\r\n    pass\r\n```\r\n\r\nWith this, I get (on Python 3.8):\r\n```bash\r\n$ python3.8 -m pytest foo.py --capture no\r\n====================================== test session starts ======================================\r\nplatform darwin -- Python 3.8.18, pytest-7.4.4, pluggy-1.0.0\r\nrootdir: /Users/wjakob\r\ncollecting ... created 1\r\ncreated 2\r\ncollected 1 item\r\n\r\nfoo.py .\r\n\r\n======================================= 1 passed in 0.00s =======================================\r\ndeleted 1\r\ndeleted 2\r\n```\r\n\r\nOn Python 3.12, I get\r\n```bash\r\n$ python3.12 -m pytest foo.py --capture no\r\n====================================== test session starts ======================================\r\nplatform darwin -- Python 3.12.1, pytest-7.4.4, pluggy-1.3.0\r\nrootdir: /Users/wjakob\r\nplugins: anyio-4.2.0\r\ncollecting ... created 1\r\ncreated 2\r\ncollected 1 item\r\n\r\nfoo.py .\r\n\r\n======================================= 1 passed in 0.00s =======================================\r\ndeleted 2\r\n```\r\n\r\nIn other words, the `Foo(1)` instance passed to `@pytest.mark.parametrize` never had their `__del__` method called.\r\n\r\nOne remark right away: the use of the ``_del__`` method is of course considered bad practice in Python. I only used it to make a truly minimal example.\r\n\r\nThe larger context is as follows: I'm the author of the [nanobind](https://nanobind.readthedocs.io/en/latest/) C++ <-> Python generator and co-author of [pybind11](https://github.com/pybind/pybind11). I want these tools to report object leaks in Python bindings, which can turn into a quite serious problem when the tooling provides no hints about such leaks taking place.\r\n\r\nThe problem is that C++ projects with bindings that use pytest in their test suite now report leaks that aren't the fault of these extensions but due to something weird happening with PyTest, specifically on newer Python versions.\r\n\r\nThere seems to be _some issue_ related to how PyTest stores the `@pytest.mark.parametrize` information that prevents Python's cyclic GC from being able to collect it before the interpreter shuts down.",
      "state": "OPEN",
      "createdAt": "2024-01-04T20:36:00Z",
      "updatedAt": "2024-02-17T20:10:33Z",
      "closedAt": null,
      "author": {
        "login": "wjakob"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "topic: parametrize"
          },
          {
            "name": "type: refactoring"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 5
      }
    },
    {
      "number": 11772,
      "title": "Performance regression on services heavy on logging starting from 6.0.0rc1",
      "body": "Hello!\r\n\r\nAfter updating the pytest version from 5.4.3 to 6.0.0rc1 in my service I noticed the tests performance regression.\r\nI was very determined to find the root cause so I started to run tests on commits that have been added to 6.0.0rc1.\r\n\r\nI have been testing it on python:3.9.18-slim-bookworm Docker image.\r\n\r\n[Pytest 5.4.3->6.0.0rc1 diff](https://github.com/pytest-dev/pytest/compare/5.4.3...6.0.0rc1)\r\n\r\nBelow you can find the results:\r\n```\r\nv5.4.3 tests took: 0:03:34 - however on another try they took 4 minutes.\r\n\r\nhttps://github.com/pytest-dev/pytest/commit/e48ac692dedc11e5c5c8722b426f5b575eeadea0 tests took: 0:04:05\r\nhttps://github.com/pytest-dev/pytest/commit/075903dafa6ef6f62e2af67f336ee45f267feaa1 tests took: 0:05:03 - performance regression\r\nhttps://github.com/pytest-dev/pytest/commit/43c465c9bf6d40bd579d62e63e883823368e1fde tests took: 0:06:33 - even bigger regression in comparison to previous commit\r\nhttps://github.com/pytest-dev/pytest/commit/e27228a4e4afc941cac34672400016f59ee1184d tests took: 0:06:23\r\nhttps://github.com/pytest-dev/pytest/commit/9310d67773433825ba568dba770e7202fe09c916 tests took: 0:08:57\r\nhttps://github.com/pytest-dev/pytest/commit/d2d11a8bdcd382b0ac1e75af0a36cf826bcc3fa0 tests took: 0:07:34\r\nhttps://github.com/pytest-dev/pytest/commit/5a6296a2d73d32010d4cddc4dd6cf6a289c01d9d tests took: 0:08:05\r\nhttps://github.com/pytest-dev/pytest/commit/981b0969404bc4116659dae8fa6318cfbab2c942 tests took: 0:06:54\r\n\r\nv7.4.4 tests took: 9:50  - not sure why that long but I'd like to start one step at the time and tackle the regression introduced in old versions first\r\n```\r\n\r\nUnfortunately my tests are not very consistent in terms of execution time and I didn't find an easy way to reproduce the issue that I could provide here. Yet they consistently take ~4mins on pytest==5.4.3 and more than 5 on 6.0.0rc1. I suspect this is somehow related to the fact that my service is logging a lot. I also noticed (but that I am not 100% sure) that on 6.0.0rc1 the tests are getting slower during test execution (by using --durations feature). Meaning that at the beginning they work fast but towards the end they are getting slower. \r\n\r\nIn the affected commit itself it is mentioned that the performance can be affected. I really hope that you know well the pytest internals and by reading above description you will be able to point the root cause and it will make sense.\r\n\r\nPlease let me know if you want me to run more tests or provide some logs.\r\n\r\nI am sorry that I cannot provide simple way to reproduce this issue.\r\n",
      "state": "OPEN",
      "createdAt": "2024-01-04T20:33:35Z",
      "updatedAt": "2024-02-29T12:11:30Z",
      "closedAt": null,
      "author": {
        "login": "sliwinski-milosz"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: performance"
          },
          {
            "name": "plugin: logging"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 11771,
      "title": "Selftests sometimes fail on pypy: `TypeError: expected some sort of stmt, but got <_ast.Load object ...>`",
      "body": "Example: https://github.com/pytest-dev/pytest/actions/runs/7408595776/job/20157160097\r\n\r\nThis doesn't always happen, maybe 50% of the time. Started in the last few days. I checked if the PyPy version changed during these days, but seems not (it's 3.8.16).\r\n\r\nThe error is:\r\n\r\n```\r\n __________________ ERROR collecting testing/_py/test_local.py __________________\r\n/opt/hostedtoolcache/PyPy/3.8.16/x64/lib/pypy3.8/importlib/__init__.py:127: in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n<frozen importlib._bootstrap>:1023: in _gcd_import\r\n    ???\r\n<frozen importlib._bootstrap>:1000: in _find_and_load\r\n    ???\r\n<frozen importlib._bootstrap>:984: in _find_and_load_unlocked\r\n    ???\r\n<frozen importlib._bootstrap>:680: in _load_unlocked\r\n    ???\r\n.tox/pypy3-xdist/lib/pypy3.8/site-packages/_pytest/assertion/rewrite.py:166: in exec_module\r\n    source_stat, co = _rewrite_test(fn, self.config)\r\n.tox/pypy3-xdist/lib/pypy3.8/site-packages/_pytest/assertion/rewrite.py:350: in _rewrite_test\r\n    co = compile(tree, strfn, \"exec\", dont_inherit=True)\r\nE   TypeError: expected some sort of stmt, but got <_ast.Store object at 0x0000000002142880>\r\n```\r\n\r\nSometimes it says `TypeError: expected some sort of stmt, but got <_ast.Load object at 0x000000000365d040>` instead.",
      "state": "CLOSED",
      "createdAt": "2024-01-04T12:35:11Z",
      "updatedAt": "2024-07-19T12:58:40Z",
      "closedAt": "2024-07-19T12:55:34Z",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": [
          {
            "login": "x612skm"
          }
        ]
      },
      "labels": {
        "nodes": [
          {
            "name": "good first issue"
          },
          {
            "name": "type: selftests"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 12
      }
    },
    {
      "number": 11765,
      "title": "Pytest sometimes fails with the INTERNALERROR message",
      "body": "Pytest fails with the ```INTERNALERROR``` like in the log below on many projects.\r\nPytest also succeeds on other projects.\r\n\r\n```\r\n===>   py39-laspy-2.5.2 depends on file: /usr/local/bin/python3.9 - found\r\ncd /usr/ports/misc/py-laspy/work-py39/laspy-2.5.2 && /usr/bin/env XDG_DATA_HOME=/usr/ports/misc/py-laspy/work-py39  XDG_CONFIG_HOME=/usr/ports/misc/py-laspy/work-py39  XDG_CACHE_HOME=/usr/ports/misc/py-laspy/work-py39/.cache  HOME=/usr/ports/misc/py-laspy/work-py39 PATH=/usr/local/libexec/ccache:/usr/ports/misc/py-laspy/work-py39/.bin:/home/yuri/bin:/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin PKG_CONFIG_LIBDIR=/usr/ports/misc/py-laspy/work-py39/.pkgconfig:/usr/local/libdata/pkgconfig:/usr/local/share/pkgconfig:/usr/libdata/pkgconfig MK_DEBUG_FILES=no MK_KERNEL_SYMBOLS=no SHELL=/bin/sh NO_LINT=YES PREFIX=/usr/local  LOCALBASE=/usr/local  CC=\"cc\" CFLAGS=\"-O2 -pipe  -fstack-protector-strong -fno-strict-aliasing \"  CPP=\"cpp\" CPPFLAGS=\"\"  LDFLAGS=\" -fstack-protector-strong \" LIBS=\"\"  CXX=\"c++\" CXXFLAGS=\"-O2 -pipe -fstack-protector-strong -fno-strict-aliasing  \"  MANPREFIX=\"/usr/local\" CCACHE_DIR=\"/tmp/.ccache\" BSD_INSTALL_PROGRAM=\"install  -s -m 555\"  BSD_INSTALL_LIB=\"install  -s -m 0644\"  BSD_INSTALL_SCRIPT=\"install  -m 555\"  BSD_INSTALL_DATA=\"install  -m 0644\"  BSD_INSTALL_MAN=\"install  -m 444\" PYTHONPATH=/usr/ports/misc/py-laspy/work-py39/stage/usr/local/lib/python3.9/site-packages /usr/local/bin/python3.9 -m pytest -k '' -rs -v -o addopts= \r\n==================================================================================== test session starts ====================================================================================\r\nplatform freebsd14 -- Python 3.9.18, pytest-7.4.3, pluggy-1.3.0 -- /usr/local/bin/python3.9\r\ncachedir: .pytest_cache\r\nhypothesis profile 'default' -> database=DirectoryBasedExampleDatabase(PosixPath('/usr/ports/misc/py-laspy/work-py39/laspy-2.5.2/.hypothesis/examples'))\r\nUsing --randomly-seed=1862560085\r\nbenchmark: 4.0.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)\r\nrootdir: /usr/ports/misc/py-laspy/work-py39/laspy-2.5.2\r\nplugins: anyio-4.1.0, hypothesis-6.92.0, asyncio-0.22.0, trio-0.8.0, cov-4.1.0, rerunfailures-11.1.2, randomly-3.12.0, timeout-2.1.0, time-machine-2.11.0, forked-1.6.0, flaky-3.7.0, aspectlib-2.0.0, xdist-3.5.0, env-0.6.2, mock-3.10.0, tornado-0.8.1, pytest_httpserver-1.0.8, isort-3.1.0, flake8-1.1.1, subprocess-1.5.0, datadir-1.5.0, benchmark-4.0.0\r\nasyncio: mode=strict\r\ncollected 748 items                                                                                                                                                                         \r\nINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"/usr/ports/misc/py-laspy/work-py39/laspy-2.5.2/tests/cli/__init__.py\", line 6, in skip_if_cli_deps_are_not_installed\r\nINTERNALERROR>     from laspy.cli.core import app\r\nINTERNALERROR> ModuleNotFoundError: No module named 'laspy.cli.core'\r\nINTERNALERROR> \r\nINTERNALERROR> During handling of the above exception, another exception occurred:\r\nINTERNALERROR> \r\nINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"/usr/local/lib/python3.9/site-packages/_pytest/main.py\", line 271, in wrap_session\r\nINTERNALERROR>     session.exitstatus = doit(config, session) or 0\r\nINTERNALERROR>   File \"/usr/local/lib/python3.9/site-packages/_pytest/main.py\", line 324, in _main\r\nINTERNALERROR>     config.hook.pytest_collection(session=session)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.9/site-packages/pluggy/_hooks.py\", line 493, in __call__\r\nINTERNALERROR>     return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.9/site-packages/pluggy/_manager.py\", line 115, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.9/site-packages/pluggy/_callers.py\", line 152, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"/usr/local/lib/python3.9/site-packages/pluggy/_result.py\", line 114, in get_result\r\nINTERNALERROR>     raise exc.with_traceback(exc.__traceback__)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.9/site-packages/pluggy/_callers.py\", line 77, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.9/site-packages/_pytest/main.py\", line 335, in pytest_collection\r\nINTERNALERROR>     session.perform_collect()\r\nINTERNALERROR>   File \"/usr/local/lib/python3.9/site-packages/_pytest/main.py\", line 675, in perform_collect\r\nINTERNALERROR>     self.items.extend(self.genitems(node))\r\nINTERNALERROR>   File \"/usr/local/lib/python3.9/site-packages/_pytest/main.py\", line 845, in genitems\r\nINTERNALERROR>     yield from self.genitems(subnode)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.9/site-packages/_pytest/main.py\", line 842, in genitems\r\nINTERNALERROR>     rep = collect_one_node(node)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.9/site-packages/_pytest/runner.py\", line 546, in collect_one_node\r\nINTERNALERROR>     ihook.pytest_collectstart(collector=collector)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.9/site-packages/pluggy/_hooks.py\", line 493, in __call__\r\nINTERNALERROR>     return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.9/site-packages/pluggy/_manager.py\", line 115, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.9/site-packages/pluggy/_callers.py\", line 113, in _multicall\r\nINTERNALERROR>     raise exception.with_traceback(exception.__traceback__)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.9/site-packages/pluggy/_callers.py\", line 77, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.9/site-packages/pytest_asyncio/plugin.py\", line 552, in pytest_collectstart\r\nINTERNALERROR>     marks = get_unpacked_marks(collector.obj, consider_mro=True)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.9/site-packages/_pytest/python.py\", line 310, in obj\r\nINTERNALERROR>     self._obj = obj = self._getobj()\r\nINTERNALERROR>   File \"/usr/local/lib/python3.9/site-packages/_pytest/python.py\", line 528, in _getobj\r\nINTERNALERROR>     return self._importtestmodule()\r\nINTERNALERROR>   File \"/usr/local/lib/python3.9/site-packages/_pytest/python.py\", line 617, in _importtestmodule\r\nINTERNALERROR>     mod = import_path(self.path, mode=importmode, root=self.config.rootpath)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.9/site-packages/_pytest/pathlib.py\", line 567, in import_path\r\nINTERNALERROR>     importlib.import_module(module_name)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.9/importlib/__init__.py\", line 127, in import_module\r\nINTERNALERROR>     return _bootstrap._gcd_import(name[level:], package, level)\r\nINTERNALERROR>   File \"<frozen importlib._bootstrap>\", line 1030, in _gcd_import\r\nINTERNALERROR>   File \"<frozen importlib._bootstrap>\", line 1007, in _find_and_load\r\nINTERNALERROR>   File \"<frozen importlib._bootstrap>\", line 986, in _find_and_load_unlocked\r\nINTERNALERROR>   File \"<frozen importlib._bootstrap>\", line 680, in _load_unlocked\r\nINTERNALERROR>   File \"/usr/local/lib/python3.9/site-packages/_pytest/assertion/rewrite.py\", line 186, in exec_module\r\nINTERNALERROR>     exec(co, module.__dict__)\r\nINTERNALERROR>   File \"/usr/ports/misc/py-laspy/work-py39/laspy-2.5.2/tests/cli/test_compress_decompress.py\", line 9, in <module>\r\nINTERNALERROR>     skip_if_cli_deps_are_not_installed()\r\nINTERNALERROR>   File \"/usr/ports/misc/py-laspy/work-py39/laspy-2.5.2/tests/cli/__init__.py\", line 8, in skip_if_cli_deps_are_not_installed\r\nINTERNALERROR>     pytest.skip(\"skipping cli test (deps not installed)\", allow_module_level=True)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.9/site-packages/_pytest/outcomes.py\", line 179, in skip\r\nINTERNALERROR>     raise Skipped(msg=reason, allow_module_level=allow_module_level)\r\nINTERNALERROR> Skipped: skipping cli test (deps not installed)\r\n\r\n=================================================================================== no tests ran in 0.50s ===================================================================================\r\n*** Error code 3\r\n```\r\n\r\nWhat is wrong?\r\n\r\n\r\nVersion: 2.5.2\r\nPython-3.9\r\nFreeBSD 14.0",
      "state": "OPEN",
      "createdAt": "2024-01-03T21:51:20Z",
      "updatedAt": "2024-01-04T09:52:59Z",
      "closedAt": null,
      "author": {
        "login": "yurivict"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "topic: collection"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 11762,
      "title": "Suggest Packages to Install",
      "body": "<!--\r\nThanks for suggesting a feature!\r\n\r\nQuick check-list while suggesting features:\r\n-->\r\n\r\n#### What's the problem this feature will solve?\r\nI recently was using a GitHub Action that utilizes this module.\r\nThis GitHub Action requires the pytest-md package, which I didn't notice.\r\nBecause of this missing dependency, I got the error `pytest: error: unrecognized arguments: --md=path/to/file.md`.\r\n\r\n#### Describe the solution you'd like\r\nUsing pytest with certain 'known' but not available args could trigger suggestions to alert users that they need to install other packages.\r\n\r\n<!-- Provide examples of real-world use cases that this would enable and how it solves the problem described above. -->\r\n\r\n#### Alternative Solutions\r\n<!-- Have you tried to workaround the problem using a pytest plugin or other tools? Or a different approach to solving this issue? Please elaborate here. -->\r\nI figured out the package I needed to install and it's fine now, but this could make it easier for others who lack required dependencies for certain args.\r\n\r\n#### Additional context\r\n<!-- Add any other context, links, etc. about the feature here. -->\r\n",
      "state": "CLOSED",
      "createdAt": "2024-01-02T20:28:46Z",
      "updatedAt": "2024-01-03T12:31:51Z",
      "closedAt": "2024-01-03T12:27:49Z",
      "author": {
        "login": "bmos"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 11761,
      "title": "Testing fails with `pytest-xdist` installed and disabled",
      "body": "I'm packaging `pytest` for OpenIndiana and while testing the package I noticed that some tests are failing when there is `pytest-xdist` installed and disabled using `-p no:xdist` option set in the `PYTEST_ADDOPTS` environment variable.\r\n\r\nThe list of failed tests is here:\r\n```\r\nFAILED testing/test_junitxml.py::test_random_report_log_xdist - FileNotFoundE...\r\nFAILED testing/test_junitxml.py::test_runs_twice_xdist - FileNotFoundError: [...\r\nFAILED testing/test_terminal.py::TestProgressOutputStyle::test_xdist_normal\r\nFAILED testing/test_terminal.py::TestProgressOutputStyle::test_xdist_normal_count\r\nFAILED testing/test_terminal.py::TestProgressOutputStyle::test_xdist_verbose\r\nFAILED testing/test_terminal.py::TestProgressWithTeardown::test_xdist_normal\r\n```\r\nHere is typical test failure:\r\n```\r\n__________________ TestProgressOutputStyle.test_xdist_normal ___________________\r\n\r\nself = <test_terminal.TestProgressOutputStyle object at 0x7fffabbf7df0>\r\nmany_tests_files = None\r\npytester = <Pytester PosixPath('/tmp/pytest-of-marcel/pytest-23/test_xdist_normal0')>\r\nmonkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7fffa8f834c0>\r\n\r\n    def test_xdist_normal(\r\n        self, many_tests_files, pytester: Pytester, monkeypatch\r\n    ) -> None:\r\n        pytest.importorskip(\"xdist\")\r\n        monkeypatch.delenv(\"PYTEST_DISABLE_PLUGIN_AUTOLOAD\", raising=False)\r\n        output = pytester.runpytest(\"-n2\")\r\n>       output.stdout.re_match_lines([r\"\\.{20} \\s+ \\[100%\\]\"])\r\nE       Failed: remains unmatched: '\\\\.{20} \\\\s+ \\\\[100%\\\\]'\r\n$(BUILD_DIR)/testing/test_terminal.py:2178: Failed\r\n----------------------------- Captured stderr call -----------------------------\r\nERROR: usage: __main__.py [options] [file_or_dir] [file_or_dir] [...]\r\n__main__.py: error: unrecognized arguments: -n2\r\n  inifile: None\r\n  rootdir: /tmp/pytest-of-marcel/pytest-23/test_xdist_normal0\r\n\r\n```",
      "state": "OPEN",
      "createdAt": "2024-01-02T18:57:07Z",
      "updatedAt": "2024-04-14T16:50:11Z",
      "closedAt": null,
      "author": {
        "login": "mtelka"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: selftests"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      }
    },
    {
      "number": 11759,
      "title": "Pytest 8.0.0rc1 stopped respecting usefixtures marker applied in pytest_itemcollected",
      "body": "<!--\r\nThanks for submitting an issue!\r\n\r\nQuick check-list while reporting bugs:\r\n-->\r\n\r\n- [x] a detailed description of the bug or problem you are having\r\n- [x] output of `pip list` from the virtual environment you are using\r\n- [x] pytest and operating system versions\r\n- [x] minimal example if possible\r\n\r\nIn Pytest 7, adding a `pytest.mark.usefixtures` marker to a `pytest.Item` in `pytest_itemcollected` resulted in that marker being respected. With Pytest 8, that\u2019s not the case.\r\n\r\nThe reproducer sets up two environments, one with Pytest 7.x, one with Pytest 8.0.0rc1, and runs a test suite:\r\n\r\n# [reproducer](https://gist.github.com/flying-sheep/4ef2072763da268b1b1953e102ad21f1)\r\n\r\n```console\r\n$ hatch run test\r\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 7 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\r\n============================== test session starts ==============================\r\nplatform linux -- Python 3.11.6, pytest-7.4.3, pluggy-1.3.0 -- .../7/bin/python\r\ncachedir: .pytest_cache\r\nrootdir: .../pytest-8-doctests\r\ncollected 2 items                                                               \r\n\r\ntest_warnings.py::test_warnings.has_doctest PASSED                        [ 50%]\r\ntest_warnings.py::test_warn PASSED                                        [100%]\r\n\r\n=============================== 2 passed in 0.01s ===============================\r\n```\r\n```console\r\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 8 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\r\n============================== test session starts ==============================\r\nplatform linux -- Python 3.11.6, pytest-8.0.0rc1, pluggy-1.3.0 -- .../8/bin/python\r\ncachedir: .pytest_cache\r\nrootdir: .../pytest-8-doctests\r\ncollected 2 items                                                               \r\n\r\ntest_warnings.py::test_warnings.has_doctest FAILED                        [ 50%]\r\ntest_warnings.py::test_warn PASSED                                        [100%]\r\n\r\n=================================== FAILURES ====================================\r\n______________________ [doctest] test_warnings.has_doctest ______________________\r\n007 Doctest!\r\n008     \r\n009     >>> import warnings\r\n010     >>> warnings.warn(\"Hi!\", FutureWarning)\r\nUNEXPECTED EXCEPTION: FutureWarning('Hi!')\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.11/doctest.py\", line 1351, in __run\r\n    exec(compile(example.source, filename, \"single\",\r\n  File \"<doctest test_warnings.has_doctest[1]>\", line 1, in <module>\r\nFutureWarning: Hi!\r\n.../pytest-8-doctests/test_warnings.py:10: UnexpectedException\r\n============================ short test summary info ============================\r\nFAILED test_warnings.py::test_warnings.has_doctest\r\n========================== 1 failed, 1 passed in 0.01s ==========================\r\n```\r\n",
      "state": "CLOSED",
      "createdAt": "2024-01-02T16:58:32Z",
      "updatedAt": "2024-01-15T11:59:47Z",
      "closedAt": "2024-01-15T11:59:47Z",
      "author": {
        "login": "flying-sheep"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: bug"
          },
          {
            "name": "plugin: doctests"
          }
        ]
      },
      "milestone": {
        "title": "8.0",
        "dueOn": null
      },
      "comments": {
        "totalCount": 5
      }
    },
    {
      "number": 11758,
      "title": "Bug with prerelease pytest",
      "body": "<!--\r\nThanks for submitting an issue!\r\n\r\nQuick check-list while reporting bugs:\r\n-->\r\n\r\n- [x] a detailed description of the bug or problem you are having\r\n- [x] output of `pip list` from the virtual environment you are using\r\n- [x] pytest and operating system versions\r\n- [ ] minimal example if possible\r\n\r\nIn our prerelease CIs we now get an internal error with 8.0.0rc1:\r\n\r\nhttps://github.com/mne-tools/mne-python/actions/runs/7387584833/job/20096612938?pr=12330#step:15:4411\r\n\r\n```\r\n_______________________________ test_dir_warning _______________________________\r\nmne/_fiff/tests/test_meas_info.py:355: in test_dir_warning\r\n    read_info(ctf_fname)\r\n<decorator-gen-34>:12: in read_info\r\n    ???\r\nmne/_fiff/meas_info.py:2045: in read_info\r\n    fname = _check_fname(fname, must_exist=True, overwrite=\"read\")\r\n<decorator-gen-0>:12: in _check_fname\r\n    ???\r\nmne/utils/check.py:255: in _check_fname\r\n    raise OSError(\r\nE   OSError: Need a file for File but found a directory at /home/runner/mne_data/MNE-testing-data/CTF/testdata_ctf.ds\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n    tw._write_source(source_lines, indents)\r\n  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/_pytest/_io/terminalwriter.py\", line 193, in _write_source\r\n    new_lines = self._highlight(source).splitlines()\r\n                ^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/site-packages/_pytest/_io/terminalwriter.py\", line 228, in _highlight\r\n    if highlighted[-1] == \"\\n\" and source[-1] != \"\\n\":\r\n                                   ~~~~~~^^^^\r\nIndexError: string index out of range\r\nError: Process completed with exit code 1.\r\n```\r\nThat's on Linux, but locally I can reproduce on reproduce on macOS arm64 as well:\r\n```\r\n$ pytest mne/_fiff/tests/test_meas_info.py --pdb\r\n...\r\nINTERNALERROR>   File \"/Users/larsoner/Applications/MNE-Python/1.6.0_0/.mne-python/lib/python3.11/site-packages/_pytest/reports.py\", line 88, in toterminal\r\nINTERNALERROR>     longrepr_terminal.toterminal(out)\r\nINTERNALERROR>   File \"/Users/larsoner/Applications/MNE-Python/1.6.0_0/.mne-python/lib/python3.11/site-packages/_pytest/_code/code.py\", line 1140, in toterminal\r\nINTERNALERROR>     element[0].toterminal(tw)\r\nINTERNALERROR>   File \"/Users/larsoner/Applications/MNE-Python/1.6.0_0/.mne-python/lib/python3.11/site-packages/_pytest/_code/code.py\", line 1170, in toterminal\r\nINTERNALERROR>     entry.toterminal(tw)\r\nINTERNALERROR>   File \"/Users/larsoner/Applications/MNE-Python/1.6.0_0/.mne-python/lib/python3.11/site-packages/_pytest/_code/code.py\", line 1257, in toterminal\r\nINTERNALERROR>     self._write_entry_lines(tw)\r\nINTERNALERROR>   File \"/Users/larsoner/Applications/MNE-Python/1.6.0_0/.mne-python/lib/python3.11/site-packages/_pytest/_code/code.py\", line 1247, in _write_entry_lines\r\nINTERNALERROR>     tw._write_source(source_lines, indents)\r\nINTERNALERROR>   File \"/Users/larsoner/Applications/MNE-Python/1.6.0_0/.mne-python/lib/python3.11/site-packages/_pytest/_io/terminalwriter.py\", line 193, in _write_source\r\nINTERNALERROR>     new_lines = self._highlight(source).splitlines()\r\nINTERNALERROR>                 ^^^^^^^^^^^^^^^^^^^^^^^\r\nINTERNALERROR>   File \"/Users/larsoner/Applications/MNE-Python/1.6.0_0/.mne-python/lib/python3.11/site-packages/_pytest/_io/terminalwriter.py\", line 228, in _highlight\r\nINTERNALERROR>     if highlighted[-1] == \"\\n\" and source[-1] != \"\\n\":\r\nINTERNALERROR>                                    ~~~~~~^^^^\r\nINTERNALERROR> IndexError: string index out of range\r\n\r\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> PDB post_mortem (IO-capturing turned off) >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\n> /Users/larsoner/Applications/MNE-Python/1.6.0_0/.mne-python/lib/python3.11/site-packages/_pytest/_io/terminalwriter.py(228)_highlight()\r\n-> if highlighted[-1] == \"\\n\" and source[-1] != \"\\n\":\r\n(Pdb) p source\r\n''\r\n(Pdb) \r\n```\r\nNot really minimal (at all!) and it's not trivial to get the MNE tests running locally, so let me know if additional debugging at my end would be helpful. But maybe it's enough to know that `source` has length zero so `source[-1]` will fail here?\r\n\r\nEnv info:\r\n```\r\n$ pip list | grep pytest\r\npytest                        8.0.0rc1\r\npytest-cov                    4.1.0\r\npytest-harvest                1.10.4\r\npytest-qt                     4.2.0\r\npytest-timeout                2.2.0\r\n```",
      "state": "CLOSED",
      "createdAt": "2024-01-02T16:36:41Z",
      "updatedAt": "2024-01-03T07:38:31Z",
      "closedAt": "2024-01-03T07:38:30Z",
      "author": {
        "login": "larsoner"
      },
      "assignees": {
        "nodes": [
          {
            "login": "bluetech"
          }
        ]
      },
      "labels": {
        "nodes": [
          {
            "name": "type: bug"
          },
          {
            "name": "topic: reporting"
          }
        ]
      },
      "milestone": {
        "title": "8.0",
        "dueOn": null
      },
      "comments": {
        "totalCount": 2
      }
    },
    {
      "number": 11742,
      "title": "request: map back to original test function in `-rs`",
      "body": "#### What's the problem this feature will solve?\r\n`-rs` does not map the origin of the skip back to the original test function when the skip occurs via `pytest.skip` in a decorator.\r\n(Previously queried in https://stackoverflow.com/questions/77687258/how-to-write-complex-pytest-skip-decorators and https://github.com/pytest-dev/pytest/discussions/11726)\r\n\r\n#### Describe the solution you'd like\r\nIf this is not already possible, I would like an option to configure `pytest` to report the original test function.\r\n\r\n---\r\n\r\nIn SciPy we have this use case:\r\n\r\n```python\r\n# .../test_x.py\r\n\r\n@pytest.mark.skipif(f(xp))\r\n@pytest.mark.parametrize(xp, ...)\r\ndef test_y(xp):\r\n    ....\r\n```\r\n\r\nThat doesn't work, because `xp` is not defined yet. Our solution was the following:\r\n\r\n```python\r\n# scipy/conftest.py\r\n\r\ndef skip_if_...(reason=None):\r\n    def wrapper(func, reason=reason):\r\n        if '.' in func.__qualname__:\r\n            @wraps(func)\r\n            def wrapped(self, *args, **kwargs):\r\n                xp = kwargs[\"xp\"]\r\n                if f(xp):\r\n                    pytest.skip(reason=reason)\r\n                return func(self, *args, **kwargs)\r\n        else:\r\n            @wraps(func)\r\n            def wrapped(*args, **kwargs):\r\n                xp = kwargs[\"xp\"]\r\n                if f(xp):\r\n                    pytest.skip(reason=reason)\r\n                return func(*args, **kwargs)\r\n        return wrapped\r\n    return wrapper\r\n\r\n# .../test_x.py\r\n\r\nfrom scipy.conftest import skip_if_...\r\n\r\n@skip_if_...\r\n@pytest.mark.parametrize(xp, ...)\r\ndef test_y(xp):\r\n    ....\r\n```\r\n\r\nThis gives the correct skips and has the per-test-function granularity when using `--verbose`.\r\n\r\nHowever, when using `-rs`, the report looks like:\r\n\r\n```\r\nSKIPPED [18] scipy/conftest.py:159: ...\r\n```\r\n\r\nwhen we want it to look like:\r\n\r\n```\r\nSKIPPED [1] .../test_x.py::test_y: ...\r\n...\r\nSKIPPED [1] .../test_x.py::test_z: ...\r\n```\r\n\r\n#### Alternative Solutions\r\nI may be missing a way to do this already, in which case, please let me know!\r\n\r\n#### Additional context\r\nDiscovered in scipy/scipy#19682.\r\n",
      "state": "CLOSED",
      "createdAt": "2023-12-27T13:39:06Z",
      "updatedAt": "2024-02-11T12:24:31Z",
      "closedAt": "2024-02-11T12:24:02Z",
      "author": {
        "login": "lucascolley"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 5
      }
    },
    {
      "number": 11741,
      "title": "DeprecationWarning: pkg_resources is deprecated as an API",
      "body": "I run Pytest and get the following warning:\r\n```\r\nDeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html\r\n  from pkg_resources import iter_entry_points\r\n```\r\nIs there expected to be a fix? if so, what's the ETA?\r\n\r\nPython version: 3.9\r\nPytest version: 7.43\r\nOS: Windows 64\r\n\r\n",
      "state": "CLOSED",
      "createdAt": "2023-12-27T12:37:04Z",
      "updatedAt": "2023-12-27T18:24:03Z",
      "closedAt": "2023-12-27T18:24:02Z",
      "author": {
        "login": "Noam-Microsoft"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      }
    },
    {
      "number": 11740,
      "title": "The order in which test results are presented is uncontrollable",
      "body": "<!--\r\nThanks for suggesting a feature!\r\n\r\nQuick check-list while suggesting features:\r\n-->\r\n\r\n#### What's the problem this feature will solve?\r\n<!-- What are you trying to do, that you are unable to achieve with pytest as it currently stands? -->\r\n\u5982\u56fe\u6240\u793a\uff0c \u6dfb\u52a0\u4e86 \r\n\r\n      @pytest.hookspec\r\n      def pytest_terminal_summary(terminalreporter):\r\n\r\n\u65b9\u6cd5\u4e4b\u540e\uff0c\u62a5\u544a\u5076\u53d1\u5c31\u4f1a\u8dd1\u5230 ========xxx====== \u7ebf\u4e0b\u9762\uff0c\u6ca1\u529e\u6cd5\u56fa\u5b9a\u4f4d\u7f6e\u3002\u80fd\u5426\u6709\u65b9\u6cd5\u53ef\u4ee5\u56fa\u5b9a\u76f8\u5bf9\u4f4d\u7f6e\u3002\uff08\u9ec4\u8272\u65e5\u5fd7\uff09\r\n#### Describe the solution you'd like\r\n<!-- A clear and concise description of what you want to happen. -->\r\n\r\n<!-- Provide examples of real-world use cases that this would enable and how it solves the problem described above. -->\r\n![image](https://github.com/pytest-dev/pytest/assets/29268369/c7f342fd-1813-4cdc-a825-c8ad5682d227)\r\n\r\n![image](https://github.com/pytest-dev/pytest/assets/29268369/f0e67d0f-f3b8-45b7-8d0f-c4619df1bd91)\r\n\r\n#### Alternative Solutions\r\n<!-- Have you tried to workaround the problem using a pytest plugin or other tools? Or a different approach to solving this issue? Please elaborate here. -->\r\n\r\n#### Additional context\r\n<!-- Add any other context, links, etc. about the feature here. -->\r\n",
      "state": "CLOSED",
      "createdAt": "2023-12-27T07:25:50Z",
      "updatedAt": "2025-01-27T04:20:20Z",
      "closedAt": "2025-01-27T04:20:19Z",
      "author": {
        "login": "yanghuizhi"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "status: needs information"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 11738,
      "title": "markers defined in pytest.ini or pyproject.toml are not considered. It does work when using the command line",
      "body": "# problem\r\n\r\nWhen I use markers in `pyproject.toml` or in `pytest.ini`, all tests are selected.\r\n\r\n`pyproject.toml` (I make sure to delete pytest.ini when this config was tested)\r\n```\r\n[tool.pytest.ini_options]\r\npythonpath = \".\"\r\naddopts = \"--strict-markers\"\r\nmarkers = [\r\n    \"slow: mark a test that takes a long time to run.\",\r\n]\r\n```\r\n\r\n> platform darwin -- Python 3.10.11, pytest-7.4.3, pluggy-1.3.0\r\n> rootdir: /Users/datategy/Documents/o2_ml\r\n> configfile: pyproject.toml\r\n> plugins: fugue-0.8.7, anyio-4.2.0\r\n> collected 3 items\r\n\r\n`pytest.ini`\r\n```\r\n[pytest]\r\npythonpath = .\r\naddopts = --strict-markers\r\nmarkers =\r\n    slow\r\n```\r\n\r\n> platform darwin -- Python 3.10.11, pytest-7.4.3, pluggy-1.3.0\r\n> rootdir: /Users/datategy/Documents/o2_ml\r\n> configfile: pytest.ini\r\n> plugins: fugue-0.8.7, anyio-4.2.0\r\n> collected 3 items\r\n\r\nHowever, when I try with the command line, it works perfectly and only select the tests marked with 'slow'\r\n\r\n```\r\npytest -m slow\r\n```\r\n\r\n> platform darwin -- Python 3.10.11, pytest-7.4.3, pluggy-1.3.0\r\n> rootdir: /Users/datategy/Documents/o2_ml\r\n> configfile: pyproject.toml\r\n> plugins: fugue-0.8.7, anyio-4.2.0\r\n> collected 3 items / 2 deselected / 1 selected\r\n\r\n# my test\r\n\r\n```python\r\n@pytest.mark.slow\r\n@pytest.mark.parametrize(\"params_model\", params_slow_model)\r\ndef test_slow_ts_forecasting(params_model):\r\n    ...\r\n```\r\n\r\n# environment\r\n\r\npython 3.10.11\r\npytest 7.4.3\r\nChip Apple M2\r\nMacOS 13.2 (22D49)\r\n\r\n- [x] a detailed description of the bug or problem you are having\r\n- [ ] output of `pip list` from the virtual environment you are using\r\n- [x] pytest and operating system versions\r\n- [ ] minimal example if possible\r\n",
      "state": "CLOSED",
      "createdAt": "2023-12-26T10:31:48Z",
      "updatedAt": "2024-01-03T12:20:55Z",
      "closedAt": "2024-01-03T12:20:55Z",
      "author": {
        "login": "MarcBresson"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 10
      }
    },
    {
      "number": 11734,
      "title": "Pytest does not fail assertion statements in Windows 10 machine",
      "body": "I found pytest does not throw error in my Windows laptop, but it works on my Mac Air.\r\nSpecifically, it passes all assertion regardless the equality.\r\n\r\nI create a new file like pytest official documentation example, and it collects 0 item now.\r\n\r\nWindows environment is Windows 10 pro 22H2, Mac Air is Sonoma 14.2.1\r\n\r\n```\r\n$ uname -a\r\nDarwin MacBook-Air-M2.local 23.2.0 Darwin Kernel Version 23.2.0: Wed Nov 15 21:59:33 PST 2023; root:xnu-10002.61.3~2/RELEASE_ARM64_T8112 arm64\r\n```\r\n\r\n```\r\ndef foo():\r\n  pass\r\n\r\ndef test_answer():\r\n  assert 4==5\r\n-----------\r\n$ pytest test\r\nplatform win32 -- Python 3.12.1, pytest-7.4.3, pluggy-1.3.0 \r\nrootdir: D:\\Projects\\testcode\r\ncollected 1 item\r\n\r\ntestcode.py .                      [100%] \r\n\r\n===================== 1 passed in 0.03s ===================== \r\n```\r\n\r\n```\r\ndef inc(x):\r\n    return x + 1\r\n\r\ndef test_inc():\r\n    assert 4==5\r\n    assert inc(3) == 5\r\n\r\ntest_inc()\r\n---------------\r\n$ pytest test.py \r\n==================== test session starts ====================\r\nplatform win32 -- Python 3.12.1, pytest-7.4.3, pluggy-1.3.0   \r\nrootdir: D:\\Projects\\Test\r\ncollected 0 items                                             \r\n\r\n=================== no tests ran in 0.01s =================== \r\n```",
      "state": "CLOSED",
      "createdAt": "2023-12-23T03:12:56Z",
      "updatedAt": "2023-12-27T12:43:27Z",
      "closedAt": "2023-12-27T12:43:27Z",
      "author": {
        "login": "Alex-Lin5"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 11733,
      "title": "Issue - conftest.py at parent directory not recognized",
      "body": "Below is my folder structure:\r\n\r\n![image](https://github.com/pytest-dev/pytest/assets/146530679/662165f3-8a6a-4d08-8089-9729529e9003)\r\n\r\nI'm facing an issue where the tests inside the HCM folder is not taking the fixtures defined in the conftest.py file located one level up. I converted the folders into packages based on one suggestion but I'm not sure what could be going wrong here.",
      "state": "CLOSED",
      "createdAt": "2023-12-22T12:02:32Z",
      "updatedAt": "2023-12-28T14:24:59Z",
      "closedAt": "2023-12-28T14:24:58Z",
      "author": {
        "login": "sundar-ds"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 8
      }
    },
    {
      "number": 11731,
      "title": "Add \"--show-capture-success\" command line option to display captured stdout/stderr on success",
      "body": "#### What's the problem this feature will solve?\r\n\r\nI'm testing parts of my application that are printing some messages to `sys.stdout`.\r\nIn my test, I writing to `sys.stderr` some debugging information to help diagnose failures.\r\n\r\nThese are only printed when the test fail. However, to better understand and double-check that a test is behaving as expected, being able to visualize captured output is sometimes very convenient even when the test succeeded.\r\n\r\n\r\n#### Describe the solution you'd like\r\n\r\nWe could image a new `--show-capture-success` command line argument, similar to `--show-capture`, which would default to `no`. Users could switch it to `all` and be able to show captured output regardless of success or failure of the test.\r\n\r\nOther tests framework such as `Catch2` in C++ provides a similar `--success` option: [Showing results for successful tests](https://github.com/catchorg/Catch2/blob/v3.5.0/docs/command-line.md#showing-results-for-successful-tests)\r\n\r\n#### Alternative Solutions\r\n\r\nCurrently, it's possible to use `--capture=no`, but it causes all types of output to be mixed altogether (`sys.stdout`, `sys.stderr`, `logging` and actual `pytest` output) instead of being separately formatted by `pytest`. This hurts readability. \r\n\r\n#### Additional context\r\n\r\nI would happily contribute with a PR if such feature request is accepted.\r\n",
      "state": "CLOSED",
      "createdAt": "2023-12-21T20:36:00Z",
      "updatedAt": "2023-12-21T22:13:12Z",
      "closedAt": "2023-12-21T22:13:12Z",
      "author": {
        "login": "Delgan"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 11730,
      "title": "pytest --doctest-modules crashes on file-level `__test__ = False`",
      "body": "A file level `__test__ = False` succesfully stops `pytest` from collecting any test from that file, however when running `pytest --doctest- modules` on the same file, this error appears:\r\n\r\n```\r\n/sw/Python/Ubuntu-22.04/3.10.5/lib/python3.10/site-packages/_pytest/runner.py:341: in from_call\r\n    result: Optional[TResult] = func()\r\n/sw/Python/Ubuntu-22.04/3.10.5/lib/python3.10/site-packages/_pytest/runner.py:372: in <lambda>\r\n    call = CallInfo.from_call(lambda: list(collector.collect()), \"collect\")\r\n/sw/Python/Ubuntu-22.04/3.10.5/lib/python3.10/site-packages/_pytest/doctest.py:587: in collect\r\n    for test in finder.find(module, module.__name__):\r\n/sw/Python/Ubuntu-22.04/3.10.5/lib/python3.10/doctest.py:940: in find\r\n    self._find(tests, obj, name, module, source_lines, globs, {})\r\n/sw/Python/Ubuntu-22.04/3.10.5/lib/python3.10/site-packages/_pytest/doctest.py:536: in _find\r\n    super()._find(  # type:ignore[misc]\r\n/sw/Python/Ubuntu-22.04/3.10.5/lib/python3.10/doctest.py:1018: in _find\r\n    for valname, val in getattr(obj, '__test__', {}).items():\r\nE   AttributeError: 'bool' object has no attribute 'items'\r\n```\r\n\r\nIt's enoough to have a file with only this content to see the behavior:\r\n```py\r\n__test__ = False\r\n```\r\n\r\nVersion: `pytest 7.4.3`",
      "state": "OPEN",
      "createdAt": "2023-12-21T11:28:35Z",
      "updatedAt": "2024-01-16T05:31:36Z",
      "closedAt": null,
      "author": {
        "login": "kaddkaka"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "plugin: doctests"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 7
      }
    },
    {
      "number": 11728,
      "title": "Pytest does not show addClassCleanup errors",
      "body": "<!--\r\nThanks for submitting an issue!\r\n\r\nQuick check-list while reporting bugs:\r\n-->\r\n\r\n- [x] a detailed description of the bug or problem you are having\r\nBelow in minimal example is a code that if I run with python, I get\r\n```\r\nRunning test one\r\n.E\r\n======================================================================\r\nERROR: tearDownClass (__main__.SomeTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"tst.py\", line 11, in clean_up_class\r\n    raise AttributeError\r\nAttributeError\r\n\r\n----------------------------------------------------------------------\r\nRan 1 test in 0.001s\r\n\r\nFAILED (errors=1)\r\n\r\n```\r\nwhich is fine, but if I run it with pytest I get:\r\n\r\n```\r\n==================================================================================== test session starts =====================================================================================\r\nplatform linux -- Python 3.8.18, pytest-7.4.3, pluggy-1.3.0\r\nrootdir: /home/vagrant\r\ncollected 1 item                                                                                                                                                                             \r\n\r\ntst.py .                                                                                                                                                                               [100%]\r\n\r\n===================================================================================== 1 passed in 0.01s ======================================================================================\r\n\r\n```\r\n\r\nWithout any sign of that an error has happend. Therefore it fail silently without anyone knowing something wrong happend.\r\n\r\nExpected: Pytest shows error as well.\r\n\r\n- [x] output of `pip list` from the virtual environment you are using\r\n```\r\nPackage        Version\r\n-------------- -------\r\nexceptiongroup 1.2.0\r\niniconfig      2.0.0\r\npackaging      23.2\r\npip            23.3.2\r\npluggy         1.3.0\r\npytest         7.4.3\r\nsetuptools     56.0.0\r\ntomli          2.0.1\r\n\r\n```\r\n\r\n- [x] pytest and operating system versions\r\npytest 7.4.3\r\nCentos7\r\n\r\n- [x] minimal example if possible\r\n\r\n```\r\nimport unittest\r\n\r\n\r\nclass SomeTest(unittest.TestCase):\r\n    @classmethod\r\n    def setUpClass(cls):\r\n        cls.addClassCleanup(cls.clean_up_class)\r\n        \r\n    @classmethod\r\n    def clean_up_class(cls):\r\n        raise AttributeError\r\n\r\n    def test_one(self):\r\n        print(\"Running test one\")\r\n        self.assertTrue(True)\r\n\r\nif __name__ == '__main__':\r\n    unittest.main()\r\n```\r\n",
      "state": "CLOSED",
      "createdAt": "2023-12-20T16:54:25Z",
      "updatedAt": "2024-04-27T12:49:06Z",
      "closedAt": "2024-04-27T12:49:06Z",
      "author": {
        "login": "LukasJerabek"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "plugin: unittest"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      }
    },
    {
      "number": 11720,
      "title": "Python 3.7 still listed as supported on PyPI and in badge",
      "body": "Even though support for Python 3.7 was dropped in https://github.com/pytest-dev/pytest/commit/f4e3b4ad9827276ff20c2c3a86e0637a37b09019, it still lingers in some places.\r\n\r\n- the supported versions badge: https://img.shields.io/pypi/pyversions/pytest.svg\r\n- on PyPI, it stills says \"Python 3.7\" under _Features_, in _Requires_ section and _Classifiers_\r\n\r\nThis seems to mean that trying to install pytest from PyPI and run it with Python 3.7 is currently broken, as it will install the latest version (currently 7.4.3), which will throw errors similar to #7114.",
      "state": "CLOSED",
      "createdAt": "2023-12-18T04:50:27Z",
      "updatedAt": "2024-01-04T12:02:42Z",
      "closedAt": "2024-01-04T12:02:41Z",
      "author": {
        "login": "Timmeeh"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "status: needs information"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      }
    },
    {
      "number": 11716,
      "title": "[doctest] Allow filtering which py files are considered for --doctest-modules",
      "body": "When doctestmodules is True, we unconditionally attempt to doctest all files, except for a few explicitly denylisted file names:\r\n\r\n```\r\n    if file_path.suffix == \".py\":\r\n        if config.option.doctestmodules and not any(\r\n            (_is_setup_py(file_path), _is_main_py(file_path))\r\n        ):\r\n            mod: DoctestModule = DoctestModule.from_parent(parent, path=file_path)\r\n            return mod\r\n```\r\n\r\nIn some situations, such as happened in https://github.com/pytest-dev/pytest/issues/1881, it would be useful to limit the set of files to be doctested; e.g., a fairly common desire is to only doctest files in src/, and not bother trying to doctest test files. In my situation, I have a repository that has a number of scripts that do not have `__name__ == '__main__'` guards, and doctest immediately chokes on them.\r\n\r\nThe fix is relatively simple, subject to bikeshedding how exactly the option should be spelled. I would propose we name the new option `--doctest-modules-glob`, and have it work equivalently to `--doctest-glob` but generating DoctestModule instead of DoctestTextFile. I can submit the PR, if someone agrees to help shepherd it. Thanks!\r\n\r\n(This is technically a dupe of https://github.com/pytest-dev/pytest/issues/1881 but I am submitting a fresh issue because there's a lot of irrelevant noise in the original issue.)",
      "state": "OPEN",
      "createdAt": "2023-12-17T01:40:11Z",
      "updatedAt": "2024-02-17T10:35:53Z",
      "closedAt": null,
      "author": {
        "login": "ezyang"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: proposal"
          },
          {
            "name": "plugin: doctests"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      }
    },
    {
      "number": 11714,
      "title": "Logging error when plugin is using old-style hook wrappers when pytest is not",
      "body": "Since #11123 switched from the old-style hook wrappers to the new-style hook wrappers, I'm getting an error in the `pytest-mpl` plugin tests when testing with pytest's `main` branch installed. If I upgrade `pytest-mpl` to use the new-style hook wrappers in its `pytest_runtest_call`, the error goes away. I thought I would log the issue here in case it will cause wider issues when pytest 8 is released.\r\n\r\nI'm seeing this: https://github.com/matplotlib/pytest-mpl/actions/runs/7233619388/job/19709093922#step:10:4021\r\n```python\r\n>                   warnings.warn(pytest.PytestUnraisableExceptionWarning(msg))\r\nE                   pytest.PytestUnraisableExceptionWarning: Exception ignored in: <generator object LoggingPlugin.pytest_runtest_call at 0x7ff0fdef4ba0>\r\nE                   \r\nE                   Traceback (most recent call last):\r\nE                     File \"/home/runner/work/pytest-mpl/pytest-mpl/.tox/py312-test-mpldev-pytestdev/lib/python3.12/site-packages/_pytest/logging.py\", line 813, in _runtest_for\r\nE                       yield\r\nE                   GeneratorExit\r\nE                   \r\nE                   During handling of the above exception, another exception occurred:\r\nE                   \r\nE                   Traceback (most recent call last):\r\nE                     File \"/home/runner/work/pytest-mpl/pytest-mpl/.tox/py312-test-mpldev-pytestdev/lib/python3.12/site-packages/_pytest/logging.py\", line 830, in pytest_runtest_call\r\nE                       yield from self._runtest_for(item, \"call\")\r\nE                     File \"/home/runner/work/pytest-mpl/pytest-mpl/.tox/py312-test-mpldev-pytestdev/lib/python3.12/site-packages/_pytest/logging.py\", line 815, in _runtest_for\r\nE                       log = report_handler.stream.getvalue().strip()\r\nE                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nE                   ValueError: I/O operation on closed file\r\n```\r\n\r\nI can't really find a minimal example as the failure appears in different tests between test runs and it usually only occurs when I run the full test suite. I thought it might be related to pytester but then I saw it occurring in some non-pytester tests.\r\n\r\nTo be clear, if I checkout https://github.com/pytest-dev/pytest/commit/b41acaea1203abd25b83699e12124fed06fa9f9f in the tests they fail, but if I checkout the previous commit they pass. I'm not sure where to look to isolate the issue, but maybe someone who knows the pytest codebase better would.\r\n\r\nI think I'll upgrade `pytest-mpl` to use the new-style hook wrappers. Would you recommend using the new style if `pytest>=8` *or* if `pluggy>=1.2`? Thanks \ud83d\ude42 \r\n\r\n```\r\n$ pip freeze\r\ncontourpy==1.2.0\r\ncoverage==7.3.3\r\ncycler==0.12.1\r\nfonttools==4.46.0\r\niniconfig==2.0.0\r\nJinja2==3.1.2\r\nkiwisolver==1.4.5\r\nMarkupSafe==2.1.3\r\nmatplotlib==3.9.0.dev0\r\nnumpy==1.26.2\r\npackaging==23.2\r\nPillow==10.1.0\r\npluggy==1.3.0\r\npyparsing==3.1.1\r\npytest @ git+https://github.com/pytest-dev/pytest.git@047ba83dabe492af938104fe0058597f67a672be\r\npytest-cov==4.1.0\r\npytest-mpl @ file:///home/runner/work/pytest-mpl/pytest-mpl/.tox/.tmp/package/1/pytest-mpl-0.16.2.dev112%2Bgf52143a.tar.gz#sha256=e8c5423fdcfede0d588a2e634c2dd9224203f45be766d6fce48632a7fde76732\r\npython-dateutil @ git+https://github.com/dateutil/dateutil.git@0586f4afa26fc6799128d98d4f97a49c7d6ab314\r\nsix==1.16.0\r\n```\r\n",
      "state": "CLOSED",
      "createdAt": "2023-12-16T19:32:20Z",
      "updatedAt": "2024-01-11T09:16:57Z",
      "closedAt": "2024-01-11T09:16:57Z",
      "author": {
        "login": "ConorMacBride"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 4
      }
    },
    {
      "number": 11713,
      "title": "`BrokenPipeError` raised in a test converted into `OSError: Bad file descriptor`",
      "body": "- [x] a detailed description of the bug or problem you are having\r\n- [x] output of `pip list` from the virtual environment you are using\r\n- [x] pytest and operating system versions\r\n- [x] minimal example if possible\r\n\r\n## Description\r\n\r\nI've been trying to test an edge case involving a broken pipe (such as from piping to `head` with fewer lines than in the output) and stumbled on what looks like pytest-related behaviour I can't figure out, I suspect it may be a bug.\r\n\r\nIf I call this script with python it raises the `BrokenPipeError` I'm trying to test for, but if I call it with pytest the error becomes an `OSError`.\r\n\r\n> `7_minimal_repro_pytest_bug_multi_reraise_rich.py`\r\n\r\n```py\r\nimport socket\r\nimport threading\r\nimport time\r\nfrom queue import Queue\r\n\r\nimport pytest\r\nfrom rich.console import Console\r\n\r\n\r\nclass RichConsoleHandler:\r\n    def __init__(self, file):\r\n        self.file = file\r\n        self.console = Console(file=self.file)\r\n\r\n    def print(self, msg):\r\n        self.console.print(msg)\r\n\r\n\r\ndef create_socket_pair():\r\n    # Create a pair of connected sockets in blocking mode\r\n    return socket.socketpair()\r\n\r\n\r\ndef socket_writer(sock, num_messages, exception_queue):\r\n    file_like_socket = sock.makefile(\"w\")\r\n    console = RichConsoleHandler(file=file_like_socket)\r\n\r\n    try:\r\n        for i in range(num_messages):\r\n            message = f\"Message {i}\"\r\n            console.print(message)  # Using console.print to write formatted message\r\n            time.sleep(0.1)  # simulate time delay between messages\r\n    except BrokenPipeError as exc:\r\n        exception_queue.put(exc)\r\n        print(\"Broken pipe detected in writer.\")\r\n    finally:\r\n        try:\r\n            file_like_socket.close()\r\n        except BrokenPipeError as exc:\r\n            exception_queue.put(exc)\r\n            print(\"Broken pipe detected in writer shutdown.\")\r\n        finally:\r\n            sock.close()\r\n\r\n\r\ndef socket_reader(sock, num_messages_to_read, exception_queue):\r\n    try:\r\n        for _ in range(num_messages_to_read):\r\n            data = sock.recv(1024)\r\n            if not data:\r\n                break\r\n    except BrokenPipeError as exc:\r\n        exception_queue.put(exc)\r\n        print(\"Broken pipe detected in reader.\")\r\n    finally:\r\n        sock.close()\r\n\r\n\r\ndef make_console_socket_pair():\r\n    # Creating socket pair\r\n    sock_writer, sock_reader = create_socket_pair()\r\n    excs = Queue()\r\n\r\n    # Starting threads\r\n    writer_thread = threading.Thread(target=socket_writer, args=(sock_writer, 20, excs))\r\n    # Read only 10 messages\r\n    reader_thread = threading.Thread(target=socket_reader, args=(sock_reader, 10, excs))\r\n\r\n    reader_thread.start()\r\n    writer_thread.start()\r\n\r\n    reader_thread.join()\r\n    writer_thread.join()\r\n\r\n    if not excs.empty():\r\n        raise excs.get()\r\n\r\n\r\ndef test_console_socket_pair():\r\n    with pytest.raises(BrokenPipeError):\r\n        make_console_socket_pair()\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    make_console_socket_pair()\r\n```\r\n\r\nFor reference, here is the stdlib-only version of the script, which I _can_ successfully capture in pytest. The approach is to put the thread exceptions in a queue and raise them upon return.\r\n\r\n> `6_minimal_repro_pytest_bug_multi_reraise.py`\r\n\r\n```py\r\nimport socket\r\nimport threading\r\nimport time\r\nfrom queue import Queue\r\n\r\nimport pytest\r\n\r\n\r\nclass Console:\r\n    def __init__(self, file):\r\n        self.file = file\r\n\r\n    def print(self, msg):\r\n        print(msg, file=self.file, flush=True)\r\n\r\n\r\ndef create_socket_pair():\r\n    # Create a pair of connected sockets in blocking mode\r\n    return socket.socketpair()\r\n\r\n\r\ndef socket_writer(sock, num_messages, exception_queue):\r\n    file_like_socket = sock.makefile(\"w\")\r\n    console = Console(file=file_like_socket)\r\n\r\n    try:\r\n        for i in range(num_messages):\r\n            message = f\"Message {i}\"\r\n            console.print(message)  # Using console.print to write formatted message\r\n            time.sleep(0.1)  # simulate time delay between messages\r\n    except BrokenPipeError as exc:\r\n        exception_queue.put(exc)\r\n        print(\"Broken pipe detected in writer.\")\r\n    finally:\r\n        try:\r\n            file_like_socket.close()\r\n        except BrokenPipeError as exc:\r\n            exception_queue.put(exc)\r\n            print(\"Broken pipe detected in writer shutdown.\")\r\n        finally:\r\n            sock.close()\r\n\r\n\r\ndef socket_reader(sock, num_messages_to_read, exception_queue):\r\n    try:\r\n        for _ in range(num_messages_to_read):\r\n            data = sock.recv(1024)\r\n            if not data:\r\n                break\r\n    except BrokenPipeError as exc:\r\n        exception_queue.put(exc)\r\n        print(\"Broken pipe detected in reader.\")\r\n    finally:\r\n        sock.close()\r\n\r\n\r\ndef test_console_socket_pair():\r\n    # Creating socket pair\r\n    sock_writer, sock_reader = create_socket_pair()\r\n    excs = Queue()\r\n\r\n    # Starting threads\r\n    writer_thread = threading.Thread(target=socket_writer, args=(sock_writer, 20, excs))\r\n    # Read only 10 messages\r\n    reader_thread = threading.Thread(target=socket_reader, args=(sock_reader, 10, excs))\r\n\r\n    with pytest.raises(BrokenPipeError):\r\n        reader_thread.start()\r\n        writer_thread.start()\r\n\r\n        reader_thread.join()\r\n        writer_thread.join()\r\n\r\n        if not excs.empty():\r\n            raise excs.get()\r\n```\r\n\r\nHere's the example I started with, without any of the complexity, and confirming the error with a message.\r\n\r\n> `0_minimal_test.py`\r\n\r\n```py\r\nimport socket\r\nimport threading\r\nimport time\r\n\r\n\r\ndef create_socket_pair():\r\n    # Create a pair of connected sockets in blocking mode\r\n    return socket.socketpair()\r\n\r\n\r\ndef socket_writer(sock, num_messages):\r\n    try:\r\n        for i in range(num_messages):\r\n            sock.sendall(f\"Message {i}\\n\".encode())\r\n            time.sleep(0.1)  # simulate time delay between messages\r\n    except BrokenPipeError:\r\n        print(\"Broken pipe detected in writer.\")\r\n    finally:\r\n        sock.close()\r\n\r\n\r\ndef socket_reader(sock, num_messages_to_read):\r\n    try:\r\n        for _ in range(num_messages_to_read):\r\n            data = sock.recv(1024)\r\n            if not data:\r\n                break\r\n    finally:\r\n        sock.close()\r\n\r\n\r\n# Creating socket pair\r\nsock_writer, sock_reader = create_socket_pair()\r\n\r\n# Starting threads\r\nwriter_thread = threading.Thread(target=socket_writer, args=(sock_writer, 10))\r\nreader_thread = threading.Thread(\r\n    target=socket_reader, args=(sock_reader, 5)\r\n)  # Read only a few messages\r\n\r\nreader_thread.start()\r\nwriter_thread.start()\r\n\r\nreader_thread.join()\r\nwriter_thread.join()\r\n```\r\n\r\nPrints:\r\n\r\n> Broken pipe detected in writer.\r\n\r\n## Env\r\n\r\n```\r\nPackage         Version Editable project location\r\n--------------- ------- --------------------------------------------\r\naiohttp         3.9.1\r\naiosignal       1.3.1\r\nattrs           23.1.0\r\nblack           23.12.0\r\nclick           8.1.7\r\nfrozenlist      1.4.1\r\nidna            3.6\r\niniconfig       2.0.0\r\nmarkdown-it-py  2.2.0\r\nmdurl           0.1.2\r\nmultidict       6.0.4\r\nmypy-extensions 1.0.0\r\npackaging       23.2\r\npathspec        0.12.1\r\npip             23.3.1\r\nplatformdirs    4.1.0\r\npluggy          1.3.0\r\nPygments        2.17.2\r\nPySnooper       1.2.0\r\npytest          7.4.3\r\nrich            13.7.0  /home/louis/dev/rich/1591-brokenpipe-cleanup\r\nsetuptools      68.2.2\r\nwheel           0.41.2\r\nyarl            1.9.4\r\n```\r\n\r\n- Note: this reproduces with rich `13.7.0` instead of the local editable path",
      "state": "CLOSED",
      "createdAt": "2023-12-16T18:49:30Z",
      "updatedAt": "2023-12-16T19:08:08Z",
      "closedAt": "2023-12-16T19:08:08Z",
      "author": {
        "login": "lmmx"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 11710,
      "title": "Tracebacks from collection errors are not pruned",
      "body": "This is a regression in pytest 7.4 from commit fcada1ea4763c0e3471cd58ac4b89e7c874e6264.\r\n\r\nGiven a test module\r\n\r\n```py\r\nraise Exception('foo')\r\n```\r\n\r\nExpected output:\r\n\r\n```\r\n_______ ERROR collecting yy/test_y.py _______\r\nyy/test_y.py:1: in <module>\r\n    raise Exception('foo')\r\nE   Exception: foo\r\n```\r\n\r\nActual output:\r\n\r\n```\r\n_______ ERROR collecting yy/test_y.py _______\r\nsrc/_pytest/runner.py:340: in from_call\r\n    result: Optional[TResult] = func()\r\nsrc/_pytest/runner.py:371: in <lambda>\r\n    call = CallInfo.from_call(lambda: list(collector.collect()), \"collect\")\r\nsrc/_pytest/python.py:579: in collect\r\n    self._inject_setup_module_fixture()\r\nsrc/_pytest/python.py:593: in _inject_setup_module_fixture\r\n    self.obj, (\"setUpModule\", \"setup_module\")\r\nsrc/_pytest/python.py:307: in obj\r\n    self._obj = obj = self._getobj()\r\nsrc/_pytest/python.py:576: in _getobj\r\n    return importtestmodule(self.path, self.config)\r\nsrc/_pytest/python.py:528: in importtestmodule\r\n    mod = import_path(path, mode=importmode, root=config.rootpath)\r\nsrc/_pytest/pathlib.py:567: in import_path\r\n    importlib.import_module(module_name)\r\n/usr/lib/python3.11/importlib/__init__.py:126: in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n<frozen importlib._bootstrap>:1204: in _gcd_import\r\n    ???\r\n<frozen importlib._bootstrap>:1176: in _find_and_load\r\n    ???\r\n<frozen importlib._bootstrap>:1147: in _find_and_load_unlocked\r\n    ???\r\n<frozen importlib._bootstrap>:690: in _load_unlocked\r\n    ???\r\nsrc/_pytest/assertion/rewrite.py:175: in exec_module\r\n    exec(co, module.__dict__)\r\nyy/test_y.py:1: in <module>\r\n    raise Exception('foo')\r\nE   Exception: foo\r\n```",
      "state": "CLOSED",
      "createdAt": "2023-12-16T15:41:42Z",
      "updatedAt": "2023-12-31T08:14:24Z",
      "closedAt": "2023-12-31T08:14:24Z",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": [
          {
            "login": "bluetech"
          }
        ]
      },
      "labels": {
        "nodes": [
          {
            "name": "type: bug"
          },
          {
            "name": "topic: tracebacks"
          },
          {
            "name": "topic: collection"
          },
          {
            "name": "type: regression"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      }
    },
    {
      "number": 11707,
      "title": "Feature request: Open test reporting",
      "body": "## The Problem\r\n\r\nAt the moment the only way to get structured output from pytest is via `--junitxml` or installing a plugin.  The problem with junitxml is that, as a java format some information from pytest cannot be exported (eg: [warnings](https://github.com/pytest-dev/pytest/issues/2717)).\r\n\r\nThis means that they only way to get complete structured output from pytest is via a plugin.  What would be much better is if pytest could produce just one structured output that any tool in any language could then pick up and format, rather than requiring the formatting tool to run in the same virtual environment and process as the tests themselves.\r\n\r\nThe driver for me here is that I can't demand that multiple teams update 300+ repos to add a plugin for the sake of a CI change, and injecting plugins in a CI pipeline is a great way to make tests pass or fail in CI and not on people's local machine.\r\n\r\n## Requested Solution\r\n\r\nI'd like to ask for pytest to implement [open-test-reporting](https://github.com/ota4j-team/open-test-reporting) once open-test-reporting v1 has been released.  This is designed to be extensible meaning that pytest can add things like warnings without worrying about backward compatibility with the base standard.",
      "state": "OPEN",
      "createdAt": "2023-12-15T12:14:08Z",
      "updatedAt": "2024-02-17T10:36:13Z",
      "closedAt": null,
      "author": {
        "login": "couling"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: proposal"
          },
          {
            "name": "topic: reporting"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 11706,
      "title": "Pytest aborts when fixture errors during teardown and `--maxfail=1`",
      "body": "- [x] a detailed description of the bug or problem you are having\r\n- [x] output of `pip list` from the virtual environment you are using\r\n- [x] pytest and operating system versions\r\n- [x] minimal example if possible\r\n\r\n## Description\r\n\r\nPytest aborts if a session-scoped fixture errors during teardown when (a) one or more test cases fail and (b) `--maxfail=1` is used.\r\n\r\nWhen this happens, `test-report.xml` does not contain the teardown fixture error. This is problematic as users may want to also record teardown fixture errors when their test cases fail.\r\n\r\n## Minimal Example\r\n\r\n### Code\r\n\r\n```python\r\nimport pytest\r\n\r\n\r\ndef some_condition() -> bool:\r\n    return True\r\n\r\n\r\n@pytest.fixture(scope=\"session\", autouse=True)\r\ndef my_end_of_session_check():\r\n    yield\r\n\r\n    print(\"Running end of session check!\")\r\n    if some_condition():\r\n        pytest.fail(\"Oh noes\")\r\n\r\n\r\ndef test_case_1():\r\n    pytest.fail(\"This is a failing test\")\r\n\r\n\r\ndef test_case_2():\r\n     pytest.fail(\"This is also a failing test\")\r\n```\r\n\r\n### Args\r\n\r\n`pytest example.py --maxfail=1 --junitxml=test-report.xml`\r\n\r\n### Output\r\n\r\nConsole:\r\n\r\n```txt\r\n============================================================================== test session starts ===============================================================================\r\nplatform darwin -- Python 3.8.13, pytest-7.4.3, pluggy-1.3.0\r\nrootdir: /Users/bbrown/Downloads\r\ncollected 2 items\r\n\r\nexample.py FRunning end of session check!\r\nTraceback (most recent call last):\r\n  File \"/Users/bbrown/Downloads/.venv/bin/pytest\", line 8, in <module>\r\n    sys.exit(console_main())\r\n  <clipped>\r\n  File \"/Users/bbrown/Downloads/.venv/lib/python3.8/site-packages/_pytest/fixtures.py\", line 911, in _teardown_yield_fixture\r\n    next(it)\r\n  File \"/Users/bbrown/Downloads/example.py\", line 14, in my_end_of_session_check\r\n    pytest.fail(\"Oh noes\")\r\n  File \"/Users/bbrown/Downloads/.venv/lib/python3.8/site-packages/_pytest/outcomes.py\", line 198, in fail\r\n    raise Failed(msg=reason, pytrace=pytrace)\r\nFailed: Oh noes\r\n```\r\n\r\n`test-report.xml`:\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?><testsuites><testsuite name=\"pytest\" errors=\"0\" failures=\"1\" skipped=\"0\" tests=\"1\" time=\"0.035\" timestamp=\"2023-12-15T08:56:19.980572\" hostname=\"macbookpro\"><testcase classname=\"example\" name=\"test_case_1\" time=\"0.001\"><failure message=\"Failed: This is a failing test\">def test_case_1():\r\n&gt;       pytest.fail(\"This is a failing test\")\r\nE       Failed: This is a failing test\r\n\r\nexample.py:18: Failed</failure></testcase></testsuite></testsuites>\r\n```\r\n\r\n### Expected Output\r\n\r\nI expect pytest to not abort, and report \"1 failed, 1 error, 1 skipped\" in both the console and `test-report.xml` when this happens.\r\n\r\n### Environment\r\n\r\n__OS:__\r\n\r\nmacOS Sonoma 14.1.2\r\n\r\n__Virtual environment:__\r\n\r\n```txt\r\n(.venv) % pip list\r\nPackage        Version\r\n-------------- -------\r\nexceptiongroup 1.2.0\r\niniconfig      2.0.0\r\npackaging      23.2\r\npip            23.3.1\r\npluggy         1.3.0\r\npytest         7.4.3\r\nsetuptools     56.0.0\r\ntomli          2.0.1\r\n```",
      "state": "CLOSED",
      "createdAt": "2023-12-14T23:30:41Z",
      "updatedAt": "2024-05-02T07:42:32Z",
      "closedAt": "2024-05-02T07:42:32Z",
      "author": {
        "login": "bbrown1867"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: bug"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 9
      }
    },
    {
      "number": 11705,
      "title": "Cannot use configs in non root directory",
      "body": "<!--\r\nThanks for submitting an issue!\r\n\r\nQuick check-list while reporting bugs:\r\n-->\r\n\r\n- [x] a detailed description of the bug or problem you are having\r\n- [x] output of `pip list` from the virtual environment you are using\r\n- [x] pytest and operating system versions\r\n- [x] minimal example if possible\r\n\r\n\r\nHello there. We want to disable certain directories from running and sometimes specific files. We have conftest.py to disable specific files and a pytest.ini to disable directories from being tested.  We cannot disable the tests themselves because pytest will import the test modules and in certain environments on our team, the imports are not available so the test will fail.  We invoke pytest and pass the -c argument for both files along with the --rootdir argument.  When pytest.ini and conftest.py are in the root directory everything works as expected. When they are in the subdirectory pytest fails to use the config files.\r\n\r\nThis command works\r\n```\r\npytest -c conftest.py -c pytest.ini --rootdir=/home/kthrossell/working/test_pytest\r\n=================================================================== test session starts ====================================================================\r\nplatform linux -- Python 3.10.9, pytest-7.3.1, pluggy-1.0.0\r\nrootdir: /home/kthrossell/working/test_pytest\r\nconfigfile: pytest.ini\r\ncollected 2 items                                                                                                                                          \r\n\r\ntest_devlogs.py .                                                                                                                                    [ 50%]\r\ntest/test_pi.py .                                                                                                                                    [100%]\r\n\r\n==================================================================== 2 passed in 0.01s =====================================================================\r\n\r\n```\r\nThis command does not work\r\n```\r\npytest -c configs/conftest.py -c configs/pytest.ini --rootdir=/home/kthrossell/working/test_pytest\r\n=================================================================== test session starts ====================================================================\r\nplatform linux -- Python 3.10.9, pytest-7.3.1, pluggy-1.0.0\r\nrootdir: /home/kthrossell/working/test_pytest\r\nconfigfile: configs/pytest.ini\r\ncollected 2 items / 1 error                                                                                                                                \r\n\r\n========================================================================== ERRORS ==========================================================================\r\n____________________________________________________________ ERROR collecting test/test_tau.py _____________________________________________________________\r\nImportError while importing test module '/home/kthrossell/working/test_pytest/test/test_tau.py'.\r\nHint: make sure your test modules/packages have valid Python names.\r\nTraceback:\r\n../../miniconda3/lib/python3.10/importlib/__init__.py:126: in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\ntest/test_tau.py:3: in <module>\r\n    import non_existent_package\r\nE   ModuleNotFoundError: No module named 'non_existent_package'\r\n================================================================= short test summary info ==================================================================\r\nERROR test/test_tau.py\r\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n===================================================================== 1 error in 0.04s =====================================================================\r\n```\r\n\r\nHere is a gitrepo that contains the files for this example https://github.com/ktthross/test_pytest\r\n\r\nPip list\r\n---------\r\nPackage                 Version   Editable project location\r\n----------------------- --------- ------------------------------------\r\nawscli                  1.27.125\r\nblinker                 1.6.2\r\nboltons                 23.0.0\r\nboto3                   1.26.107\r\nbotocore                1.29.125\r\nbrotlipy                0.7.0\r\ncertifi                 2022.12.7\r\ncffi                    1.15.1\r\ncharset-normalizer      2.0.4\r\nclick                   8.1.3\r\ncolorama                0.4.4\r\nconda                   23.3.1\r\nconda-content-trust     0.1.3\r\nconda-package-handling  2.0.2\r\nconda_package_streaming 0.7.0\r\ncontourpy               1.0.7\r\ncryptography            39.0.1\r\ncycler                  0.11.0\r\nCython                  0.29.34\r\ndocutils                0.16\r\nexceptiongroup          1.1.1\r\nflake8                  6.0.0\r\nFlask                   2.3.2\r\nFlora                   0.0.0     /home/kthrossell/working/flora\r\nfonttools               4.39.4\r\ngitdb                   4.0.10\r\nGitPython               3.1.31\r\ngrpcio                  1.56.2\r\ngrpcio-tools            1.56.2\r\nidna                    3.4\r\niniconfig               2.0.0\r\nitsdangerous            2.1.2\r\nJinja2                  3.1.2\r\njmespath                1.0.1\r\njsonpatch               1.32\r\njsonpointer             2.1\r\nkiwisolver              1.4.4\r\nMarkupSafe              2.1.3\r\nmatplotlib              3.7.1\r\nmccabe                  0.7.0\r\nnumpy                   1.24.2\r\npackaging               23.0\r\nPillow                  9.5.0\r\npip                     23.3.1\r\npluggy                  1.0.0\r\nproject-euler           1.2.59\r\nprotobuf                4.23.4\r\npyasn1                  0.5.0\r\npycodestyle             2.10.0\r\npycosat                 0.6.4\r\npycparser               2.21\r\npyflakes                3.0.1\r\npyOpenSSL               23.0.0\r\npyparsing               3.0.9\r\nPySocks                 1.7.1\r\npytest                  7.3.1\r\npython-dateutil         2.8.2\r\nPyYAML                  5.4.1\r\nrequests                2.28.1\r\nrsa                     4.7.2\r\nruamel.yaml             0.17.21\r\nruamel.yaml.clib        0.2.6\r\ns3transfer              0.6.0\r\nsatellite               0.3.6     /home/kthrossell/working/satellite\r\nSCons                   4.5.2\r\nsetuptools              65.6.3\r\nsix                     1.16.0\r\nsmmap                   5.0.0\r\ntest-pytest             0.1.0     /home/kthrossell/working/test_pytest\r\ntomli                   2.0.1\r\ntoolz                   0.12.0\r\ntqdm                    4.65.0\r\nurllib3                 1.26.15\r\nWerkzeug                2.3.6\r\nwheel                   0.37.1\r\nzstandard               0.19.0\r\n\r\n\r\npytest verions and OS\r\n----------------------------\r\npytest -V\r\npytest 7.3.1\r\n\r\nThis has also been tested on 7.4.0\r\n\r\nDistributor ID:\tUbuntu\r\nDescription:\tUbuntu 20.04.6 LTS\r\nRelease:\t20.04\r\nCodename:\tfocal\r\n\r\n\r\n\r\n\r\n\r\n",
      "state": "CLOSED",
      "createdAt": "2023-12-14T20:55:09Z",
      "updatedAt": "2024-06-17T13:23:58Z",
      "closedAt": "2024-06-17T13:23:17Z",
      "author": {
        "login": "ktthross"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "status: needs information"
          },
          {
            "name": "stale"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 11701,
      "title": "request.node.get_closest_marker('name') returns None for markers applied in modules",
      "body": "<!--\r\nThanks for submitting an issue!\r\n\r\nQuick check-list while reporting bugs:\r\n-->\r\n\r\n- [x] a detailed description of the bug or problem you are having\r\n- [x] output of `pip list` from the virtual environment you are using\r\n- [x] pytest and operating system versions\r\n- [x] minimal example if possible\r\n\r\n# Description\r\nAs mentioned in the title, I cannot send marker value to fixtures with 'module' scope.\r\nI've found something similar, where the 'class' scope was fixed: https://github.com/pytest-dev/pytest/issues/902\r\n\r\n# Minimal example\r\n```\r\n@pytest.fixture(scope=\"module\")\r\ndef foo(request):\r\n   marker = request.node.get_closest_marker(\"fixt_data\")\r\n   if marker is None:\r\n      data = None\r\n   else:\r\n      data = marker.args[0]\r\n   return data\r\n\r\n@pytest.mark.fixt_data(\"C1\")\r\ndef test_fixt(foo):\r\n    assert fixt == C1\r\n```\r\n\r\n# Pip list\r\nPackage                Version\r\n---------------------- ----------\r\ncertifi                2023.11.17\r\ncharset-normalizer     3.3.2\r\ndocker                 7.0.0\r\nexceptiongroup         1.2.0\r\nidna                   3.6\r\niniconfig              2.0.0\r\nJinja2                 3.1.2\r\njunit2html             30.1.3\r\nMarkupSafe             2.1.3\r\npackaging              23.2\r\npaho-mqtt              1.6.1\r\npip                    22.3.1\r\npluggy                 1.3.0\r\npytest                 7.4.3\r\npytest-docker-fixtures 1.3.18\r\npytest-html            4.1.1\r\npytest-metadata        3.0.0\r\npytest-mqtt            0.3.1\r\nrequests               2.31.0\r\nsetuptools             65.6.3\r\ntomli                  2.0.1\r\nurllib3                2.1.0\r\n\r\n# Versions\r\npytest - 7.4.3\r\nMacOS - Sonoma 14.1.2",
      "state": "CLOSED",
      "createdAt": "2023-12-14T10:05:05Z",
      "updatedAt": "2024-02-17T20:08:17Z",
      "closedAt": "2024-02-17T20:08:17Z",
      "author": {
        "login": "8TRobi8"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "topic: marks"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      }
    },
    {
      "number": 11697,
      "title": "DOC - dead link to the pytest support in tox",
      "body": "<!--\r\nThanks for submitting an issue!\r\n\r\nQuick check-list while reporting bugs:\r\n-->\r\n\r\n- [x] a detailed description of the bug or problem you are having\r\n- [ ] output of `pip list` from the virtual environment you are using\r\n- [ ] pytest and operating system versions\r\n- [x] minimal example if possible\r\n\r\nIn this section:\r\n\r\nhttps://docs.pytest.org/en/7.1.x/explanation/goodpractices.html?highlight=tox#tox\r\n\r\nThe link in \"the virtualenv test automation tool and its [pytest support](https://tox.wiki/en/stable/example/pytest.html).\" gives a 404:\r\n\r\nhttps://tox.wiki/en/stable/example/pytest.html\r\n\r\n--- \r\n\r\nCould not find a decent replacement in the tox doc:\r\n\r\nhttps://tox.wiki/en/4.11.4/search.html?q=pytest&check_keywords=yes&area=default\r\n\r\nThe closest would be maybe this one: https://tox.wiki/en/4.11.4/user_guide.html#basic-example\r\n\r\n--- \r\n\r\nAm happy to fix it if a good replacement target can be found.",
      "state": "CLOSED",
      "createdAt": "2023-12-13T09:39:25Z",
      "updatedAt": "2023-12-14T13:40:01Z",
      "closedAt": "2023-12-14T13:40:00Z",
      "author": {
        "login": "Remi-Gau"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 11695,
      "title": "pytest.exit returncode default is poorly documented",
      "body": "According to <https://docs.pytest.org/en/7.1.x/reference/reference.html#pytest-exit>, the default value of the `returncode` parameter of `pytest.exit` is `False`. However:\r\n\r\n* According to the actual source, the default value is `None`, not `False`: <https://docs.pytest.org/en/7.1.x/_modules/_pytest/outcomes.html#exit>.\r\n\r\n* It's not clear what a `returncode` of `None` actually means. You can't return `None` to the OS (the return code is an integer), so it must correspond to some integer value.\r\n",
      "state": "CLOSED",
      "createdAt": "2023-12-11T18:01:42Z",
      "updatedAt": "2023-12-14T11:14:38Z",
      "closedAt": "2023-12-14T11:14:38Z",
      "author": {
        "login": "SpecLad"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 11694,
      "title": "Stacking contexts causes weird behavior when using a parameterized fixture",
      "body": "<!--\r\nThanks for submitting an issue!\r\n\r\nQuick check-list while reporting bugs:\r\n-->\r\nRunning the following MWE (with `--dist no`)\r\n```python\r\nfrom contextlib import contextmanager\r\n\r\nimport pytest\r\n\r\n\r\n@contextmanager\r\ndef not_raise():\r\n    yield\r\n\r\nvalidation_raise = pytest.raises(ValueError)\r\n\r\n@pytest.fixture(params=[0, 1])\r\ndef fixture_foo(request):\r\n    yield\r\n\r\n@pytest.mark.parametrize(\"expectation\", [not_raise(), validation_raise])\r\ndef test_foo(fixture_foo, expectation):\r\n    with expectation:\r\n        if expectation is validation_raise:\r\n            raise ValueError\r\n```\r\n\r\nproduces the following error:\r\n\r\n```\r\n\u276f poetry run pytest tests/test_isolated.py --dist no\r\n======================================================================================================================= test session starts =======================================================================================================================\r\nplatform linux -- Python 3.11.4, pytest-7.4.3, pluggy-1.3.0\r\nUsing --randomly-seed=1005100857\r\nrootdir: /home/iodim/workspace/project\r\nconfigfile: pyproject.toml\r\nplugins: pycharm-0.7.0, cov-4.1.0, xdist-3.5.0, asyncio-0.21.1, anyio-4.1.0, randomly-3.15.0, httpx-0.27.0, mock-3.12.0\r\nasyncio: mode=Mode.STRICT\r\ncollected 4 items                                                                                                                                                                                                                                                 \r\n\r\ntests/test_isolated.py ...F                                                                                                                                                                                                                                 [100%]\r\n\r\n============================================================================================================================ FAILURES =============================================================================================================================\r\n____________________________________________________________________________________________________________________ test_foo[0-expectation0] _____________________________________________________________________________________________________________________\r\n\r\nexpectation = <contextlib._GeneratorContextManager object at 0x7fc996339710>\r\n\r\n    @pytest.mark.parametrize(\"expectation\", [not_raise(), validation_raise])\r\n    def test_foo(expectation):\r\n>       with expectation:\r\n\r\ntests/test_isolated.py:28: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <contextlib._GeneratorContextManager object at 0x7fc996339710>\r\n\r\n    def __enter__(self):\r\n        # do not keep args and kwds alive unnecessarily\r\n        # they are only needed for recreation, which is not possible anymore\r\n>       del self.args, self.kwds, self.func\r\nE       AttributeError: '_GeneratorContextManager' object has no attribute 'args'\r\n```\r\nNote that this doesn't fail all the time, only some parameterized cases fail and only when `expectation = not_raise()`. If one removes the `params` argument from the fixture, then the test doesn't seem to fail anymore. By the way, I know one is supposed to use `nullcontext` from `contextlib` and I managed to fix this problem from my side, just thought I'd report if this is indeed a bug.",
      "state": "CLOSED",
      "createdAt": "2023-12-11T17:52:21Z",
      "updatedAt": "2023-12-11T18:03:32Z",
      "closedAt": "2023-12-11T18:02:55Z",
      "author": {
        "login": "iodim-f"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      }
    },
    {
      "number": 11686,
      "title": "filterwarnings error::UserWarning causes stack trace that removes the info saying where Always True assertions can be found",
      "body": "# Environment information\r\nPython version: 3.10.x\r\nPytest version: 6.2.4\r\n\r\n# Issue and sample test\r\nI've noticed we have some test cases being created where \"always true\" assertions are being written, and people are ignoring these Python warnings.\r\n\r\n```\r\nclass TestBadAssertions:\r\n    def test_always_true(self):\r\n        assert (False, \"oops\")\r\n```\r\n\r\n\r\n# Warning message shows where to fix the problem\r\n\r\n```\r\n===================================================================================================== warnings summary =====================================================================================================\r\n.../test_foo.py:512\r\n  .../test_foo.py:512: PytestAssertRewriteWarning: assertion is always true, perhaps remove parentheses?\r\n    assert (False, \"oops\")\r\n```\r\n\r\n# Pytest.ini code to convert it to an error\r\nI tried adding this to my pytest.ini file to force these to become Errors (allowing GitHub PRs to have a gate that would require them to be fixed before merging)\r\n\r\n```\r\nfilterwarnings =\r\n    error::UserWarning\r\n```\r\n\r\n# Error message strips the actual code and the line number\r\nThis works to cause a failure, but now I lose the information that the Warning provided, showing me that the bad assertion happened at line 512 (in example above)\r\n\r\n```\r\n___________________________________________________________________________________________ ERROR collecting private/test_foo.py ___________________________________________________________________________________________\r\n/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/importlib/__init__.py:126: in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n<frozen importlib._bootstrap>:1050: in _gcd_import\r\n    ???\r\n<frozen importlib._bootstrap>:1027: in _find_and_load\r\n    ???\r\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\r\n    ???\r\n<frozen importlib._bootstrap>:688: in _load_unlocked\r\n    ???\r\nvenv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:161: in exec_module\r\n    source_stat, co = _rewrite_test(fn, self.config)\r\nvenv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:355: in _rewrite_test\r\n    rewrite_asserts(tree, source, fn_, config)\r\nvenv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:418: in rewrite_asserts\r\n    AssertionRewriter(module_path, config, source).run(mod)\r\nvenv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:741: in run\r\n    new.extend(self.visit(child))\r\n/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/ast.py:410: in visit\r\n    return visitor(node)\r\nvenv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:852: in visit_Assert\r\n    warnings.warn_explicit(\r\nE   pytest.PytestAssertRewriteWarning: assertion is always true, perhaps remove parentheses?\r\n================================================================================================= short test summary info ==================================================================================================\r\nERROR .../test_foo.py - pytest.PytestAssertRewriteWarning: assertion is always true, perhaps remove parentheses?\r\n```\r\n\r\n# Impact\r\nThis makes it so that I can force a failure, but doesn't give the user any information about where to fix it, other than somewhere inside `the `test_foo.py` file",
      "state": "CLOSED",
      "createdAt": "2023-12-07T14:30:07Z",
      "updatedAt": "2023-12-14T11:21:47Z",
      "closedAt": "2023-12-14T11:21:47Z",
      "author": {
        "login": "bdfariello"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 11680,
      "title": "[packaging] Allow versioning arbitrary Git commits",
      "body": "I noticed that the project doesn't implement the feature of `setuptools-scm` to deduce versions out of Git archives. It used to be a third party plugin and now its a part of the library.\r\n\r\nTo enable this, it's necessary to add `.git_archival.txt` and make a change to `.gitattributes` per the project docs.",
      "state": "OPEN",
      "createdAt": "2023-12-07T00:34:53Z",
      "updatedAt": "2025-02-28T18:57:11Z",
      "closedAt": null,
      "author": {
        "login": "webknjaz"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: infrastructure"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 9
      }
    },
    {
      "number": 11676,
      "title": "Mark base node classes as ABCs",
      "body": "The Node class hierarchy has some classes which are only meant to be used as base classes, never instantiated directly. These are `Node`, `Collector`, `Item`, `File`, `FSCollector`, `PyCollector`.\r\n\r\nI propose we mark them as abstract i.e. inherit from `abc.ABC`. Reasons:\r\n\r\n- Trying to instantiate fails quickly at runtime\r\n- Type checkers issue an error if trying to instantiate\r\n- The docs will show `abstractmethod` on the abstract methods that need to be implemented (`collect` or `runtest`), and show inheritance from `ABC` making it clear it's a base class\r\n\r\nIt seems somewhat hard to deprecate, and it will only cause errors when the code is already very wrong. So I propose to do it in pytest 8.0 without deprecation.",
      "state": "CLOSED",
      "createdAt": "2023-12-06T17:05:54Z",
      "updatedAt": "2023-12-10T07:41:48Z",
      "closedAt": "2023-12-10T07:41:48Z",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": [
          {
            "login": "bluetech"
          }
        ]
      },
      "labels": {
        "nodes": [
          {
            "name": "type: proposal"
          },
          {
            "name": "topic: collection"
          },
          {
            "name": "type: backward compatibility"
          },
          {
            "name": "topic: typing"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      }
    },
    {
      "number": 11674,
      "title": "Error collecting test session",
      "body": "```\r\n==================================== ERRORS ====================================\r\n________________________ ERROR collecting test session _________________________\r\nsuite3_env/lib/python3.10/site-packages/_pytest/runner.py:341: in from_call\r\n    result: Optional[TResult] = func()\r\nsuite3_env/lib/python3.10/site-packages/_pytest/runner.py:372: in <lambda>\r\n    call = CallInfo.from_call(lambda: list(collector.collect()), \"collect\")\r\nsuite3_env/lib/python3.10/site-packages/_pytest/main.py:743: in collect\r\n    for x in self._collectfile(path):\r\nsuite3_env/lib/python3.10/site-packages/_pytest/main.py:577: in _collectfile\r\n    assert (\r\nE   AssertionError: PosixPath('/<path>/<to>/<file>/<filename>.png') is not a file (isdir=False, exists=False, islink=False)\r\n- generated xml file: <filepath_removed_from_error_printout>\r\n- generated html file: <filepath_removed_from_error_printout>\r\n=========================== short test summary info ============================\r\nERROR  - AssertionError: PosixPath('/<path>/<to>/<file>/<filename>.png') is not a file (isdir=False, exists=False, islink=False)\r\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\r\n=============================== 1 error in 3.88s ===============================\r\n```\r\n\r\n****\r\nBug description\r\n\r\nOccasionally, I am getting the above error which leads to no tests collected. I am running a group of test suites on a Jenkins server. The specific file that is not being recognized as a file is a screenshot. I have observed the issue 4 times in the past month. Each time I have seen the error it has been due one of these screenshots. The other test suites collect tests and execute without issue.\r\n\r\n\r\n****\r\nRequirements.txt\r\n\r\npipenv==2022.7.4\r\nasync-generator==1.10\r\ncertifi==2023.5.7\r\ncffi==1.15.1\r\ncryptography==41.0.1\r\net-xmlfile==1.1.0\r\nexceptiongroup==1.1.1\r\nh11==0.14.0\r\nidna==3.4\r\nJinja2==3.0.0\r\nMarkupSafe==2.1.3\r\nopenpyxl==3.1.2\r\noutcome==1.2.0\r\nPillow==9.5.0\r\npycparser==2.21\r\npydantic==1.10.9\r\npyOpenSSL==23.2.0\r\npyperclip==1.8.2\r\nPySocks==1.7.1\r\npytest==7.4.0\r\npytest-html==3.2.0\r\nPyYAML==6.0\r\nrequests==2.31.0\r\nselenium==4.3.0\r\nsniffio==1.3.0\r\nsortedcontainers==2.4.0\r\ntrio==0.22.0\r\ntrio-websocket==0.10.3\r\ntyping_extensions==4.6.3\r\nunishark==0.3.2\r\nurllib3==1.26.16\r\nurllib3-secure-extra==0.1.0\r\nwsproto==1.2.0\r\n\r\n\r\n****\r\nPytest and OS versions\r\n\r\npytest==7.4.0\r\nOS == Amazon Linux 2\r\n\r\n",
      "state": "CLOSED",
      "createdAt": "2023-12-06T15:50:12Z",
      "updatedAt": "2024-06-17T13:25:23Z",
      "closedAt": "2024-06-17T13:25:23Z",
      "author": {
        "login": "jkos1984"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "status: needs information"
          },
          {
            "name": "stale"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 11673,
      "title": "(ignore this)",
      "body": "edit: this seems specific to xml, I'm still getting weird results in my real code that's more careful to clear sys.modules than my overly minimised repro, but I think I need to do more debugging",
      "state": "CLOSED",
      "createdAt": "2023-12-06T02:38:52Z",
      "updatedAt": "2023-12-06T02:49:26Z",
      "closedAt": "2023-12-06T02:49:09Z",
      "author": {
        "login": "hauntsaninja"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      }
    },
    {
      "number": 11667,
      "title": "Remove `setup.py`",
      "body": "pytest's `setup.py` file is there for legacy purposes and is no longer necessary, see: https://blog.ganssle.io/articles/2021/10/setup-py-deprecated.html. I believe the only reason to keep it keep direct `setup.py install` invocations and such working. I don't know if there are still places out there who do this, but pytest 8.0 seems like a good time to stop supporting it. So I propose doing that.",
      "state": "CLOSED",
      "createdAt": "2023-12-04T20:37:32Z",
      "updatedAt": "2023-12-05T15:29:45Z",
      "closedAt": "2023-12-05T15:29:45Z",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": [
          {
            "login": "bluetech"
          }
        ]
      },
      "labels": {
        "nodes": [
          {
            "name": "type: backward compatibility"
          },
          {
            "name": "type: removal"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 11666,
      "title": "Use richer colors pygments terminal formatter?",
      "body": "pytest currently uses pygments' `TerminalFormatter`. While reviewing a PR I've noticed that pygments also has `Terminal256Formatter` and `TerminalTrueColorFormatter` which presumably have richer colors than `TerminalFormatter`. Maybe if we use them we'll get better syntax highlighting.\r\n\r\npygments cmdline tool seems to use the following logic for selecting a formatter:\r\n\r\n```py\r\n            if os.environ.get('COLORTERM','') in ('truecolor', '24bit'):\r\n                fmter = TerminalTrueColorFormatter(**parsed_opts)\r\n            elif '256' in os.environ.get('TERM', ''):\r\n                fmter = Terminal256Formatter(**parsed_opts)\r\n            else:\r\n                fmter = TerminalFormatter(**parsed_opts)\r\n```\r\n\r\nhttps://github.com/pygments/pygments/blob/861fb9131b13241d7ea700fba8f6a38cf6f97285/pygments/cmdline.py#L448-L453C57",
      "state": "OPEN",
      "createdAt": "2023-12-04T11:34:36Z",
      "updatedAt": "2023-12-04T20:31:22Z",
      "closedAt": null,
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "topic: reporting"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 11662,
      "title": "Prevent INTERNALERROR in pytest_collectstart when accessing module with pytest.skip",
      "body": "#### What's the problem this feature will solve?\r\nAccessing `pytest.Module.obj` triggers a module import. If this happens during `pytest_collectstart` and the module that is about to be collected contains a `pytest.skip` statement, the result will be an INTERNALERROR. This is either caused by the `Skipped` exception or by `Collector.CollectError` if the `allow_module_level` keyword is missing in the `pytest.skip` call.\r\n\r\nThere's no good way to deal with this in the hook, because test outcomes, such as the _Skipped_ exception are not part of the public API.\r\n\r\n#### Describe the solution you'd like\r\nI would like that no INTERNALERROR is triggered when accessing `Module.obj` in `pytest_collectstart`\r\n\r\nReal world use case: Dynamically attaching a fixture to a module, similar to what's done in `Module._inject_setup_module_fixture`:\r\n\r\nhttps://github.com/pytest-dev/pytest/blob/23906106968eb95afbd61adfbc7bbb795fc9aaa9/src/_pytest/python.py#L564-L577\r\n\r\n#### Alternative Solutions\r\nA workaround is to surround the access to `Module.obj` with a try-except. This forces the import of a non public symbol:\r\n```python\r\nfrom pytest import Collector\r\nfrom _pytest.outcomes import OutcomeException\r\n\r\ndef pytest_collectstart(collector):\r\n    try:\r\n        collector.obj\r\n    except (OutcomeException, Collector.CollectError):\r\n        pass\r\n```\r\n\r\nhttps://github.com/pytest-dev/pytest-asyncio/blob/a214c3e77149608d427ccab69140edb509c67697/pytest_asyncio/plugin.py#L592-L619\r\n",
      "state": "OPEN",
      "createdAt": "2023-12-03T19:55:10Z",
      "updatedAt": "2024-02-17T20:05:18Z",
      "closedAt": null,
      "author": {
        "login": "seifertm"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: enhancement"
          },
          {
            "name": "topic: collection"
          },
          {
            "name": "topic: fixtures"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 6
      }
    },
    {
      "number": 11657,
      "title": "pytest closes io.BytesIO objects innappropiately (using pandas to_parquet)",
      "body": "<!--\r\nThanks for submitting an issue!\r\n\r\nQuick check-list while reporting bugs:\r\n-->\r\n\r\n- [x] a detailed description of the bug or problem you are having\r\n- [x] output of `pip list` from the virtual environment you are using\r\n- [x] pytest and operating system versions\r\n- [x] minimal example if possible\r\n\r\n## Description\r\nIf I write a pandas dataframe to a BytesIO object that object should remain readable. Indeed OUTSIDE of a pytest session it does. However inside of a pytest session it gets closed. \r\n\r\n## MRE\r\n```python\r\nimport pytest\r\nimport pandas as pd\r\nfrom io import BytesIO\r\n\r\n\r\ndef test_bytes_io_bug():\r\n    df = pd._testing.makeDataFrame()\r\n    _buffer = BytesIO()\r\n    df.to_parquet(_buffer)\r\n    assert _buffer.readable(), \"PYTEST python 3.11 bug, erroneously closes buffers while in pytest\"\r\n    print(\"no failure\")\r\n```\r\n## generated error\r\n```console\r\n xxx@yyy:~/$ pytest \"test_bytesIO_bug.py\"\r\n================================================================================================================================================ test session starts =================================================================================================================================================\r\nplatform linux -- Python 3.11.6, pytest-7.4.3, pluggy-1.3.0\r\nrootdir: ./\r\nplugins: rerunfailures-13.0, cov-4.1.0\r\ncollected 1 item                                                                                                                                                                                                                                                                                                     \r\n\r\n../../../../test_bytesIO_bug.py F                                                                                                                                                                                                              [100%]\r\n\r\n====================================================================================================================================================== FAILURES ======================================================================================================================================================\r\n_________________________________________________________________________________________________________________________________________________ test_bytes_io_bug __________________________________________________________________________________________________________________________________________________\r\n\r\n    def test_bytes_io_bug():\r\n        \"\"\"\r\n        pip show pandas\r\n        Name: pandas\r\n        Version: 2.1.3\r\n    \r\n        pip show pytest\r\n        Name: pytest\r\n        Version: 7.4.3\r\n    \r\n        python --version\r\n        Python 3.11.6\r\n        \"\"\"\r\n        df = pd._testing.makeDataFrame()\r\n        _buffer = BytesIO()\r\n        df.to_parquet(_buffer)\r\n>       assert _buffer.readable(), \"PYTEST python 3.11 bug, erroneously closes buffers while in pytest\"\r\nE       ValueError: I/O operation on closed file.\r\n\r\ntest_bytesIO_bug.py:22: ValueError\r\n============================================================================================================================================== short test summary info ===============================================================================================================================================\r\nFAILED ../../../../test_bytesIO_bug.py::test_bytes_io_bug - ValueError: I/O operation on closed file.\r\n================================================================================================================================================= 1 failed in 0.83s ==================================================================================================================================================\r\n```\r\n## System info\r\n### relevant versions\r\n```\r\npip show pandas\r\nName: pandas\r\nVersion: 2.1.3\r\n\r\npip show pytest\r\nName: pytest\r\nVersion: 7.4.3\r\n\r\npython --version\r\nPython 3.11.6\r\n\r\ncat /etc/os-release\r\nNAME=\"Ubuntu\" \r\nVERSION=\"20.04.5 LTS (Focal Fossa)\"\r\n\r\nNOTE: this is WSL2, but error also occurs on latest MAC OS\r\n```\r\n### Full pip list\r\n```console\r\nPackage                  Version\r\n------------------------ ------------\r\nasttokens                2.4.1\r\nboto3                    1.33.5\r\nbotocore                 1.33.5\r\ncertifi                  2023.11.17\r\ncffi                     1.16.0\r\ncharset-normalizer       3.3.2\r\nclarabel                 0.6.0\r\ncoverage                 7.3.2\r\ncramjam                  2.7.0\r\ncryptography             41.0.7\r\ndecorator                5.1.1\r\necos                     2.0.12\r\nexecuting                2.0.1\r\nfastparquet              2023.10.1\r\nfsspec                   2023.10.0\r\nidna                     3.6\r\niniconfig                2.0.0\r\nipython                  8.18.1\r\njedi                     0.19.1\r\nJinja2                   3.1.2\r\njmespath                 1.0.1\r\njoblib                   1.3.2\r\nMarkupSafe               2.1.3\r\nmatplotlib-inline        0.1.6\r\nmoto                     4.2.10\r\nnumpy                    1.26.2\r\nosqp                     0.6.3\r\npackaging                23.2\r\npandas                   2.1.3\r\nparso                    0.8.3\r\npeppercorn               0.6\r\npexpect                  4.9.0\r\npip                      23.2.1\r\npluggy                   1.3.0\r\nprompt-toolkit           3.0.41\r\nptyprocess               0.7.0\r\npure-eval                0.2.2\r\npyarrow                  14.0.1\r\npybind11                 2.11.1\r\npycparser                2.21\r\npycryptodome             3.19.0\r\nPygments                 2.17.2\r\npyparsing                3.1.1\r\npytest                   7.4.3\r\npytest-cov               4.1.0\r\npytest-rerunfailures     13.0\r\npython-dateutil          2.8.2\r\npytz                     2023.3.post1\r\nPyYAML                   6.0.1\r\nqdldl                    0.1.7.post0\r\nrequests                 2.31.0\r\nresponses                0.24.1\r\ns3fs                     0.4.2\r\ns3transfer               0.8.2\r\nscikit-learn             1.3.2\r\nscipy                    1.11.4\r\nscs                      3.2.4.post1\r\nsetuptools               65.5.0\r\nsix                      1.16.0\r\nstack-data               0.6.3\r\nthreadpoolctl            3.2.0\r\ntraitlets                5.14.0\r\ntzdata                   2023.3\r\nurllib3                  2.0.7\r\nwcwidth                  0.2.12\r\nWerkzeug                 3.0.1\r\nxmltodict                0.13.0\r\n```\r\n",
      "state": "CLOSED",
      "createdAt": "2023-12-01T17:25:25Z",
      "updatedAt": "2024-06-17T13:27:22Z",
      "closedAt": "2024-06-17T13:27:21Z",
      "author": {
        "login": "EHYPI"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "status: needs information"
          },
          {
            "name": "stale"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 5
      }
    },
    {
      "number": 11651,
      "title": "avoid tests collection before a test execution",
      "body": "Tests collection in pytest is time consuming if there are more tests like 50k and more.\r\nSo if we want run a single tests it 99% time is consumed in collection and remaining 1% in execution. Can we avoid test collection during execution or can we provide a list of tests to be executed so that it knows about tests and then we need to collect all tests at once.",
      "state": "CLOSED",
      "createdAt": "2023-11-30T05:43:35Z",
      "updatedAt": "2024-06-17T13:28:01Z",
      "closedAt": "2024-06-17T13:28:01Z",
      "author": {
        "login": "rahul0209"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "status: needs information"
          },
          {
            "name": "stale"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 5
      }
    },
    {
      "number": 11647,
      "title": "pytest flaky segfaults after running tests, with macOS and Python 3.12",
      "body": "<!--\r\nThanks for submitting an issue!\r\n\r\nQuick check-list while reporting bugs:\r\n-->\r\n\r\n- [x] a detailed description of the bug or problem you are having\r\n\r\npytest flaky segfauls after running tests on my library when run with python 3.12 on macOS.\r\nThe exit code is -11 and faulthandler does not report anything at all:\r\n\r\n```\r\n   + /bin/sh -c 'pytest -s /Users/runner/work/f3d-superbuild/f3d-superbuild/f3d/python/testing'\r\n  ============================= test session starts ==============================\r\n  platform darwin -- Python 3.12.0, pytest-7.4.3, pluggy-1.3.0\r\n  rootdir: /Users/runner/work/f3d-superbuild/f3d-superbuild/f3d\r\n  configfile: pyproject.toml\r\n  collected 36 items\r\n  \r\n  ../../../../../../../../../Users/runner/work/f3d-superbuild/f3d-superbuild/f3d/python/testing/test_camera.py ....x..\r\n  ../../../../../../../../../Users/runner/work/f3d-superbuild/f3d-superbuild/f3d/python/testing/test_deprecated.py ......\r\n  ../../../../../../../../../Users/runner/work/f3d-superbuild/f3d-superbuild/f3d/python/testing/test_image.py .....\r\n  ../../../../../../../../../Users/runner/work/f3d-superbuild/f3d-superbuild/f3d/python/testing/test_image_compare.py .\r\n  ../../../../../../../../../Users/runner/work/f3d-superbuild/f3d-superbuild/f3d/python/testing/test_loader.py .\r\n  ../../../../../../../../../Users/runner/work/f3d-superbuild/f3d-superbuild/f3d/python/testing/test_options.py ....Option hello does not exist\r\n  x....Option render.background.hdri is deprecated\r\n  Option render.background.hdri is deprecated\r\n  Option render.background.hdri is deprecated\r\n  Option render.background.hdri is deprecated\r\n  Option render.background.hdri is deprecated\r\n  Option render.background.hdri is deprecated\r\n  Option render.background.hdri is deprecated\r\n  Option render.background.hdri is deprecated\r\n  .....\r\n  ../../../../../../../../../Users/runner/work/f3d-superbuild/f3d-superbuild/f3d/python/testing/test_plugins.py .\r\n  ../../../../../../../../../Users/runner/work/f3d-superbuild/f3d-superbuild/f3d/python/testing/test_utils.py .\r\n  \r\n  ==================================== PASSES ====================================\r\n  =========================== short test summary info ============================\r\n  PASSED ../../../../../../../../../Users/runner/work/f3d-superbuild/f3d-superbuild/f3d/python/testing/test_camera.py::test_properties\r\n  PASSED ../../../../../../../../../Users/runner/work/f3d-superbuild/f3d-superbuild/f3d/python/testing/test_camera.py::test_get_state\r\n  PASSED ../../../../../../../../../Users/runner/work/f3d-superbuild/f3d-superbuild/f3d/python/testing/test_camera.py::test_set_state\r\n  PASSED ../../../../../../../../../Users/runner/work/f3d-superbuild/f3d-superbuild/f3d/python/testing/test_camera.py::test_default_state\r\n  PASSED ../../../../../../../../../Users/runner/work/f3d-superbuild/f3d-superbuild/f3d/python/testing/test_camera.py::test_moves\r\n  PASSED ../../../../../../../../../Users/runner/work/f3d-superbuild/f3d-superbuild/f3d/python/testing/test_camera.py::test_resets\r\n  PASSED ../../../../../../../../../Users/runner/work/f3d-superbuild/f3d-superbuild/f3d/python/testing/test_deprecated.py::test_legacy_Camera\r\n  PASSED ../../../../../../../../../Users/runner/work/f3d-superbuild/f3d-superbuild/f3d/python/testing/test_deprecated.py::test_legacy_CompareWithFile\r\n  PASSED ../../../../../../../../../Users/runner/work/f3d-superbuild/f3d-superbuild/f3d/python/testing/test_deprecated.py::test_legacy_ImageData\r\n  PASSED ../../../../../../../../../Users/runner/work/f3d-superbuild/f3d-superbuild/f3d/python/testing/test_deprecated.py::test_legacy_Options\r\n  PASSED ../../../../../../../../../Users/runner/work/f3d-superbuild/f3d-superbuild/f3d/python/testing/test_deprecated.py::test_legacy_Plugins\r\n  PASSED ../../../../../../../../../Users/runner/work/f3d-superbuild/f3d-superbuild/f3d/python/testing/test_deprecated.py::test_legacy_Utils\r\n  PASSED ../../../../../../../../../Users/runner/work/f3d-superbuild/f3d-superbuild/f3d/python/testing/test_image.py::test_render_rgb\r\n  PASSED ../../../../../../../../../Users/runner/work/f3d-superbuild/f3d-superbuild/f3d/python/testing/test_image.py::test_render_rgba\r\n  PASSED ../../../../../../../../../Users/runner/work/f3d-superbuild/f3d-superbuild/f3d/python/testing/test_image.py::test_set_data\r\n  PASSED ../../../../../../../../../Users/runner/work/f3d-superbuild/f3d-superbuild/f3d/python/testing/test_image.py::test_set_wrong_data\r\n  PASSED ../../../../../../../../../Users/runner/work/f3d-superbuild/f3d-superbuild/f3d/python/testing/test_image.py::test_save\r\n  PASSED ../../../../../../../../../Users/runner/work/f3d-superbuild/f3d-superbuild/f3d/python/testing/test_image_compare.py::test_compare_with_file\r\n  PASSED ../../../../../../../../../Users/runner/work/f3d-superbuild/f3d-superbuild/f3d/python/testing/test_loader.py::test_load_memory\r\n  PASSED ../../../../../../../../../Users/runner/work/f3d-superbuild/f3d-superbuild/f3d/python/testing/test_options.py::test_closest_option\r\n  PASSED ../../../../../../../../../Users/runner/work/f3d-superbuild/f3d-superbuild/f3d/python/testing/test_options.py::test_setitem\r\n  PASSED ../../../../../../../../../Users/runner/work/f3d-superbuild/f3d-superbuild/f3d/python/testing/test_options.py::test_getitem\r\n  PASSED ../../../../../../../../../Users/runner/work/f3d-superbuild/f3d-superbuild/f3d/python/testing/test_options.py::test_get_non_existent_key\r\n  PASSED ../../../../../../../../../Users/runner/work/f3d-superbuild/f3d-superbuild/f3d/python/testing/test_options.py::test_len\r\n  PASSED ../../../../../../../../../Users/runner/work/f3d-superbuild/f3d-superbuild/f3d/python/testing/test_options.py::test_iter\r\n  PASSED ../../../../../../../../../Users/runner/work/f3d-superbuild/f3d-superbuild/f3d/python/testing/test_options.py::test_contains\r\n  PASSED ../../../../../../../../../Users/runner/work/f3d-superbuild/f3d-superbuild/f3d/python/testing/test_options.py::test_set_options\r\n  PASSED ../../../../../../../../../Users/runner/work/f3d-superbuild/f3d-superbuild/f3d/python/testing/test_options.py::test_to_dict\r\n  PASSED ../../../../../../../../../Users/runner/work/f3d-superbuild/f3d-superbuild/f3d/python/testing/test_options.py::test_update_from_dict\r\n  PASSED ../../../../../../../../../Users/runner/work/f3d-superbuild/f3d-superbuild/f3d/python/testing/test_options.py::test_update_from_kv_pairs\r\n  PASSED ../../../../../../../../../Users/runner/work/f3d-superbuild/f3d-superbuild/f3d/python/testing/test_options.py::test_is_same\r\n  PASSED ../../../../../../../../../Users/runner/work/f3d-superbuild/f3d-superbuild/f3d/python/testing/test_options.py::test_is_copy\r\n  PASSED ../../../../../../../../../Users/runner/work/f3d-superbuild/f3d-superbuild/f3d/python/testing/test_plugins.py::test_plugins_list\r\n  PASSED ../../../../../../../../../Users/runner/work/f3d-superbuild/f3d-superbuild/f3d/python/testing/test_utils.py::test_text_distance\r\n  XFAIL ../../../../../../../../../Users/runner/work/f3d-superbuild/f3d-superbuild/f3d/python/testing/test_camera.py::test_state_compare - CameraState equality not implemented\r\n  XFAIL ../../../../../../../../../Users/runner/work/f3d-superbuild/f3d-superbuild/f3d/python/testing/test_options.py::test_set_non_existent_key - f3d::options::set does not throw, should it?\r\n  ======================== 34 passed, 2 xfailed in 2.34s =========================\r\n                                                              \u2715 8.32s\r\nError: Command ['/bin/sh', '-c', 'pytest -s /Users/runner/work/f3d-superbuild/f3d-superbuild/f3d/python/testing'] failed with code -11. None\r\n\r\nError: Process completed with exit code 1.\r\n```\r\n\r\nhttps://github.com/f3d-app/f3d-superbuild/actions/runs/6958747584/job/18973662675\r\n\r\nIt is not specific to my library as this bug is visible in other projects:\r\n\r\nhttps://github.com/daquexian/onnx-simplifier/actions/runs/3852139468\r\n\r\nI have not yet been able to reproduce locally, I only see this in CI. I have no access to a macOS machine sadly.\r\n\r\n- [x] output of `pip list` from the virtual environment you are using\r\n\r\nReproduce in cibuildwheel with pytest installed by cibuildwheel.\r\n\r\n- [x] pytest and operating system versions\r\n\r\npytest-7.4.3\r\nmacOS 12\r\n\r\n- [x] minimal example if possible\r\n\r\nNot reproduced locally yet.\r\n\r\nI know this is not really fixable with the information I'm providing. At least it is somewhere people searching for such an issue will find and report in so more information can be gathered.\r\n\r\nFeel free to close if not adequate.\r\n",
      "state": "CLOSED",
      "createdAt": "2023-11-28T07:47:04Z",
      "updatedAt": "2024-06-17T13:29:12Z",
      "closedAt": "2024-06-17T13:29:12Z",
      "author": {
        "login": "mwestphal"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "status: needs information"
          },
          {
            "name": "stale"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 10
      }
    },
    {
      "number": 11643,
      "title": "Initialization and cleanup at the directory level has a sequencing problem",
      "body": "<!--\r\nThanks for submitting an issue!\r\n\r\nQuick check-list while reporting bugs:\r\n-->\r\n\r\n- When I set up initialization functions in both the parent and child directories simultaneously, the cleanup function of the parent directory runs before the cleanup function of the child directory. Moreover, when there are multiple subdirectories under the parent directory, some with cleanup functions and some without, the initialization function of the parent directory will only run when starting a subdirectory without a cleanup function\r\n\r\n-  pytest                 7.4.2\r\n    pytest-html            4.1.1\r\n    pytest-metadata        3.0.0\r\n\r\n- platform win32 -- Python 3.11.0, pytest-7.4.2, pluggy-1.3.0\r\n\r\n- This is my directory structure\r\ncases\r\n|___child1\r\n| &nbsp;&nbsp;&nbsp;&nbsp;|____conftest.pRy\r\n| &nbsp;&nbsp;&nbsp;&nbsp;|____test_login.py\r\n|\r\n|____child2\r\n| &nbsp;&nbsp;&nbsp;&nbsp;| ____ test_passwd.py\r\n|____ conftest.py\r\n- when I execute 'pytest cases -s',there is below\r\n```bash\r\n================================================= test session starts =================================================\r\nplatform win32 -- Python 3.11.0, pytest-7.4.2, pluggy-1.3.0\r\nrootdir: E:\\\u6d4b\u8bd5\u5f00\u53d1\\AutoTest\r\nplugins: html-4.1.1, metadata-3.0.0\r\ncollected 8 items\r\n\r\ncases\\Login\\test_ErrorLogin.py\r\n#### Initial-Directory_cases\r\ntest_C001\r\n.test_C002\r\n.test_C003\r\nF\r\ncases\\UserManage\\test_UserManage.py\r\n#### Initial-Directory_UserManage\r\n\r\n *** Initial-module***\r\n\r\n ===Initial - class ===\r\n\r\n === Initial - method000 ===\r\n\\eg:C001001\r\n.\r\n === clear - method000 ===\r\n\r\n === Initial - method000 ===\r\n\r\neg:C001002\r\n.\r\n === clear - method000 ===\r\n\r\n === Initial - method000 ===\r\n\r\neg:C001003\r\nF\r\n === clear - method000 ===\r\n\r\n === clear - class ===\r\n\r\neg:C001021\r\n.\r\neg:C001022\r\n.\r\n ***   clear-module ***\r\n\r\n#### Clear-Directory_UserManage\r\n\r\n#### Clear-Directory_cases\r\n\r\n\r\n====================================================== FAILURES =======================================================\r\n_________________________________________________ Test_\u9519\u8bef\u5bc6\u7801.test_C003 _________________________________________________\r\n\r\nself = <test_ErrorLogin.Test_\u9519\u8bef\u5bc6\u7801 object at 0x000001FBE510A0D0>\r\n\r\n    def test_C003(self):\r\n        print(\"test_C003\")\r\n>       assert 3 == 1\r\nE    assert 3 == 1\r\n\r\ncases\\Login\\test_ErrorLogin.py:13: AssertionError\r\n_______________________________________________ Test_\u9519\u8bef\u5bc6\u7801.test_C001003 ________________________________________________\r\n\r\nself = <test_UserManage.Test_\u9519\u8bef\u5bc6\u7801 object at 0x000001FBE510BF50>\r\n\r\n    def test_C001003(self):\r\n        print('\\neg:C001003')\r\n>       assert 3 == 2\r\nE    assert 3 == 2\r\n\r\ncases\\UserManage\\test_UserManage.py:34: AssertionError\r\n=============================================== short test summary info ===============================================\r\nFAILED cases/Login/test_ErrorLogin.py::Test_\u9519\u8bef\u5bc6\u7801::test_C003 - assert 3 == 1\r\nFAILED cases/UserManage/test_UserManage.py::Test_\u9519\u8bef\u5bc6\u7801::test_C001003 - assert 3 == 2\r\n============================================= 2 failed, 6 passed in 0.11s =============================================\r\n",
      "state": "CLOSED",
      "createdAt": "2023-11-27T05:17:21Z",
      "updatedAt": "2023-11-27T19:17:37Z",
      "closedAt": "2023-11-27T19:17:36Z",
      "author": {
        "login": "3fdh-h"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "status: needs information"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      }
    },
    {
      "number": 11639,
      "title": "Output verbosity for test cases",
      "body": "This is a follow on to fine-grained output verbosity for assertions (#11387/#11473). The next \"category\" that seems to stand out based on the [current behavior](https://github.com/pytest-dev/pytest/issues/11387#issuecomment-1729291056) is how `pytest` displays test cases are it executes them. By this I mean the distinction between:\r\n\r\n\r\n`--quiet`\r\n```\r\n................................................................................. [  2%]\r\n................................................................................. [  4%]\r\n<truncated>\r\n```\r\nvs\r\n\r\ndefault\r\n```\r\ntesting/acceptance_test.py .....                                                  [  0%]\r\ntesting/deprecated_test.py ..........                                             [  0%]\r\ntesting/test_argcomplete.py ..                                                    [  0%]\r\n<truncated>\r\n```\r\n\r\nvs\r\n\r\n`--verbose`\r\n```\r\ntesting/acceptance_test.py::TestGeneralUsage::test_docstring_on_hookspec PASSED [  0%]\r\ntesting/acceptance_test.py::TestInvocationVariants::test_invoke_with_invalid_type PASSED [  0%]\r\ntesting/acceptance_test.py::TestInvocationVariants::test_invoke_plugin_api PASSED [  0%]\r\ntesting/acceptance_test.py::TestInvocationVariants::test_core_backward_compatibility PASSED [  0%]\r\n<truncated>\r\n```\r\n\r\nAdditionally, I think this would also extend to the output of `--collect-only` (doesn't show all of the states):\r\n\r\n`--quiet --quiet`\r\n```\r\ntesting/_py/test_local.py: 183\r\ntesting/acceptance_test.py: 84\r\ntesting/code/test_code.py: 17\r\n<truncated>\r\n```\r\nvs\r\n\r\ndefault\r\n```\r\ntesting/acceptance_test.py::TestGeneralUsage::test_docstring_on_hookspec\r\ntesting/acceptance_test.py::TestInvocationVariants::test_invoke_with_invalid_type\r\ntesting/acceptance_test.py::TestInvocationVariants::test_invoke_plugin_api\r\ntesting/acceptance_test.py::TestInvocationVariants::test_core_backward_compatibility\r\n<truncated>\r\n```\r\n---\r\nThere doesn't seem to be an existing name for this, so I plan to start the work using `test_case`. If someone comes up with a better name, I'd be happy to use that. I don't think there would be anything else that would fit into this \"category\". But feel free to bring things to my attention if I missed something.\r\n",
      "state": "CLOSED",
      "createdAt": "2023-11-25T17:29:58Z",
      "updatedAt": "2024-02-24T19:27:56Z",
      "closedAt": "2024-02-24T19:27:55Z",
      "author": {
        "login": "plannigan"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: proposal"
          },
          {
            "name": "topic: reporting"
          },
          {
            "name": "topic: config"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      }
    },
    {
      "number": 11637,
      "title": "Python warnings are not directly associated to the tests emitting them",
      "body": "A message about a warning is emitted at the end of the pytest command in the terminal:\r\n\r\n```\r\n============================================================================= warnings summary ==============================================================================\r\n.venv3.10/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:186\r\n  <my_project_path>/.venv3.10/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:186: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\r\n    exec(co, module.__dict__)\r\n```\r\n\r\nWhich may look by its contents like it is occurring inside pytest code. \r\n\r\nOr at least, it's not clear that it is only being reported by pytest but arising in one of the tests themselves. \r\n\r\nNot specific to this issue, pytest does not associate [python warnings](https://docs.python.org/3/library/warnings.html) which it captures during test running, to the tests where they had been emitted. Hence I'm uncertain about the above, but the warning text doesn't quite point at anything. \r\n\r\nUbuntu 20.04\r\npython 3.10.13\r\npytest 7.4.3\r\n\r\n\r\n\r\n",
      "state": "CLOSED",
      "createdAt": "2023-11-24T22:40:53Z",
      "updatedAt": "2024-01-11T17:31:44Z",
      "closedAt": "2023-12-02T23:26:00Z",
      "author": {
        "login": "matanox"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "status: needs information"
          },
          {
            "name": "plugin: warnings"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 5
      }
    },
    {
      "number": 11636,
      "title": "Collected tests' `nodeid`s change depending on parser's option values",
      "body": "Hi!\r\n\r\nI recently started working with more advanced `conftest.py` features and I stumbled upon something that looks like an incorrect behavior to me:\r\n\r\n\u2757 Here I share a minimal example to reproduce my issue: https://github.com/mtsokol/pytest-conftest-bug\r\n\r\nIn a nutshell:\r\n1. I have a pytest option added to a parser `--my-option`\r\n2. I have a custom logic in `pytest_collection_modifyitems` where I traverse collected tests and decide which one should be skipped.\r\n3. When I pass an option value that is an arbitrary string, e.g. `pytest my_module --my-option foobar` the test that is collected has `nodeid` of `'my_module/test_sth.py::test_foo'`\r\n4. But when the option that I pass is an absolute path `pytest my_module --my-option /Users/user/foobar` then the test has `nodeid` of `'test_sth.py::test_foo'`\r\n\r\nThis breaks my test suite as collected tests can't be properly matched/filtered, because a path for one of the options in `pytest` command changed from relative to absolute.\r\n\r\nWould you consider it a bug? Or is it an expected behavior?\r\n\r\nI'm using `pytest 7.4.3` and macos 12.7.1.\r\n\r\nThank you for any guidance!\r\n",
      "state": "CLOSED",
      "createdAt": "2023-11-24T17:53:17Z",
      "updatedAt": "2023-11-24T19:09:22Z",
      "closedAt": "2023-11-24T19:07:53Z",
      "author": {
        "login": "mtsokol"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: question"
          },
          {
            "name": "topic: config"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 6
      }
    },
    {
      "number": 11634,
      "title": "stash keys can be redefined when pytester re-imports the module",
      "body": "for example if i have a pytest plugin that saves something to an item's stash:\r\n```py\r\n# stash_keys.py\r\nfrom pytest import StashKey\r\n\r\nkey = StashKey[int]()\r\n```\r\n```py\r\n# foo.py\r\nfrom stash_keys import key\r\nfrom pytest import Item\r\nfrom bar import check_stash\r\n\r\nkey = StashKey[int]()\r\n\r\ndef pytest_runtest_setup(item: Item):\r\n    item.stash[key] = 1\r\ndef pytest_runtest_teardown(item: Item):\r\n    check_stash(item)\r\n```\r\n\r\nand another file that checks the stash later:\r\n```py\r\n# bar.py\r\nfrom pytest import Item\r\nfrom stash_keys import key\r\n\r\ndef check_stash(item: Item):\r\n    assert  item.stash[key] == 1\r\n```\r\n\r\nthen i have two different pytester tests:\r\n```py\r\ndef test_foo(pytester: Pytester):\r\n    pytester_dir.runpytest(\"--collect-only\")\r\n\r\ndef test_bar(pytester: Pytester):\r\n    pytester_dir.runpytest(\"--collect-only\")\r\n```\r\n\r\nit seems that the `foo` module gets imported multiple times, creating two different instances of the stash key. then when the second test checks the value in `check_stash`, it's using a different instance of `StashKey` to the one it was created with, so it fails.\r\n\r\nis there anything i can do to workaround this? running pytester with inprocess mode doesn't seem to work because i think they both run in the same subprocess?\r\n\r\n(note: i haven't yet tested that this minimal example reproduces this issue)",
      "state": "CLOSED",
      "createdAt": "2023-11-23T23:33:19Z",
      "updatedAt": "2023-11-24T01:12:43Z",
      "closedAt": "2023-11-24T01:12:43Z",
      "author": {
        "login": "DetachHead"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 11633,
      "title": "Pytest not discovering test classes with custom decorators",
      "body": "I have the following decorator:\r\n\r\n```py\r\ndef orchestrate(cls):\r\n    @functools.wraps(cls)\r\n    def wrap(*args,**kwargs):\r\n        print(\"Here\")\r\n        cls.orchestrator = \"Some Value...\"\r\n        return cls(*args, **kwargs)\r\n    return wrap\r\n```\r\n\r\nThat I would like to use with a test class like this:\r\n\r\n```py\r\n@orchestrate\r\nclass TestSomething:\r\n    def test_something(self):\r\n        print(self.orchestrator) # Expecting \"Some Value...\" to be printed here\r\n        assert 1 == 1\r\n```\r\nbut Pytest does not collect test_something and reports that 0 were collected. I cannot use fixtures in this case and need to be able to use a decorator that adds an attribute to the class it decorates with a certain value.\r\n\r\nIf I take the decorator away Pytest finds and runs the test. How can I get Pytest to collect the methods inside decorated test classes?\r\n\r\n-----------------------------------------------------------------------------------------------------------------------\r\n\r\nI am using Windows 10 with Pytest = \"7.3.1\", the following are installed in my venv:\r\n- python = \"^3.10\"\r\n- pytest = \"7.3.1\"\r\n- SQLAlchemy = \"2.0.15\"\r\n- pyodbc = \"4.0.39\"\r\n- pandas = \"2.0.1\"\r\n- python-dotenv = \"1.0.0\"\r\n- azure-identity = \"1.13.0\"\r\n- decorator = \"^5.1.1\"\r\n\r\n-----------------------------------------------------------------------------------------------------------------------\r\n\r\n- [x] a detailed description of the bug or problem you are having\r\n- [x] output of `pip list` from the virtual environment you are using\r\n- [x] pytest and operating system versions\r\n- [x] minimal example if possible\r\n",
      "state": "CLOSED",
      "createdAt": "2023-11-23T16:47:08Z",
      "updatedAt": "2024-02-17T20:26:57Z",
      "closedAt": "2024-02-17T20:26:57Z",
      "author": {
        "login": "DanielJerrehian"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: question"
          },
          {
            "name": "status: needs information"
          },
          {
            "name": "stale"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 5
      }
    },
    {
      "number": 11632,
      "title": "parametrizing a fixture with indirect=True does not handle dicts correctly",
      "body": "When using `@pytest.mark.parametrize(..., indirect=True)` a dict param is handled like a list of its keys, instead of a single param - I have to explicitly wrap it in a list or single-element tuple. Besides making the code less pleasant to read, it also kind of breaks the ruff `PT007` linting rule (I set it to always prefer tuples for parametrization), because now I have to use a single-element tuple (which looks even worse than the list)...\r\n\r\nMaybe a dict should always be handled as a single element?\r\n\r\n```python\r\nimport pytest\r\n\r\n\r\n@pytest.fixture\r\ndef fixture_with_param(request):\r\n    print(f'param: {request.param}')\r\n    return request.param['foo'].upper()\r\n\r\n\r\n@pytest.mark.parametrize('fixture_with_param', {'foo': 'bar', 'hello': 'world'}, indirect=True)\r\ndef test_bad_param(fixture_with_param):\r\n    assert fixture_with_param == 'BAR'\r\n\r\n\r\n@pytest.mark.parametrize('fixture_with_param', [{'foo': 'bar', 'hello': 'world'}], indirect=True)\r\ndef test_good_param(fixture_with_param):\r\n    assert fixture_with_param == 'BAR'\r\n```\r\n\r\n```python\r\n$ pytest\r\n================================================= test session starts ==================================================\r\nplatform linux -- Python 3.11.6, pytest-7.4.3, pluggy-1.3.0\r\nrootdir: /tmp/empty\r\ncollected 3 items\r\n\r\ntest_indirect_param.py EE.                                                                                       [100%]\r\n\r\n======================================================== ERRORS ========================================================\r\n________________________________________ ERROR at setup of test_bad_param[foo] _________________________________________\r\n\r\nrequest = <SubRequest 'fixture_with_param' for <Function test_bad_param[foo]>>\r\n\r\n    @pytest.fixture\r\n    def fixture_with_param(request):\r\n        print(f'param: {request.param} ({type(request.param)})')\r\n>       return request.param['foo'].upper()\r\nE       TypeError: string indices must be integers, not 'str'\r\n\r\ntest_indirect_param.py:7: TypeError\r\n------------------------------------------------ Captured stdout setup -------------------------------------------------\r\nparam: foo (<class 'str'>)\r\n_______________________________________ ERROR at setup of test_bad_param[hello] ________________________________________\r\n\r\nrequest = <SubRequest 'fixture_with_param' for <Function test_bad_param[hello]>>\r\n\r\n    @pytest.fixture\r\n    def fixture_with_param(request):\r\n        print(f'param: {request.param} ({type(request.param)})')\r\n>       return request.param['foo'].upper()\r\nE       TypeError: string indices must be integers, not 'str'\r\n\r\ntest_indirect_param.py:7: TypeError\r\n------------------------------------------------ Captured stdout setup -------------------------------------------------\r\nparam: hello (<class 'str'>)\r\n=============================================== short test summary info ================================================\r\nERROR test_indirect_param.py::test_bad_param[foo] - TypeError: string indices must be integers, not 'str'\r\nERROR test_indirect_param.py::test_bad_param[hello] - TypeError: string indices must be integers, not 'str'\r\n============================================= 1 passed, 2 errors in 0.02s ==============================================\r\n```\r\n\r\n```\r\n$ python --version\r\nPython 3.11.6\r\n\r\n$ pip list\r\nPackage    Version\r\n---------- -------\r\niniconfig  2.0.0\r\npackaging  23.2\r\npip        23.3.1\r\npluggy     1.3.0\r\npytest     7.4.3\r\nsetuptools 65.5.0\r\n```",
      "state": "OPEN",
      "createdAt": "2023-11-23T08:42:29Z",
      "updatedAt": "2023-11-27T09:47:52Z",
      "closedAt": null,
      "author": {
        "login": "ThiefMaster"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: enhancement"
          },
          {
            "name": "topic: parametrize"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 11630,
      "title": "pytest7.4.3 macos14.0 - python3.12 failed with invalid escape sequence in first pytest due to pytest.ini filterwarnings",
      "body": "<!--\r\nThanks for submitting an issue!\r\n\r\nQuick check-list while reporting bugs:\r\n-->\r\n\r\n- [ ] a detailed description of the bug or problem you are having\r\n```\r\nfido2-broker-test) BPOLLRK1:fido2-broker-test mobj$ pytest -s --capture=tee-sys --log-cli-level=INFO --durations=0 --tb=short tests/test_02_oidc_client.py --webhost=${WEBHOST}\r\n20231122112839.011|DEBUG|/System/Volumes/Data/dist/fido2-broker-test/conftest.py:42|pytest arguments? : ['-s', '--capture=tee-sys', '--log-cli-level=INFO', '--durations=0', '--tb=short', 'tests/test_02_oidc_client.py']\r\n===================================================================================================================================== test session starts ======================================================================================================================================\r\nplatform darwin -- Python 3.12.0, pytest-7.4.3, pluggy-1.3.0\r\nrootdir: /System/Volumes/Data/dist/fido2-broker-test\r\nconfigfile: pytest.ini\r\nplugins: html-0.1.dev418, cov-4.1.0, metadata-3.0.0, reportportal-5.3.0, html-reporter-0.2.9, allure-pytest-2.13.2\r\ncollected 0 items / 1 error                                                                                                                                                                                                                                                                    \r\n\r\n============================================================================================================================================ ERRORS ============================================================================================================================================\r\n________________________________________________________________________________________________________________________ ERROR collecting tests/test_02_oidc_client.py _________________________________________________________________________________________________________________________\r\n/Users/mobj/.pyenv/versions/3.12.0/envs/fido2-broker-test/lib/python3.12/site-packages/_pytest/python.py:617: in _importtestmodule\r\n    mod = import_path(self.path, mode=importmode, root=self.config.rootpath)\r\n/Users/mobj/.pyenv/versions/3.12.0/envs/fido2-broker-test/lib/python3.12/site-packages/_pytest/pathlib.py:567: in import_path\r\n    importlib.import_module(module_name)\r\n/Users/mobj/.pyenv/versions/3.12.0/lib/python3.12/importlib/__init__.py:90: in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n<frozen importlib._bootstrap>:1381: in _gcd_import\r\n    ???\r\n<frozen importlib._bootstrap>:1354: in _find_and_load\r\n    ???\r\n<frozen importlib._bootstrap>:1325: in _find_and_load_unlocked\r\n    ???\r\n<frozen importlib._bootstrap>:929: in _load_unlocked\r\n    ???\r\n/Users/mobj/.pyenv/versions/3.12.0/envs/fido2-broker-test/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:177: in exec_module\r\n    source_stat, co = _rewrite_test(fn, self.config)\r\n/Users/mobj/.pyenv/versions/3.12.0/envs/fido2-broker-test/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:359: in _rewrite_test\r\n    tree = ast.parse(source, filename=strfn)\r\n/Users/mobj/.pyenv/versions/3.12.0/lib/python3.12/ast.py:52: in parse\r\n    return compile(source, filename, mode, flags,\r\nE     File \"/System/Volumes/Data/dist/fido2-broker-test/tests/test_02_oidc_client.py\", line 2\r\nE       \"\"\"\r\nE       ^^^\r\nE   SyntaxError: invalid escape sequence '\\w'\r\n\r\n```\r\n\r\n- [ ] output of `pip list` from the virtual environment you are using\r\n```\r\nPackage                   Version      Editable project location\r\n------------------------- ------------ -------------------------------------------\r\naenum                     3.1.15\r\naiohttp                   3.9.0\r\naiosignal                 1.3.1\r\nansi2html                 1.8.0\r\nattrs                     23.1.0\r\nbeautifulsoup4            4.12.2\r\nblinker                   1.7.0\r\nBrotli                    1.1.0\r\ncertifi                   2023.11.17\r\ncffi                      1.16.0\r\ncharset-normalizer        3.3.2\r\nclick                     8.1.7\r\ncolorama                  0.4.6\r\ncoverage                  7.3.2\r\ncryptography              41.0.5\r\ncurlify                   2.2.1\r\ndeepdiff                  6.7.1\r\ndill                      0.3.7\r\ndparse                    0.6.3\r\nelastic-transport         8.10.0\r\nelasticsearch             8.11.0\r\nfido2-broker-test         0.1          /System/Volumes/Data/dist/fido2-broker-test\r\nflatten-dict              0.4.2\r\nfrozenlist                1.4.0\r\nh11                       0.14.0\r\nh2                        4.1.0\r\nhpack                     4.0.0\r\nhyperframe                6.0.1\r\nidna                      3.4\r\niniconfig                 2.0.0\r\njsonschema                4.20.0\r\njsonschema-specifications 2023.11.1\r\nkaitaistruct              0.10\r\nldap3                     2.9.1\r\nLevenshtein               0.23.0\r\nmultidict                 6.0.4\r\nordered-set               4.1.0\r\noutcome                   1.3.0.post0\r\npackaging                 21.3\r\nPillow                    10.1.0\r\npip                       23.3.1\r\npluggy                    1.3.0\r\npsutil                    5.9.6\r\npy                        1.11.0\r\npyasn1                    0.5.1\r\npycparser                 2.21\r\nPyJWT                     2.8.0\r\npyOpenSSL                 23.3.0\r\npyparsing                 3.1.1\r\nPySocks                   1.7.1\r\npytest                    7.4.3\r\npython-dateutil           2.8.2\r\npython-Levenshtein        0.23.0\r\npytz                      2023.3.post1\r\nrapidfuzz                 3.5.2\r\nreferencing               0.31.0\r\nreportportal-client       5.5.4\r\nrequests                  2.31.0\r\nrpds-py                   0.13.1\r\nruamel.yaml               0.18.5\r\nruamel.yaml.clib          0.2.8\r\nsafety                    2.3.5\r\nselenium                  4.15.2\r\nselenium-wire             5.1.0\r\nsetuptools                65.5.0\r\nsix                       1.16.0\r\nsnaptime                  0.2.4\r\nsniffio                   1.3.0\r\nsortedcontainers          2.4.0\r\nsoupsieve                 2.5\r\nthefuzz                   0.20.0\r\ntrio                      0.23.1\r\ntrio-websocket            0.11.1\r\ntzlocal                   5.2\r\nurllib3                   2.1.0\r\nwsproto                   1.2.0\r\nyarl                      1.9.3\r\nzstandard                 0.22.0\r\n```\r\n- [ ] pytest and operating system versions\r\n```\r\npytest --version\r\npytest 7.4.3\r\n\r\nsw_vers\r\nProductName:            macOS\r\nProductVersion:         14.0\r\nBuildVersion:           23A344\r\n\r\n```\r\n- [ ] \r\n- [ ] minimal example if possible\r\nstart of the tests/test_02_oidc_client.py:\r\n```\r\n#!/usr/bin/env python3\r\n\"\"\"\r\n# load predefined virtual environment with packages\r\nC:\\\\dist\\\\venvs\\\\<your venv directory>\\\\Scripts\\\\Activate.ps1\r\n\r\n--webhost=test12\r\n<just tests\r\n\"\"\"\r\nimport argparse, datetime, json, os, logging, re, sys, time, subprocess, urllib.parse\r\n:\r\n```\r\n\r\nNothing strange with fileformat of file it is LF utf8:\r\n```\r\nfile tests/test_02_oidc_client.py \r\ntests/test_02_oidc_client.py: Python script text executable, ASCII text\r\n```\r\n\r\n\r\nI've removed all pytest plugins and tried changing pytest version v7.3-v7.4.3 same issue.\r\n\r\nBut all is fine with python3.11.6 and lower.\r\n\r\nIs it an error with ast.py\r\n\r\n",
      "state": "CLOSED",
      "createdAt": "2023-11-22T11:47:29Z",
      "updatedAt": "2023-11-22T12:11:07Z",
      "closedAt": "2023-11-22T12:11:06Z",
      "author": {
        "login": "fenchu"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      }
    },
    {
      "number": 11620,
      "title": "Pytest doesn't print fixture teardown if there is a passing test along side the failing test in a suite",
      "body": "<!--\r\nThanks for submitting an issue!\r\n\r\nQuick check-list while reporting bugs:\r\n-->\r\n\r\nWhen a fixture that was used in a test that fails, I expect the fixture teardown output (stdout/stderr) to be printed as part of the test report. This works if the fixture was *only* used in tests that fail, but if the fixture was also used in a test that passes, only the fixture startup output is printed, but not the shutdown output.\r\n\r\n`pip list` output:\r\n```\r\nPackage    Version\r\n---------- -------\r\niniconfig  2.0.0\r\npackaging  23.2\r\npip        22.3.1\r\npluggy     1.3.0\r\npytest     7.4.3\r\nsetuptools 65.6.3\r\n```\r\n\r\nOperating system version: macOS 12.7\r\nPython version: Python 3.11.2\r\n\r\nMWE:\r\n\r\n```\r\nimport pytest\r\n\r\n@pytest.fixture(scope='session')\r\ndef my_fixture():\r\n    print(\"My Fixture Set Up\")\r\n    yield\r\n    print(\"My Fixture tear down\")\r\n\r\ndef test_1(my_fixture):\r\n    print(\"test_1\")\r\n    assert False\r\n\r\ndef test_2(my_fixture):\r\n    print(\"test_2\")\r\n```\r\n\r\nOutput if only failing test is called, which includes the expected fixture teardown output:\r\n```\r\npytest test_python.py::test_1\r\n=========================== test session starts ===========================\r\nplatform darwin -- Python 3.11.2, pytest-7.4.3, pluggy-1.3.0\r\nrootdir: /Users/agreen/code/constellation/constellation-dev\r\nconfigfile: pytest.ini\r\ncollected 1 item\r\n\r\ntest_python.py F                                                    [100%]\r\n\r\n================================ FAILURES =================================\r\n_________________________________ test_1 __________________________________\r\n\r\nmy_fixture = None\r\n\r\n    def test_1(my_fixture):\r\n        print(\"test_1\")\r\n>       assert False\r\nE       assert False\r\n\r\ntest_python.py:11: AssertionError\r\n-------------------------- Captured stdout setup --------------------------\r\nMy Fixture Set Up\r\n-------------------------- Captured stdout call ---------------------------\r\ntest_1\r\n------------------------ Captured stdout teardown -------------------------\r\nMy Fixture tear down\r\n========================= short test summary info =========================\r\nFAILED test_python.py::test_1 - assert False\r\n============================ 1 failed in 0.01s ============================\r\n```\r\n\r\nOutput if both tests are called, which does not include the fixture teardown output.\r\n```\r\npytest test_python.py\r\n=========================== test session starts ===========================\r\nplatform darwin -- Python 3.11.2, pytest-7.4.3, pluggy-1.3.0\r\nrootdir: /Users/agreen/code/constellation/constellation-dev\r\nconfigfile: pytest.ini\r\ncollected 2 items\r\n\r\ntest_python.py F.                                                   [100%]\r\n\r\n================================ FAILURES =================================\r\n_________________________________ test_1 __________________________________\r\n\r\nmy_fixture = None\r\n\r\n    def test_1(my_fixture):\r\n        print(\"test_1\")\r\n>       assert False\r\nE       assert False\r\n\r\ntest_python.py:11: AssertionError\r\n-------------------------- Captured stdout setup --------------------------\r\nMy Fixture Set Up\r\n-------------------------- Captured stdout call ---------------------------\r\ntest_1\r\n========================= short test summary info =========================\r\nFAILED test_python.py::test_1 - assert False\r\n======================= 1 failed, 1 passed in 0.01s =======================\r\n```\r\n\r\n\r\n\r\n",
      "state": "CLOSED",
      "createdAt": "2023-11-15T18:02:40Z",
      "updatedAt": "2024-02-17T20:25:24Z",
      "closedAt": "2024-02-17T20:25:24Z",
      "author": {
        "login": "greenatatlassian"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: question"
          },
          {
            "name": "status: needs information"
          },
          {
            "name": "topic: fixtures"
          },
          {
            "name": "stale"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 5
      }
    },
    {
      "number": 11617,
      "title": "'ExceptionInfo' object has no attribute 'group_contains'",
      "body": "When i did official tutorial i`ve got an error. \"'ExceptionInfo' object has no attribute 'group_contains'\"\r\n\r\n**My code:**\r\n```\r\nimport pytest\r\ndef f():\r\n    raise ExceptionGroup(\r\n        \"Group message\",\r\n        [\r\n            RuntimeError(),\r\n        ],\r\n    )\r\n\r\ndef test_exception_in_group():\r\n    with pytest.raises(ExceptionGroup) as excinfo:\r\n        f()\r\n    assert excinfo.group_contains(RuntimeError)\r\n    assert not excinfo.group_contains(TypeError)\r\n```\r\n\r\n**Error:**\r\n\r\n```\r\nD:\\Programming\\pytest_tutorial\\venv\\Scripts\\python.exe \"C:/Program Files/JetBrains/PyCharm Community Edition 2022.3.1/plugins/python-ce/helpers/pycharm/_jb_pytest_runner.py\" --target test_exeption_group.py::test_exception_in_group \r\nTesting started at 22:45 ...\r\nC:\\Program Files\\JetBrains\\PyCharm Community Edition 2022.3.1\\plugins\\python-ce\\helpers\\pycharm\\_jb_pytest_runner.py:8: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html\r\n  from pkg_resources import iter_entry_points\r\nLaunching pytest with arguments test_exeption_group.py::test_exception_in_group --no-header --no-summary -q in D:\\Programming\\pytest_tutorial\r\n\r\n============================= test session starts =============================\r\ncollecting ... collected 1 item\r\n\r\ntest_exeption_group.py::test_exception_in_group FAILED                   [100%]\r\ntest_exeption_group.py:11 (test_exception_in_group)\r\ndef test_exception_in_group():\r\n        with pytest.raises(ExceptionGroup) as excinfo:\r\n            f()\r\n>       assert excinfo.group_contains(RuntimeError)\r\nE       AttributeError: 'ExceptionInfo' object has no attribute 'group_contains'\r\n\r\ntest_exeption_group.py:15: AttributeError\r\n\r\n\r\n============================== 1 failed in 0.25s ==============================\r\n\r\nProcess finished with exit code 1\r\n```\r\n**pip list result**\r\n```\r\nPackage    Version\r\n---------- -------\r\ncolorama   0.4.6\r\niniconfig  2.0.0\r\npackaging  23.2\r\npip        23.3.1\r\npluggy     1.3.0\r\npytest     7.4.3\r\nsetuptools 68.2.2\r\nwheel      0.41.3\r\n```\r\n",
      "state": "CLOSED",
      "createdAt": "2023-11-14T20:00:08Z",
      "updatedAt": "2023-11-14T20:52:05Z",
      "closedAt": "2023-11-14T20:52:04Z",
      "author": {
        "login": "Babahasko"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: question"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 5
      }
    },
    {
      "number": 11610,
      "title": "Add a `set_filter()` context manager to the caplog fixture",
      "body": "<!--\r\nThanks for suggesting a feature!\r\n\r\nQuick check-list while suggesting features:\r\n-->\r\n\r\n#### What's the problem this feature will solve?\r\n<!-- What are you trying to do, that you are unable to achieve with pytest as it currently stands? -->\r\n\r\nI need to test a custom [filter](https://docs.python.org/3/library/logging.html#filter-objects) for logging, and currently I use one of the following two approaches:\r\n```python\r\ndef test_filter(caplog: pytest.LogCaptureFixture) -> None:\r\n    caplog.set_level(logging.INFO)\r\n\r\n    logger = logging.getLogger(__name__)  # This test module's logger.\r\n    filter_ = SchnufteCustomFilter()\r\n    logger.addFilter(filter_)\r\n\r\n    # Run tests.\r\n    assert len(caplog.record_tuples) == 1\r\n    assert caplog.record_tuples[0] == (\"test_custom_filter\", 20, \"Schnufte!\")\r\n\r\n    logger.removeFilter(filter_)\r\n```\r\nor\r\n```python\r\ndef test_filter(caplog: pytest.LogCaptureFixture) -> None:\r\n    caplog.set_level(logging.INFO)\r\n\r\n    filter_ = SchnufteCustomFilter()\r\n    caplog.handler.addFilter(filter_)\r\n\r\n    # Run tests.\r\n    assert len(caplog.record_tuples) == 1\r\n    assert caplog.record_tuples[0] == (\"test_custom_filter\", 20, \"Schnufte!\")     \r\n\r\n    caplog.handler.removeFilter(filter_)\r\n```\r\n#### Describe the solution you'd like\r\n<!-- A clear and concise description of what you want to happen. -->\r\n<!-- Provide examples of real-world use cases that this would enable and how it solves the problem described above. -->\r\n\r\nSimilar to the [`at_level()`](https://docs.pytest.org/en/6.2.x/reference.html?highlight=logcapturefixture#pytest.LogCaptureFixture.at_level) context manager I think it would be useful to wrap the second of the above filter setups into a custom context manager, that I can then call like so:\r\n```python\r\ndef test_filter(caplog: pytest.LogCaptureFixture) -> None:\r\n    caplog.set_level(logging.INFO)\r\n\r\n    filter_ = SchnufteCustomFilter()\r\n    with caplog.set_filter(filter_):  # use_filter() or with_filter() or ...\r\n        # Run tests.\r\n        assert len(caplog.record_tuples) == 1\r\n        assert caplog.record_tuples[0] == (\"test_custom_filter\", 20, \"Schnufte!\")     \r\n```\r\n\r\n#### Alternative Solutions\r\n<!-- Have you tried to workaround the problem using a pytest plugin or other tools? Or a different approach to solving this issue? Please elaborate here. -->\r\n\r\nSee above\u2019s examples, I guess.\r\n\r\n#### Additional context\r\n<!-- Add any other context, links, etc. about the feature here. -->\r\n\r\nI\u2019m happy to give a PR a shot: I suppose the change would be adding a method to the [LogCaptureFixture](https://github.com/pytest-dev/pytest/blob/99f77388107fcee4cbc665659fac61c8468b693d/src/_pytest/logging.py#L391), for example:\r\n```python\r\n@final\r\nclass LogCaptureFixture:\r\n\r\n    @contextmanager\r\n    def set_filter(filter_: logging.Filter) -> Generator[None, None, None]:  # Type needs to be aligned with _FilterType from stdlib/typeshed.\r\n        self.handler.addFilter(filter_)\r\n        try:\r\n            yield\r\n        finally:\r\n            self.handler.removeFilter(filter_)\r\n```",
      "state": "CLOSED",
      "createdAt": "2023-11-13T03:55:04Z",
      "updatedAt": "2023-11-24T12:38:35Z",
      "closedAt": "2023-11-24T12:38:35Z",
      "author": {
        "login": "jenstroeger"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 5
      }
    },
    {
      "number": 11604,
      "title": "setUpClass errors, but setUp fails on unittest.TestCase",
      "body": "When a fixture fails, Pytest reports an error:\r\n``` python\r\nimport pytest\r\n\r\n\r\n@pytest.fixture\r\ndef fail():\r\n    assert False\r\n\r\n\r\ndef test_pass(fail):\r\n    pass\r\n```\r\n```\r\n============================= test session starts ==============================\r\nplatform linux -- Python 3.9.18, pytest-7.4.3, pluggy-1.3.0\r\nrootdir: /tmp/tmp.CAhPLzhZ0P\r\ncollected 1 item\r\n\r\ntest_pytest.py E                                                         [100%]\r\n\r\n==================================== ERRORS ====================================\r\n_________________________ ERROR at setup of test_pass __________________________\r\n\r\n    @pytest.fixture\r\n    def fail():\r\n>       assert False\r\nE       assert False\r\n\r\ntest_pytest.py:6: AssertionError\r\n=========================== short test summary info ============================\r\nERROR test_pytest.py::test_pass - assert False\r\n=============================== 1 error in 0.03s ===============================\r\n```\r\n\r\nThe same thing happens when `setUpClass` fails on a `unittest.TestCase`:\r\n``` python\r\nimport unittest\r\n\r\n\r\nclass Test(unittest.TestCase):\r\n    @classmethod\r\n    def setUpClass(cls):\r\n        assert False\r\n\r\n    def test_sscce(self):\r\n        assert True\r\n```\r\n```\r\n============================= test session starts ==============================\r\nplatform linux -- Python 3.9.18, pytest-7.4.3, pluggy-1.3.0\r\nrootdir: /tmp/tmp.CAhPLzhZ0P\r\ncollected 1 item\r\n\r\ntest_unittest.py E                                                       [100%]\r\n\r\n==================================== ERRORS ====================================\r\n______________________ ERROR at setup of Test.test_sscce _______________________\r\n\r\ncls = <class 'test_unittest.Test'>\r\n\r\n    @classmethod\r\n    def setUpClass(cls):\r\n>       assert False\r\nE       assert False\r\n\r\ntest_unittest.py:7: AssertionError\r\n=========================== short test summary info ============================\r\nERROR test_unittest.py::Test::test_sscce - assert False\r\n=============================== 1 error in 0.04s ===============================\r\n```\r\n\r\nHowever, if `setUp` fails, Pytest reports a failure:\r\n``` python\r\nimport unittest\r\n\r\n\r\nclass Test(unittest.TestCase):\r\n    def setUp(self):\r\n        assert False\r\n\r\n    def test_sscce(self):\r\n        assert True\r\n```\r\n```\r\n============================= test session starts ==============================\r\nplatform linux -- Python 3.9.18, pytest-7.4.3, pluggy-1.3.0\r\nrootdir: /tmp/tmp.CAhPLzhZ0P\r\ncollected 1 item\r\n\r\ntest_unittest.py F                                                       [100%]\r\n\r\n=================================== FAILURES ===================================\r\n_______________________________ Test.test_sscce ________________________________\r\n\r\nself = <test_unittest.Test testMethod=test_sscce>\r\n\r\n    def setUp(self):\r\n>       assert False\r\nE       assert False\r\n\r\ntest_unittest.py:6: AssertionError\r\n=========================== short test summary info ============================\r\nFAILED test_unittest.py::Test::test_sscce - assert False\r\n============================== 1 failed in 0.03s ===============================\r\n```",
      "state": "OPEN",
      "createdAt": "2023-11-10T02:57:39Z",
      "updatedAt": "2023-12-16T16:10:39Z",
      "closedAt": null,
      "author": {
        "login": "tucked"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "plugin: unittest"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 4
      }
    },
    {
      "number": 11603,
      "title": "TestLocalPath.test_make_numbered_dir_multiprocess_safe sometimes fails with py.error.EEXIST: [File exists]",
      "body": "<!--\r\nThanks for submitting an issue!\r\n\r\nQuick check-list while reporting bugs:\r\n-->\r\n\r\nHello. I've noticed recently that the Fedora build system nudges me that pytest fails to build every now and then. This has been happening with 7.4.2 and I've managed to reproduce with 7.4.3 as well.\r\n\r\nThe failure always looks like this:\r\n\r\n```\r\n+ PYTEST_XDIST_AUTO_NUM_WORKERS=5\r\n+ /builddir/build/BUILDROOT/pytest-7.4.3-1.fc40.i386/usr/bin/pytest testing --timeout=30 -n auto -rs\r\n============================= test session starts ==============================\r\nplatform linux -- Python 3.12.0, pytest-7.4.3, pluggy-1.3.0\r\nrootdir: /builddir/build/BUILD/pytest-7.4.3\r\nconfigfile: pyproject.toml\r\nplugins: hypothesis-6.82.0, timeout-2.2.0, xdist-3.3.1\r\ntimeout: 30.0s\r\ntimeout method: signal\r\ntimeout func_only: False\r\ncreated: 5/5 workers\r\n5 workers [3468 items]\r\n...\r\n=================================== FAILURES ===================================\r\n____________ TestLocalPath.test_make_numbered_dir_multiprocess_safe ____________\r\n[gw4] linux -- Python 3.12.0 /usr/bin/python3\r\nmultiprocessing.pool.RemoteTraceback: \r\n\"\"\"\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILDROOT/pytest-7.4.3-1.fc40.i386/usr/lib/python3.12/site-packages/_pytest/_py/error.py\", line 85, in checked_call\r\n    return func(*args, **kwargs)\r\n           ^^^^^^^^^^^^^^^^^^^^^\r\nFileExistsError: [Errno 17] File exists: '/tmp/pytest-of-mockbuild/pytest-0/popen-gw4/test_make_numbered_dir_multipr0/repro-1229'\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.12/multiprocessing/pool.py\", line 125, in worker\r\n    result = (True, func(*args, **kwds))\r\n                    ^^^^^^^^^^^^^^^^^^^\r\n  File \"/builddir/build/BUILD/pytest-7.4.3/testing/_py/test_local.py\", line 550, in batch_make_numbered_dirs\r\n    dir_ = local.make_numbered_dir(prefix=\"repro-\", rootdir=rootdir)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/builddir/build/BUILDROOT/pytest-7.4.3-1.fc40.i386/usr/lib/python3.12/site-packages/_pytest/_py/path.py\", line 1342, in make_numbered_dir\r\n    udir = rootdir.mkdir(prefix + str(maxnum + 1))\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/builddir/build/BUILDROOT/pytest-7.4.3-1.fc40.i386/usr/lib/python3.12/site-packages/_pytest/_py/path.py\", line 887, in mkdir\r\n    error.checked_call(os.mkdir, os.fspath(p))\r\n  File \"/builddir/build/BUILDROOT/pytest-7.4.3-1.fc40.i386/usr/lib/python3.12/site-packages/_pytest/_py/error.py\", line 101, in checked_call\r\n    raise cls(f\"{func.__name__}{args!r}\")\r\npy.error.EEXIST: [File exists]: mkdir('/tmp/pytest-of-mockbuild/pytest-0/popen-gw4/test_make_numbered_dir_multipr0/repro-1229',)\r\n\"\"\"\r\nThe above exception was the direct cause of the following exception:\r\nself = <test_local.TestLocalPath object at 0xf50227c8>\r\ntmpdir = local('/tmp/pytest-of-mockbuild/pytest-0/popen-gw4/test_make_numbered_dir_multipr0')\r\n    def test_make_numbered_dir_multiprocess_safe(self, tmpdir):\r\n        # https://github.com/pytest-dev/py/issues/30\r\n        with multiprocessing.Pool() as pool:\r\n            results = [\r\n                pool.apply_async(batch_make_numbered_dirs, [tmpdir, 100])\r\n                for _ in range(20)\r\n            ]\r\n            for r in results:\r\n>               assert r.get()\r\n/builddir/build/BUILD/pytest-7.4.3/testing/_py/test_local.py:879: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\nself = <multiprocessing.pool.ApplyResult object at 0xf4c5fe40>, timeout = None\r\n    def get(self, timeout=None):\r\n        self.wait(timeout)\r\n        if not self.ready():\r\n            raise TimeoutError\r\n        if self._success:\r\n            return self._value\r\n        else:\r\n>           raise self._value\r\nE           py.error.EEXIST: [File exists]: mkdir('/tmp/pytest-of-mockbuild/pytest-0/popen-gw4/test_make_numbered_dir_multipr0/repro-1229',)\r\n/usr/lib/python3.12/multiprocessing/pool.py:774: EEXIST\r\n...\r\n= 1 failed, 3414 passed, 35 skipped, 12 xfailed, 6 xpassed in 65.16s (0:01:05) =\r\n```\r\n\r\nHowever, the number in `repro-868` changes.\r\n\r\nWhen I submit 10 builds in the Fedora builders, usually at least one or two of them fail this way.\r\n\r\nExample logs:\r\n\r\n - [build.log.txt](https://github.com/pytest-dev/pytest/files/13312202/build.log.txt)\r\n - [root.log.txt](https://github.com/pytest-dev/pytest/files/13312203/root.log.txt) (includes versions of packages)\r\n\r\nThe [first occurrence](https://koschei.fedoraproject.org/build/16415413) I can recall (with build logs already garbage collected) was on 2023-09-29.\r\n\r\nThe above log is from i686 builder, but I've also seen it on x86_64 or ppc64le.\r\n\r\nI assumed the test is flaky, but considering this partiular test tests this does not happen, I am afraid something is broken.\r\n\r\nHowever, I've been unable to reproduce this yet outside of our build environment.\r\n\r\nI think there is a race condition somewhere, but I am out of my depth currently.",
      "state": "CLOSED",
      "createdAt": "2023-11-09T19:54:44Z",
      "updatedAt": "2023-11-14T14:41:37Z",
      "closedAt": "2023-11-14T14:41:37Z",
      "author": {
        "login": "hroncok"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 27
      }
    },
    {
      "number": 11602,
      "title": "type-safe markers",
      "body": "<!--\r\nThanks for suggesting a feature!\r\n\r\nQuick check-list while suggesting features:\r\n-->\r\n\r\n#### What's the problem this feature will solve?\r\ncurrently when creating a custom marker, there's no way for the type checker to ensure the arguments are correct. the builtin markers work around this by having type-checking only subtypes of `MarkDecorator` like so (in `_pytest/mark./structures.py`):\r\n```py\r\n# Typing for builtin pytest marks. This is cheating; it gives builtin marks\r\n# special privilege, and breaks modularity. But practicality beats purity...\r\nif TYPE_CHECKING:\r\n    from _pytest.scope import _ScopeName\r\n\r\n    class _SkipMarkDecorator(MarkDecorator):\r\n        @overload  # type: ignore[override,misc,no-overload-impl]\r\n        def __call__(self, arg: Markable) -> Markable:\r\n            ...\r\n\r\n        @overload\r\n        def __call__(self, reason: str = ...) -> \"MarkDecorator\":\r\n            ...\r\n```\r\n\r\n#### Describe the solution you'd like\r\na way to define markers in a type-safe way, similar to how the builtin markers are defined. maybe something like this:\r\n```py\r\n# conftest.py\r\nclass Foo(MarkDecorator):\r\n    @override\r\n    def __call__(self, value: int) -> MarkDecorator: ...\r\n```\r\n```py\r\n# test_foo.py\r\nfrom conftest import Foo\r\n\r\n@Foo(\"asdf\")  # error: expected int, got str\r\ndef test_asdf(): ...\r\n```\r\n\r\n#### Alternative Solutions\r\nremove the `@final` from `MarkGenerator` and allow plugins to subtype it with their custom markers:\r\n```py\r\n# conftest.py\r\nfrom pytest import MarkGenerator\r\n\r\nclass CustomMarkers(MarkGenerator):\r\n    foo: Callable[[int], MarkDecorator]\r\n```\r\n```py\r\n# test_foo.py\r\nfrom conftest import CustomMarkers\r\n\r\nmark = CustomMarkers()\r\n\r\n@mark.foo(\"asdf\")  # error: expected int, got str\r\ndef test_asdf(): ...\r\n```\r\n\r\nthis solution probably isn't the best though since there'd be no way to enforce that users use your subtype. whereas making each marker separate classes would at least allow you to enforce that `@Foo` is used over `@mark.foo` using `--strict-markers`",
      "state": "OPEN",
      "createdAt": "2023-11-09T12:33:02Z",
      "updatedAt": "2023-11-27T09:50:06Z",
      "closedAt": null,
      "author": {
        "login": "DetachHead"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "topic: marks"
          },
          {
            "name": "topic: typing"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 11598,
      "title": "CS50 pytest issue",
      "body": "Results for cs50/problems/2022/python/tests/bank generated by check50 v3.3.9\r\n:) test_bank.py exist\r\n:( correct bank.py passes all test_bank checks\r\n    expected exit code 0, not 1\r\n:| test_bank catches bank.py with incorrect values\r\n    can't check until a frown turns upside down\r\n:| test_bank catches bank.py without case-insensitivity\r\n    can't check until a frown turns upside down\r\n:| test_bank catches bank.py not allowing for entire phrase\r\n    can't check until a frown turns upside down\r\n\r\nI execute test_bank.py on bank.py with no errors.\r\nWhen I use the CS50 \"check\" command above, I get an error. I've spent a couple of hours, and cannot figure out what is wrong.\r\nCan anyone point me in the right direction? Or who else to submit this issue to?",
      "state": "CLOSED",
      "createdAt": "2023-11-07T19:36:12Z",
      "updatedAt": "2023-11-07T20:51:11Z",
      "closedAt": "2023-11-07T20:45:00Z",
      "author": {
        "login": "billlocke"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "status: needs information"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 11597,
      "title": "`pytest.raises(FutureWarning)` is not valid and must fail",
      "body": "We usually use the following to capture warnings:\r\n\r\n```python\r\nwith pytest.warns(FutureWarning):\r\n    ...\r\n```\r\n\r\nand the following to capture exceptions:\r\n```python\r\nwith pytest.raises(TypeError):\r\n    ...\r\n```\r\n\r\nBut pytest seems to be silently allowing the following code to run without any errors:\r\n```python\r\nwith pytest.raises(FutureWarning):\r\n    ...\r\n```\r\n\r\n- [x] a detailed description of the bug or problem you are having\r\n- [x] output of `pip list` from the virtual environment you are using\r\n- [x] pytest and operating system versions\r\n- [x] minimal example if possible\r\n\r\n\r\n```\r\npytest                    7.4.3              pyhd8ed1ab_0    conda-forge\r\npytest-benchmark          4.0.0              pyhd8ed1ab_0    conda-forge\r\npytest-cases              3.8.0              pyhd8ed1ab_0    conda-forge\r\npytest-cov                4.1.0              pyhd8ed1ab_0    conda-forge\r\npytest-xdist              3.3.1              pyhd8ed1ab_0    conda-forge\r\n```",
      "state": "CLOSED",
      "createdAt": "2023-11-07T17:47:02Z",
      "updatedAt": "2023-11-07T21:40:58Z",
      "closedAt": "2023-11-07T18:21:31Z",
      "author": {
        "login": "galipremsagar"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "good first issue"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 11596,
      "title": "Fix the \"Customizing Colors\" documentation section",
      "body": "### Discussed in https://github.com/pytest-dev/pytest/discussions/11573\r\n\r\n\r\nThe section https://docs.pytest.org/en/7.4.x/how-to/logging.html#customizing-colors has a broken example. The \"broken\" means that it can no be copy/pasted to try and there are no explanations about how to use it.\r\n```py\r\n@pytest.hookimpl\r\ndef pytest_configure(config):\r\n    logging_plugin = config.pluginmanager.get_plugin(\"logging-plugin\")\r\n\r\n    # Change color on existing log level\r\n    logging_plugin.log_cli_handler.formatter.add_color_level(logging.INFO, \"cyan\")\r\n\r\n    # Add color to a custom log level (a custom log level `SPAM` is already set up)\r\n    logging_plugin.log_cli_handler.formatter.add_color_level(logging.SPAM, \"blue\")\r\n```\r\n```\r\nINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"/opt/pysetup/.venv/lib/python3.11/site-packages/_pytest/main.py\", line 267, in wrap_session\r\nINTERNALERROR>     config._do_configure()\r\nINTERNALERROR>   File \"/opt/pysetup/.venv/lib/python3.11/site-packages/_pytest/config/__init__.py\", line 1053, in _do_configure\r\nINTERNALERROR>     self.hook.pytest_configure.call_historic(kwargs=dict(config=self))\r\nINTERNALERROR>   File \"/opt/pysetup/.venv/lib/python3.11/site-packages/pluggy/_hooks.py\", line 514, in call_historic\r\nINTERNALERROR>     res = self._hookexec(self.name, self._hookimpls, kwargs, False)\r\nINTERNALERROR>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nINTERNALERROR>   File \"/opt/pysetup/.venv/lib/python3.11/site-packages/pluggy/_manager.py\", line 115, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\r\nINTERNALERROR>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nINTERNALERROR>   File \"/opt/pysetup/.venv/lib/python3.11/site-packages/pluggy/_callers.py\", line 113, in _multicall\r\nINTERNALERROR>     raise exception.with_traceback(exception.__traceback__)\r\nINTERNALERROR>   File \"/opt/pysetup/.venv/lib/python3.11/site-packages/pluggy/_callers.py\", line 77, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>           ^^^^^^^^^^^^^^^^^^^^^^^^^\r\nINTERNALERROR>   File \"/opt/pysetup/tests/conftest.py\", line 49, in pytest_configure\r\nINTERNALERROR>     logging_plugin.log_cli_handler.formatter.add_color_level(logging.INFO, \"cyan\")\r\nINTERNALERROR>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nINTERNALERROR> AttributeError: 'NoneType' object has no attribute 'log_cli_handler'\r\n```\r\n\r\n## Expected\r\n\r\nAdd a small working code example or clarify instructions.",
      "state": "CLOSED",
      "createdAt": "2023-11-07T17:27:41Z",
      "updatedAt": "2023-12-03T13:48:40Z",
      "closedAt": "2023-12-03T13:48:40Z",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: docs"
          },
          {
            "name": "good first issue"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 4
      }
    },
    {
      "number": 11585,
      "title": "On some installations terminalreporter is None",
      "body": "<!--\r\nThanks for submitting an issue!\r\n\r\nQuick check-list while reporting bugs:\r\n-->\r\n\r\n### A detailed description of the bug or problem you are having\r\n\r\nA program https://gitlab.com/gpaw/gpaw/-/issues/1026 uses `get_terminal_writer`\r\n\r\nhttps://github.com/pytest-dev/pytest/blob/13e5ef010250ae98b8b2aa76952d447274d20e25/src/_pytest/config/__init__.py#L1070\r\n\r\nOn some installations terminalreporter is None. Maybe a dependency of pytest is not installed?\r\n\r\n```\r\npytest -v /tmp\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.12/site-packages/_pytest/main.py\", line 267, in wrap_session\r\n    config._do_configure()\r\n  File \"/usr/local/lib/python3.12/site-packages/_pytest/config/__init__.py\", line 1053, in _do_configure\r\n    self.hook.pytest_configure.call_historic(kwargs=dict(config=self))\r\n  File \"/usr/local/lib/python3.12/site-packages/pluggy/_hooks.py\", line 514, in call_historic\r\n    res = self._hookexec(self.name, self._hookimpls, kwargs, False)\r\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.12/site-packages/pluggy/_manager.py\", line 115, in _hookexec\r\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.12/site-packages/pluggy/_callers.py\", line 113, in _multicall\r\n    raise exception.with_traceback(exception.__traceback__)\r\n  File \"/usr/local/lib/python3.12/site-packages/pluggy/_callers.py\", line 77, in _multicall\r\n    res = hook_impl.function(*args)\r\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/tmp/conftest.py\", line 4, in pytest_configure\r\n    tw = config.get_terminal_writer()\r\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.12/site-packages/_pytest/config/__init__.py\", line 1068, in get_terminal_writer\r\n    assert terminalreporter is not None\r\nAssertionError\r\n```\r\n### Output of `pip list` from the virtual environment you are using\r\n\r\n```\r\npip list\r\nPackage    Version\r\n---------- -------\r\niniconfig  2.0.0\r\npackaging  23.2\r\npip        23.2.1\r\npluggy     1.3.0\r\npytest     7.4.3\r\nsetuptools 68.2.2\r\nwheel      0.41.3\r\n\r\n[notice] A new release of pip is available: 23.2.1 -> 23.3.1\r\n[notice] To update, run: pip install --upgrade pip\r\n```\r\n\r\n### pytest and operating system versions\r\n\r\n```\r\npytest --version\r\npytest 7.4.3\r\n\r\ncat /etc/*release | grep PRETTY\r\nPRETTY_NAME=\"Debian GNU/Linux 12 (bookworm)\"\r\n\r\nuname -a\r\nLinux buildkitsandbox 5.15.0-84-generic #93~20.04.1-Ubuntu SMP Wed Sep 6 16:15:40 UTC 2023 x86_64 GNU/Linux\r\n```\r\n\r\n### minimal example if possible\r\n\r\nBuild the following Dockerfile with `docker build --progress=plain --no-cache -t pytest:latest .`\r\n\r\n```\r\nFROM python:3.12.0\r\n\r\nRUN pip install pytest\r\n\r\nRUN cat <<EOF > /tmp/conftest.py\r\nimport pytest\r\n\r\ndef pytest_configure(config):\r\n    tw = config.get_terminal_writer()\r\nEOF\r\n\r\nRUN python3 --version\r\nRUN pip list\r\nRUN pytest --version\r\nRUN cat /etc/*release | grep PRETTY\r\nRUN uname -a\r\n\r\nRUN pytest -v /tmp\r\n\r\nCMD [\"/bin/bash\"]\r\n```\r\n\r\n\r\n\r\n",
      "state": "CLOSED",
      "createdAt": "2023-11-04T08:32:00Z",
      "updatedAt": "2023-11-27T09:51:06Z",
      "closedAt": "2023-11-27T09:51:05Z",
      "author": {
        "login": "marcindulak"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 11577,
      "title": "Document that pytest.raises matches subclasses; consider an opt-in exact mode",
      "body": "#### What's the problem this feature will solve?\r\nThe [documentation for `pytest.raises`](https://docs.pytest.org/en/7.1.x/reference/reference.html#pytest-raises) makes no mention of the fact that it will pass if **any subclass** of the provided exception type is raised.\r\n\r\nIt says things like this which are arguably ambiguous, or at least unclear if you haven't thought of the subclass case:\r\n> Assert that a code block/function call raises expected_exception or raise a failure exception otherwise.\r\n> ...\r\n> If the code block does not raise the expected exception ... the check will fail instead.\r\n\r\nI had to look at the internals (it just [uses it in an `except`](https://github.com/pytest-dev/pytest/blob/8fb7e8b31efaa55e760c142e26eb82b42081ca28/src/_pytest/python_api.py#L961)) to confirm this behaviour, after realising soething was up due to coverage flagging a `raise` which was not covered despite a passing test which _appeared_ to test that code path.\r\n\r\n#### Describe the solution you'd like\r\n\r\n1. At a minimum it would help to update the documentation to make this clearer, e.g. just adding a sentence flagging that subclasses are matched too, just like in `except`.\r\n2. Additionally could we consider an option to `raises` such as `match_exact_type=True`? This would be a much more concise way to achieve the explicit exc_info.type check as shown in the workaround below.\r\n\r\n#### Alternative Solutions\r\n\r\nAlthough it was not at all obvious to me, I now realise that I can modify the test to be more specific, e.g. in my case the test did this:\r\n```\r\nwith pytest.raises(RuntimeError):\r\n    do_stuff()\r\n```\r\nand the code under test did `raise RuntimeError()`.\r\n\r\nIt passed but for the wrong reasons: `do_stuff()` was actually raising `NotImplementedError` (a subclass of RuntimeError) for an entirely unrelated reason.\r\n\r\nAs a workaround now that I've realised this, it's possible to explicitly do an exact match on the exception type like this:\r\n```\r\nwith pytest.raises(RuntimeError) as exc_info:\r\n    do_stuff()\r\n\r\n# Check it's actually RuntimeError, not just any subclass thereof\r\nassert exc_info.type is RuntimeError\r\n```\r\nHowever this is quite verbose and only useful once you realise there's a problem, which in my case was long after the test was written and only due to missing coverage being flagged.\r\n\r\nBetter documentation would hopefully make this clearer and an option to do exact type matching would be a great bonus!",
      "state": "CLOSED",
      "createdAt": "2023-11-02T11:30:00Z",
      "updatedAt": "2023-11-14T14:05:50Z",
      "closedAt": "2023-11-04T10:24:59Z",
      "author": {
        "login": "sparrowt"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: docs"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 4
      }
    },
    {
      "number": 11575,
      "title": "Indirect parametrization with scope=\"function\" does not always work",
      "body": "[Indirect parametrization](https://docs.pytest.org/en/7.4.x/example/parametrize.html#indirect-parametrization) with `scope=\"function\"` (or not specifying `scope`) does not seem to work when the following two conditions match:\r\n1. The previous test's request param scope is larger than `function`\r\n2. The current test's parametrized request value is identical to the previous test's\r\n\r\n\r\n- Code to reproduce\r\n```\r\nimport pytest\r\n\r\n\r\n@pytest.fixture(scope=\"module\")\r\ndef fixture(request):\r\n    print(f\"fixture (scope={request.scope})\")\r\n\r\n\r\n@pytest.mark.parametrize(\"fixture\", [\"a\", \"b\"], scope=\"module\", indirect=True)\r\ndef test1(fixture):\r\n    ...\r\n\r\n\r\n@pytest.mark.parametrize(\"fixture\", [\"b\", \"c\"], scope=\"function\", indirect=True)\r\ndef test2(fixture):\r\n    ...\r\n\r\n\r\n@pytest.mark.parametrize(\"fixture\", [\"c\", \"d\"], scope=\"function\", indirect=True)\r\ndef test3(fixture):\r\n    ...\r\n```\r\n\r\n\r\n- Result\r\n```\r\n$ pytest -s -v\r\n======================================================= test session starts ========================================================\r\nplatform darwin -- Python 3.9.18, pytest-7.4.3, pluggy-1.3.0 -- /Users/yugo/.pyenv/versions/3.9.18/envs/test_3.9.18/bin/python3.9\r\ncachedir: .pytest_cache\r\nrootdir: /Users/yugo/Desktop/test\r\ncollected 6 items                                                                                                                  \r\n\r\ntest_something.py::test1[a] fixture (scope=module)\r\nPASSED\r\ntest_something.py::test1[b] fixture (scope=module)\r\nPASSED\r\ntest_something.py::test2[b] PASSED\r\ntest_something.py::test2[c] fixture (scope=function)\r\nPASSED\r\ntest_something.py::test3[c] fixture (scope=function)\r\nPASSED\r\ntest_something.py::test3[d] fixture (scope=function)\r\nPASSED\r\n```\r\n\r\nNote that `scope=\"function\"` is not working in the test `test_something.py::test2[b]` that matches the above condition.\r\n\r\n\r\n- System environment\r\n```\r\n$ pip list\r\nPackage        Version\r\n-------------- -------\r\nexceptiongroup 1.1.3\r\niniconfig      2.0.0\r\npackaging      23.2\r\npip            23.0.1\r\npluggy         1.3.0\r\npytest         7.4.3\r\nsetuptools     58.1.0\r\ntomli          2.0.1\r\n\r\n$ sw_vers\r\nProductName:\tMac OS X\r\nProductVersion:\t10.15.7\r\nBuildVersion:\t19H1217\r\n```\r\n",
      "state": "OPEN",
      "createdAt": "2023-11-01T18:49:07Z",
      "updatedAt": "2023-11-30T08:03:34Z",
      "closedAt": null,
      "author": {
        "login": "yugokato"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: bug"
          },
          {
            "name": "topic: fixtures"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      }
    },
    {
      "number": 11572,
      "title": "ValueError: I/O operation on closed file",
      "body": "This is a follow-up to this issue https://github.com/pytest-dev/pytest/issues/11439\r\n\r\nNow the exception comes from `sys.__stderr__.fileno()`\r\n\r\nMaybe it would be better to stash the original value of stderr and use that in unconfigure rather than trying to get it by calling fileno()? Happy to supply a patch.\r\n\r\n```shell\r\nTraceback (most recent call last):\r\n  File \"/home/venv3.9/lib/python3.9/site-packages/_pytest/faulthandler.py\", line 47, in get_stderr_fileno\r\n    fileno = sys.stderr.fileno()\r\nValueError: I/O operation on closed file\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/venv3.9/bin/pytest\", line 8, in <module>\r\n    sys.exit(console_main())\r\n  File \"/home/venv3.9/lib/python3.9/site-packages/_pytest/config/__init__.py\", line 192, in console_main\r\n    code = main()\r\n  File \"/home/venv3.9/lib/python3.9/site-packages/_pytest/config/__init__.py\", line 169, in main\r\n    ret: Union[ExitCode, int] = config.hook.pytest_cmdline_main(\r\n  File \"/home/venv3.9/lib/python3.9/site-packages/pluggy/_hooks.py\", line 493, in __call__\r\n    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)\r\n  File \"/home/venv3.9/lib/python3.9/site-packages/pluggy/_manager.py\", line 115, in _hookexec\r\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\r\n  File \"/home/venv3.9/lib/python3.9/site-packages/pluggy/_callers.py\", line 113, in _multicall\r\n    raise exception.with_traceback(exception.__traceback__)\r\n  File \"/home/venv3.9/lib/python3.9/site-packages/pluggy/_callers.py\", line 77, in _multicall\r\n    res = hook_impl.function(*args)\r\n  File \"/home/venv3.9/lib/python3.9/site-packages/_pytest/main.py\", line 318, in pytest_cmdline_main\r\n    return wrap_session(config, _main)\r\n  File \"/home/venv3.9/lib/python3.9/site-packages/_pytest/main.py\", line 313, in wrap_session\r\n    config._ensure_unconfigure()\r\n  File \"/home/venv3.9/lib/python3.9/site-packages/_pytest/config/__init__.py\", line 1058, in _ensure_unconfigure\r\n    self.hook.pytest_unconfigure(config=self)\r\n  File \"/home/venv3.9/lib/python3.9/site-packages/pluggy/_hooks.py\", line 493, in __call__\r\n    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)\r\n  File \"/home/venv3.9/lib/python3.9/site-packages/pluggy/_manager.py\", line 115, in _hookexec\r\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\r\n  File \"/home/venv3.9/lib/python3.9/site-packages/pluggy/_callers.py\", line 113, in _multicall\r\n    raise exception.with_traceback(exception.__traceback__)\r\n  File \"/home/venv3.9/lib/python3.9/site-packages/pluggy/_callers.py\", line 77, in _multicall\r\n    res = hook_impl.function(*args)\r\n  File \"/home/venv3.9/lib/python3.9/site-packages/_pytest/faulthandler.py\", line 42, in pytest_unconfigure\r\n    faulthandler.enable(file=get_stderr_fileno())\r\n  File \"/home/venv3.9/lib/python3.9/site-packages/_pytest/faulthandler.py\", line 57, in get_stderr_fileno\r\n    return sys.__stderr__.fileno()\r\nValueError: I/O operation on closed file\r\n```\r\n\r\n\r\n## Environment\r\n\r\n```shell\r\nPython \t3.9.10\r\nPlatform \tLinux-5.4.226-129.415.amzn2.x86_64-x86_64-with-glibc2.31\r\nPackages \t\r\n\r\n    pytest: 7.4.3\r\n    pluggy: 1.3.0\r\n\r\nPlugins \t\r\n\r\n    Faker: 19.6.2\r\n    anyio: 4.0.0\r\n    cov: 4.1.0\r\n    csv: 3.0.0\r\n    django: 4.5.2\r\n    factoryboy: 2.5.1\r\n    flake8: 1.1.1\r\n    html: 4.0.2\r\n    icdiff: 0.7\r\n    instafail: 0.5.0\r\n    isort: 3.1.0\r\n    metadata: 3.0.0\r\n    mock: 3.11.1\r\n    mypy: 0.10.3\r\n    ordering: 0.6\r\n    randomly: 3.15.0\r\n    subprocess: 1.5.0\r\n    timeout: 2.1.0\r\n    xdist: 3.3.1\r\n    typeguard: 2.13.3\r\n```",
      "state": "CLOSED",
      "createdAt": "2023-10-31T08:06:20Z",
      "updatedAt": "2023-11-22T20:05:02Z",
      "closedAt": "2023-11-22T20:05:02Z",
      "author": {
        "login": "bnomis"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: bug"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 11569,
      "title": "WDYT if LocalPath behaved even more like Path?",
      "body": "Here's an example:\r\n\r\n```py\r\n@pytest.fixture(scope=\"session\")\r\ndef sample_data(request):\r\n    return (request.config.rootdir / \"data/sample.txt\").read_text()\r\n```\r\n\r\nToday, this fails with `TypeError: LocalPath.read_text() missing 1 required positional argument: 'encoding'`.\r\n\r\nI find that quite unexpected, because in other ways, the object works very much like `pathlib.Path`, and therefore I'd expect it to use the default, `UTF-8` encoding.",
      "state": "CLOSED",
      "createdAt": "2023-10-30T03:36:20Z",
      "updatedAt": "2023-10-30T07:42:21Z",
      "closedAt": "2023-10-30T05:57:00Z",
      "author": {
        "login": "dimaqq"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      }
    },
    {
      "number": 11563,
      "title": "parametrize fails on null string in 8.0.dev",
      "body": "<!--\r\nThanks for submitting an issue!\r\n\r\nQuick check-list while reporting bugs:\r\n-->\r\n\r\nThis was originally reported at https://github.com/pytest-dev/pytest/pull/11489#issuecomment-1783376878 but was asked to open a new issue for it. Also see:\r\n\r\n* https://github.com/astropy/astropy/pull/15548\r\n\r\nCaused by:\r\n\r\n* #11489\r\n\r\nhttps://github.com/pytest-dev/pytest/blob/ed8701a57fa40296e8dd302015cd5f805f2aede0/src/_pytest/python.py#L1006\r\n\r\nTo reproduce the failure, create a test using parametrize marker and include empty string as one of the parametrize inputs. Example traceback:\r\n\r\n```\r\n_ ERROR collecting astropy/time/tests/test_mask.py _\r\n...\r\n_pytest/python.py:1338: in parametrize\r\n    ids = self._resolve_parameter_set_ids(\r\n_pytest/python.py:1461: in _resolve_parameter_set_ids\r\n    return id_maker.make_unique_parameterset_ids()\r\n_pytest/python.py:1006: in make_unique_parameterset_ids\r\n    if id[-1].isdigit():\r\nE   IndexError: string index out of range\r\n```\r\n",
      "state": "CLOSED",
      "createdAt": "2023-10-27T20:02:14Z",
      "updatedAt": "2023-10-27T20:51:33Z",
      "closedAt": "2023-10-27T20:51:33Z",
      "author": {
        "login": "pllim"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: regression"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      }
    },
    {
      "number": 11556,
      "title": "Remove/update recommendation about using nullcontext + parametrize",
      "body": "As discussed in https://github.com/pytest-dev/pytest/issues/11555#issuecomment-1780749198, we should no longer recommend that approach in our documentation.",
      "state": "CLOSED",
      "createdAt": "2023-10-26T13:02:04Z",
      "updatedAt": "2023-11-07T22:55:09Z",
      "closedAt": "2023-11-07T22:55:09Z",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: docs"
          },
          {
            "name": "good first issue"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 11555,
      "title": "Add a `pytest.mark.raises`, distinct from `pytest.mark.xfail(raises=)` or `pytest.raises`",
      "body": "[From the docs](https://docs.pytest.org/en/7.1.x/example/parametrize.html#parametrizing-conditional-raising):\r\n>Use [pytest.raises()](https://docs.pytest.org/en/7.1.x/reference/reference.html#pytest.raises) with the [pytest.mark.parametrize](https://docs.pytest.org/en/7.1.x/reference/reference.html#pytest-mark-parametrize-ref) decorator to write parametrized tests in which some tests raise exceptions and others do not.\r\n\r\n\r\n#### What's the problem this feature will solve?\r\n\r\nWhen a parametrized test has lots of cases, it doesn't make sense to add an `expectation` input that will be `does_not_raise()` for the majority of tests, just so I can make sure one case does raise.\r\n\r\n#### Describe the solution you'd like\r\n\r\nWouldn't it make more sense to have a `pytest.mark.raises(SomeError)` mark that I can pass to `pytest.param`? Going with the example from the docs, this might look like:\r\n```\r\n@pytest.mark.parametrize(\r\n    \"example_input\",\r\n    [\r\n        (3,),\r\n        (2,),\r\n        (1,),\r\n        pytest.param(0, marks=pytest.mark.raises(ZeroDivisionError)),\r\n    ],\r\n)\r\ndef test_division(example_input):\r\n    \"\"\"Test how much I know division.\"\"\"\r\n    assert (6 / example_input) is not None\r\n```\r\n\r\n#### Additional context\r\n\r\nOf course, there is the `pytest.mark.xfail(raises=ZeroDivisionError, strict=True)` mark, but this ultimately reports the test as XPASS instead of PASS, like `pytest.raises()` would. And since it's possible to detect the raised error with the xfail mark, I assume it'd be possible to do the same here with a new mark.",
      "state": "CLOSED",
      "createdAt": "2023-10-26T02:43:41Z",
      "updatedAt": "2023-10-26T13:02:11Z",
      "closedAt": "2023-10-26T11:06:14Z",
      "author": {
        "login": "tkoft"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 8
      }
    },
    {
      "number": 11552,
      "title": "Skip statement is ignored if file is imported twice from different files",
      "body": "For example:\r\n\r\n```python\r\n# tests/common.py\r\nimport unittest\r\n\r\n\r\nclass TestBase(unittest.TestCase):\r\n  SET_ME = False\r\n\r\n  @classmethod\r\n  def setUpClass(cls):\r\n    # you can even remove the check\r\n    if cls.__name__ == 'TestBase':\r\n      raise unittest.SkipTest\r\n\r\n  def setUp(self):\r\n    # raise unittest.SkipTest  # <- this successfully skips the test\r\n    pass\r\n\r\n  def test_function(self):\r\n    # this function is common but requires some class var to be set in child\r\n    self.assertTrue(self.SET_ME)\r\n```\r\n\r\nAnd we have these two files:\r\n\r\n```python\r\n# tests/test_1.py\r\nimport unittest\r\nfrom tests.common import TestBase\r\n\r\n# you can even comment this class out\r\nclass Test1(TestBase):\r\n  SET_ME = True\r\n```\r\n\r\n```python\r\n# tests/test_2.py\r\nimport unittest\r\nfrom tests.common import TestBase\r\n\r\n# you can even comment this class out\r\nclass Test2(TestBase):\r\n  SET_ME = True\r\n```\r\n\r\nThen run `pytest .` in `tests/` and the output is:\r\n\r\n```python\r\n/tests$ pytest .\r\n==================================== test session starts ====================================\r\nplatform linux -- Python 3.11.4, pytest-7.4.3, pluggy-1.3.0\r\nconfigfile: pyproject.toml\r\nplugins: timeouts-1.2.1, subtests-0.11.0, forked-1.6.0, cpp-2.4.0, dash-2.11.1, repeat-0.9.1, timeout-2.1.0, xdist-3.3.1, anyio-3.7.1, hypothesis-6.46.7, cov-4.1.0\r\nsetup timeout: 0.0s, execution timeout: 0.0s, teardown timeout: 0.0s\r\ncollected 3 items                                                                           \r\n\r\ntest_1.py s                                                                           [ 33%]\r\ntest_2.py F.                                                                          [100%]\r\n\r\n========================================= FAILURES ==========================================\r\n__________________________________ TestBase.test_function ___________________________________\r\n\r\nself = <tests.common.TestBase testMethod=test_function>\r\n\r\n    def test_function(self):\r\n      # this function is common but requires some class var to be set in child\r\n>     self.assertTrue(self.SET_ME)\r\nE     AssertionError: False is not true\r\n\r\ncommon.py:19: AssertionError\r\n=================================== slowest 10 durations ====================================\r\n\r\n(8 durations < 0.005s hidden.  Use -vv to show these durations.)\r\n================================== short test summary info ==================================\r\nFAILED test_2.py::TestBase::test_function - AssertionError: False is not true\r\n========================== 1 failed, 1 passed, 1 skipped in 0.12s ===========================\r\n```\r\n\r\n### Expected behavior:\r\n\r\n```python\r\n/tests$ python -m unittest discover .\r\ns.s\r\n----------------------------------------------------------------------\r\nRan 1 test in 0.000s\r\n\r\nOK (skipped=2)\r\n```",
      "state": "CLOSED",
      "createdAt": "2023-10-25T07:28:52Z",
      "updatedAt": "2024-04-08T21:57:36Z",
      "closedAt": "2024-04-08T21:57:36Z",
      "author": {
        "login": "sshane"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "plugin: unittest"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 11548,
      "title": "Failure while creating release notes",
      "body": "The `create release notes` part of the deploy workflow of #11546 failed with:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/runner/work/pytest/pytest/scripts/publish-gh-release-notes.py\", line [102](https://github.com/pytest-dev/pytest/actions/runs/6631417541/job/18015418750#step:5:103), in <module>\r\n    sys.exit(main(sys.argv))\r\n  File \"/home/runner/work/pytest/pytest/scripts/publish-gh-release-notes.py\", line 89, in main\r\n    if not publish_github_release(slug, token, tag_name, md_body):\r\n  File \"/home/runner/work/pytest/pytest/scripts/publish-gh-release-notes.py\", line 35, in publish_github_release\r\n    return repo.create_release(tag_name=tag_name, body=body)\r\n  File \"/home/runner/work/pytest/pytest/.tox/publish-gh-release-notes/lib/python3.10/site-packages/github3/decorators.py\", line 24, in auth_wrapper\r\n    return func(self, *args, **kwargs)\r\n  File \"/home/runner/work/pytest/pytest/.tox/publish-gh-release-notes/lib/python3.10/site-packages/github3/repos/repo.py\", line 1272, in create_release\r\n    json = self._json(self._post(url, data=data), 201)\r\n  File \"/home/runner/work/pytest/pytest/.tox/publish-gh-release-notes/lib/python3.10/site-packages/github3/models.py\", line 161, in _json\r\n    raise exceptions.error_for(response)\r\ngithub3.exceptions.UnprocessableEntity: 422 Validation Failed\r\n```\r\n\r\nhttps://github.com/pytest-dev/pytest/actions/runs/6631417541/job/18015418750",
      "state": "CLOSED",
      "createdAt": "2023-10-24T19:35:57Z",
      "updatedAt": "2023-10-25T16:19:49Z",
      "closedAt": "2023-10-25T16:19:49Z",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": [
          {
            "login": "nicoddemus"
          }
        ]
      },
      "labels": {
        "nodes": [
          {
            "name": "type: infrastructure"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      }
    },
    {
      "number": 11544,
      "title": "bug fix #10447 not included in newer releases",
      "body": "Hi pytest-devs!\r\n\r\nMy team needs this bug fix,\r\nhttps://github.com/pytest-dev/pytest/issues/10447\r\nbut it is not included in the newer releases after the PR merge (not in any of the release tags), \r\nso we had to downgrade to pytest<7.2.\r\n\r\nCould you tell me when it is going to be released?",
      "state": "CLOSED",
      "createdAt": "2023-10-24T06:17:48Z",
      "updatedAt": "2023-10-24T19:51:30Z",
      "closedAt": "2023-10-24T07:43:08Z",
      "author": {
        "login": "dset77"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      }
    },
    {
      "number": 11538,
      "title": "Allow pytest.raises cooperate with ExceptionGroups",
      "body": "<!--\r\nThanks for suggesting a feature!\r\n\r\nQuick check-list while suggesting features:\r\n-->\r\n\r\n#### What's the problem this feature will solve?\r\n<!-- What are you trying to do, that you are unable to achieve with pytest as it currently stands? -->\r\n\r\nLet pytest.raises() handle ExceptionGroup unwrapping, similar to what an \"except*\" clause would do. The following is valid python code that will catch the ValueError exception:\r\n\r\n```python\r\ntry:\r\n  raise ExceptionGroup(\"\", [ValueError])\r\nexcept* ValueError:\r\n  pass\r\n```\r\n\r\nHowever pytest.raises will not manage this, and will fail with catching the ExceptionGroup instead.\r\n```python\r\nwith pytest.raises(ValueError):\r\n  raise ExceptionGroup(\"\", [ValueError])\r\n````\r\n\r\n#### Describe the solution you'd like\r\n<!-- A clear and concise description of what you want to happen. -->\r\n\r\nAssert some code throws an exception or an exception as part of an exception group.\r\n\r\n<!-- Provide examples of real-world use cases that this would enable and how it solves the problem described above. -->\r\n\r\nanyio/trio will now always wrap exception in ExceptionGroups when raised from taskgroups. This leads to silly checks like: https://github.com/agronholm/anyio/blob/3f1eca1addcd782e2347350a6ddb2ad2b80c6354/tests/test_taskgroups.py#L279C1-L287C31 to unwrap the exceptiongroup.\r\n\r\nA basic solution to handle this (without the bells and whistles) would be:\r\n```python\r\n@contextlib.contextmanager\r\ndef raises_nested(exc):\r\n    try:\r\n        yield\r\n    except* exc:\r\n        pass\r\n    else:\r\n        raise AssertionError(\"Did not raise expected exception\")\r\n``` \r\n\r\n#### Alternative Solutions\r\n<!-- Have you tried to workaround the problem using a pytest plugin or other tools? Or a different approach to solving this issue? Please elaborate here. -->\r\n\r\n#### Additional context\r\n<!-- Add any other context, links, etc. about the feature here. -->\r\n",
      "state": "CLOSED",
      "createdAt": "2023-10-22T21:54:07Z",
      "updatedAt": "2025-03-05T16:08:01Z",
      "closedAt": "2025-03-05T16:08:01Z",
      "author": {
        "login": "elupus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: proposal"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 29
      }
    },
    {
      "number": 11532,
      "title": "Using Fixtures as Parameters",
      "body": "### Discussed in https://github.com/pytest-dev/pytest/discussions/11412\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **jgersti** September  7, 2023</sup>\r\nIn #11284 @RonnyPfannschmidt mentioned that he would like to incorporate `pytest-lazy-fixture`[^1] and building blocks/hooks for `pytest-cases`[^2] like behaviour into the `pytest` core.\r\nI have experimented the last month with a `pytest-cases`[^2] replacement since its author has not been active for some time.\r\nI would like to share some my observations and conclusion to start a discussion about what the scope of the feature should be and what steps need to be taken to implement it.\r\n\r\nI will start by giving a brief overview what these plugins do and how they work, followed by my opinion what is in scope for addition to the core of `pytest`. In case of `pytest-cases` this description is heavily simplified.\r\n\r\n## Plugin Overview\r\n\r\n### `pytest-lazy-fixture`[^1]\r\n\r\nThe plugin provides a single feature: it introduces a `LazyFixture` object to reference a fixture inside `pytest.mark.parametrize` and the `params` argument of `pytest.fixture`.\r\n\r\nBecause the referenced fixture maybe parametrized itself or have a parametrized dependency, a `pytest_generate_tests` hook is used after the core test generation to discover transitive parameters by inspecting each `Metafunc.callspec`s `funcargs` and `params` entries for `LazyFixture` objects and __recursively descending__ until no further parameters are found.\r\nThis is done by recalculating a new fixture closure with the referenced fixture included and calling `FixtureManager.pytest_generate_tests` with a new (deep) copied `Metafunc` object with the new fixture closure and finally replacing the `callspec`s in the old `Metafunc` are replaced by the newly calculated ones when ascending.\r\nBecause the added fixture names in the new fixture closure cannot be passed to the `Metafunc` object without influencing all calls, they are dropped at this point and in turn are __not__ considered when reordering the tests and higher scoped fixture maybe initialised late and/or multiple times. Also since the additional parametrizations are applied last instead of in order of the dependencies the parameter id order is wrong.\r\n\r\nThe `LazyFixture` objects are resolved by using the `pytest_run_setup`, `pytest_fixture_setup` and `pytest_run_call` hooks.\r\nIn `pytest_runtest_steup` `item._request._fillfixtures` is replaced with a wrapper that inspects `item.callspec.params` and `item.funcargs` and resolves found `LazyFixtures` before calling the original `_fillfixture` method.\r\nDuring iteration `item.callspec.params` is reordered to account for dependency order and scopes.\r\nIn `pytest_fixture_setup` `request.param` is inspected and if it is a `LazyFixture` resolved, resp. in `pytest_runtest_call` each `item.funcargs` entry is inspected and resolved.\r\n\r\n\r\n### `pytest-cases`[^2]\r\n\r\nThe plugin provides an (_opiniated_[^3]) unified alternative to conventional parametrization. It features a two new decorators for parametrization, `parametrize` and `parametrize_with_cases`, a replacement decorator for `pytest.fixture` and lazily evaluated functions as parameters and fixture reference in form of `FixtureRef` (_`parametrize` can auto detect fixtures and wrap them into a `FixtureRef`_).\r\nThe plugin also provides some more features but to keep the description short I will concentrate on the mentioned featured minus lazy functions I will also not delve into how cases are discovered and just assume we are given a list of functions as cases.\r\n\r\nThe basic idea is offload parametrization to the new `parametrize` decorator and use it for test functions and fixtures (_as well as cases_) to have a unified UX.\r\nThis is achieved by wrapping the function that is decorated to manipulate the signature, creating an intermediate fixture that is parametrized and creating a parameter fixture for each parameter (_if the parameter is a `FixtureRef` this parameter fixture is obviously skipped and the referenced fixture is used_).\r\nThe intermediate fixture depends on all parameter fixtures but during test collection and execution fixtures that are created using the new fixture decorator are selectively disabled.\r\nIndirect parametrization is not allowed if any new feature is used.\r\nThe new fixture decorator does not support the `params` argument but detects parametrization marks and create the parametrization similar to the above mechanism.\r\nIt also wraps the decorated function to inject the mechanism for skipping.\r\nCase parametrization decorator takes a list of function (or a class) and applies the fixture decorator to it and forwards `FixtureRef`s for these to `parametrize`.\r\n\r\nTo achieve the proper parametrized test and proper skipping of all the parameters that are not currently active, the plugin replaces `FixtureManager.getfixtureclosure` and wraps `Metafunc.parametrize` to inject facades into `FuncFixtureInfo.names_closure` and `Metafunc.callspec`.\r\n\r\n_Note: This is a extremely simplified description that hopefully conveys the major points._\r\n\r\n## Feature Scope\r\n\r\nWhile a unified parametrization UX would be nice to have it is most definitely out of scope because it would break most existing code bases and would involve quite a bit of black magic behind the curtains.\r\n\r\nWhat I think is in scope is a reimplementation of `pytest-lazy-fixture`, though I would prefer a name like `FixtureRef`/`FixtureReference` because it better conveys the intended usage/meaning, and the proper calculation of the dependency graph tied to the `Callspec2` objects instead of the `Metafunc` object.\r\nI think that test reordering might also need to be touched.\r\n\r\nBut with a feature that allows fixtures in parametrization and proper dependency calculation writing a plugin the behaves similar to `pytest-cases` and offers a unified parametrization UX is relative simple. As already stated i have an experimental (internal) implementation for an replacement uses a heavily modified version of `pytest-lazy-fixtures` under the hood that mostly works but does some sketchy stuff to inject dependencies.\r\n\r\n\r\n## Proposed Changes\r\nFollowing is a loose and incomplete list of changes/tasks i would propose to tackle this.\r\n\r\n- Investigate and implement calculation of the complete and exact[^4] dependency graph instead of the current fixture closure. Then `names_closure`/`fixturenames` is the iteration in topological sort order, if this order does not exist the graph has an cycle and is invalid. This would also address #5303, #11350 and maybe #2844.\r\n_I am aware that this is computationally expensive. But I think it is either this or recursive algorithms further down the line._\r\n- Do not share the `FuncFixtureInfo` object between all calls to a test and attach it to the callspecs instead of `MetaFunc`. This is similar to what is included in #11298.\r\n- Extend `Metafunc.parametrize` to recalculate the dependency graph. For now this would be only to prune the graph in case of direct parametrization.\r\n- Implement `LazyFixture`/`FixtureRef`. This can be a simple `dataclass` with the name of the fixture and an optional field id for parameter id generation.\r\n- Extend/reimplement `Metafunc.parametrize` to recalculate the dependency graph by adding branches and iterate along it to discover all parametrizations.\r\nIdeally this is done none-recursive.\r\n- Check if the dependency graphs can be used elsewhere. Reordering? Fixture Setup?\r\n- Check how ordering in deeply parametrized dependencies of higher scopes is impacted.\r\n\r\nI would like to reiterate that this post is intended as a starting point for a discussion and not as an definite 'this needs to happen' roadmap.\r\nI would appreciate feedback, comments and any help in making this happen.\r\n\r\n[^1]: https://github.com/TvoroG/pytest-lazy-fixture\r\n[^2]: https://github.com/smarie/python-pytest-cases\r\n[^3]: my words, not the authors\r\n[^4]: i.e. resolved to a single `FixtureDef` instead all of them.</div>",
      "state": "OPEN",
      "createdAt": "2023-10-21T19:38:21Z",
      "updatedAt": "2024-07-25T15:39:47Z",
      "closedAt": null,
      "author": {
        "login": "jgersti"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: proposal"
          },
          {
            "name": "topic: fixtures"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 4
      }
    },
    {
      "number": 11528,
      "title": "Deprecation of datetime.datetime.utcfromtimestamp()",
      "body": "<!--\r\nThanks for submitting an issue!\r\n\r\nQuick check-list while reporting bugs:\r\n-->\r\n\r\n**DeprecationWarning: datetime.datetime.utcfromtimestamp()**\r\nNew Python 3.12 version is deprecating `datetime.datetime.utcfromtimestamp()`. When using `pandas` library within the tests conducted by pytest I get the above mentioned warning, which results in an error because of the way my project is setup. I do have a workaround for now, but I believe this should be fixed.\r\n\r\n**pip list output and OS**\r\nOS: macOS Ventura 13.5\r\n```\r\nPackage         Version\r\n--------------- ------------\r\niniconfig       2.0.0\r\nnumpy           1.26.1\r\npackaging       23.2\r\npandas          2.1.1\r\npip             23.2.1\r\npluggy          1.3.0\r\npytest          7.4.2\r\npython-dateutil 2.8.2\r\npytz            2023.3.post1\r\nsix             1.16.0\r\ntzdata          2023.3\r\n```\r\n\r\n**Minimal sample script that throws the DeprecationWarning**\r\n```\r\nimport pandas\r\n\r\ndef test_sample():\r\n    assert True\r\n```\r\n\r\n**Full warning**\r\n```\r\nDeprecationWarning: datetime.datetime.utcfromtimestamp() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.fromtimestamp(timestamp, datetime.UTC).\r\n    EPOCH = datetime.datetime.utcfromtimestamp(0)\r\n```\r\n\r\n**Setting responsible for raising DeprecationWarning to Error**\r\nIn `pytest.ini`\r\n```\r\nfilterwarnings = \r\n    error:::^((?!<my_package>).)*$.*: ; raise error for all warning, except those coming from my_package\r\n    ignore:datetime.datetime.utcfromtimestamp()*:DeprecationWarning: ; workaround for this particular case\r\n```",
      "state": "CLOSED",
      "createdAt": "2023-10-20T11:10:22Z",
      "updatedAt": "2023-10-20T11:29:15Z",
      "closedAt": "2023-10-20T11:19:52Z",
      "author": {
        "login": "jaroslaw-majka"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 11527,
      "title": "Autouse=True is inherited by shadowing fixtures",
      "body": "### Issue\r\nShadowing a fixture with `autouse=True` makes the shadowing fixture being autoused.\r\n\r\n### Example\r\n```python\r\n@pytest.fixture(name=\"a\", autouse=True)\r\ndef a1():  print(\"autouse=True\")\r\n\r\n@pytest.fixture(name=\"a\", autouse=False)\r\ndef a2(): print(\"autouse=False\")\r\n\r\ndef test_autouse(): pass\r\n```\r\n```\r\n=================================== test session starts ===================================\r\nplatform win32 -- Python 3.11.2, pytest-7.4.2, pluggy-1.2.0 -- \r\ncachedir: .pytest_cache\r\nrootdir: xxx\r\ncollecting ... \r\ncollected 1 item                                                                                                                                   \r\n\r\ntest_example.py::test_autouse autouse=False\r\nPASSED\r\n\r\n=================================== 1 passed in 0.01s ===================================\r\n```\r\n\r\n### Cause\r\nFixtures are resolved by name",
      "state": "CLOSED",
      "createdAt": "2023-10-20T10:40:32Z",
      "updatedAt": "2023-10-20T10:52:25Z",
      "closedAt": "2023-10-20T10:52:25Z",
      "author": {
        "login": "jgersti"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "topic: fixtures"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 11525,
      "title": "Show repr for callables used in an assert directly",
      "body": "With something like\r\n\r\n```python\r\nimport pytest\r\n\r\n@pytest.fixture\r\ndef fixt():\r\n    return 42\r\n\r\ndef test_something():  # missing \"fixt\" argument\r\n    print(fixt)\r\n    assert fixt == 42\r\n```\r\n\r\n(which is a common beginners mistake), pytest prints:\r\n\r\n```\r\n======================================= test session starts ========================================\r\ncollected 1 item\r\n\r\ntmp31nzhe4b.py F                                                                             [100%]\r\n\r\n============================================= FAILURES =============================================\r\n__________________________________________ test_something __________________________________________\r\n\r\n    def test_something():  # missing \"fixt\" argument\r\n        print(fixt)\r\n>       assert fixt == 42\r\nE       assert fixt == 42\r\n\r\n/tmp/ipykernel_77860/2395276065.py:9: AssertionError\r\n--------------------------------------- Captured stdout call ---------------------------------------\r\n<function fixt at 0x7fd7745c4160>\r\n===================================== short test summary info ======================================\r\nFAILED tmp31nzhe4b.py::test_something - assert fixt == 42\r\n======================================== 1 failed in 0.03s =========================================\r\n```\r\n\r\nnotably, without *anything* making it clear that `fixt` is a function, and not the value the user actually expected. Only when we `print(fixt)` it becomes clear that this is a function object and what the mistake was.\r\n\r\nThis is due to:\r\n\r\nhttps://github.com/pytest-dev/pytest/blob/cdddd6d69533c07092c64445a0d42d1fc75c8299/src/_pytest/assertion/rewrite.py#L459-L461\r\n\r\nwhich was originally introduced in 65edf87.\r\n\r\nThe rationale for it can be found in the related issue:\r\n\r\n- #171 \r\n\r\nand it boils down to:\r\n\r\n> I think in some cases it can result in too verbose output, especially when using builtins where you don't really want to have extra information on \"len\", \"callable\" etc.\r\n\r\nand\r\n\r\n> Another reason for this heuristic occurred to me: Many commonly used global names like classes and modules are more nicely displayed by their name rather than their repr.\r\n\r\nI believe this is useful in cases like `assert len(values) == 2` where we really don't need to drill down into what `len` is. However, it hides vital information in the case that one side of the `==` is a global callable directly, rather than it being used as a part of a bigger expression.",
      "state": "CLOSED",
      "createdAt": "2023-10-20T08:01:22Z",
      "updatedAt": "2024-12-07T11:51:28Z",
      "closedAt": "2024-12-07T11:51:27Z",
      "author": {
        "login": "The-Compiler"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "topic: reporting"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 4
      }
    },
    {
      "number": 11523,
      "title": "importorskip variant that uses ModuleNotFoundError",
      "body": "<!--\r\nThanks for suggesting a feature!\r\n\r\nQuick check-list while suggesting features:\r\n-->\r\n\r\n#### What's the problem this feature will solve?\r\nsometimes I install a package eg PyTables and it fails to compile properly and fails with an ImportError with an undefined symbol, however I don't see this in CI because I only do `pytest.importorskip(\"pytables\")`\r\n\r\n#### Describe the solution you'd like\r\na new kwarg to importorskip or a new function that catches ModuleNotFoundError instead of ImportError eg\r\n`importorskip(exc=ModuleNotFoundError)` or `findmoduleorskip(...)`\r\n\r\n#### Alternative Solutions\r\nN/A\r\n\r\n#### Additional context\r\nOriginally asked on discord\r\n",
      "state": "CLOSED",
      "createdAt": "2023-10-19T16:34:33Z",
      "updatedAt": "2024-04-26T07:48:58Z",
      "closedAt": "2024-04-26T07:48:58Z",
      "author": {
        "login": "graingert"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: proposal"
          },
          {
            "name": "good first issue"
          }
        ]
      },
      "milestone": {
        "title": "8.2",
        "dueOn": null
      },
      "comments": {
        "totalCount": 12
      }
    },
    {
      "number": 11522,
      "title": "[bug] - cannot access class attributes when trigger run test",
      "body": "I have a class Entity, a second class PhysicalEntity that heritate from Entity but has a class attributes \"manipulator\", and a third class Molecule. When i trigger Debug Test, performing with a molecule, the step by step, can access the manipulator attribute. But \"Run Test\" mode cannot.\r\n\r\ni'm using a virtual environment on windows. here under the pip freeze (non exhaustive list):\r\n\r\npytest==7.4.2\r\npytest-cov==4.1.0\r\npytest-dotenv==0.5.2\r\npytest-envfiles==0.1.0\r\npytest-timeout==2.2.0\r\npython-dateutil==2.8.2\r\npython-dotenv==1.0.0\r\n\r\nexemple:\r\nself.assertIsInstance(my_entity, Molecule)\r\nmy_entity.manipulator\r\n\r\ni tried many ways to access this attributes (__dict__, Molecule.manipulator, PhysicalEntity.manipulator ... etc)\r\nthe error raised when Run Test : is \"Entity has not attribute \"manipulator\".\r\n\r\nin the code, i have different behavior with the two modes and this issue appears to be the cause.\r\nAny suggestion ?\r\nThks\r\n",
      "state": "CLOSED",
      "createdAt": "2023-10-19T12:02:45Z",
      "updatedAt": "2023-11-05T01:55:56Z",
      "closedAt": "2023-11-05T01:55:56Z",
      "author": {
        "login": "PriveSylvain"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: question"
          },
          {
            "name": "status: needs information"
          },
          {
            "name": "stale"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      }
    },
    {
      "number": 11520,
      "title": "Improve pytest's `Full diff` by coloring it's output",
      "body": "#### What's the problem this feature will solve?\r\n\r\nThe `Full diff` that pytest shows in `-vv` mode is very red and hard to read. Missing, common and extra entries all have the same color!\r\n\r\nFor reference, this is what it looks like:\r\n\r\n![image](https://github.com/pytest-dev/pytest/assets/1672192/7c501be3-a746-40c5-8ca9-6aca5e9c0252)\r\n\r\n#### Describe the solution you'd like\r\n\r\nThis diff is the same kind of diff that people might already be familiar with, typically running `git diff`. Those are often colored already. There is a `pygments` lexer for parsing such diffs.\r\n\r\nAs such, I would propose to enhance the coloring of those diffs when pygments is install, which would give something like:\r\n\r\n![image](https://github.com/pytest-dev/pytest/assets/1672192/8825f0e7-2eab-4be5-9033-8702f1d0faa3)\r\n\r\nWhich I believe is much easier to read and spot differences.\r\n\r\nI'd be happy to implement the solution if you would be willing to accept such a change.\r\n\r\nThis might require passing the terminal writer into the tooling that provides the diff to check whether colors should be enabled however.",
      "state": "CLOSED",
      "createdAt": "2023-10-18T20:10:37Z",
      "updatedAt": "2023-12-22T08:26:57Z",
      "closedAt": "2023-12-22T08:26:57Z",
      "author": {
        "login": "BenjaminSchubert"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "topic: reporting"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 9
      }
    },
    {
      "number": 11519,
      "title": "TypeError when passing a single function to a marker",
      "body": "- [x] a detailed description of the bug or problem you are having\r\n\r\nI'd like to be able to pass a single function to a marker, for use in a fixture later.\r\nI can pass any number of non-functions, like integers.\r\nI can pass two functions, and presumably more.\r\nBut one function results in \"TypeError: foo() takes 0 positional arguments but 1 was given\"\r\n\r\n- [x] output of `pip list` from the virtual environment you are using\r\n\r\n```\r\n$ pip list\r\nPackage    Version\r\n---------- -------\r\niniconfig  2.0.0\r\npackaging  23.2\r\npip        23.3\r\npluggy     1.3.0\r\npytest     7.4.2\r\nsetuptools 65.5.0\r\n```\r\n\r\n- [x] pytest and operating system versions\r\nPython 3.11, pytest 7.4.2, MacOS Ventura 13.0.1\r\n\r\n- [x] minimal example if possible\r\n\r\n**pytest.ini**\r\n```\r\n[pytest]\r\nmarkers =\r\n    no_param: no parameters\r\n    one_param: one parameter\r\n    two_params: two parameters\r\n```\r\n\r\n**test_marker.py**\r\n```\r\nimport pytest\r\n\r\n@pytest.mark.no_param\r\ndef test_no_arg():\r\n    ...\r\n\r\n@pytest.mark.one_param(1)\r\ndef test_one_int():\r\n    ...\r\n\r\n@pytest.mark.two_params(1, 2)\r\ndef test_two_ints():\r\n    ...\r\n\r\ndef foo():\r\n    ...\r\n\r\ndef bar():\r\n    ...\r\n\r\n# doesn't work, throws an exception\r\n#\r\n# @pytest.mark.one_param(foo)\r\n# def test_one_func():\r\n#     ...\r\n#\r\n\r\n@pytest.mark.two_params(foo, bar)\r\ndef test_two_funcs():\r\n    ...\r\n```\r\n\r\n**test_marker_one_func_param.py**\r\n```\r\nimport pytest\r\n\r\ndef foo():\r\n    ...\r\n\r\ndef bar():\r\n    ...\r\n\r\n@pytest.mark.one_param(foo)\r\ndef test_one_func():\r\n    ...\r\n\r\n```\r\n\r\n**0-2 integers, and 2 functions work fine**\r\n```\r\n$ pytest test_marker.py\r\n============================================ test session starts ============================================\r\nplatform darwin -- Python 3.11.6, pytest-7.4.2, pluggy-1.3.0\r\nrootdir: /Users/okken/projects/pytest-param-scope/marker_param\r\nconfigfile: pytest.ini\r\ncollected 4 items                                                                                           \r\n\r\ntest_marker.py ....                                                                                   [100%]\r\n\r\n============================================= 4 passed in 0.01s =============================================\r\n```\r\n\r\n**but one func blows up**\r\n```\r\n$ pytest test_marker_one_func_param.py           \r\n============================================ test session starts ============================================\r\nplatform darwin -- Python 3.11.6, pytest-7.4.2, pluggy-1.3.0\r\nrootdir: /Users/okken/projects/pytest-param-scope/marker_param\r\nconfigfile: pytest.ini\r\ncollected 0 items / 1 error                                                                                 \r\n\r\n================================================== ERRORS ===================================================\r\n______________________________ ERROR collecting test_marker_one_func_param.py _______________________________\r\n../venv/lib/python3.11/site-packages/_pytest/runner.py:341: in from_call\r\n    result: Optional[TResult] = func()\r\n../venv/lib/python3.11/site-packages/_pytest/runner.py:372: in <lambda>\r\n    call = CallInfo.from_call(lambda: list(collector.collect()), \"collect\")\r\n../venv/lib/python3.11/site-packages/_pytest/python.py:531: in collect\r\n    self._inject_setup_module_fixture()\r\n../venv/lib/python3.11/site-packages/_pytest/python.py:545: in _inject_setup_module_fixture\r\n    self.obj, (\"setUpModule\", \"setup_module\")\r\n../venv/lib/python3.11/site-packages/_pytest/python.py:310: in obj\r\n    self._obj = obj = self._getobj()\r\n../venv/lib/python3.11/site-packages/_pytest/python.py:528: in _getobj\r\n    return self._importtestmodule()\r\n../venv/lib/python3.11/site-packages/_pytest/python.py:617: in _importtestmodule\r\n    mod = import_path(self.path, mode=importmode, root=self.config.rootpath)\r\n../venv/lib/python3.11/site-packages/_pytest/pathlib.py:567: in import_path\r\n    importlib.import_module(module_name)\r\n/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n<frozen importlib._bootstrap>:1204: in _gcd_import\r\n    ???\r\n<frozen importlib._bootstrap>:1176: in _find_and_load\r\n    ???\r\n<frozen importlib._bootstrap>:1147: in _find_and_load_unlocked\r\n    ???\r\n<frozen importlib._bootstrap>:690: in _load_unlocked\r\n    ???\r\n../venv/lib/python3.11/site-packages/_pytest/assertion/rewrite.py:178: in exec_module\r\n    exec(co, module.__dict__)\r\ntest_marker_one_func_param.py:11: in <module>\r\n    @pytest.mark.one_param(foo)\r\nE   TypeError: foo() takes 0 positional arguments but 1 was given\r\n========================================== short test summary info ==========================================\r\nERROR test_marker_one_func_param.py - TypeError: foo() takes 0 positional arguments but 1 was given\r\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n============================================= 1 error in 0.20s ==============================================\r\n```",
      "state": "CLOSED",
      "createdAt": "2023-10-18T16:45:04Z",
      "updatedAt": "2023-10-18T18:24:15Z",
      "closedAt": "2023-10-18T16:52:12Z",
      "author": {
        "login": "okken"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      }
    },
    {
      "number": 11518,
      "title": "ENH: mechanism for failing when warnings are issued without conversion to exceptions?",
      "body": "Maybe this is rather niche, or more of a usage query, but I think it has confused us a little bit. One conundrum we occasionally face in SciPy is that the heavily-used NumPy library sometimes decides to issue warnings for some function calls, but the same code paths can also have `try/except` guards for various reasons.\r\n\r\nSo, when we try to proactively turn warnings into errors in `filterwarnings` in our `pytest.ini`, what we end up with is a case where a warning becomes invisible to our testsuite/CI testing, and we miss out on i.e., deprecation warnings by the very mechanism we are trying to use to discover them, because the `try/except` block is triggered via `pytest` and then handled gracefully by NumPy to end up in a warning-free scenario!\r\n\r\nDo you think there's a valid feature request in here? Or should we just resign ourselves to i.e., a CI job that runs the testsuite with the \"warnings->errors\" disabled and then greps on the `pytest` summary and errors out on non-zero warnings accounting?\r\n\r\nRelated:\r\n- https://github.com/numpy/numpy/pull/24378\r\n- https://github.com/scipy/scipy/issues/18781",
      "state": "OPEN",
      "createdAt": "2023-10-18T16:01:43Z",
      "updatedAt": "2023-10-21T18:12:24Z",
      "closedAt": null,
      "author": {
        "login": "tylerjereddy"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "plugin: warnings"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 11516,
      "title": "ValueError: fixture is being applied more than once to the same function",
      "body": "@pytest.mark.order(3)\r\ndef testAddEquipment(Header, AddEquipmentAPI , AddEquipmentPayLoad, BaseUrl ,  GetGroupbyFactory ,  GetDeviceId):\r\n    print(AddEquipmentPayLoad)\r\n    response = requests.post(url=AddEquipmentAPI, json=AddEquipmentPayLoad, headers=Header)\r\n    StatusCode = response.status_code\r\n    print(StatusCode)\r\n    print(response.json())",
      "state": "CLOSED",
      "createdAt": "2023-10-18T12:14:04Z",
      "updatedAt": "2023-11-09T01:49:06Z",
      "closedAt": "2023-11-09T01:49:06Z",
      "author": {
        "login": "RUHMA126"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "status: needs information"
          },
          {
            "name": "stale"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 11515,
      "title": "py312: latest pytest still throws deprecations warnings with py312",
      "body": "At this moment both pytest main branch and latest release (7.4.2) do still produce deprecation warnings when run under pytest 3.12 and that is a problem for anyone that is following the practice of treating warnings as errors during testing.\r\n\r\nI already seen projects going the long route of disabling these but the better approach is to address them and ensure that current versions do not produce them.\r\n\r\nExample: https://sourcegraph.com/github.com/home-assistant/core/-/blob/pyproject.toml?L495-496\r\n\r\n```\r\n  .tox/py/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:916: DeprecationWarning: ast.Str is deprecated and will be removed in Python 3.14; use ast.Constant instead\r\n    template = ast.BinOp(assertmsg, ast.Add(), ast.Str(explanation))\r\n```\r\n\r\nLatest stable version, should not produce any deprecation warnings coming directly from its own code with py312.",
      "state": "CLOSED",
      "createdAt": "2023-10-18T10:37:38Z",
      "updatedAt": "2023-10-18T15:40:32Z",
      "closedAt": "2023-10-18T15:40:31Z",
      "author": {
        "login": "ssbarnea"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 4
      }
    },
    {
      "number": 11514,
      "title": "Improve error message in presence of conflicting options",
      "body": "<!--\r\nThanks for suggesting a feature!\r\n\r\nQuick check-list while suggesting features:\r\n-->\r\n\r\n#### What's the problem this feature will solve?\r\n<!-- What are you trying to do, that you are unable to achieve with pytest as it currently stands? -->\r\nWhen 2 plugins add/register the command-line option, the error displayed by pytest is not clear enough.\r\nIt would be nice if pytest could display the list of plugins adding the same option.\r\n\r\n#### Describe the solution you'd like\r\n<!-- A clear and concise description of what you want to happen. -->\r\nThe actual error is:\r\n\r\n```\r\npytest --help\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/harmin/.local/bin/pytest\", line 8, in <module>\r\n    sys.exit(console_main())\r\n  File \"/home/harmin/.local/lib/python3.8/site-packages/_pytest/config/__init__.py\", line 192, in console_main\r\n    code = main()\r\n  File \"/home/harmin/.local/lib/python3.8/site-packages/_pytest/config/__init__.py\", line 150, in main\r\n    config = _prepareconfig(args, plugins)\r\n  File \"/home/harmin/.local/lib/python3.8/site-packages/_pytest/config/__init__.py\", line 331, in _prepareconfig\r\n    config = pluginmanager.hook.pytest_cmdline_parse(\r\n  File \"/usr/local/lib/python3.8/dist-packages/pluggy/_hooks.py\", line 265, in __call__\r\n    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\r\n  File \"/usr/local/lib/python3.8/dist-packages/pluggy/_manager.py\", line 80, in _hookexec\r\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\r\n  File \"/usr/local/lib/python3.8/dist-packages/pluggy/_callers.py\", line 55, in _multicall\r\n    gen.send(outcome)\r\n  File \"/home/harmin/.local/lib/python3.8/site-packages/_pytest/helpconfig.py\", line 104, in pytest_cmdline_parse\r\n    config: Config = outcome.get_result()\r\n  File \"/usr/local/lib/python3.8/dist-packages/pluggy/_result.py\", line 60, in get_result\r\n    raise ex[1].with_traceback(ex[2])\r\n  File \"/usr/local/lib/python3.8/dist-packages/pluggy/_callers.py\", line 39, in _multicall\r\n    res = hook_impl.function(*args)\r\n  File \"/home/harmin/.local/lib/python3.8/site-packages/_pytest/config/__init__.py\", line 1075, in pytest_cmdline_parse\r\n    self.parse(args)\r\n  File \"/home/harmin/.local/lib/python3.8/site-packages/_pytest/config/__init__.py\", line 1430, in parse\r\n    args = self._parser.parse_setoption(\r\n  File \"/home/harmin/.local/lib/python3.8/site-packages/_pytest/config/argparsing.py\", line 143, in parse_setoption\r\n    parsedoption = self.parse(args, namespace=namespace)\r\n  File \"/home/harmin/.local/lib/python3.8/site-packages/_pytest/config/argparsing.py\", line 113, in parse\r\n    self.optparser = self._getparser()\r\n  File \"/home/harmin/.local/lib/python3.8/site-packages/_pytest/config/argparsing.py\", line 130, in _getparser\r\n    arggroup.add_argument(*n, **a)\r\n  File \"/usr/lib/python3.8/argparse.py\", line 1398, in add_argument\r\n    return self._add_action(action)\r\n  File \"/usr/lib/python3.8/argparse.py\", line 1602, in _add_action\r\n    action = super(_ArgumentGroup, self)._add_action(action)\r\n  File \"/usr/lib/python3.8/argparse.py\", line 1412, in _add_action\r\n    self._check_conflict(action)\r\n  File \"/usr/lib/python3.8/argparse.py\", line 1551, in _check_conflict\r\n    conflict_handler(action, confl_optionals)\r\n  File \"/usr/lib/python3.8/argparse.py\", line 1560, in _handle_conflict_error\r\n    raise ArgumentError(action, message % conflict_string)\r\nargparse.ArgumentError: argument --browser: conflicting option string: --browser\r\n```\r\n\r\nIt would be nice to add or replace the last line with a list of plugins adding the same option.\r\n`argparse.ArgumentError: argument --browser: conflicting option string: --browser added by plugins: ['plugin1', 'plugin2']`\r\n\r\nor at least, a more clear, generic message like:\r\n`argparse.ArgumentError: argument --browser: conflicting option string: --browser added by two or more plugins.`\r\n\r\n<!-- Provide examples of real-world use cases that this would enable and how it solves the problem described above. -->\r\nAs time passes by, the number of third-party plugins is going to grow and the risk of command-line option collisions will become inevitable, making the co-existence of some plugins impossible.\r\n\r\nA more clear message can help understand the user which plugins are incompatible, so the user can install them in separate python virtual environments.\r\n\r\n#### Alternative Solutions\r\n<!-- Have you tried to workaround the problem using a pytest plugin or other tools? Or a different approach to solving this issue? Please elaborate here. -->\r\nNo workaround.\r\n\r\n#### Additional context\r\n<!-- Add any other context, links, etc. about the feature here. -->\r\n",
      "state": "OPEN",
      "createdAt": "2023-10-18T07:42:47Z",
      "updatedAt": "2024-02-05T20:32:04Z",
      "closedAt": null,
      "author": {
        "login": "harmin-parra"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: enhancement"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 11512,
      "title": "Retain execution context under handled exception",
      "body": "#### What's the problem this feature will solve?\r\n\r\nI've got a test similar to the following with a nested exception:\r\n\r\n```\r\ndef raise_something():\r\n  raise TypeError()\r\n\r\n\r\ndef test_something():\r\n  try:\r\n    raise_something()\r\n  except TypeError:\r\n    raise ValueError()\r\n```\r\n\r\nRunning the test produces:\r\n\r\n```\r\n    def raise_something():\r\n>     raise TypeError()\r\nE     TypeError\r\n\r\ntest.py:2: TypeError\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\n    def test_something():\r\n      try:\r\n        raise_something()\r\n      except TypeError:\r\n>       raise ValueError()\r\nE       ValueError\r\n\r\ntest.py:9: ValueError\r\n```\r\n\r\nI'd like to be able to inspect the stack where `raise_something()` failed. Best I can tell, that context is unreachable.\r\n\r\nIf I use `--pdb`, the code breaks at test.py:9 with the `ValueError`, but by the time pytest has handled the error, `sys.exc_info()` no longer points to the execution context where the failure occurred, but instead may be `(None, None, None)` or perhaps an unrelated context like `(<class 'AttributeError'>, AttributeError(\"'PytestPdbWrapper' object has no attribute 'do_sys'\"), <traceback object at 0x101f26c40>)`. Therefore, I'm unable to take advantages of [techniques to trace](https://stackoverflow.com/a/67112402/70170) to the inner exception stack.\r\n\r\n#### Describe the solution you'd like\r\n\r\nIn the pdb context or in a global variable or in some other way, expose the original unhandled exception context.\r\n",
      "state": "OPEN",
      "createdAt": "2023-10-17T15:48:22Z",
      "updatedAt": "2023-11-05T10:32:20Z",
      "closedAt": null,
      "author": {
        "login": "jaraco"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: proposal"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 4
      }
    },
    {
      "number": 11511,
      "title": "`--pyargs` test discovery fails in frozen application",
      "body": "I am having trouble with `--pyargs` test discovery in a frozen application. I am using Windows 10 22H2, pytest 7.4.2, pyinstaller 6.1.0.\r\n\r\n#### Minimal example\r\n\r\n`app.py`\r\n```python\r\nimport sys\r\n\r\nimport pytest\r\n\r\nimport folder.test_file\r\n\r\nsys.exit(pytest.main(sys.argv[1:]))\r\n```\r\n\r\n`folder\\test_file.py`\r\n```python\r\nprint(\"Hello world!\")\r\n\r\ndef test_pass():\r\n    pass\r\n```\r\n\r\n`run.bat`\r\n```batch\r\n@echo off\r\n\r\nrem Run before deployment - import and test discovery work\r\npython -c \"import folder.test_file\"\r\npytest --pyargs folder\r\n\r\nrem Deploy\r\nif exist dist\\app.exe del dist\\app.exe\r\npyinstaller --log-level=DEPRECATION --collect-submodules folder --hidden-import folder --hidden-import folder.test_file --onefile app.py\r\n\r\nrem Rename folder\r\nren folder folder.bak\r\n\r\nrem Run after deployment - import works, but test discovery does not\r\ndist\\app.exe --pyargs folder\r\n\r\nrem Rename folder back\r\nren folder.bak folder\r\n```\r\n\r\nOutput:\r\n```\r\nHello world!\r\n======================================================================================= test session starts ======================================================================================= \r\nplatform win32 -- Python 3.11.6, pytest-7.4.2, pluggy-1.3.0\r\nPySide6 6.5.3 -- Qt runtime 6.5.3 -- Qt compiled 6.5.3\r\nrootdir: C:\\Code\\project\r\nplugins: pylama-8.4.1, qt-4.2.0\r\ncollected 1 item\r\n\r\nfolder\\test_file.py .                                                                                                                                                                        [100%] \r\n\r\n======================================================================================== 1 passed in 0.05s ======================================================================================== \r\nHello world!\r\n======================================================================================= test session starts ======================================================================================= \r\nplatform win32 -- Python 3.11.6, pytest-7.4.2, pluggy-1.3.0\r\nrootdir: C:\\Code\\project\r\ncollected 0 items\r\n\r\n====================================================================================== no tests ran in 0.00s ====================================================================================== \r\nERROR: module or package not found: folder (missing __init__.py?)\r\n```\r\n\r\nSince `import` works, I guess that this is not primarily a `pyinstaller` issue, but do let me know if you think it is :)",
      "state": "OPEN",
      "createdAt": "2023-10-17T07:23:10Z",
      "updatedAt": "2023-10-21T17:19:28Z",
      "closedAt": null,
      "author": {
        "login": "bersbersbers"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "topic: collection"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 5
      }
    },
    {
      "number": 11508,
      "title": "Option to retry N times until test passes",
      "body": "#### What's the problem this feature will solve?\r\nSome tests are intermittently fail, For example distribution could run tests for multiple packages on quite loaded server (because things are parallelized)) and in that case race conditions occur. Or test could be coded unreliably. There could be slow virtual machine that cause timeouts. These factors could change environment to be sometimes different from when upstream run tests manually on their desktop. If manual run fails upstream developer could just rerun it again. But when we run multiple tests in automated way this could break workflows, send alerts, etc. making life of package maintainers harder.\r\n\r\n#### Describe the solution you'd like\r\n`ctest` have option like this\r\n```\r\n  --repeat until-pass:<n>      = Allow each test to run up to <n> times in order to pass\r\n```\r\nThis could be good for **pytest** to support something similar to help with 'probabilistic' tests.\r\n\r\nFixing test could be very time consuming task, end especially for subtle race conditions. In that case package maintainers tend to disable tests sometimes skipping whole test run. Of course this is wrong strategy but this happens.\r\n\r\nAs alternative to this maintainer could run pytest with something like `--repeat-until-pass 3` greatly lowering probability of false positive test failures.\r\n\r\n#### Alternative Solutions\r\nAlternative solutions are: to fix test (hard and human time consuming); to not run particular test (sometimes this covers almost all tests); to not run test suite at all (stains karma); to repeat whole test run (could take very long time when there are a lot of tests).\r\n",
      "state": "CLOSED",
      "createdAt": "2023-10-16T15:16:57Z",
      "updatedAt": "2023-10-16T15:44:11Z",
      "closedAt": "2023-10-16T15:18:25Z",
      "author": {
        "login": "vt-alt"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 4
      }
    },
    {
      "number": 11507,
      "title": "Documentation: \"Managing pytest\u2019s output\" should mention `-q` and `-s`",
      "body": "Looking at https://docs.pytest.org/en/7.1.x/how-to/output.html, I am missing references to command line options `-q` (`--quiet `) and `-s` (`--capture`), which clearly have an influence on `pytest`s output.",
      "state": "CLOSED",
      "createdAt": "2023-10-16T07:50:34Z",
      "updatedAt": "2023-10-27T17:35:47Z",
      "closedAt": "2023-10-27T17:35:47Z",
      "author": {
        "login": "bersbersbers"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: docs"
          },
          {
            "name": "good first issue"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 5
      }
    },
    {
      "number": 11503,
      "title": "FixtureRequest.getfixturevalue no longer throwing FixtureLookupError if the user doesn't set an option via command-line",
      "body": "<!--\r\nThanks for submitting an issue!\r\n\r\nQuick check-list while reporting bugs:\r\n-->\r\n\r\nI have a plugin that can accept the `--browser` option via the command-line\r\n\r\nIn `pytest_runtest_makereport` hook, I have this piece of code to detect if the option was set in the command-line\r\n\r\n```\r\nfeature_request = item.funcargs['request']\r\n# Is the 'browser' fixture being used?\r\ntry:\r\n    feature_request.getfixturevalue('browser')\r\nexcept pytest.FixtureLookupError:\r\n    return\r\n```\r\n\r\nThis code doesn't work anymore in pytest v7.4.2\r\n\r\nIn pytest v7.4.2, if an option is not set by the user, `getfixturevalue` returns `None` instead of throwing `FixtureLookupError`.\r\n\r\nWas this change intentional ? or by accident ?\r\n\r\npip list:\r\n\r\n```\r\nPackage                Version\r\n---------------------- --------------------\r\nalabaster              0.7.8\r\napt-clone              0.2.1\r\napturl                 0.5.2\r\narrow                  1.2.3\r\nasn1                   2.6.0\r\nastroid                2.15.6\r\nattrs                  22.2.0\r\nBabel                  2.6.0\r\nbcrypt                 4.0.1\r\nbeautifulsoup4         4.8.2\r\nbinaryornot            0.4.4\r\nbleach                 6.0.0\r\nblinker                1.4\r\nBrlapi                 0.7.0\r\nbsddb3                 6.2.7\r\nbuild                  0.10.0\r\ncertifi                2023.7.22\r\ncffi                   1.15.1\r\nchardet                3.0.4\r\ncharset-normalizer     3.2.0\r\nClick                  7.0\r\ncolorama               0.4.3\r\ncommand-not-found      0.3\r\nconfigobj              5.0.6\r\ncookiecutter           2.2.3\r\ncryptography           41.0.1\r\ncupshelpers            1.0\r\ndbus-python            1.2.16\r\ndefer                  1.0.6\r\ndill                   0.3.7\r\ndistlib                0.3.7\r\ndistro                 1.4.0\r\ndistro-info            0.23+ubuntu1.1\r\ndocutils               0.20.1\r\nentrypoints            0.3\r\nenum-compat            0.0.3\r\nexceptiongroup         1.1.1\r\nfilelock               3.12.4\r\nflake8                 6.1.0\r\nflit                   3.9.0\r\nflit_core              3.9.0\r\ngrpcio                 1.16.1\r\nh11                    0.14.0\r\nhtml5lib               1.0.1\r\nhttplib2               0.14.0\r\nidna                   2.8\r\nifaddr                 0.1.6\r\nimagesize              1.2.0\r\nIMDbPY                 6.8\r\nimportlib-metadata     6.8.0\r\nimportlib-resources    5.12.0\r\niniconfig              2.0.0\r\nisort                  5.12.0\r\nJinja2                 3.1.2\r\njsonschema             4.17.3\r\nkeyring                18.0.1\r\nlaunchpadlib           1.10.13\r\nlazr.restfulclient     0.14.2\r\nlazr.uri               1.0.3\r\nlazy-object-proxy      1.9.0\r\nldap3                  2.9.1\r\nlouis                  3.12.0\r\nlxml                   4.5.0\r\nmacaroonbakery         1.3.1\r\nMako                   1.1.0\r\nMarkdown               3.1.1\r\nmarkdown-it-py         3.0.0\r\nMarkupSafe             2.1.3\r\nmccabe                 0.7.0\r\nmdurl                  0.1.2\r\nmenulibre              2.2.1\r\nmeson                  0.53.2\r\nmutagen                1.45.1\r\nmypy                   1.5.1\r\nmypy-extensions        1.0.0\r\nmysqlclient            1.4.4\r\nnemo-emblems           5.2.0\r\nnetaddr                0.7.19\r\nnetifaces              0.10.4\r\noauthlib               3.1.0\r\nonboard                1.4.1\r\noutcome                1.2.0\r\npackaging              20.3\r\nPAM                    0.4.2\r\nparamiko               3.1.0\r\npexpect                4.6.0\r\nPillow                 7.0.0\r\npip                    23.2.1\r\npkginfo                1.9.6\r\npkgutil_resolve_name   1.3.10\r\nplatformdirs           3.10.0\r\npluggy                 1.0.0\r\nprotobuf               3.6.1\r\npsutil                 5.5.1\r\npuddletag              2.0.1\r\npy                     1.11.0\r\npyasn1                 0.4.8\r\npycairo                1.16.2\r\npyclean                2.7.0\r\npycodestyle            2.11.0\r\npycparser              2.21\r\npycrypto               2.6.1\r\npycups                 1.9.73\r\npycurl                 7.43.0.2\r\npyflakes               3.1.0\r\nPygments               2.15.1\r\nPyGObject              3.36.0\r\nPyICU                  2.4.2\r\npyinotify              0.9.6\r\nPyJWT                  1.7.1\r\npylint                 2.17.5\r\npymacaroons            0.13.0\r\nPyNaCl                 1.5.0\r\npyOpenSSL              23.2.0\r\npyparsing              2.4.6\r\npyparted               3.11.2\r\npyproject_hooks        1.0.0\r\nPyQt5                  5.14.1\r\npyRFC3339              1.1\r\npyrsistent             0.19.3\r\npysftp                 0.2.9\r\nPySocks                1.7.1\r\npytest                 7.4.2\r\npytest-html            4.0.2\r\npytest-metadata        3.0.0\r\npython-apt             2.0.1+ubuntu0.20.4.1\r\npython-dateutil        2.8.2\r\npython-debian          0.1.36+ubuntu1.1\r\npython-Levenshtein     0.12.0\r\npython-magic           0.4.16\r\npython-slugify         8.0.1\r\npython-xapp            2.2.1\r\npython-xlib            0.23\r\npythondialog           3.4.0\r\npytz                   2019.3\r\npyxdg                  0.26\r\nPyYAML                 6.0.1\r\nqrcode                 6.1\r\nreadme-renderer        40.0\r\nreportlab              3.5.34\r\nrequests               2.31.0\r\nrequests-file          1.4.3\r\nrequests-toolbelt      1.0.0\r\nrequests-unixsocket    0.2.0\r\nrfc3986                2.0.0\r\nrich                   13.5.0\r\nroman                  2.0.0\r\nruff                   0.0.287\r\nSecretStorage          2.3.1\r\nselenium               4.13.0\r\nsetproctitle           1.1.10\r\nsetuptools             68.2.2\r\nsimplejson             3.16.0\r\nsip                    4.19.21\r\nsix                    1.14.0\r\nsniffio                1.3.0\r\nsortedcontainers       2.4.0\r\nsoupsieve              1.9.5\r\nSphinx                 1.8.5\r\nsystemd-python         234\r\ntext-unidecode         1.3\r\ntinycss2               1.0.2\r\ntldextract             2.2.1\r\ntomli                  2.0.1\r\ntomli_w                1.0.0\r\ntomlkit                0.12.1\r\ntqdm                   4.65.0\r\ntrio                   0.22.2\r\ntrio-websocket         0.10.3\r\ntwine                  4.0.2\r\ntyping_extensions      4.7.1\r\nubuntu-advantage-tools 8001\r\nubuntu-drivers-common  0.0.0\r\nufw                    0.36\r\nUnidecode              1.1.1\r\nurllib3                2.0.4\r\nvboxapi                1.0\r\nvirtualenv             20.24.5\r\nwadllib                1.3.3\r\nwebencodings           0.5.1\r\nwheel                  0.34.2\r\nwrapt                  1.15.0\r\nwsproto                1.2.0\r\nxkit                   0.0.0\r\nxlrd                   1.1.0\r\nyoutube-dl             2021.4.26\r\nzipp                   3.15.0\r\n```\r\n\r\n- [ x ] a detailed description of the bug or problem you are having\r\n- [ x ] output of `pip list` from the virtual environment you are using\r\n- [ x ] pytest and operating system versions\r\n- [ x ] minimal example if possible\r\n",
      "state": "CLOSED",
      "createdAt": "2023-10-14T09:09:14Z",
      "updatedAt": "2023-10-14T09:25:46Z",
      "closedAt": "2023-10-14T09:25:46Z",
      "author": {
        "login": "harmin-parra"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 11502,
      "title": "Unexpected PytestCacheWarning when passing /dev/null as config file for pytest",
      "body": "While not really a serious bug, it seems confusing to get this behavior:\r\n\r\n```\r\n$ pytest --config-file=/dev/null --collect-only tests/fixtures/duplicate_names\r\n============================================================================================= test session starts =============================================================================================\r\nplatform darwin -- Python 3.12.0, pytest-7.4.2, pluggy-1.3.0\r\nTest order randomisation NOT enabled. Enable with --random-order or --random-order-bucket=<bucket_type>\r\nrootdir: /dev\r\nconfigfile: null\r\nplugins: random-order-1.1.0, mock-3.11.1, plus-0.4.1.dev2, xdist-3.3.1, libtmux-0.23.2\r\ncollected 2 items                                                                                                                                                                                             \r\nrun-last-failure: no previously failed tests, not deselecting items.\r\n\r\n<Module test_a.py>\r\n  <Function test>\r\n<Module test_b.py>\r\n  <Function test>\r\n\r\n============================================================================================== warnings summary ===============================================================================================\r\n../../../.asdf/installs/python/3.12.0/lib/python3.12/site-packages/_pytest/stepwise.py:56\r\n  /Users/ssbarnea/.asdf/installs/python/3.12.0/lib/python3.12/site-packages/_pytest/stepwise.py:56: PytestCacheWarning: could not create cache path /dev/.pytest_cache/v/cache/stepwise: [Errno 1] Operation not permitted: '/dev/.pytest_cache'\r\n    session.config.cache.set(STEPWISE_CACHE_DIR, [])\r\n\r\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\r\n```\r\n\r\nI wanted to disable local config on purpose for debugging some behaviors and passing `/dev/null` is quite a common approach. Also, I would argue that having the config file on a read-only location might happen in real life.\r\n\r\nIs there a way to avoid this warning?",
      "state": "OPEN",
      "createdAt": "2023-10-13T15:42:29Z",
      "updatedAt": "2024-02-17T20:28:08Z",
      "closedAt": null,
      "author": {
        "login": "ssbarnea"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: bug"
          },
          {
            "name": "topic: config"
          },
          {
            "name": "plugin: stepwise"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 11500,
      "title": "Fixture scope seems to be ignored when running full suite",
      "body": "Hey there, folks!\r\n\r\nFirst and foremost, thanks for the amazing work you all do on the `pytest` module; I use it in every single one of my projects. I'd also like to clarify that this **might** be user error, but I've been experimenting and googling, and I've never seen this happen before (because the fixture is not being imported anywhere, and it still happens when moving the fixture to the `conftest.py` file).\r\n\r\n# The Issue\r\n\r\nPytest version: `7.4.2`\r\n<details>\r\n<summary>Pip list</summary>\r\n\r\n```\r\nPackage                Version   Editable project location\r\n---------------------- --------- -----------------------------------\r\nalembic                1.9.2\r\naniso8601              9.0.1\r\nastroid                2.13.3\r\nbcrypt                 4.0.1\r\nblack                  22.12.0\r\nboto3                  1.28.53\r\nbotocore               1.31.53\r\ncertifi                2023.7.22\r\ncffi                   1.15.1\r\ncharset-normalizer     3.2.0\r\nclick                  8.1.3\r\ncryptography           41.0.4\r\ndill                   0.3.6\r\nenvirons               9.5.0\r\nexceptiongroup         1.1.0\r\nFlask                  2.2.2\r\nFlask-Bcrypt           1.0.1\r\nFlask-Cors             3.0.10\r\nflask-marshmallow      0.14.0\r\nFlask-Migrate          4.0.3\r\nFlask-RESTful          0.3.9\r\nFlask-SQLAlchemy       3.0.3\r\ngunicorn               20.1.0\r\nidna                   3.4\r\niniconfig              2.0.0\r\nisort                  5.12.0\r\nitsdangerous           2.1.2\r\nJinja2                 3.1.2\r\njmespath               1.0.1\r\nlazy-object-proxy      1.9.0\r\nMako                   1.2.4\r\nMarkupSafe             2.1.2\r\nmarshmallow            3.19.0\r\nmarshmallow-enum       1.5.1\r\nmarshmallow-sqlalchemy 0.28.1\r\nmccabe                 0.7.0\r\nmoto                   4.2.4\r\nmypy-extensions        0.4.3\r\npackaging              23.0\r\npathspec               0.11.0\r\npip                    22.3.1\r\nplatformdirs           2.6.2\r\npluggy                 1.0.0\r\npsycopg2               2.9.5\r\npycparser              2.21\r\nPyJWT                  2.6.0\r\npylint                 2.15.10\r\npytest                 7.4.2\r\npython-dateutil        2.8.2\r\npython-dotenv          0.21.1\r\npytz                   2022.7.1\r\nPyYAML                 6.0.1\r\nrequests               2.31.0\r\nresponses              0.23.3\r\ns3transfer             0.6.2\r\nsetuptools             67.0.0\r\nsix                    1.16.0\r\nSQLAlchemy             2.0.0\r\ntomli                  2.0.1\r\ntomlkit                0.11.6\r\ntypes-PyYAML           6.0.12.12\r\ntyping_extensions      4.4.0\r\nurllib3                1.26.16\r\nWerkzeug               2.2.2\r\nwheel                  0.38.4\r\nwrapt                  1.14.1\r\nxmltodict              0.13.0\r\n```\r\n\r\n</details>\r\n\r\n\r\nOk, so it seems the `scope` argument has some.. let's say \"unexpected\" behavior to it. I have a fixture that needs to run once, *and only once*. If it runs again, the fixture will fail, throwing an error and causing the tests that rely on it to fail as well. All good, there's an option for that, `scope=session`. This fixture is only used in a single module of tests, so it lives there in the same module, and is never accessed outside said module.\r\n\r\nHere's the rub:\r\n\r\n\u2705  Running an individual test in said module using `poetry run pytest tests/test_a_thingy.py::one_of_my_tests`\r\n\u2705  Running the entire module of tests using `poetry run pytest tests/test_a_thingy.py`\r\n\u274c  Running the entire suite of tests using `poetry run pytest`\r\n\r\nOn the last execution vector, it looks like every test in the module fails, and the caught exception is raised inside the fixture (due to being run multiple times). I have also tried this with `scope=module`, but to no avail: the same failures occur when running the entire suite.\r\n\r\nIf I'm missing something, please let me know where to look.\r\n\r\nCheers!\r\n\r\n\r\nFile layout:\r\n```\r\nproject/\r\n  ...\r\ntests/\r\n  serializers/\r\n    test_a_thing.py\r\n    ...\r\n  ...\r\n```\r\n\r\n`test_a_thing.py` example layout:\r\n\r\n```python\r\nimport pytest\r\n\r\n@pytest.fixture(scope=\"session\")\r\ndef only_once():\r\n    # if this is run more than once, it throws an easily identifiable exception\r\n   ...\r\n\r\ndef test1(only_once):\r\n    ...\r\n\r\ndef test2(only_once):\r\n   ...\r\n\r\n# many more tests in this file, all of which rely on the \"only_once\" fixture\r\n```\r\n\r\nNote: I have also attempted to move the fixture to `conftest.py`, but I arrive at the same error.",
      "state": "CLOSED",
      "createdAt": "2023-10-12T14:36:32Z",
      "updatedAt": "2023-10-12T22:02:33Z",
      "closedAt": "2023-10-12T20:41:31Z",
      "author": {
        "login": "shonteag"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 4
      }
    },
    {
      "number": 11497,
      "title": "Presumably spelling error in _pytest.outcomes: The bash script for starteding",
      "body": "<!--\r\nThanks for submitting an issue!\r\n\r\nQuick check-list while reporting bugs:\r\n-->\r\n\r\n- [ ] a detailed description of the bug or problem you are having\r\n- [ ] output of `pip list` from the virtual environment you are using\r\n- [ ] pytest and operating system versions\r\n- [ ] minimal example if possible\r\n",
      "state": "CLOSED",
      "createdAt": "2023-10-11T07:44:37Z",
      "updatedAt": "2023-10-26T11:09:38Z",
      "closedAt": "2023-10-26T11:09:37Z",
      "author": {
        "login": "AvokadoSandwich"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "status: needs information"
          },
          {
            "name": "stale"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 11495,
      "title": "option to denote tests using a decorator",
      "body": "<!--\r\nThanks for suggesting a feature!\r\n\r\nQuick check-list while suggesting features:\r\n-->\r\n\r\n#### What's the problem this feature will solve?\r\nrelying on the function name to determine whether or not it's a test is not that reliable, and can lead to regular functions being mistakenly identified as tests (eg. #11494)\r\n\r\n#### Describe the solution you'd like\r\nan option to use a decorator to denote tests instead:\r\n##### before\r\n```py\r\ndef test_foo():\r\n    ...\r\n```\r\n##### after\r\n```py\r\nfrom pytest import test\r\n\r\n@test\r\ndef foo():\r\n    ...\r\n```\r\n\r\n#### Alternative Solutions\r\ncan probably be achieved with a plugin, but first party support would be nice\r\n",
      "state": "CLOSED",
      "createdAt": "2023-10-11T02:29:33Z",
      "updatedAt": "2023-11-08T11:11:14Z",
      "closedAt": "2023-11-08T11:11:13Z",
      "author": {
        "login": "DetachHead"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: proposal"
          },
          {
            "name": "topic: collection"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 11494,
      "title": "functions starting with `test_` in non-test modules are incorrectly collected as tests when imported from a `test_` module",
      "body": "<!--\r\nThanks for submitting an issue!\r\n\r\nQuick check-list while reporting bugs:\r\n-->\r\n\r\n- [X] a detailed description of the bug or problem you are having\r\n  when importing a function where its name starts with `test_` from a module that would normally be ignored by pytest, it gets incorrectly recognized as a test.\r\n\r\n- [X] output of `pip list` from the virtual environment you are using\r\n  ```\r\n  Package    Version\r\n  ---------- -------\r\n  pip        22.3.1 \r\n  setuptools 65.5.0\r\n  ```\r\n\r\n- [X] pytest and operating system versions\r\n  pytest 7.4.2, windows 10\r\n\r\n- [X] minimal example if possible\r\n  ```py\r\n  # some_module/utils.py\r\n  def test_not_a_test():\r\n      \"\"\"this function is incorrectly detected as a test when imported from test_foo.py\"\"\"\r\n  \r\n  # test_foo.py\r\n  from some_module.utils import test_not_a_test\r\n\r\n  def test_foo():\r\n      test_not_a_test()\r\n  ```\r\n\r\nwhen collecting, pytest should check the module of each function to make sure it's defined in the same file to prevent it from incorrectly matching imported functions from different modules\r\n",
      "state": "OPEN",
      "createdAt": "2023-10-11T02:22:01Z",
      "updatedAt": "2023-10-11T16:34:22Z",
      "closedAt": null,
      "author": {
        "login": "DetachHead"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: proposal"
          },
          {
            "name": "topic: collection"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 4
      }
    },
    {
      "number": 11485,
      "title": "update contribution documentation to mention the need to fetch tags",
      "body": "The documentation for running the tests does not mention the need to set `SETUPTOOLS_SCM_PRETEND_VERSION_FOR_PYTEST`. Without it when I run `tox -e py39` I get an error like:\r\n\r\n`ERROR ... pyproject.toml: 'minversion' requires pytest-2.0, actual pytest-0.1.dev15348+gb73b4c4`\r\n\r\nBefore running `tox` one needs to set a version like:\r\n\r\n`export SETUPTOOLS_SCM_PRETEND_VERSION_FOR_PYTEST=7.4.2`\r\n\r\nThen everything works.\r\n\r\nHappy to make a PR as required. Thanks.\r\n\r\n",
      "state": "CLOSED",
      "createdAt": "2023-10-07T13:09:22Z",
      "updatedAt": "2024-05-18T06:24:08Z",
      "closedAt": "2023-10-09T18:29:51Z",
      "author": {
        "login": "bnomis"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 5
      }
    },
    {
      "number": 11483,
      "title": "Setting \"error\" in filterwarnings in `pyproject.toml` silences specific warning",
      "body": "Hello! :wave:\r\n\r\nSpecifying \"error\" at the top of the filterwarnings list in `pyproject.toml` silences a warning, while I expected it to be raised as an error.\r\nIt raised the warning for other warnings, I don't understand why it doesn't work for that particular warning. Could you give me some instructions as to how to track down the problem? I already disabled every plugin I could. I am aware that this is not a minimal reproducible example as I figure that this a bug in my configuration.\r\n\r\n\r\n\r\nBy commenting `\"error\"` in filterwarnings, I do get the warning.\r\n\r\n```toml\r\n[tool.pytest.ini_options]\r\naddopts = \"--tb=short\"\r\nfilterwarnings = [\r\n    #\"error\",\r\n    \"ignore::pytest.PytestUnraisableExceptionWarning\",\r\n    \"ignore:distutils Version:DeprecationWarning\",\r\n    \"ignore:has conflict with protected namespace:UserWarning:pydantic\",\r\n    \"ignore:Deprecated call to `pkg_resources\\\\.declare_namespace\\\\('.*'\\\\):DeprecationWarning\",\r\n    \"ignore::DeprecationWarning:google.rpc\",\r\n    \"ignore:Format strings passed to MaskedConstant are ignored:FutureWarning:seaborn\",\r\n    \"ignore:np.find_common_type is deprecated:DeprecationWarning\", # TODO: Remove this once we migrate to pandas v2\r\n]\r\n# asyncio_mode=\"strict\"\r\n\r\n```\r\n\r\n\r\n```text\r\n\u276f DOTENV=.env.test SECRETS_DIR=../.secrets poetry run pytest api/service/report_test.py  -k test_create_images_with_missing -p no:celery -p no:xdist -p no:asyncio -p no:doubles -p no:cov -p no:anyio -p no:faker -p no:hypothesispytest -p no:subtests -p no:xdist -p no:schemathesis\r\n======================================== test session starts =========================================\r\nplatform linux -- Python 3.9.18, pytest-7.4.2, pluggy-1.3.0\r\nrootdir: /home/tom/Documents/dev/octopize/avatar/platform/api\r\nconfigfile: pyproject.toml\r\nplugins: mock-3.11.1\r\ncollected 23 items / 22 deselected / 1 selected                                                      \r\n\r\napi/service/report_test.py .                                                                   [100%]\r\n\r\n========================================== warnings summary ==========================================\r\napi/service/report_test.py::test_create_images_with_missing\r\n  /home/tom/.cache/pypoetry/virtualenvs/api-1Bf64r6x-py3.9/lib/python3.9/site-packages/numpy/ma/extras.py:617: DeprecationWarning: Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)\r\n    scl = avg.dtype.type(a.count(axis))\r\n\r\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\r\n============================ 1 passed, 22 deselected, 1 warning in 1.98s =============================\r\n```\r\n\r\n\r\nUncommenting it just silences it instead of raising it.\r\n\r\n\r\n```toml\r\n[tool.pytest.ini_options]\r\naddopts = \"--tb=short\"\r\nfilterwarnings = [\r\n    \"error\",\r\n    \"ignore::pytest.PytestUnraisableExceptionWarning\",\r\n    \"ignore:distutils Version:DeprecationWarning\",\r\n    \"ignore:has conflict with protected namespace:UserWarning:pydantic\",\r\n    \"ignore:Deprecated call to `pkg_resources\\\\.declare_namespace\\\\('.*'\\\\):DeprecationWarning\",\r\n    \"ignore::DeprecationWarning:google.rpc\",\r\n    \"ignore:Format strings passed to MaskedConstant are ignored:FutureWarning:seaborn\",\r\n    \"ignore:np.find_common_type is deprecated:DeprecationWarning\", # TODO: Remove this once we migrate to pandas v2\r\n]\r\n# asyncio_mode=\"strict\"\r\n```\r\n\r\n```\r\n\u276f DOTENV=.env.test SECRETS_DIR=../.secrets poetry run pytest api/service/report_test.py  -k test_create_images_with_missing -p no:celery -p no:xdist -p no:asyncio -p no:doubles -p no:cov -p no:anyio -p no:faker -p no:hypothesispytest -p no:subtests -p no:xdist -p no:schemathesis\r\n======================================== test session starts =========================================\r\nplatform linux -- Python 3.9.18, pytest-7.4.2, pluggy-1.3.0\r\nrootdir: /home/tom/Documents/dev/octopize/avatar/platform/api\r\nconfigfile: pyproject.toml\r\nplugins: mock-3.11.1\r\ncollected 23 items / 22 deselected / 1 selected                                                      \r\n\r\napi/service/report_test.py .                                                                   [100%]\r\n\r\n================================== 1 passed, 22 deselected in 1.93s ==================================\r\n```\r\n\r\n### Output of `pip list`\r\n\r\n```\r\nPackage                       Version\r\n----------------------------- --------------------\r\naiodns                        3.0.0\r\naiohttp                       3.8.3\r\naiomultiprocess               0.9.0\r\naiosignal                     1.2.0\r\nalabaster                     0.7.12\r\nanyio                         3.6.2\r\nappdirs                       1.4.3\r\napturl                        0.5.2\r\nargcomplete                   2.0.0\r\nargopt                        0.8.2\r\nasttokens                     2.0.5\r\nasync-timeout                 4.0.2\r\nattrs                         18.2.0\r\nBabel                         2.9.1\r\nbackcall                      0.2.0\r\nbc-detect-secrets             1.3.9\r\nbc-python-hcl2                0.3.47\r\nbcrypt                        3.1.7\r\nbeautifulsoup4                4.10.0\r\nblack                         22.1.0\r\nblinker                       1.4\r\nboto3                         1.24.93\r\nbotocore                      1.27.93\r\nbreathe                       4.32.0\r\nBrlapi                        0.7.0\r\nbump-pydantic                 0.6.1\r\nbump-testclient               0.3.0\r\ncached-property               1.5.1\r\ncachetools                    5.2.0\r\ncertifi                       2019.11.28\r\ncffi                          1.15.1\r\ncfgv                          3.3.1\r\nchardet                       3.0.4\r\ncharset-normalizer            2.1.1\r\nchrome-gnome-shell            0.0.0\r\ncli-helpers                   2.3.0\r\nclick                         8.0.3\r\nclick-option-group            0.5.5\r\ncloudpickle                   2.2.1\r\ncloudsplaining                0.5.0\r\ncolorama                      0.4.4\r\ncommand-not-found             0.3\r\nConfigArgParse                1.5.3\r\nconfigobj                     5.0.6\r\ncontextlib2                   21.6.0\r\ncryptography                  2.8\r\ncssselect                     1.1.0\r\nctop                          1.0.0\r\ncupshelpers                   1.0\r\ncycler                        0.11.0\r\ncyclonedx-python-lib          3.1.0\r\ndask                          2023.1.1\r\ndbus-python                   1.2.16\r\ndecorator                     5.1.1\r\ndeep-merge                    0.0.4\r\ndefer                         1.0.6\r\ndistlib                       0.3.4\r\ndistro                        1.4.0\r\ndistro-info                   0.23+ubuntu1.1\r\ndnspython                     2.4.1\r\ndocker                        4.1.0\r\ndocker-compose                1.25.0\r\ndockerfile-parse              1.2.0\r\ndockerpty                     0.4.1\r\ndocopt                        0.6.2\r\ndocutils                      0.17.1\r\ndpath                         1.5.0\r\nduplicity                     0.8.12.0\r\nemail-validator               2.0.0.post2\r\nentrypoints                   0.3\r\nexecuting                     0.8.2\r\nFaker                         19.2.0\r\nfasteners                     0.14.1\r\nfilelock                      3.4.2\r\nfonttools                     4.29.1\r\nfrozenlist                    1.3.1\r\nfsspec                        2023.1.0\r\nfuture                        0.18.2\r\ngit-fame                      2.0.1\r\ngitdb                         4.0.9\r\nGitPython                     3.1.29\r\ngraphviz                      0.19.1\r\nh11                           0.14.0\r\nhtml5lib                      1.0.1\r\nhttpcore                      0.16.2\r\nhttplib2                      0.14.0\r\nhttpx                         0.23.1\r\nhunter                        3.6.1\r\nidentify                      2.4.1\r\nidna                          2.8\r\nimagesize                     1.3.0\r\nimportlib-metadata            1.5.0\r\nimportlib-resources           5.10.0\r\nipython                       8.0.1\r\njedi                          0.18.1\r\nJinja2                        3.0.3\r\njmespath                      1.0.1\r\njsonpath-ng                   1.5.3\r\njsonschema                    3.2.0\r\njunit-xml                     1.9\r\njupyter-client                7.0.6\r\njupyter-core                  4.9.2\r\nkeyring                       18.0.1\r\nkiwisolver                    1.3.2\r\nlanguage-selector             0.1\r\nlark                          1.1.3\r\nlaunchpadlib                  1.10.13\r\nlazr.restfulclient            0.14.2\r\nlazr.uri                      1.0.3\r\nlibcst                        0.4.9\r\nlocket                        1.0.0\r\nlockfile                      0.12.2\r\nlouis                         3.12.0\r\nlxml                          4.5.0\r\nmacaroonbakery                1.3.1\r\nMako                          1.1.0\r\nmanhole                       1.8.0\r\nMarkdown                      3.4.1\r\nmarkdown-it-py                3.0.0\r\nMarkupSafe                    2.0.1\r\nmatplotlib-inline             0.1.3\r\nmdurl                         0.1.2\r\nmeld                          3.20.2\r\nmonotonic                     1.5\r\nmore-itertools                4.2.0\r\nmultidict                     6.0.2\r\nmypy-extensions               0.4.3\r\nnest-asyncio                  1.5.4\r\nnetifaces                     0.10.4\r\nnetworkx                      2.6.3\r\nnodeenv                       1.6.0\r\nnumpy                         1.17.4\r\nnumpydoc                      1.2\r\noauthlib                      3.1.0\r\nolefile                       0.46\r\npackageurl-python             0.10.4\r\npackaging                     21.3\r\nparamiko                      2.6.0\r\nparso                         0.8.3\r\npartd                         1.3.0\r\npathspec                      0.9.0\r\npdflatex                      0.1.3\r\npexpect                       4.6.0\r\npickleshare                   0.7.5\r\nPillow                        7.0.0\r\npip                           23.2.1\r\npip-licenses                  3.5.4\r\npipx                          1.0.0\r\nplatformdirs                  2.4.1\r\nply                           3.11\r\npolicy-sentry                 0.12.4\r\npolicyuniverse                1.5.0.20220613\r\npre-commit                    3.3.3\r\nprettytable                   3.4.1\r\nprompt-toolkit                3.0.28\r\nprotobuf                      3.6.1\r\npsutil                        5.5.1\r\nPTable                        0.9.2\r\npure-eval                     0.2.2\r\npyan3                         1.2.1\r\npyathena                      2.23.0\r\npycairo                       1.16.2\r\npycares                       4.2.2\r\npycep-parser                  0.3.9\r\npycparser                     2.21\r\npycups                        1.9.73\r\npydata-sphinx-theme           0.7.2\r\npydeps                        1.10.18\r\nPygments                      2.15.1\r\nPyGObject                     3.36.0\r\nPyJWT                         1.7.1\r\npymacaroons                   0.13.0\r\nPyNaCl                        1.3.0\r\npyparsing                     3.0.6\r\npyRFC3339                     1.1\r\npyrsistent                    0.15.5\r\npyston                        2.3.5\r\npyston-autoload               2.3.5\r\npython-apt                    2.0.1+ubuntu0.20.4.1\r\npython-dateutil               2.7.3\r\npython-debian                 0.1.36+ubuntu1.1\r\npytz                          2021.3\r\npyxdg                         0.26\r\nPyYAML                        6.0\r\npyzmq                         22.3.0\r\nrailroad-diagrams             1.1.1\r\nregex                         2022.9.13\r\nreportlab                     3.5.34\r\nrequests                      2.22.0\r\nrequests-unixsocket           0.2.0\r\nrfc3986                       1.5.0\r\nrich                          13.4.2\r\ns3transfer                    0.6.0\r\nschema                        0.7.5\r\nscour                         0.37\r\nSecretStorage                 2.3.1\r\nsemantic-version              2.10.0\r\nsetproctitle                  1.3.2\r\nsetuptools                    65.5.0\r\nsimplejson                    3.16.0\r\nsix                           1.14.0\r\nsmmap                         5.0.0\r\nsniffio                       1.3.0\r\nsnowballstemmer               2.2.0\r\nsortedcontainers              2.4.0\r\nsoupsieve                     2.3.1\r\nSphinx                        4.2.0\r\nsphinx-panels                 0.6.0\r\nsphinxcontrib-applehelp       1.0.2\r\nsphinxcontrib-devhelp         1.0.2\r\nsphinxcontrib-htmlhelp        2.0.0\r\nsphinxcontrib-jsmath          1.0.1\r\nsphinxcontrib-qthelp          1.0.3\r\nsphinxcontrib-serializinghtml 1.1.5\r\nsqlparse                      0.4.3\r\nstack-data                    0.1.4\r\nstdlib-list                   0.8.0\r\nsystemd-python                234\r\ntabulate                      0.9.0\r\ntenacity                      8.2.2\r\ntermcolor                     2.0.1\r\ntexttable                     1.6.2\r\ntoml                          0.10.2\r\ntomli                         2.0.1\r\ntoolz                         0.12.0\r\ntornado                       6.1\r\ntqdm                          4.66.1\r\ntraitlets                     5.1.1\r\ntyper                         0.7.0\r\ntyping_extensions             4.4.0\r\ntyping-inspect                0.8.0\r\nubuntu-advantage-tools        8001\r\nubuntu-drivers-common         0.0.0\r\nufw                           0.36\r\nunattended-upgrades           0.1\r\nupdate-checker                0.18.0\r\nurllib3                       1.25.8\r\nusb-creator                   0.3.7\r\nuserpath                      1.8.0\r\nvirtualenv                    20.13.0\r\nwadllib                       1.3.3\r\nwcwidth                       0.2.5\r\nwebencodings                  0.5.1\r\nwebsocket-client              0.53.0\r\nwheel                         0.34.2\r\nxkit                          0.0.0\r\nyarl                          1.8.1\r\nzipp                          3.9.0\r\n\r\n```\r\n\r\n\r\n```\r\n\u276f uname -a\r\nLinux tom-ThinkPad-X1-Carbon-Gen-9 5.15.0-84-generic #93~20.04.1-Ubuntu SMP Wed Sep 6 16:15:40 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux\r\n```",
      "state": "CLOSED",
      "createdAt": "2023-10-06T09:23:16Z",
      "updatedAt": "2023-10-29T01:49:09Z",
      "closedAt": "2023-10-29T01:49:09Z",
      "author": {
        "login": "tcrasset"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "status: needs information"
          },
          {
            "name": "stale"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 11481,
      "title": "Item.add_report_section method not working",
      "body": "<!--\r\nThanks for submitting an issue!\r\n\r\nQuick check-list while reporting bugs:\r\n-->\r\n\r\n`Item.add_report_section` method is not working.\r\nMy messages don't get displayed in the test report.\r\n\r\nI have a pytest-html plugin with this code :\r\n\r\n```\r\n@pytest.hookimpl(hookwrapper=True)\r\ndef pytest_runtest_makereport(item, call):\r\n    \"\"\" Override report generation. \"\"\"\r\n    pytest_html = item.config.pluginmanager.getplugin('html')\r\n    outcome = yield\r\n    report = outcome.get_result()\r\n\r\n    # Do some verifications\r\n    # If something isn't right, add custom messages\r\n\r\n    # Add message to stderr section\r\n    item.add_report_section(\"call\", \"stderr\", \"My error message\")\r\n\r\n    # Add message to custom section\r\n    item.add_report_section(\"call\", \"custom_section\", \"My error message\")\r\n```\r\nThe message \"My error message\" isn't added to stderr and custom_section sections in the test report.\r\n\r\nTested with pytest 7.4.2 on Linux\r\n\r\npip list\r\n```\r\nPackage                Version\r\n---------------------- --------------------\r\nalabaster              0.7.8\r\napt-clone              0.2.1\r\napturl                 0.5.2\r\narrow                  1.2.3\r\nasn1                   2.6.0\r\nastroid                2.15.6\r\nattrs                  22.2.0\r\nBabel                  2.6.0\r\nbcrypt                 4.0.1\r\nbeautifulsoup4         4.8.2\r\nbinaryornot            0.4.4\r\nbleach                 6.0.0\r\nblinker                1.4\r\nBrlapi                 0.7.0\r\nbsddb3                 6.2.7\r\nbuild                  0.10.0\r\ncertifi                2023.7.22\r\ncffi                   1.15.1\r\nchardet                3.0.4\r\ncharset-normalizer     3.2.0\r\nClick                  7.0\r\ncolorama               0.4.3\r\ncommand-not-found      0.3\r\nconfigobj              5.0.6\r\ncookiecutter           2.2.3\r\ncryptography           41.0.1\r\ncupshelpers            1.0\r\ndbus-python            1.2.16\r\ndefer                  1.0.6\r\ndill                   0.3.7\r\ndistlib                0.3.7\r\ndistro                 1.4.0\r\ndistro-info            0.23+ubuntu1.1\r\ndocutils               0.20.1\r\nentrypoints            0.3\r\nenum-compat            0.0.3\r\nexceptiongroup         1.1.1\r\nfilelock               3.12.4\r\nflake8                 6.1.0\r\nflit                   3.9.0\r\nflit_core              3.9.0\r\ngrpcio                 1.16.1\r\nh11                    0.14.0\r\nhtml5lib               1.0.1\r\nhttplib2               0.14.0\r\nidna                   2.8\r\nifaddr                 0.1.6\r\nimagesize              1.2.0\r\nIMDbPY                 6.8\r\nimportlib-metadata     6.8.0\r\nimportlib-resources    5.12.0\r\niniconfig              2.0.0\r\nisort                  5.12.0\r\nJinja2                 3.1.2\r\njsonschema             4.17.3\r\nkeyring                18.0.1\r\nlaunchpadlib           1.10.13\r\nlazr.restfulclient     0.14.2\r\nlazr.uri               1.0.3\r\nlazy-object-proxy      1.9.0\r\nldap3                  2.9.1\r\nlouis                  3.12.0\r\nlxml                   4.5.0\r\nmacaroonbakery         1.3.1\r\nMako                   1.1.0\r\nMarkdown               3.1.1\r\nmarkdown-it-py         3.0.0\r\nMarkupSafe             2.1.3\r\nmccabe                 0.7.0\r\nmdurl                  0.1.2\r\nmenulibre              2.2.1\r\nmeson                  0.53.2\r\nmutagen                1.45.1\r\nmypy                   1.5.1\r\nmypy-extensions        1.0.0\r\nmysqlclient            1.4.4\r\nnemo-emblems           5.2.0\r\nnetaddr                0.7.19\r\nnetifaces              0.10.4\r\noauthlib               3.1.0\r\nonboard                1.4.1\r\noutcome                1.2.0\r\npackaging              20.3\r\nPAM                    0.4.2\r\nparamiko               3.1.0\r\npexpect                4.6.0\r\nPillow                 7.0.0\r\npip                    23.2.1\r\npkginfo                1.9.6\r\npkgutil_resolve_name   1.3.10\r\nplatformdirs           3.10.0\r\npluggy                 1.0.0\r\nprotobuf               3.6.1\r\npsutil                 5.5.1\r\npuddletag              2.0.1\r\npy                     1.11.0\r\npyasn1                 0.4.8\r\npycairo                1.16.2\r\npyclean                2.7.0\r\npycodestyle            2.11.0\r\npycparser              2.21\r\npycrypto               2.6.1\r\npycups                 1.9.73\r\npycurl                 7.43.0.2\r\npyflakes               3.1.0\r\nPygments               2.15.1\r\nPyGObject              3.36.0\r\nPyICU                  2.4.2\r\npyinotify              0.9.6\r\nPyJWT                  1.7.1\r\npylint                 2.17.5\r\npymacaroons            0.13.0\r\nPyNaCl                 1.5.0\r\npyOpenSSL              23.2.0\r\npyparsing              2.4.6\r\npyparted               3.11.2\r\npyproject_hooks        1.0.0\r\nPyQt5                  5.14.1\r\npyRFC3339              1.1\r\npyrsistent             0.19.3\r\npysftp                 0.2.9\r\nPySocks                1.7.1\r\npytest                 7.4.2\r\npytest-html            4.0.2\r\npytest-metadata        3.0.0\r\npython-apt             2.0.1+ubuntu0.20.4.1\r\npython-dateutil        2.8.2\r\npython-debian          0.1.36+ubuntu1.1\r\npython-Levenshtein     0.12.0\r\npython-magic           0.4.16\r\npython-slugify         8.0.1\r\npython-xapp            2.2.1\r\npython-xlib            0.23\r\npythondialog           3.4.0\r\npytz                   2019.3\r\npyxdg                  0.26\r\nPyYAML                 6.0.1\r\nqrcode                 6.1\r\nreadme-renderer        40.0\r\nreportlab              3.5.34\r\nrequests               2.31.0\r\nrequests-file          1.4.3\r\nrequests-toolbelt      1.0.0\r\nrequests-unixsocket    0.2.0\r\nrfc3986                2.0.0\r\nrich                   13.5.0\r\nroman                  2.0.0\r\nruff                   0.0.287\r\nSecretStorage          2.3.1\r\nselenium               4.13.0\r\nsetproctitle           1.1.10\r\nsetuptools             45.2.0\r\nsimplejson             3.16.0\r\nsip                    4.19.21\r\nsix                    1.14.0\r\nsniffio                1.3.0\r\nsortedcontainers       2.4.0\r\nsoupsieve              1.9.5\r\nSphinx                 1.8.5\r\nsystemd-python         234\r\ntext-unidecode         1.3\r\ntinycss2               1.0.2\r\ntldextract             2.2.1\r\ntomli                  2.0.1\r\ntomli_w                1.0.0\r\ntomlkit                0.12.1\r\ntqdm                   4.65.0\r\ntrio                   0.22.2\r\ntrio-websocket         0.10.3\r\ntwine                  4.0.2\r\ntyping_extensions      4.7.1\r\nubuntu-advantage-tools 8001\r\nubuntu-drivers-common  0.0.0\r\nufw                    0.36\r\nUnidecode              1.1.1\r\nurllib3                2.0.4\r\nvboxapi                1.0\r\nvirtualenv             20.24.5\r\nwadllib                1.3.3\r\nwebencodings           0.5.1\r\nwheel                  0.34.2\r\nwrapt                  1.15.0\r\nwsproto                1.2.0\r\nxkit                   0.0.0\r\nxlrd                   1.1.0\r\nyoutube-dl             2021.4.26\r\nzipp                   3.15.0\r\n```\r\n\r\n- [x] a detailed description of the bug or problem you are having\r\n- [x] output of `pip list` from the virtual environment you are using\r\n- [x] pytest and operating system versions\r\n- [x] minimal example if possible\r\n",
      "state": "CLOSED",
      "createdAt": "2023-10-05T18:47:01Z",
      "updatedAt": "2023-10-05T19:08:42Z",
      "closedAt": "2023-10-05T19:08:41Z",
      "author": {
        "login": "harmin-parra"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 11480,
      "title": "fixture scope \"package\" wrong teardown order with nested packages",
      "body": "I have a following tests structure\r\n![image](https://github.com/pytest-dev/pytest/assets/126683231/abcb45e3-70db-42e4-82dc-e832565bf365)\r\nwith such fixtures:\r\n\r\n```\r\n# package_1/conftest.py\r\nimport pytest\r\n\r\n@pytest.fixture(autouse=True, scope=\"package\")\r\ndef some_fixture1():\r\n    print(\"\\n------------Setup package 1\")\r\n\r\n    yield\r\n\r\n    print(\"\\n------------ Teardown package 1\")\r\n```\r\nand \r\n```\r\n# package_2/conftest.py\r\n\r\nimport pytest\r\n\r\n@pytest.fixture(autouse=True, scope=\"package\")\r\ndef some_fixture2():\r\n    print(\"\\n------------Setup package 2\")\r\n\r\n    yield\r\n\r\n    print(\"\\n------------Teardown package 2\")\r\n```\r\nand tests\r\n\r\n```\r\n# package_1/nested_dir/test_package_1.py\r\n\r\ndef test_1():\r\n    print(\"\\n------------running test_1\")\r\n    assert True\r\n```\r\nand\r\n```\r\n# package_2/test_package_2.py\r\n\r\ndef test_1():\r\n    print(\"\\n------------running test_2\")\r\n    assert True\r\n\r\n```\r\n\r\nWhen I run the tests I would expect the package_1 teardown to happen before setup of package_2, but this is not what is happening. Instead, teardown happens at the end. See output:\r\n![image](https://github.com/pytest-dev/pytest/assets/126683231/20e3704b-6e30-4518-b011-6f2c63447f30)\r\n\r\nBut when I move the test file out of the nested_dir so the file structure looks like this:\r\n![image](https://github.com/pytest-dev/pytest/assets/126683231/93b6729f-b2ef-49ae-b459-fa2fcd0cc32d)\r\nthe teardown order seems to be correct.\r\n![image](https://github.com/pytest-dev/pytest/assets/126683231/b667451e-7a60-4c1c-850b-9be7e7a298fd)\r\n\r\nAnyways I would love to have a correct teardown order for nested tests file structure.\r\n\r\nPip list output:\r\n```\r\n(venv) \u279c  pythonProject pip list          \r\nPackage    Version\r\n---------- -------\r\niniconfig  2.0.0\r\npackaging  23.2\r\npip        22.3.1\r\npluggy     1.3.0\r\npytest     7.4.2\r\nsetuptools 65.5.1\r\nwheel      0.38.4\r\n```\r\n\r\nOperating system:\r\nMacos Ventura 13.0 \r\n",
      "state": "CLOSED",
      "createdAt": "2023-10-05T07:20:32Z",
      "updatedAt": "2024-01-04T10:51:54Z",
      "closedAt": "2024-01-04T10:51:53Z",
      "author": {
        "login": "dszady-rtb"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "topic: fixtures"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      }
    },
    {
      "number": 11477,
      "title": "[REGRESSION] `-s` option stops progress from being produced",
      "body": "We recently have finally migrated to newer pytest and found that the progress *(controlled by `console_output_style` option)* is no longer shown unless you make pytest capture the output *(i.e. no `-s` option)*.\r\n\r\nLast version known where it was working is `3.3.2`\r\n\r\n# Steps to reproduce *(in terms of terminal commands)*\r\n\r\n```haskell\r\n$ cat test1.py\r\ndef test1(): pass\r\ndef test2(): pass\r\ndef test3(): pass\r\n$ pytest -vs ./test1.py\r\n======================================================== test session starts ========================================================\r\nplatform linux -- Python 3.11.5, pytest-7.4.2, pluggy-1.3.0 -- /usr/bin/python\r\ncachedir: .pytest_cache\r\nrootdir: /tmp/foo\r\ncollected 3 items\r\n\r\ntest1.py::test1 PASSED\r\ntest1.py::test2 PASSED\r\ntest1.py::test3 PASSED\r\n\r\n========================================================= 3 passed in 0.00s =========================================================\r\n```\r\n\r\n## Expected\r\n\r\nOn the right side there are percents shown for each test *(it's the default setting of `console_output_style`)*. Like this:\r\n\r\n```haskell\r\n[\u2026]\r\ntest1.py::test1 PASSED                                                                                                        [ 33%]\r\ntest1.py::test2 PASSED                                                                                                        [ 66%]\r\ntest1.py::test3 PASSED                                                                                                        [100%]\r\n[\u2026]\r\n```\r\n\r\n## Actual\r\n\r\nNothing is shown on the right side.\r\n\r\n# Workarounds\r\n\r\nReplacing `-s` with a `--capture=tee-sys` seems to make it work.\r\n\r\n# Additional information\r\n\r\n\r\n- pytest version is `7.4.2`\r\n- OS: Archlinux\r\n- <details>\r\n        <summary>pip list</summary>\r\n\r\n    ```haskell\r\n    Package               Version\r\n    --------------------- ----------------------------------\r\n    annotated-types       0.5.0\r\n    appdirs               1.4.4\r\n    async-generator       1.10\r\n    attrs                 22.2.0\r\n    autocommand           2.2.2\r\n    Automat               22.10.0\r\n    beautifulsoup4        4.12.2\r\n    Brlapi                0.8.5\r\n    build                 1.0.1\r\n    CacheControl          0.13.1\r\n    certifi               2023.7.22\r\n    cffi                  1.15.1\r\n    chardet               5.2.0\r\n    click                 8.1.7\r\n    constantly            15.1.0\r\n    coverage              6.5.0\r\n    crit                  3.18\r\n    cryptography          41.0.4\r\n    cssselect             1.2.0\r\n    cupshelpers           1.0\r\n    dbus-python           1.3.2\r\n    distro                1.8.0\r\n    docstring-to-markdown 0.12\r\n    exceptiongroup        1.1.3\r\n    fastjsonschema        2.18.0\r\n    filelock              3.12.4\r\n    h11                   0.14.0\r\n    hyperlink             21.0.0\r\n    idna                  3.4\r\n    importlib-metadata    5.0.0\r\n    incremental           22.10.0\r\n    inflect               7.0.0\r\n    iniconfig             2.0.0\r\n    installer             0.7.0\r\n    iotop                 0.6\r\n    jaraco.context        4.3.0\r\n    jaraco.functools      3.9.0\r\n    jaraco.text           3.11.1\r\n    jedi                  0.19.0\r\n    Jinja2                3.1.2\r\n    lensfun               0.3.4\r\n    libfdt                1.7.0\r\n    libmsym               0.2.4\r\n    lockfile              0.12.2\r\n    louis                 3.27.0\r\n    lxml                  4.9.2\r\n    MarkupSafe            2.1.3\r\n    meson                 1.2.1\r\n    more-itertools        10.1.0\r\n    msgpack               1.0.5\r\n    mypy                  1.3.0\r\n    mypy-extensions       1.0.0\r\n    netsnmp-python        1.0a1\r\n    nftables              0.1\r\n    numpy                 1.26.0\r\n    ordered-set           4.1.0\r\n    outcome               1.2.0\r\n    packaging             23.1\r\n    parso                 0.8.3\r\n    perf                  0.1\r\n    Pillow                10.0.1\r\n    pip                   23.2.1\r\n    platformdirs          3.10.0\r\n    pluggy                1.3.0\r\n    ply                   3.11\r\n    protobuf              4.24.2\r\n    psutil                5.9.5\r\n    pwquality             1.4.5\r\n    pycairo               1.24.0\r\n    pycparser             2.21\r\n    pycups                2.0.1\r\n    pycurl                7.45.2\r\n    pydantic              2.3.0\r\n    pydantic_core         2.6.3\r\n    PyGObject             3.46.0\r\n    pylsp-mypy            0.6.7\r\n    pyproject_hooks       1.0.0\r\n    PyQt5                 5.15.9\r\n    PyQt5-sip             12.12.2\r\n    PyQt6                 6.5.2\r\n    PyQt6-sip             13.5.2\r\n    PyQt6-WebEngine       6.5.0\r\n    PyQtWebEngine         5.15.6\r\n    pyserial              3.5\r\n    pytest                7.4.2\r\n    python-lsp-jsonrpc    1.1.2\r\n    python-lsp-server     1.8.0\r\n    pyxdg                 0.28\r\n    PyYAML                6.0.1\r\n    QtPy                  2.3.1\r\n    qutebrowser           3.0.0\r\n    requests              2.28.2\r\n    scour                 0.38.2\r\n    selenium              4.12.0\r\n    setproctitle          1.3.2\r\n    setuptools            68.0.0\r\n    six                   1.16.0\r\n    smbus                 1.1\r\n    sniffio               1.3.0\r\n    sortedcontainers      2.4.0\r\n    soupsieve             2.5\r\n    TBB                   0.2\r\n    toml                  0.10.2\r\n    tomli                 2.0.1\r\n    tqdm                  4.66.1\r\n    trio                  0.22.2\r\n    trio-websocket        0.11.1\r\n    trove-classifiers     2023.9.22\r\n    Twisted               22.10.0\r\n    typing_extensions     4.8.0\r\n    ujson                 5.8.0\r\n    urllib3               1.26.15\r\n    validate-pyproject    0.13.post1.dev0+gb752273.d20230520\r\n    websockets            10.4\r\n    wheel                 0.40.0\r\n    wsproto               1.2.0\r\n    yt-dlp                2023.9.24\r\n    ytmusicapi            1.2.1\r\n    zipp                  3.16.2\r\n    zope.interface        6.0\r\n    zstandard             0.21.0\r\n    ```\r\n    </details>\r\n",
      "state": "CLOSED",
      "createdAt": "2023-10-03T09:37:13Z",
      "updatedAt": "2023-10-03T18:54:52Z",
      "closedAt": "2023-10-03T12:13:13Z",
      "author": {
        "login": "Hi-Angel"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 7
      }
    },
    {
      "number": 11475,
      "title": "ModuleNotFoundError when using `--doctest-modules`, a `src/` layout, and `--import-mode=importlib` (and no editable mode install)",
      "body": "## [reproducer](https://github.com/flying-sheep/pytest-doctest-import-mismatch)\r\n\r\nWe\u2019d like to run our tests on an installed package instead of the development version, as we delete some files in our build process. We therefore don\u2019t use editable installs.\r\n\r\nI think the problem is that there seems to be no way to configure the import root used with the importlib import mode. The project rootdir gets passed here instead of something user configurable:\r\n\r\nhttps://github.com/pytest-dev/pytest/blob/c34eaaaa1c485e9c8c3d1fe7f05549b6436f49cc/src/_pytest/doctest.py#L545-L549\r\n\r\nWhich means that the following code will run `module_name = module_name_from_path('<rootdir>/src/anndata/_types.py', '<rootdir>')`, i.e. `module_name = 'src.anndata._types'` when it should be `'anndata._types'`\r\n\r\nhttps://github.com/pytest-dev/pytest/blob/9f3bdac1500143c51ab358d07eb58b4cfa6d3fdf/src/_pytest/pathlib.py#L524-L525\r\n\r\nWithout `src/` layout, this works accidentally, as the `module_name` happens to match the real module name, and the module only gets imported once.\r\n\r\nPytest 7.4.2",
      "state": "CLOSED",
      "createdAt": "2023-10-02T12:50:00Z",
      "updatedAt": "2024-03-11T21:40:17Z",
      "closedAt": "2024-03-03T12:43:15Z",
      "author": {
        "login": "flying-sheep"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "topic: collection"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 29
      }
    },
    {
      "number": 11470,
      "title": "Overwrite and add custom tag to junit report",
      "body": "#### What's the problem this feature will solve?\r\nIn Gtilab CI it is possible to [attach](https://docs.gitlab.com/ee/ci/testing/unit_test_reports.html#view-junit-screenshots-on-gitlab) screenshots/files to the pipeline test report by adding information to the `system-out` tag:\r\n\r\n```\r\n<testcase>\r\n  <system-out>[[ATTACHMENT|/path/to/some/file]]</system-out>\r\n</testcase>\r\n``` \r\n\r\n#### Describe the solution you'd like\r\nIn order to achieve this the possibility to write a new tag or overwrite an existing tag has to exist.\r\n* Maybe somehow similar to `record_xml_attribute`\r\n* Maybe access to xml report in  `pytest_runtest_makereport`\r\n\r\n#### Alternative Solutions\r\nMy current workaround is running with `-o junit_logging=system-err` (so [system-out](https://github.com/pytest-dev/pytest/blob/main/src/_pytest/junitxml.py#L176) tag is not written) and trying to hack it into `makereport` hook:\r\n\r\n```\r\ndef pytest_runtest_makereport(item, call):\r\n        ...\r\n        from _pytest.junitxml import LogXML\r\n        xml = [i for i in item.config.stash._storage.values() if isinstance(i, LogXML)][0]\r\n        node_reporter = xml.node_reporter(item.nodeid)\r\n        node_reporter._write_content(\"\", f\"[[ATTACHMENT|{screenshot_path}]]\", \"system-out\")\r\n```\r\n\r\n#### Additional context\r\nhttps://github.com/pytest-dev/pytest/issues/2827 might be related? \r\n",
      "state": "CLOSED",
      "createdAt": "2023-09-27T11:19:52Z",
      "updatedAt": "2023-10-01T08:10:16Z",
      "closedAt": "2023-10-01T08:10:16Z",
      "author": {
        "login": "dosas"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: proposal"
          },
          {
            "name": "plugin: junitxml"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 11467,
      "title": "Make xpass a failure again ",
      "body": "<!--\nThanks for suggesting a feature!\n\nQuick check-list while suggesting features:\n-->\n\n#### What's the problem this feature will solve?\n\nSome years ago we accepted a change which made xpass not a failure\n\n\nI recently hit multiple cases where it was missed that a test was fixed\n\nThat's not an acceptable default\n\n\n\n<!-- What are you trying to do, that you are unable to achieve with pytest as it currently stands? -->\n\n#### Describe the solution you'd like\n<!-- A clear and concise description of what you want to happen. -->\n\n<!-- Provide examples of real-world use cases that this would enable and how it solves the problem described above. -->\n\n#### Alternative Solutions\n<!-- Have you tried to workaround the problem using a pytest plugin or other tools? Or a different approach to solving this issue? Please elaborate here. -->\n\n#### Additional context\n<!-- Add any other context, links, etc. about the feature here. -->\n",
      "state": "OPEN",
      "createdAt": "2023-09-25T05:39:36Z",
      "updatedAt": "2024-01-17T19:35:51Z",
      "closedAt": null,
      "author": {
        "login": "RonnyPfannschmidt"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "topic: reporting"
          },
          {
            "name": "type: backward compatibility"
          }
        ]
      },
      "milestone": {
        "title": "9.0",
        "dueOn": null
      },
      "comments": {
        "totalCount": 11
      }
    },
    {
      "number": 11466,
      "title": "Support for jupyter notebook embeded tests",
      "body": "Hi, \r\nI'm a fairly naive user of pytest, mostly in some educational context. While it's easy to use doctest & unittest tests within a notebook (see e.g. this [gist](https://gist.github.com/SergiyKolesnikov/f94d91b947051ab5d2ba1aa30e25f050) or my own [user case](https://ycopin.pages.in2p3.fr/Informatique-Python/Exercices/exos_python.html), it seems impossible to do the same with pytest tests, without resorting to plugins or additional dependencies (e.g. [ipytest](https://pypi.org/project/ipytest/)).\r\n\r\nI definitely don't know all the gory internal details of pytest, but I wonder why it's not possible to easily embed pytest tests within a notebook, so that I can illustrate different (easier to write) test methods?\r\n\r\n#### What's the problem this feature will solve?\r\n\r\nEmbed and run pytest tests within a jupyter notebook.\r\n\r\n#### Describe the solution you'd like\r\n\r\nA few-line self-consistent solution as possible with unittest, see e.g. this [notebook](https://ycopin.pages.in2p3.fr/Informatique-Python/Exercices/exos_python.html).\r\n\r\n#### Alternative Solutions\r\n\r\nThe [ipytest](https://pypi.org/project/ipytest/) solution works fine (with extra features), but requires an extra-dependency.  I'm looking for a minimal procedure, mostly to illustrate the writing of pytest tests.\r\n",
      "state": "CLOSED",
      "createdAt": "2023-09-24T10:35:25Z",
      "updatedAt": "2023-09-24T14:53:19Z",
      "closedAt": "2023-09-24T12:02:52Z",
      "author": {
        "login": "ycopin"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 11463,
      "title": "Add an exit code to differentiate full-passed tests from xpassed & xfailed tests executions",
      "body": "<!--\r\nThanks for suggesting a feature!\r\n\r\nQuick check-list while suggesting features:\r\n-->\r\n\r\n#### What's the problem this feature will solve?\r\n<!-- What are you trying to do, that you are unable to achieve with pytest as it currently stands? -->\r\nIn the case of no test failures, I would like to differentiate executions with 100% passed tests from those with at least one xpassed or xfailed test.\r\n\r\n#### Describe the solution you'd like\r\n<!-- A clear and concise description of what you want to happen. -->\r\nIf the execution has\r\n`failed tests = 0 and (xfailed tests > 0 or xpassed tests > 0)`\r\nI want the test execution to return a different exit code (example: `ExitCode.TESTS_XFAILED = 6`)\r\n\r\n<!-- Provide examples of real-world use cases that this would enable and how it solves the problem described above. -->\r\n\r\n#### Alternative Solutions\r\n<!-- Have you tried to workaround the problem using a pytest plugin or other tools? Or a different approach to solving this issue? Please elaborate here. -->\r\nImplement `pytest_runtest_makereport` hook to detect xpassed and xfailed tests\r\nImplement `pytest_sessionfinish` hook to override exit status\r\n\r\n#### Additional context\r\n<!-- Add any other context, links, etc. about the feature here. -->\r\nUseful when executing pytest from a CI tool (like jenkins) and set job execution status to `unstable` if `failed tests = 0 and (xfailed tests > 0 or xpassed tests > 0)`",
      "state": "CLOSED",
      "createdAt": "2023-09-23T21:04:06Z",
      "updatedAt": "2023-09-25T05:41:09Z",
      "closedAt": "2023-09-24T19:29:07Z",
      "author": {
        "login": "harmin-parra"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 6
      }
    },
    {
      "number": 11462,
      "title": "How to mark up fixtures with metadata for segregating collections of fixtures in scope",
      "body": "#### What's the problem this feature will solve?\r\nThe problem to be solved here is how to organize families of fixtures with pure metadata to avoid looking up fixture values from their names to determine if the fixture belongs to a given family or not.\r\n\r\nI'm looking for a way that I can mark up a bunch of fixtures spread around a bunch of plugin and conftest files etc some of which are marked up with the simple standard markers `pytest.mark.metaFoo`. I wish to then lookup those marks from the `FixtureDef` instances retained in the fixture manager to do some dynamic container creations from these fixture families identified by their markers alone. I wish to do this family identification via markers because fixture naming convention alone is inadequate for my use case where looking up fixture values for those fixtures which match a naming convention can cause recursion loops for those fixtures that hold dependencies on the fixture I'm trying to dynamically populate with the fixtures of a given family but not others. This is where marker metadata would be a powerful differentiator.\r\n\r\n#### Describe the solution you'd like\r\nI'd like to be able to decorate my fixtures with regular pytest markers as such (which is valid syntax today) but with that marker metadata able to be crawled and looked up from the `request` fixture object and ideally populated in the `FixtureDef` instances.\r\n\r\n```py\r\n# plugin_1.py\r\nimport pytest\r\n@pytest.mark.fixA\r\n@pytest.mark.other\r\n@pytest.fixture\r\ndef fixture_foo():\r\n    return \"foo\"\r\n\r\n@pytest.mark.fixB\r\n@pytest.fixture\r\ndef fixture_bar():\r\n    return \"bar\"\r\n\r\n\r\n# plugin_2.py\r\nimport pytest\r\n\r\n@pytest.mark.fixA\r\n@pytest.fixture\r\ndef fixture_2foo():\r\n    return \"2foo\"\r\n\r\n@pytest.mark.fixB\r\n@pytest.fixture\r\ndef fixture_2bar():\r\n    return \"2bar\"\r\n```\r\n\r\nFrom the above I need a fixture that dynamically returns a container of the fixture values `[\"foo\", \"2foo\"]` just by discovering the fixtures in scope and contributing to that container the values of all fixtures which match the family criteria corresponding to the pytest markers I wish to filter upon.\r\n\r\n#### Alternative Solutions\r\nSo far I've been leaning on a combination of fixture naming conventions and value lookups to get this organization by families accomplished but that will not work when I get to the complex case where the different fixture subfamilies share the same naming convention and thus become undifferentiable. In that scenario the fixtures are given different definitions from alternate plugins where I don't want them to continue to be selected by name anymore because the naming convention then blurs between two families of fixtures that have no way to be differentiated by name alone (hence the need for the markers to do the job).\r\n\r\nHere's the partial solution I've attempted so far that lets me organize fixtures by the naming convention pattern matching a suffix\r\n\r\n```py\r\n@pytest.fixture(autouse=True)\r\ndef fix_list(request):\r\n    print(\"fix_list\")\r\n    foo_fixtures = [request.getfixturevalue(fix_name) for fix_name in request._fixturemanager._arg2fixturedefs if fix_name.endswith(\"_foo\")]\r\n    return foo_fixtures\r\n```\r\nhttps://stackoverflow.com/a/77154959/1330381\r\n\r\n\r\n#### Additional context\r\nWhen I probe the fixture definition from a global scope I see that the fixtures have a `pytestmark` attribute, eg\r\n\r\n```\r\nfixture_foo.pytestmark\r\n[Mark(name='fixA', args=(), kwargs={}), Mark(name='other', args=(), kwargs={})]\r\n```\r\n\r\nI can't see how to navigate to that data from the `request` fixture. If there is an existing means today that would solve all my problems and I could mark up my fixtures today and solve some gnarly problems.\r\n",
      "state": "CLOSED",
      "createdAt": "2023-09-23T00:54:09Z",
      "updatedAt": "2024-02-17T20:35:15Z",
      "closedAt": "2024-02-17T20:35:15Z",
      "author": {
        "login": "jxramos"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: question"
          },
          {
            "name": "topic: fixtures"
          },
          {
            "name": "topic: marks"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 11
      }
    },
    {
      "number": 11461,
      "title": "PytestUnraisableExceptionWarning: ResourceWarning: unclosed ssl.SSLSocket",
      "body": "I'm seeing a weird issue in my new Python 3.11 environment:\r\n<details>\r\n  <summary>Error message</summary>\r\n\r\n```python\r\ncls = <class '_pytest.runner.CallInfo'>, func = <function call_runtest_hook.<locals>.<lambda> at 0x123481e40>, when = 'call'\r\nreraise = (<class '_pytest.outcomes.Exit'>, <class 'KeyboardInterrupt'>)\r\n\r\n    @classmethod\r\n    def from_call(\r\n        cls,\r\n        func: \"Callable[[], TResult]\",\r\n        when: \"Literal['collect', 'setup', 'call', 'teardown']\",\r\n        reraise: Optional[\r\n            Union[Type[BaseException], Tuple[Type[BaseException], ...]]\r\n        ] = None,\r\n    ) -> \"CallInfo[TResult]\":\r\n        \"\"\"Call func, wrapping the result in a CallInfo.\r\n    \r\n        :param func:\r\n            The function to call. Called without arguments.\r\n        :param when:\r\n            The phase in which the function is called.\r\n        :param reraise:\r\n            Exception or exceptions that shall propagate if raised by the\r\n            function, instead of being wrapped in the CallInfo.\r\n        \"\"\"\r\n        excinfo = None\r\n        start = timing.time()\r\n        precise_start = timing.perf_counter()\r\n        try:\r\n>           result: Optional[TResult] = func()\r\n\r\n../spack/var/spack/environments/system/.spack-env/view/lib/python3.11/site-packages/_pytest/runner.py:341: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n../spack/var/spack/environments/system/.spack-env/view/lib/python3.11/site-packages/_pytest/runner.py:262: in <lambda>\r\n    lambda: ihook(item=item, **kwds), when=when, reraise=reraise\r\n../spack/var/spack/environments/system/.spack-env/view/lib/python3.11/site-packages/pluggy/_hooks.py:265: in __call__\r\n    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\r\n../spack/var/spack/environments/system/.spack-env/view/lib/python3.11/site-packages/pluggy/_manager.py:80: in _hookexec\r\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\r\n../spack/var/spack/environments/system/.spack-env/view/lib/python3.11/site-packages/_pytest/unraisableexception.py:88: in pytest_runtest_call\r\n    yield from unraisable_exception_runtest_hook()\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\n    def unraisable_exception_runtest_hook() -> Generator[None, None, None]:\r\n        with catch_unraisable_exception() as cm:\r\n            yield\r\n            if cm.unraisable:\r\n                if cm.unraisable.err_msg is not None:\r\n                    err_msg = cm.unraisable.err_msg\r\n                else:\r\n                    err_msg = \"Exception ignored in\"\r\n                msg = f\"{err_msg}: {cm.unraisable.object!r}\\n\\n\"\r\n                msg += \"\".join(\r\n                    traceback.format_exception(\r\n                        cm.unraisable.exc_type,\r\n                        cm.unraisable.exc_value,\r\n                        cm.unraisable.exc_traceback,\r\n                    )\r\n                )\r\n>               warnings.warn(pytest.PytestUnraisableExceptionWarning(msg))\r\nE               pytest.PytestUnraisableExceptionWarning: Exception ignored in: <ssl.SSLSocket fd=-1, family=30, type=1, proto=0>\r\nE               \r\nE               Traceback (most recent call last):\r\nE                 File \"/Users/Adam/spack/var/spack/environments/system/.spack-env/view/lib/python3.11/site-packages/lightly/api/_version_checking.py\", line 14, in is_latest_version\r\nE                   latest_version = get_latest_version(current_version)\r\nE                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nE               ResourceWarning: unclosed <ssl.SSLSocket fd=14, family=30, type=1, proto=0, laddr=('2003:c5:871c:3401:1c58:c181:796f:7f6e', 56478, 0, 0), raddr=('2a00:1450:4001:827::2013', 443, 0, 0)>\r\n\r\n../spack/var/spack/environments/system/.spack-env/view/lib/python3.11/site-packages/_pytest/unraisableexception.py:78: PytestUnraisableExceptionWarning\r\n```\r\n</details>\r\n\r\nI don't think this issue occurred in my old Python 3.10 environment. It could also be the result of upgrading to a new version of a dependency.\r\n\r\nThis might be tricky to reproduce unless we can figure out what's causing the issue. Basically, I have some code that is broken, and the unit test fails, as it should. However, instead of printing the normal failing code, it complains about an unclosed SSLSocket.\r\n\r\nIn my `pyproject.toml`, I'm treating all warnings as errors, so the above ResourceWarning becomes a fatal error. If I remove this, I see the expected failing code.\r\n\r\nDo you have any idea why pytest might be behaving this way? Is there some bug in `lightly` relating to SSLSockets or is this just a red herring?\r\n\r\n<details>\r\n  <summary>Output of pip list</summary>\r\n\r\n```\r\n> pip list\r\nPackage                       Version\r\n----------------------------- -----------\r\nabsl-py                       1.4.0\r\naenum                         3.1.12\r\naffine                        2.1.0\r\naiohttp                       3.8.4\r\naiosignal                     1.2.0\r\nalabaster                     0.7.13\r\nantlr4-python3-runtime        4.9.3\r\nanyio                         3.6.2\r\nappdirs                       1.4.4\r\nappnope                       0.1.3\r\nargon2-cffi                   21.3.0\r\nargon2-cffi-bindings          21.2.0\r\narrow                         1.2.3\r\nasttokens                     2.2.1\r\nastunparse                    1.6.3\r\nasync-lru                     1.0.3\r\nasync-timeout                 4.0.2\r\nattrs                         23.1.0\r\nBabel                         2.12.1\r\nbackcall                      0.2.0\r\nbackoff                       2.2.1\r\nbeautifulsoup4                4.12.2\r\nblack                         23.9.1\r\nbleach                        6.0.0\r\nblessed                       1.19.0\r\nBottleneck                    1.3.7\r\nbuild                         1.0.3\r\ncachetools                    5.2.0\r\nCartopy                       0.22.0\r\ncertifi                       2023.5.7\r\ncffi                          1.15.1\r\ncftime                        1.0.3.4\r\ncharset-normalizer            3.1.0\r\nclick                         8.1.3\r\nclick-plugins                 1.1.1\r\ncligj                         0.7.2\r\ncmocean                       2.0\r\ncolorama                      0.4.6\r\ncomm                          0.1.3\r\ncontourpy                     1.0.7\r\ncoverage                      7.2.6\r\ncroniter                      1.3.8\r\ncycler                        0.11.0\r\nCython                        0.29.36\r\ndateutils                     0.6.12\r\ndebugpy                       1.6.7\r\ndecorator                     5.1.1\r\ndeepdiff                      6.3.0\r\ndefusedxml                    0.7.1\r\ndocstring-parser              0.15\r\ndocutils                      0.18.1\r\neditables                     0.3\r\nefficientnet-pytorch          0.7.1\r\neinops                        0.6.1\r\net-xmlfile                    1.0.1\r\nexecuting                     1.2.0\r\nfastapi                       0.98.0\r\nfastjsonschema                2.16.3\r\nfilelock                      3.12.0\r\nFiona                         1.9.4\r\nflake8                        6.1.0\r\nflit_core                     3.9.0\r\nfonttools                     4.39.4\r\nfqdn                          1.5.1\r\nfrozenlist                    1.3.1\r\nfsspec                        2023.1.0\r\nGDAL                          3.7.2\r\ngeocube                       0.3.2\r\ngeopandas                     0.11.1\r\ngevent                        23.7.0\r\ngoogle-auth                   2.20.0\r\ngoogle-auth-oauthlib          0.5.2\r\ngreenlet                      2.0.2\r\ngrpcio                        1.52.0\r\nh11                           0.13.0\r\nh5py                          3.8.0\r\nhatch-jupyter-builder         0.8.3\r\nhatchling                     1.17.0\r\nhuggingface-hub               0.14.1\r\nhydra-core                    1.3.1\r\nidna                          3.4\r\nimagesize                     1.4.1\r\nimportlib-metadata            6.6.0\r\nimportlib-resources           5.12.0\r\niniconfig                     2.0.0\r\ninquirer                      3.1.3\r\nipykernel                     6.23.1\r\nipython                       8.14.0\r\nipywidgets                    8.0.2\r\nisoduration                   20.11.0\r\nisort                         5.12.0\r\nitsdangerous                  2.1.2\r\njaraco.classes                3.2.3\r\njedi                          0.18.2\r\nJinja2                        3.0.3\r\njoblib                        1.2.0\r\njson5                         0.9.14\r\njsonargparse                  4.19.0\r\njsonpointer                   2.0\r\njsonschema                    4.17.3\r\njupyter_client                8.2.0\r\njupyter_core                  5.3.0\r\njupyter-events                0.6.3\r\njupyter-lsp                   2.2.0\r\njupyter_server                2.6.0\r\njupyter_server_terminals      0.4.4\r\njupyterlab                    4.0.1\r\njupyterlab-pygments           0.2.2\r\njupyterlab_server             2.22.1\r\njupyterlab-widgets            3.0.3\r\nkeyring                       23.13.1\r\nkiwisolver                    1.4.4\r\nkornia                        0.7.0\r\nlaspy                         2.2.0\r\nlightly                       1.4.18\r\nlightly-utils                 0.0.2\r\nlightning                     2.0.9\r\nlightning-cloud               0.5.38\r\nlightning-utilities           0.8.0\r\nMarkdown                      3.4.1\r\nmarkdown-it-py                3.0.0\r\nMarkupSafe                    2.1.3\r\nmatplotlib                    3.8.0\r\nmatplotlib-inline             0.1.6\r\nmccabe                        0.7.0\r\nmdurl                         0.1.2\r\nmistune                       2.0.5\r\nmore-itertools                9.1.0\r\nmpmath                        1.2.1\r\nmultidict                     6.0.4\r\nmunch                         2.5.0\r\nmypy                          1.3.0\r\nmypy-extensions               1.0.0\r\nnbclient                      0.6.7\r\nnbconvert                     7.4.0\r\nnbformat                      5.8.0\r\nnbmake                        1.4.3\r\nnbsphinx                      0.8.8\r\nnest-asyncio                  1.5.6\r\nnetCDF4                       1.6.2\r\nnetworkx                      3.1\r\nnotebook_shim                 0.2.3\r\nnumexpr                       2.8.4\r\nnumpy                         1.25.2\r\noauthlib                      3.2.1\r\nodc-geo                       0.1.2\r\nomegaconf                     2.3.0\r\nopenpyxl                      3.1.2\r\nordered-set                   4.0.2\r\noverrides                     7.3.1\r\npackaging                     23.1\r\npandas                        2.0.2\r\npandocfilters                 1.5.0\r\nparso                         0.8.3\r\npathspec                      0.11.1\r\npexpect                       4.8.0\r\npickleshare                   0.7.5\r\nPillow                        9.5.0\r\npip                           23.0\r\npkginfo                       1.9.6\r\nplanetary-computer            0.4.9\r\nplatformdirs                  3.5.3\r\npluggy                        1.0.0\r\npoetry-core                   1.6.1\r\npretrainedmodels              0.7.4\r\nprometheus-client             0.17.0\r\nprompt-toolkit                3.0.38\r\nprotobuf                      3.20.3\r\npsutil                        5.9.5\r\nptyprocess                    0.7.0\r\npure-eval                     0.2.2\r\npyasn1                        0.4.8\r\npyasn1-modules                0.2.8\r\npybind11                      2.10.1\r\npycocotools                   2.0.6\r\npycodestyle                   2.11.0\r\npycparser                     2.21\r\npydantic                      1.10.9\r\npydocstyle                    6.2.1\r\npyflakes                      3.1.0\r\npygeos                        0.10\r\nPygments                      2.15.1\r\nPyJWT                         2.4.0\r\npyparsing                     3.0.9\r\npyproj                        3.6.0\r\npyproject_hooks               1.0.0\r\npyrsistent                    0.19.3\r\npyshp                         2.1.0\r\npystac                        1.4.0\r\npystac-client                 0.5.1\r\npytest                        7.3.2\r\npytest-cov                    4.0.0\r\npython-dateutil               2.8.2\r\npython-dotenv                 0.19.2\r\npython-editor                 1.0.4\r\npython-json-logger            2.0.7\r\npython-multipart              0.0.5\r\npytorch-lightning             2.0.0\r\npytorch-sphinx-theme          0.0.24\r\npytz                          2023.3\r\npyupgrade                     3.3.1\r\nPyYAML                        6.0\r\npyzmq                         25.0.2\r\nradiant-mlhub                 0.5.1\r\nrarfile                       4.1\r\nrasterio                      1.3.8\r\nreadchar                      4.0.5\r\nreadme-renderer               37.3\r\nrequests                      2.31.0\r\nrequests-oauthlib             1.3.1\r\nrequests-toolbelt             1.0.0\r\nrfc3339-validator             0.1.4\r\nrfc3986                       2.0.0\r\nrfc3986-validator             0.1.1\r\nrich                          13.4.2\r\nrioxarray                     0.4.1.post0\r\nrsa                           4.9\r\nRtree                         1.0.1\r\nsafetensors                   0.3.1\r\nscikit-learn                  1.3.1\r\nscipy                         1.10.1\r\nsegmentation-models-pytorch   0.3.3\r\nSend2Trash                    1.8.0\r\nsetuptools                    63.4.3\r\nsetuptools-scm                7.1.0\r\nShapely                       1.8.4\r\nsix                           1.16.0\r\nsniffio                       1.3.0\r\nsnowballstemmer               2.2.0\r\nsnuggs                        1.4.1\r\nsoupsieve                     2.4.1\r\nSphinx                        5.3.0\r\nsphinx_design                 0.4.1\r\nsphinx-rtd-theme              1.2.2\r\nsphinxcontrib-applehelp       1.0.2\r\nsphinxcontrib-devhelp         1.0.2\r\nsphinxcontrib-htmlhelp        2.0.0\r\nsphinxcontrib-jquery          4.1\r\nsphinxcontrib-jsmath          1.0.1\r\nsphinxcontrib-programoutput   0.15\r\nsphinxcontrib-qthelp          1.0.3\r\nsphinxcontrib-serializinghtml 1.1.9\r\nstack-data                    0.6.2\r\nstarlette                     0.27.0\r\nstarsessions                  1.3.0\r\nsympy                         1.11.1\r\ntensorboard                   2.13.0\r\ntensorboard-data-server       0.7.0\r\ntensorboard-plugin-wit        1.8.1\r\nterminado                     0.17.1\r\nthreadpoolctl                 3.1.0\r\ntimm                          0.9.2\r\ntinycss2                      1.1.1\r\ntokenize-rt                   4.2.1\r\ntomli                         2.0.1\r\ntorch                         2.0.1\r\ntorchmetrics                  1.1.1\r\ntorchvision                   0.15.2\r\ntornado                       6.2\r\ntqdm                          4.65.0\r\ntraitlets                     5.9.0\r\ntrove-classifiers             2023.3.9\r\ntwine                         4.0.2\r\ntypeshed-client               2.1.0\r\ntyping_extensions             4.6.3\r\ntzdata                        2023.3\r\nuri-template                  1.2.0\r\nurllib3                       1.26.12\r\nuvicorn                       0.20.0\r\nvermin                        1.5.2\r\nwcwidth                       0.2.5\r\nwebcolors                     1.11.1\r\nwebencodings                  0.5.1\r\nwebsocket-client              1.5.1\r\nwebsockets                    10.4\r\nWerkzeug                      2.3.4\r\nwheel                         0.37.1\r\nwidgetsnbextension            4.0.3\r\nxarray                        2023.7.0\r\nyarl                          1.8.1\r\nzipfile-deflate64             0.2.0\r\nzipp                          3.8.1\r\nzope.event                    4.6\r\nzope.interface                5.4.0\r\n```\r\n</details>\r\n\r\n* pytest 7.3.2\r\n* python 3.11.4\r\n* macOS 13.5.2",
      "state": "CLOSED",
      "createdAt": "2023-09-22T16:55:43Z",
      "updatedAt": "2023-10-01T08:16:30Z",
      "closedAt": "2023-10-01T08:16:29Z",
      "author": {
        "login": "adamjstewart"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: question"
          },
          {
            "name": "plugin: warnings"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 11460,
      "title": "How to get test result status in teardown_method?",
      "body": "```\r\nclass TestBase:\r\n    def setup_method(self, method):\r\n        print(\"setting up class\")\r\n\r\n    def teardown_method(self, method):\r\n        print(\"tearing down class\")\r\n```\r\n\r\nWith a base class above, I have createed a class called `TestA` inheritnig from `TestBase` & I have my test method written in the `TestA` class like below:\r\n```\r\nclass TestA(TestBase):\r\n    def test_decorator(self): \r\n```\r\n\r\nA log file will be created after each test method finishes running.\r\nHow do I delete the log file if the test has failed or skipped in the `teardown_method`?\r\n\r\nThanks\r\n\r\n_Originally posted by @joe-agent in https://github.com/pytest-dev/pytest/discussions/9858_",
      "state": "CLOSED",
      "createdAt": "2023-09-22T02:17:01Z",
      "updatedAt": "2023-09-22T07:01:38Z",
      "closedAt": "2023-09-22T02:25:24Z",
      "author": {
        "login": "gpBlockchain"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 11458,
      "title": "Setting a fixture scope of \"package\" is not working ",
      "body": "> Structure\r\n\r\nmy_tests/\r\n\u00a0 \u00a0 \u2514\u2500\u2500 my_package/\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u251c\u2500\u2500 __init__.py\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u251c\u2500\u2500  test_module1.py\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u2514\u2500\u2500 test_module2.py\r\n\u00a0 \u00a0 \u251c\u2500\u2500 __init__.py\r\n\u00a0 \u00a0 \u251c\u2500\u2500 test_module3.py\r\n\u00a0\u00a0\r\n\r\n> \u00a0File1:\u00a0my_package/test_module1.py\r\n\u00a0\u00a0\r\n```ruby\r\n\r\n\u00a0\u00a0import pytest\r\n\r\n\r\n@pytest.fixture(scope=\"package\")\r\ndef mockone():\r\n    config = \"This is test method.\"\r\n    print(\"This is test method.\", end =\" \")\r\n    return config\r\n    \r\n    \r\ndef test_methodA(mockone):\r\n    print(\"This is method A.\")\r\n    assert mockone == \"This is test method.\"\r\n    \r\ndef test_methodB(mockone):\r\n    print(\"This is method B.\")\r\n    assert mockone == \"This is test method.\" `\r\n```\r\n\r\n> \u00a0File2:\u00a0my_package/test_module2.py\r\n\r\n```ruby\r\nimport pytest\r\n\r\ndef test_methodC(mockone):\r\n    print(\"This is method C.\")\r\n    assert mockone == \"This is test method.\"\r\n    \r\ndef test_methodD(mockone):\r\n    print(\"This is method D.\")\r\n    assert mockone == \"This is test method.\"\r\n\r\n```\r\n\r\n\r\n> \u00a0File3:\u00a0my_tests/test_module3py\r\n\r\n```ruby\r\nimport pytest\r\n\r\ndef test_methodE(mockone):\r\n    print(\"This is method E.\")\r\n    assert mockone == \"This is test method.\"\r\n    \r\ndef test_methodF(mockone):\r\n    print(\"This is method F.\")\r\n    assert mockone == \"This is test method.\"\r\n```\r\n\r\n> Result as below: The package scope fixture fails to run in different modules in the same package(which is my_package). As you can \r\nsee, there are two ERRORs for the file my_package/test_module2.py, and that should be PASSED. Besides, I know that it is normal that there are errors when users run test_module3 file not under my_package folder, especially when its functions are applied by the package fixture in the different package . \r\n\r\n```\r\n=============================================================test session starts=============================================================\r\nplatform win32 -- Python 3.11.4, pytest-7.4.0, pluggy-1.2.0 -- C:\\Users\\jennifer.c\\AppData\\Local\\Programs\\Python\\Python311\\python.exe\r\ncachedir: .pytest_cache\r\nrootdir: C:\\Users\\jennifer.c\\Desktop\\my_tests\r\ncollected 6 items                                                                                                                                   \r\n\r\ntest_module3.py::test_methodE ERROR\r\ntest_module3.py::test_methodF ERROR\r\nmy_package/test_module1.py::test_methodA This is test method. This is method A.\r\nPASSED\r\nmy_package/test_module1.py::test_methodB This is method B.\r\nPASSED\r\nmy_package/test_module2.py::test_methodC ERROR\r\nmy_package/test_module2.py::test_methodD ERROR\r\n============================================================= ERRORS =============================================================\r\n____________________________________________________ ERROR at setup of test_methodE____________________________________________________\r\nfile C:\\Users\\jennifer.c\\Desktop\\my_tests\\test_module3.py, line 3\r\n  def test_methodE(mockone):\r\nE       fixture 'mockone' not found\r\n>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, monkeypatch, pytestconfig, record_property, \r\nrecord_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory\r\n>       use 'pytest --fixtures [testpath]' for help on them.\r\n\r\nC:\\Users\\jennifer.c\\Desktop\\my_tests\\test_module3.py:3\r\n____________________________________________________ ERROR at setup of test_methodF____________________________________________________\r\nfile C:\\Users\\jennifer.c\\Desktop\\my_tests\\test_module3.py, line 7\r\n  def test_methodF(mockone):\r\nE       fixture 'mockone' not found\r\n>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, monkeypatch, pytestconfig, record_property, \r\nrecord_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory\r\n>       use 'pytest --fixtures [testpath]' for help on them.\r\n\r\nC:\\Users\\jennifer.c\\Desktop\\my_tests\\test_module3.py:7\r\n____________________________________________________ERROR at setup of test_methodC ____________________________________________________\r\nfile C:\\Users\\jennifer.c\\Desktop\\my_tests\\my_package\\test_module2.py, line 3\r\n  def test_methodC(mockone):\r\nE       fixture 'mockone' not found\r\n>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, monkeypatch, pytestconfig, record_property, \r\nrecord_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory\r\n>       use 'pytest --fixtures [testpath]' for help on them.\r\n\r\nC:\\Users\\jennifer.c\\Desktop\\my_tests\\my_package\\test_module2.py:3\r\n____________________________________________________ERROR at setup of test_methodD____________________________________________________\r\nfile C:\\Users\\jennifer.c\\Desktop\\my_tests\\my_package\\test_module2.py, line 7\r\n  def test_methodD(mockone):\r\nE       fixture 'mockone' not found\r\n>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, monkeypatch, pytestconfig, record_property, \r\nrecord_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory\r\n>       use 'pytest --fixtures [testpath]' for help on them.\r\n\r\nC:\\Users\\jennifer.c\\Desktop\\my_tests\\my_package\\test_module2.py:7\r\n============================================================= short test summary info =============================================================\r\nERROR test_module3.py::test_methodE\r\nERROR test_module3.py::test_methodF\r\nERROR my_package/test_module2.py::test_methodC\r\nERROR my_package/test_module2.py::test_methodD\r\n=============================================================2 passed, 4 errors in 0.02s =============================================================\r\n```\r\n\r\nModule: The scope module runs the fixture per module, which means the fixture setting module scope can be reused in a module(.py file).\r\nPackage: The scope package runs the fixture per package, which means the fixture seeting module scope can be reused in multiple modules (.py files) in the same package.  \r\n\r\nPlease help check whether the scope package does not work or my understanding is incorrect?",
      "state": "CLOSED",
      "createdAt": "2023-09-21T03:04:00Z",
      "updatedAt": "2023-09-21T13:51:05Z",
      "closedAt": "2023-09-21T09:50:28Z",
      "author": {
        "login": "YTChiu"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 12
      }
    },
    {
      "number": 11457,
      "title": "Option for pytest.fail to not print exception context ",
      "body": "### Context\r\n\r\nCurrently, one of the ways to use `pytest.fail` is to include all of the necessary information in the `reason` field and disabling the traceback with `pytrace = False`. While this does suppress tracebacks of the exception itself and any exceptions in the context, it still prints the context. I use this in https://github.com/python-trio/pytest-trio/pull/136 for example to report full tracebacks when a timeout happens (capturing all async tasks). Currently, this implementation prints the set of tracebacks twice as an internal exception (which also contains the tracebacks) is converted to a test failure with `pytest.fail`.\r\n\r\n### Feature request\r\n\r\nI would like to have a way to suppress this context as well, either by default if `pytrace = False` is set, or with another option. This is the behavior I would have expected from `pytrace` in the first place.\r\n\r\n### Alternatives\r\n\r\nIt is possible to do some juggling with the exceptions to remove the context as follows:\r\n\r\n```python\r\nimport pytest\r\n\r\n\r\ndef test_fail():\r\n    try:\r\n        import some_missing_package\r\n    except ImportError:\r\n        try:\r\n            pytest.fail(reason=\"You need to install some_missing_package for this test to succeed\", pytrace=False)\r\n        except BaseException as e:\r\n            e.__cause__ = None\r\n            raise\r\n```\r\n\r\nI think this would be reasonable to implement in a plugin for example, but might be a bit to cumbersome/obscure for use in tests. But that is not where my use case lies, so this might a case of the XY problem. Another solution would be to use a report hook to customize the reporting of certain special exceptions.\r\n\r\nIt might be that these alternatives are acceptable (I presume that this case is not a common occurrence) and adding this feature is not worth the maintenance/testing/change in behavior. But I believe it is still worth considering at least.",
      "state": "OPEN",
      "createdAt": "2023-09-20T20:27:40Z",
      "updatedAt": "2023-10-01T08:17:29Z",
      "closedAt": null,
      "author": {
        "login": "VincentVanlaer"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: proposal"
          },
          {
            "name": "topic: reporting"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      }
    },
    {
      "number": 11456,
      "title": "Duplicated parameters in @pytest.mark.parametrize",
      "body": "#### What's the problem this feature will solve?\r\nMake unambigious what the values of the parameters used from parametrize are. \r\n\r\n#### Describe the solution you'd like\r\nWhen duplicated values are used in parametrize, pytest adds a number after each duplicated value, starting from 0 and this confuses what the actual value of parameter is.\r\n\r\nExample:\r\n```python\r\n@pytest.mark.parametrize(\"a\", [1, 2, 10, 11, 2, 1, 12, 11]\r\ndef test_params(a):\r\n    print('a:', a)\r\n    assert a > 0\r\n```\r\nThis result in following output from pytest:\r\n\r\n```\r\ntest_a_1.py::test_params[10] PASSED                    [ 12%]\r\ntest_a_1.py::test_params[20] PASSED                    [ 25%]\r\ntest_a_1.py::test_params[10] PASSED                    [ 25%]\r\ntest_a_1.py::test_params[110] PASSED                   [ 37%]\r\ntest_a_1.py::test_params[21] PASSED                    [ 50%]\r\ntest_a_1.py::test_params[11] PASSED                    [ 62%]\r\ntest_a_1.py::test_params[12] PASSED                    [ 75%]\r\ntest_a_1.py::test_params[111] PASSED                   [ 87%]\r\n```\r\nIt is clear that a has the value `1` the very first time and not `10`, so confusing with the real `10` later.\r\nPytest adds a sequential nbr immediately after each duplicated value and that is very confusing\r\n\r\n\r\n#### Alternative Solutions\r\nDo not do this and leave the values as they are, so I would like following output:\r\n\r\n1, 2, 10, 11, 2, 1, 12, 11 as in parametrize list",
      "state": "CLOSED",
      "createdAt": "2023-09-20T18:42:56Z",
      "updatedAt": "2023-10-08T17:26:33Z",
      "closedAt": "2023-10-08T17:26:33Z",
      "author": {
        "login": "wolfgang-blaszczyk"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: bug"
          },
          {
            "name": "topic: parametrize"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 19
      }
    },
    {
      "number": 11454,
      "title": "Pytest with filterwarnings hangs on uvloop ResourceWarning",
      "body": "## How to reproduce \r\n\r\n### 1. Enable filterwarnings mode\r\n\r\n```toml\r\n[tool.pytest.ini_options]\r\nasyncio_mode = \"auto\"\r\nfilterwarnings = [\r\n    \"error\",\r\n]\r\n```\r\n\r\n### 2. Create Redis client fixture\r\n\r\n```python\r\nimport pytest\r\nfrom redis.asyncio import Redis\r\n\r\n\r\n@pytest.fixture(name=\"redis\")\r\nasync def redis_fixture():\r\n    redis = Redis.from_url(\"redis://localhost\")\r\n    try:\r\n        yield redis\r\n    finally:\r\n        await redis.close()\r\n\r\n```\r\n\r\n### 3. Create simple test\r\n\r\n```python\r\nasync def test_foo(redis):\r\n    await redis.ping()\r\n```\r\n\r\n### 4. Install uvloop\r\n\r\nAdd this to your `conftest.py`\r\n\r\n```\r\nimport uvloop\r\n\r\nuvloop.install()\r\n```\r\n\r\n### 5. Run tests\r\n\r\nI hope you know how to do it ;)\r\n\r\n## Expected result\r\n\r\nSince `Redis` has unclear behaviour of `redis.close()` method and it doesn't close connection pool, our tests should be failed with `ResourceWarning` about `unclosed TCPTransport`\r\n\r\n## Actual result\r\n\r\nTest passed and hanged with infinity loading: \r\n\r\n<img width=\"523\" alt=\"Screenshot 2023-09-23 at 09 11 20\" src=\"https://github.com/pytest-dev/pytest/assets/25399456/6e4ebc64-48d4-477c-8ac0-61d269857aa0\">\r\n\r\n#### P.S.\r\n\r\nOnly `terminate` + `re-run with debug mode` helps to understand what's going on:\r\n<img width=\"983\" alt=\"Screenshot 2023-09-23 at 09 16 20\" src=\"https://github.com/pytest-dev/pytest/assets/25399456/ed9dbcf0-ae68-42af-a643-5d9d8e906b2c\">\r\n\r\n\r\n",
      "state": "CLOSED",
      "createdAt": "2023-09-19T17:28:36Z",
      "updatedAt": "2023-12-05T01:50:10Z",
      "closedAt": "2023-12-05T01:50:10Z",
      "author": {
        "login": "Olegt0rr"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "status: needs information"
          },
          {
            "name": "stale"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 5
      }
    },
    {
      "number": 11447,
      "title": "Add `FutureWarning` to `deprecated_call()`",
      "body": "#### What's the problem this feature will solve?\r\n\r\nWhen implementing deprecated features, we are regularly expected to use the [`DeprecationWarning`][DeprecationWarning] and [`PendingDeprecationWarning`][PendingDeprecationWarning] warnings. However, there is another one: [`FutureWarning`][FutureWarning]. This particular warning is used by packages such as [`pydeprecate`][pydeprecate] as the default warning for any functions that will be removed in the future.\r\n\r\nHowever, when I write a function that raises the [`FutureWarning`][FutureWarning] (or use the [`@deprecated`][pydeprecate] decorator), then [`deprecated_call()`][deprecated_call] currently does not catch the test successfully.\r\n\r\n#### Describe the solution you'd like\r\n\r\nI'd like to add [`FutureWarning`][FutureWarning] to the list of warnings which are captured by [`deprecated_call()`][deprecated_call].\r\n\r\nThis is the current behaviour:\r\n\r\n```py\r\nfrom warnings import warn\r\nfrom pytest import deprecated_call\r\n\r\ndef deprecated_func():\r\n    warn(\"This function is deprecated\", DeprecationWarning)\r\n    pass\r\n\r\ndef future_deprecation_func():\r\n    warn(\"This function will be deprecated in the future\", FutureWarning)\r\n    pass\r\n\r\ndef test_deprecated():\r\n    \"\"\"Expected to pass\"\"\"\r\n    with deprecated_call():\r\n        deprecated_func()\r\n\r\ndef test_futures():\r\n    \"\"\"Expected to fail\"\"\"\r\n    with deprecated_call():\r\n        future_deprecation_func()\r\n```\r\n\r\nThe expected behaviour would be for both of these two test cases to pass successfully.\r\n\r\n#### Alternative Solutions\r\n\r\nN/A\r\n\r\n#### Additional context\r\n\r\nN/A\r\n\r\n[DeprecationWarning]: https://docs.python.org/3/library/exceptions.html#DeprecationWarning\r\n[PendingDeprecationWarning]: https://docs.python.org/3/library/exceptions.html#PendingDeprecationWarning\r\n[FutureWarning]: https://docs.python.org/3/library/exceptions.html#FutureWarning\r\n[pydeprecate]: https://borda.github.io/pyDeprecate/\r\n[deprecated_call]: https://docs.pytest.org/en/7.4.x/reference/reference.html#pytest.deprecated_call",
      "state": "CLOSED",
      "createdAt": "2023-09-18T01:06:00Z",
      "updatedAt": "2023-09-18T12:34:06Z",
      "closedAt": "2023-09-18T12:34:06Z",
      "author": {
        "login": "chrimaho"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 11445,
      "title": "`setup_class` not working",
      "body": "<!--\r\nThanks for submitting an issue!\r\n\r\nQuick check-list while reporting bugs:\r\n-->\r\n\r\n- [x] a detailed description of the bug or problem you are having\r\n- [ ] output of `pip list` from the virtual environment you are using\r\n- [x] pytest and operating system versions  **pytest 7.4.2**\r\n- [x] minimal example if possible\r\n\r\nBelow is what my test code looks like now.\r\nIf I init `venv_path` in `setup_class` method, i.e. `cls.venv_path = Path(__file__).parent / \"venv\"`,\r\nI will not get `self.venv_path` in the test_init().\r\n\r\n**It will raise AttributeError, saying `self` not having the attribute.**\r\nI can only write setup_class code like this, I don't know why.\r\n\r\nAlso, **fixture is notoriously buggy in setup_class method.**\r\nI won't give the details in this thread. It is simple to reproduce.\r\n\r\n```\r\nfrom pathlib import Path\r\n\r\nclass TestMojoEnvBuilder: \r\n    venv_path = Path(__file__).parent / \"venv\"\r\n\r\n    def test_init(self) -> None:\r\n        print(f\"{self.venv_path = }\")\r\n        pass\r\n\r\n    @classmethod\r\n    def teardown_class(cls) -> None:\r\n        shutil.rmtree(cls.venv_path)\r\n\r\n```",
      "state": "CLOSED",
      "createdAt": "2023-09-17T14:09:54Z",
      "updatedAt": "2023-09-18T15:00:23Z",
      "closedAt": "2023-09-18T09:14:04Z",
      "author": {
        "login": "drunkwcodes"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 6
      }
    },
    {
      "number": 11441,
      "title": "Two function scope fixtures are run in reverse order.",
      "body": "Hi, i have such a problem, i have a fixture called appclient which is session scope, it's body looks like this:\r\n@pytest.fixture(scope='session')\r\ndef appclient():\r\n   yield SomeClass()\r\n\r\nthen i have two fixtures to cleanup after test, cleanup_1 and cleanup_2, both are set 'function' scope and both inherit from appclient fixture and have body like:\r\n@pytest.fixture(scope='function')\r\ndef cleanup_1(appclient):\r\n   yield\r\n   <cleanup stuff...>\r\n\r\ni import them all to test function(i do not use conftest for this fixtures as i am having too many there) and use them like:\r\ndef test_1(appclient, cleanup_1, cleanup_2), my problem is that cleanup_2 is always done before cleanup_1 and i can't understand why? Only when i set cleanup_2 scope to module, it started to work.\r\n\r\npip_list:\r\nallure-pytest           2.12.0.1\r\nallure-python-commons   2.12.0.1\r\nansible                 7.1.0\r\nansible-core            2.14.10\r\nanyio                   4.0.0\r\nappdirs                 1.4.4\r\nastroid                 2.15.6\r\nattrs                   23.1.0\r\nbcrypt                  4.0.1\r\nblack                   23.9.1\r\nCerberus                1.3.4\r\ncertifi                 2023.7.22\r\ncffi                    1.15.1\r\ncfgv                    3.4.0\r\ncharset-normalizer      3.0.1\r\nclick                   8.1.7\r\ncobs                    1.2.0\r\ncontourpy               1.1.0\r\ncryptography            39.0.0\r\ncycler                  0.11.0\r\ndecorator               5.1.1\r\ndill                    0.3.7\r\ndistlib                 0.3.7\r\ndpkt                    1.9.8\r\nexceptiongroup          1.1.3\r\nFaker                   19.6.1\r\nfilelock                3.9.0\r\nflake8                  6.1.0\r\nfonttools               4.42.1\r\nfuture                  0.18.3\r\ngreenlet                2.0.2\r\ngrpcio                  1.58.0\r\ngrpcio-tools            1.58.0\r\nh11                     0.14.0\r\nhttpcore                0.17.3\r\nhttpx                   0.24.1\r\nidentify                2.5.28\r\nidna                    3.4\r\nimportlib-resources     6.0.1\r\niniconfig               2.0.0\r\niso8601                 2.0.0\r\nisort                   5.12.0\r\nJinja2                  3.1.2\r\njunit2html              30.1.3\r\njunitparser             2.8.0\r\nkiwisolver              1.4.5\r\nlazy-object-proxy       1.9.0\r\nlxml                    4.9.2\r\nManagenode              2.1.2\r\nMarkupSafe              2.1.3\r\nmarshmallow             2.21.0\r\nmatplotlib              3.7.3\r\nmccabe                  0.7.0\r\nmcs-utilities           14.2.7\r\nmulti-key-dict          2.0.3\r\nmypy-extensions         1.0.0\r\nnemrest                 17.1.2\r\nnetaddr                 0.8.0\r\nnetifaces               0.11.0\r\nnodeenv                 1.8.0\r\nnumpy                   1.25.2\r\nomniORB                 4.3.0.1\r\novirt-engine-sdk-python 4.4.1\r\npackaging               23.0\r\npandas                  2.1.0\r\nparamiko                3.0.0\r\npathspec                0.11.2\r\npbr                     5.11.1\r\npexpect                 4.8.0\r\npika                    1.3.1\r\nPillow                  10.0.0\r\npip                     23.2.1\r\nplatformdirs            3.10.0\r\nplaywright              1.35.0\r\npluggy                  1.0.0\r\nply                     3.11\r\npolling2                0.5.0\r\nportalocker             2.7.0\r\npre-commit              3.4.0\r\nprotobuf                4.24.3\r\npsycopg2-binary         2.9.5\r\nptyprocess              0.7.0\r\npy                      1.11.0\r\npyasn1                  0.4.8\r\npycodestyle             2.11.0\r\npycparser               2.21\r\npycryptodomex           3.18.0\r\npycurl                  7.45.2\r\npydocstyle              6.3.0\r\npyee                    9.0.4\r\npyflakes                3.1.0\r\npylint                  2.17.5\r\npylint-pytest           1.1.2\r\npyllow                  1.4.1\r\nPyNaCl                  1.5.0\r\npyparsing               3.0.9\r\npyrad                   2.4\r\npyroute2                0.7.9\r\npyshark                 0.6\r\npysmi                   0.3.4\r\npysnmp                  4.4.12\r\npytest                  7.4.2\r\npytest-base-url         2.0.0\r\npytest-playwright       0.3.2\r\npytest-sugar            0.9.6\r\npytest-testconfig       0.2.0\r\npython-dateutil         2.8.2\r\npython-jenkins          1.7.0\r\npython-ostinato         1.1\r\npython-slugify          6.1.2\r\npytz                    2022.1\r\nPyYAML                  6.0\r\nrequests                2.28.2\r\nrequests-toolbelt       0.10.1\r\nresolvelib              0.8.1\r\nretry                   0.9.2\r\nscapy                   2.5.0\r\nserial                  0.0.97\r\nsetuptools              50.3.2\r\nsix                     1.16.0\r\nsniffio                 1.3.0\r\nsnowballstemmer         2.2.0\r\nsseclient-py            1.7.2\r\ntermcolor               2.2.0\r\ntext-unidecode          1.3\r\ntoml                    0.10.2\r\ntomli                   2.0.1\r\ntomlkit                 0.12.1\r\ntyping_extensions       4.7.1\r\ntzdata                  2023.3\r\nurllib3                 1.26.14\r\nurlpath                 1.2.0\r\nvirtualenv              20.21.1\r\nwrapt                   1.15.0\r\nXlsxWriter              3.1.3\r\nxmltodict               0.13.0\r\nyamlable                1.1.1\r\nyamllint                1.29.0\r\nzipp                    3.16.2\r\n\r\n\r\ni have pytest 7.4.2\r\nOS:\r\nNAME=\"AlmaLinux\"\r\nVERSION=\"8.8 (Sapphire Caracal)\"\r\nID=\"almalinux\"\r\nID_LIKE=\"rhel centos fedora\"\r\nVERSION_ID=\"8.8\"\r\nPLATFORM_ID=\"platform:el8\"\r\nPRETTY_NAME=\"AlmaLinux 8.8 (Sapphire Caracal)\"\r\n\r\n![image](https://github.com/pytest-dev/pytest/assets/63788600/3eef3979-4bc3-47f7-bc99-d0e3816ea652)\r\n",
      "state": "CLOSED",
      "createdAt": "2023-09-15T16:32:01Z",
      "updatedAt": "2023-09-15T17:00:27Z",
      "closedAt": "2023-09-15T17:00:27Z",
      "author": {
        "login": "cmdulek98"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      }
    },
    {
      "number": 11440,
      "title": "Parametrized test with special node ids is not selectable individually using `-k`",
      "body": "<!--\r\nThanks for submitting an issue!\r\n\r\nQuick check-list while reporting bugs:\r\n-->\r\npytest version 7.4.2.\r\nWindows 10 on MSYS2\r\n\r\nI have a test id like this `test_promote[with_state-spec_toml0-pnl_data__expected0-state::must remove-now3-2022-04-18 20:20:00+00:0001]`. \r\n\r\nI'd like to select the test when running:\r\n\r\n`pytest -k 'test_promote[with_state-spec_toml0-pnl_data__expected0-state::must remove-now3-2022-04-18 20:20:00+00:0001]'`\r\n\r\nGot: \r\n`\r\nWrong expression passed to '-k': test_promote[with_state-spec_toml0-pnl_data__expected0-state::must remove-now3-2022-04-18 20:20:00+00:0001]: at column 68: expected end of input; got identifier\r\n`\r\n\r\nTried also \r\n`pytest -k 'test_promote[with_state-spec_toml0-pnl_data__expected0-state::must\\ remove-now3-2022-04-18 20:20:00+00:0001]'`\r\n\r\nAnd now for some reason is replacing `:` with `;`?\r\n\r\n`ERROR: Wrong expression passed to '-k': test_promote[with_state-spec_toml0-pnl_data__expected0-state;must\\ remove-now3-2022-04-18 20;20;00+00;0001]: at column 61: unexpected character \";\"`\r\n\r\n- [x] a detailed description of the bug or problem you are having\r\n- [ ] output of `pip list` from the virtual environment you are using\r\n- [x] pytest and operating system versions\r\n- [x] minimal example if possible\r\n",
      "state": "CLOSED",
      "createdAt": "2023-09-15T15:33:32Z",
      "updatedAt": "2023-09-15T16:51:40Z",
      "closedAt": "2023-09-15T16:45:41Z",
      "author": {
        "login": "rdbisme"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: question"
          },
          {
            "name": "topic: parametrize"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 5
      }
    },
    {
      "number": 11439,
      "title": "ValueError: I/O operation on closed file",
      "body": "After all tests have finished, closing the test session, the faulthandler unconfigure function tries to get the fileno of stderr. If stderr is closed it throws a ValueError. When running in a CI it looks like tests failed since pytest exits with an error but actually all the tests have passed - just the teardown failed. \r\n\r\nA quick fix would be to expand the scope of caught exceptions in the get_stderr_fileno() function in faulthandler.py. Currently ValueError is not caught.\r\n\r\n## Traceback\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/venv3.9/bin/pytest\", line 8, in <module>\r\n    sys.exit(console_main())\r\n  File \"/home/venv3.9/lib/python3.9/site-packages/_pytest/config/__init__.py\", line 192, in console_main\r\n    code = main()\r\n  File \"/home/venv3.9/lib/python3.9/site-packages/_pytest/config/__init__.py\", line 169, in main\r\n    ret: Union[ExitCode, int] = config.hook.pytest_cmdline_main(\r\n  File \"/home/venv3.9/lib/python3.9/site-packages/pluggy/_hooks.py\", line 493, in __call__\r\n    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)\r\n  File \"/home/venv3.9/lib/python3.9/site-packages/pluggy/_manager.py\", line 115, in _hookexec\r\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\r\n  File \"/home/venv3.9/lib/python3.9/site-packages/pluggy/_callers.py\", line 113, in _multicall\r\n    raise exception.with_traceback(exception.__traceback__)\r\n  File \"/home/venv3.9/lib/python3.9/site-packages/pluggy/_callers.py\", line 77, in _multicall\r\n    res = hook_impl.function(*args)\r\n  File \"/home/venv3.9/lib/python3.9/site-packages/_pytest/main.py\", line 318, in pytest_cmdline_main\r\n    return wrap_session(config, _main)\r\n  File \"/home/venv3.9/lib/python3.9/site-packages/_pytest/main.py\", line 313, in wrap_session\r\n    config._ensure_unconfigure()\r\n  File \"/home/venv3.9/lib/python3.9/site-packages/_pytest/config/__init__.py\", line 1058, in _ensure_unconfigure\r\n    self.hook.pytest_unconfigure(config=self)\r\n  File \"/home/venv3.9/lib/python3.9/site-packages/pluggy/_hooks.py\", line 493, in __call__\r\n    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)\r\n  File \"/home/venv3.9/lib/python3.9/site-packages/pluggy/_manager.py\", line 115, in _hookexec\r\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\r\n  File \"/home/venv3.9/lib/python3.9/site-packages/pluggy/_callers.py\", line 113, in _multicall\r\n    raise exception.with_traceback(exception.__traceback__)\r\n  File \"/home/venv3.9/lib/python3.9/site-packages/pluggy/_callers.py\", line 77, in _multicall\r\n    res = hook_impl.function(*args)\r\n  File \"/home/venv3.9/lib/python3.9/site-packages/_pytest/faulthandler.py\", line 43, in pytest_unconfigure\r\n    faulthandler.enable(file=get_stderr_fileno())\r\n  File \"/home/venv3.9/lib/python3.9/site-packages/_pytest/faulthandler.py\", line 48, in get_stderr_fileno\r\n    fileno = sys.stderr.fileno()\r\nValueError: I/O operation on closed file\r\n```\r\n\r\n## Platform\r\n\r\n```\r\nPython: 3.9.10\r\nPlatform: Linux-5.4.226-129.415.amzn2.x86_64-x86_64-with-glibc2.31\r\n\r\npytest: 7.4.2\r\npluggy: 1.3.0\r\n\r\nPlugins:\r\n\r\nFaker: 19.6.1\r\nanyio: 4.0.0\r\ncov: 4.1.0\r\ncsv: 3.0.0\r\ndjango: 4.5.2\r\nfactoryboy: 2.5.1\r\nflake8: 1.1.1\r\nhtml: 4.0.2\r\nicdiff: 0.7\r\ninstafail: 0.5.0\r\nisort: 3.1.0\r\nmetadata: 3.0.0\r\nmock: 3.11.1\r\nmypy: 0.10.3\r\nordering: 0.6\r\nrandomly: 3.15.0\r\nsubprocess: 1.5.0\r\ntimeout: 2.1.0\r\nxdist: 3.3.1\r\ntypeguard: 2.13.3\r\n```\r\n\r\n",
      "state": "CLOSED",
      "createdAt": "2023-09-15T10:17:44Z",
      "updatedAt": "2023-09-20T12:06:44Z",
      "closedAt": "2023-09-20T12:06:44Z",
      "author": {
        "login": "bnomis"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: bug"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 5
      }
    },
    {
      "number": 11435,
      "title": "Add flask_fixture to the list of plugins",
      "body": "Hello!\r\n\r\nI wrote a [plugin](https://github.com/pomponchik/flask_fixture) for Pytest that allows you to automatically start and stop a Flask server. I suggest adding this plugin to the [list of plugins](https://docs.pytest.org/en/7.1.x/reference/plugin_list.html).\r\n\r\nI know that in order for my plugin to automatically appear in the list, it would have to be named differently. However, I don't like all the possible names suitable for automatic inclusion in the list. For example, the name \"pytest-flask-fixture\" seems to me ugly and too long. Therefore, I suggest adding my plugin to the list manually.",
      "state": "CLOSED",
      "createdAt": "2023-09-12T21:54:34Z",
      "updatedAt": "2023-09-13T07:47:06Z",
      "closedAt": "2023-09-12T22:17:23Z",
      "author": {
        "login": "pomponchik"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 11433,
      "title": "experiment with the effect of different terminal widths on the test result and testing in general",
      "body": "when we took note that certain terminal widths affect the testing, we just configured a default for the full test suite\r\n\r\nhowever this demonstrated that we have  a blind spot there\r\nwe really need to get a idea what happens to the tests/ux in general when the width is either too small or too big\r\n\r\ninitial experiments could just vary COLUMNS to identify the areas where things may go south - once pinpointed exact tests an be added\r\n           \r\n_Originally posted by @RonnyPfannschmidt in https://github.com/pytest-dev/pytest/issues/11425#issuecomment-1712886430_\r\n            ",
      "state": "OPEN",
      "createdAt": "2023-09-11T12:52:02Z",
      "updatedAt": "2023-10-10T20:11:14Z",
      "closedAt": null,
      "author": {
        "login": "RonnyPfannschmidt"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "topic: reporting"
          },
          {
            "name": "type: selftests"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 6
      }
    },
    {
      "number": 11417,
      "title": "ValueError: PurePosixPath('.') has an empty name",
      "body": "<!--\r\nThanks for submitting an issue!\r\n\r\nQuick check-list while reporting bugs:\r\n-->\r\n\r\n- [ ] a detailed description of the bug or problem you are having\r\n- [ ] output of `pip list` from the virtual environment you are using\r\n- [ ] pytest and operating system versions\r\n- [ ] minimal example if possible\r\n\r\n\r\nI've bracketed the exception to `pytest==7.4.2`:\r\n\r\n\r\nwith:\r\n```console\r\n$ cat test_debug_pytest.py\r\ndef test_my_test():\r\n    assert True\r\n$ cat pyproject.toml\r\n[tool.pytest.ini_options]\r\naddopts = \"-ra --import-mode=importlib\"\r\n$ cat __init__.py\r\n\r\n$ pytest test_debug_pytest.py\r\n================================================================================ test session starts =================================================================================\r\nplatform linux -- Python 3.8.11, pytest-7.4.2, pluggy-0.13.1\r\nrootdir: /mnt/c/Users/.../test\r\nconfigfile: pyproject.toml\r\nplugins: forked-1.3.0, notebook-0.6.1, mock-3.6.1, anyio-3.3.0, subtests-0.9.0, timeout-2.1.0, xdist-2.3.0, dash-2.7.0, cov-4.0.0, flaky-3.7.0, asyncio-0.21.0\r\nasyncio: mode=strict\r\ncollected 1 item\r\n\r\ntest_debug_pytest.py E                                                                                                                                                         [100%]\r\n\r\n======================================================================================= ERRORS =======================================================================================\r\n___________________________________________________________________________ ERROR at setup of test_my_test ___________________________________________________________________________\r\n\r\nself = PurePosixPath('.'), suffix = '.py'\r\n\r\n    def with_suffix(self, suffix):\r\n        \"\"\"Return a new path with the file suffix changed.  If the path\r\n        has no suffix, add given suffix.  If the given suffix is an empty\r\n        string, remove the suffix from the path.\r\n        \"\"\"\r\n        f = self._flavour\r\n        if f.sep in suffix or f.altsep and f.altsep in suffix:\r\n            raise ValueError(\"Invalid suffix %r\" % (suffix,))\r\n        if suffix and not suffix.startswith('.') or suffix == '.':\r\n            raise ValueError(\"Invalid suffix %r\" % (suffix))\r\n        name = self.name\r\n        if not name:\r\n>           raise ValueError(\"%r has an empty name\" % (self,))\r\nE           ValueError: PurePosixPath('.') has an empty name\r\n\r\n/home/me/miniconda3/envs/aq/lib/python3.8/pathlib.py:872: ValueError\r\n============================================================================== short test summary info ===============================================================================\r\nERROR test_debug_pytest.py::test_my_test - ValueError: PurePosixPath('.') has an empty name\r\n================================================================================== 1 error in 0.14s ==================================================================================\r\n```\r\nwith no `conftest.py`.\r\n\r\n",
      "state": "CLOSED",
      "createdAt": "2023-09-08T16:30:07Z",
      "updatedAt": "2023-09-11T13:14:49Z",
      "closedAt": "2023-09-10T12:57:42Z",
      "author": {
        "login": "qci-amos"
      },
      "assignees": {
        "nodes": [
          {
            "login": "nicoddemus"
          }
        ]
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 4
      }
    },
    {
      "number": 11411,
      "title": "`test_pdb_continue_with_recursive_debug` randomly fails",
      "body": "I see random failures of `test_pdb_continue_with_recursive_debug`.  Below we see one failure, but the number of failures varies from zero to three.\r\n```\r\n$ tox --current-env --no-provision --recreate -e py39 -- testing/test_debugging.py::TestPDB::test_pdb_continue_with_recursive_debug\r\npy39: remove tox env folder $(BUILD_DIR)/.tox/py39\r\npy39: commands[0]> pytest testing/test_debugging.py::TestPDB::test_pdb_continue_with_recursive_debug\r\n============================= test session starts ==============================\r\nplatform sunos5 -- Python 3.9.16, pytest-7.4.1, pluggy-1.3.0 -- /usr/bin/python3.9\r\ncachedir: .tox/py39/.pytest_cache\r\nhypothesis profile 'default' -> database=DirectoryBasedExampleDatabase('$(BUILD_DIR)/.hypothesis/examples')\r\nrootdir: $(BUILD_DIR)\r\nconfigfile: pyproject.toml\r\nplugins: anyio-3.7.1, flake8-1.1.1, mypy-plugins-3.0.0, datadir-1.4.1, mock-3.11.1, custom-exit-code-0.3.0, console-scripts-1.4.1, socket-0.6.0, xdist-3.2.1, time-machine-2.12.0, perf-0.12.0, forked-1.6.0, shell-utilities-1.8.0, env-1.0.1, lazy-fixture-0.6.3, backports.unittest-mock-1.5.1, freezegun-0.4.2, timeout-2.0.2, regressions-2.5.0, helpers-namespace-2021.12.29, typeguard-4.1.3, subtests-0.10.0, rerunfailures-12.0, pytest_freezer-0.4.8, subprocess-1.5.0, skip-markers-1.4.1, pyfakefs-5.2.4, enabler-2.3.1, black-multipy-1.0.1, hypothesis-6.84.1, Faker-19.3.1, kgb-7.1.1, teamcity-messages-1.32, expect-1.1.0, travis-fold-1.3.0, pytest_httpserver-1.0.8, jaraco.test-5.3.0\r\ncollecting ... collected 3 items\r\n\r\ntesting/test_debugging.py::TestPDB::test_pdb_continue_with_recursive_debug[] PASSED [ 33%]\r\ntesting/test_debugging.py::TestPDB::test_pdb_continue_with_recursive_debug[-s] FAILED [ 66%]\r\ntesting/test_debugging.py::TestPDB::test_pdb_continue_with_recursive_debug[-p no:capture] PASSED [100%]\r\n\r\n=================================== FAILURES ===================================\r\n______________ TestPDB.test_pdb_continue_with_recursive_debug[-s] ______________\r\n\r\nself = <test_debugging.TestPDB object at 0x7fffab7415e0>, capture_arg = '-s'\r\npytester = <Pytester PosixPath('/tmp/pytest-of-marcel/pytest-98/test_pdb_continue_with_recursive_debug1')>\r\n\r\n    @pytest.mark.parametrize(\"capture_arg\", (\"\", \"-s\", \"-p no:capture\"))\r\n    def test_pdb_continue_with_recursive_debug(\r\n        self, capture_arg, pytester: Pytester\r\n    ) -> None:\r\n        \"\"\"Full coverage for do_debug without capturing.\r\n\r\n        This is very similar to test_pdb_interaction_continue_recursive in general,\r\n        but mocks out ``pdb.set_trace`` for providing more coverage.\r\n        \"\"\"\r\n        p1 = pytester.makepyfile(\r\n            \"\"\"\r\n            try:\r\n                input = raw_input\r\n            except NameError:\r\n                pass\r\n\r\n            def set_trace():\r\n                __import__('pdb').set_trace()\r\n\r\n            def test_1(monkeypatch):\r\n                import _pytest.debugging\r\n\r\n                class pytestPDBTest(_pytest.debugging.pytestPDB):\r\n                    @classmethod\r\n                    def set_trace(cls, *args, **kwargs):\r\n                        # Init PytestPdbWrapper to handle capturing.\r\n                        _pdb = cls._init_pdb(\"set_trace\", *args, **kwargs)\r\n\r\n                        # Mock out pdb.Pdb.do_continue.\r\n                        import pdb\r\n                        pdb.Pdb.do_continue = lambda self, arg: None\r\n\r\n                        print(\"===\" + \" SET_TRACE ===\")\r\n                        assert input() == \"debug set_trace()\"\r\n\r\n                        # Simulate PytestPdbWrapper.do_debug\r\n                        cls._recursive_debug += 1\r\n                        print(\"ENTERING RECURSIVE DEBUGGER\")\r\n                        print(\"===\" + \" SET_TRACE_2 ===\")\r\n\r\n                        assert input() == \"c\"\r\n                        _pdb.do_continue(\"\")\r\n                        print(\"===\" + \" SET_TRACE_3 ===\")\r\n\r\n                        # Simulate PytestPdbWrapper.do_debug\r\n                        print(\"LEAVING RECURSIVE DEBUGGER\")\r\n                        cls._recursive_debug -= 1\r\n\r\n                        print(\"===\" + \" SET_TRACE_4 ===\")\r\n                        assert input() == \"c\"\r\n                        _pdb.do_continue(\"\")\r\n\r\n                    def do_continue(self, arg):\r\n                        print(\"=== do_continue\")\r\n\r\n                monkeypatch.setattr(_pytest.debugging, \"pytestPDB\", pytestPDBTest)\r\n\r\n                import pdb\r\n                monkeypatch.setattr(pdb, \"set_trace\", pytestPDBTest.set_trace)\r\n\r\n                set_trace()\r\n        \"\"\"\r\n        )\r\n        child = pytester.spawn_pytest(f\"--tb=short {p1} {capture_arg}\")\r\n        child.expect(\"=== SET_TRACE ===\")\r\n        before = child.before.decode(\"utf8\")\r\n        if not capture_arg:\r\n            assert \">>> PDB set_trace (IO-capturing turned off) >>>\" in before\r\n        else:\r\n            assert \">>> PDB set_trace >>>\" in before\r\n        child.sendline(\"debug set_trace()\")\r\n        child.expect(\"=== SET_TRACE_2 ===\")\r\n        before = child.before.decode(\"utf8\")\r\n        assert \"\\r\\nENTERING RECURSIVE DEBUGGER\\r\\n\" in before\r\n        child.sendline(\"c\")\r\n        child.expect(\"=== SET_TRACE_3 ===\")\r\n\r\n        # No continue message with recursive debugging.\r\n        before = child.before.decode(\"utf8\")\r\n        assert \">>> PDB continue \" not in before\r\n\r\n        child.sendline(\"c\")\r\n        child.expect(\"=== SET_TRACE_4 ===\")\r\n        before = child.before.decode(\"utf8\")\r\n        assert \"\\r\\nLEAVING RECURSIVE DEBUGGER\\r\\n\" in before\r\n>       child.sendline(\"c\")\r\n\r\n$(BUILD_DIR)/testing/test_debugging.py:754:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n/usr/lib/python3.9/vendor-packages/pexpect/pty_spawn.py:578: in sendline\r\n    return self.send(s + self.linesep)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <pexpect.pty_spawn.spawn object at 0x7fffa9b09580>, s = b'c\\n'\r\n\r\n    def send(self, s):\r\n        '''Sends string ``s`` to the child process, returning the number of\r\n        bytes written. If a logfile is specified, a copy is written to that\r\n        log.\r\n\r\n        The default terminal input mode is canonical processing unless set\r\n        otherwise by the child process. This allows backspace and other line\r\n        processing to be performed prior to transmitting to the receiving\r\n        program. As this is buffered, there is a limited size of such buffer.\r\n\r\n        On Linux systems, this is 4096 (defined by N_TTY_BUF_SIZE). All\r\n        other systems honor the POSIX.1 definition PC_MAX_CANON -- 1024\r\n        on OSX, 256 on OpenSolaris, and 1920 on FreeBSD.\r\n\r\n        This value may be discovered using fpathconf(3)::\r\n\r\n            >>> from os import fpathconf\r\n            >>> print(fpathconf(0, 'PC_MAX_CANON'))\r\n            256\r\n\r\n        On such a system, only 256 bytes may be received per line. Any\r\n        subsequent bytes received will be discarded. BEL (``'\\a'``) is then\r\n        sent to output if IMAXBEL (termios.h) is set by the tty driver.\r\n        This is usually enabled by default.  Linux does not honor this as\r\n        an option -- it behaves as though it is always set on.\r\n\r\n        Canonical input processing may be disabled altogether by executing\r\n        a shell, then stty(1), before executing the final program::\r\n\r\n            >>> bash = pexpect.spawn('/bin/bash', echo=False)\r\n            >>> bash.sendline('stty -icanon')\r\n            >>> bash.sendline('base64')\r\n            >>> bash.sendline('x' * 5000)\r\n        '''\r\n\r\n        if self.delaybeforesend is not None:\r\n            time.sleep(self.delaybeforesend)\r\n\r\n        s = self._coerce_send_string(s)\r\n        self._log(s, 'send')\r\n\r\n        b = self._encoder.encode(s, final=False)\r\n>       return os.write(self.child_fd, b)\r\nE       OSError: [Errno 22] Invalid argument\r\n\r\n/usr/lib/python3.9/vendor-packages/pexpect/pty_spawn.py:569: OSError\r\n=========================== short test summary info ============================\r\nFAILED testing/test_debugging.py::TestPDB::test_pdb_continue_with_recursive_debug[-s]\r\n========================= 1 failed, 2 passed in 3.28s ==========================\r\npy39: exit 1 (6.03 seconds) $(BUILD_DIR)> pytest testing/test_debugging.py::TestPDB::test_pdb_continue_with_recursive_debug pid=5673\r\n  py39: FAIL code 1 (6.09=setup[0.06]+cmd[6.03] seconds)\r\n  evaluation failed :( (7.31 seconds)\r\n```",
      "state": "OPEN",
      "createdAt": "2023-09-07T19:54:34Z",
      "updatedAt": "2023-09-13T21:57:50Z",
      "closedAt": null,
      "author": {
        "login": "mtelka"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: bug"
          },
          {
            "name": "type: selftests"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      }
    },
    {
      "number": 11402,
      "title": "TestLocalPath.test_chdir_gone fails on OpenIndiana",
      "body": "```\r\n________________________ TestLocalPath.test_chdir_gone _________________________\r\n\r\nself = <module 'py.error'>, func = <function rmtree at 0x7fffaea92af0>\r\nargs = ('/tmp/pytest-of-marcel/pytest-43/path1/dir_to_be_removed',)\r\nkwargs = {'ignore_errors': False}, __tracebackhide__ = False\r\ncls = <class 'py.error.EINVAL'>, value = OSError(22, 'Invalid argument')\r\ntb = <traceback object at 0x7fffa9e9f3c0>, errno = 22\r\n\r\n    def checked_call(self, func, *args, **kwargs):\r\n        \"\"\" call a function and raise an errno-exception if applicable. \"\"\"\r\n        __tracebackhide__ = True\r\n        try:\r\n>           return func(*args, **kwargs)\r\n\r\n/usr/lib/python3.9/vendor-packages/py/_error.py:66:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n/usr/lib/python3.9/shutil.py:740: in rmtree\r\n    onerror(os.rmdir, path, sys.exc_info())\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\npath = '/tmp/pytest-of-marcel/pytest-43/path1/dir_to_be_removed'\r\nignore_errors = False\r\nonerror = <function rmtree.<locals>.onerror at 0x7fffa94e2f70>\r\n\r\n    def rmtree(path, ignore_errors=False, onerror=None):\r\n        \"\"\"Recursively delete a directory tree.\r\n\r\n        If ignore_errors is set, errors are ignored; otherwise, if onerror\r\n        is set, it is called to handle the error with arguments (func,\r\n        path, exc_info) where func is platform and implementation dependent;\r\n        path is the argument to that function that caused it to fail; and\r\n        exc_info is a tuple returned by sys.exc_info().  If ignore_errors\r\n        is false and onerror is None, an exception is raised.\r\n\r\n        \"\"\"\r\n        sys.audit(\"shutil.rmtree\", path)\r\n        if ignore_errors:\r\n            def onerror(*args):\r\n                pass\r\n        elif onerror is None:\r\n            def onerror(*args):\r\n                raise\r\n        if _use_fd_functions:\r\n            # While the unsafe rmtree works fine on bytes, the fd based does not.\r\n            if isinstance(path, bytes):\r\n                path = os.fsdecode(path)\r\n            # Note: To guard against symlink races, we use the standard\r\n            # lstat()/open()/fstat() trick.\r\n            try:\r\n                orig_st = os.lstat(path)\r\n            except Exception:\r\n                onerror(os.lstat, path, sys.exc_info())\r\n                return\r\n            try:\r\n                fd = os.open(path, os.O_RDONLY)\r\n                fd_closed = False\r\n            except Exception:\r\n                onerror(os.open, path, sys.exc_info())\r\n                return\r\n            try:\r\n                if os.path.samestat(orig_st, os.fstat(fd)):\r\n                    _rmtree_safe_fd(fd, path, onerror)\r\n                    try:\r\n                        os.close(fd)\r\n                        fd_closed = True\r\n>                       os.rmdir(path)\r\nE                       OSError: [Errno 22] Invalid argument: '/tmp/pytest-of-marcel/pytest-43/path1/dir_to_be_removed'\r\n\r\n/usr/lib/python3.9/shutil.py:738: OSError\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nself = <test_local.TestLocalPath object at 0x7fffaa830520>\r\npath1 = local('/tmp/pytest-of-marcel/pytest-43/path1')\r\n\r\n    @skiponwin32\r\n    def test_chdir_gone(self, path1):\r\n        p = path1.ensure(\"dir_to_be_removed\", dir=1)\r\n        p.chdir()\r\n>       p.remove()\r\n\r\n$(BUILD_DIR)/testing/_py/test_local.py:623:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n/usr/lib/python3.9/vendor-packages/py/_path/local.py:218: in remove\r\n    py.error.checked_call(\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <module 'py.error'>, func = <function rmtree at 0x7fffaea92af0>\r\nargs = ('/tmp/pytest-of-marcel/pytest-43/path1/dir_to_be_removed',)\r\nkwargs = {'ignore_errors': False}, __tracebackhide__ = False\r\ncls = <class 'py.error.EINVAL'>, value = OSError(22, 'Invalid argument')\r\ntb = <traceback object at 0x7fffa9e9f3c0>, errno = 22\r\n\r\n    def checked_call(self, func, *args, **kwargs):\r\n        \"\"\" call a function and raise an errno-exception if applicable. \"\"\"\r\n        __tracebackhide__ = True\r\n        try:\r\n            return func(*args, **kwargs)\r\n        except self.Error:\r\n            raise\r\n        except (OSError, EnvironmentError):\r\n            cls, value, tb = sys.exc_info()\r\n            if not hasattr(value, 'errno'):\r\n                raise\r\n            __tracebackhide__ = False\r\n            errno = value.errno\r\n            try:\r\n                if not isinstance(value, WindowsError):\r\n                    raise NameError\r\n            except NameError:\r\n                # we are not on Windows, or we got a proper OSError\r\n                cls = self._geterrnoclass(errno)\r\n            else:\r\n                try:\r\n                    cls = self._geterrnoclass(_winerrnomap[errno])\r\n                except KeyError:\r\n                    raise value\r\n>           raise cls(\"%s%r\" % (func.__name__, args))\r\nE           py.error.EINVAL: [Invalid argument]: rmtree('/tmp/pytest-of-marcel/pytest-43/path1/dir_to_be_removed',)\r\n\r\n/usr/lib/python3.9/vendor-packages/py/_error.py:86: EINVAL\r\n```\r\nThis sounds similar to https://github.com/stanislavlevin/pyproject_installer/issues/33 and https://github.com/Bachmann1234/diff_cover/issues/308.",
      "state": "OPEN",
      "createdAt": "2023-09-06T20:54:42Z",
      "updatedAt": "2024-10-28T20:18:56Z",
      "closedAt": null,
      "author": {
        "login": "mtelka"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: selftests"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 11401,
      "title": "Testing of `pytest` fails with pytest plugins installed",
      "body": "I'm packaging `pytest` for OpenIndiana.  When I run tests for `pytest` I notice that testing fails if there are some `pytest` plugins installed, namely `pytest-black`, `pytest-mypy`, and `pytest-cov`.  The failure is this:\r\n```\r\n__________________ TestConfigFromdictargs.test_basic_behavior __________________\r\n \r\nself = <test_config.TestConfigFromdictargs object at 0x7fffab105a60>\r\n_sys_snapshot = None \r\n\r\n    def test_basic_behavior(self, _sys_snapshot) -> None:\r\n        option_dict = {\"verbose\": 444, \"foo\": \"bar\", \"capture\": \"no\"}\r\n        args = [\"a\", \"b\"]\r\n    \r\n        config = Config.fromdictargs(option_dict, args)\r\n        with pytest.raises(AssertionError):\r\n            config.parse([\"should refuse to parse again\"])\r\n        assert config.option.verbose == 444\r\n        assert config.option.foo == \"bar\"\r\n        assert config.option.capture == \"no\"\r\n>       assert config.args == args\r\nE       AssertionError: assert ['a', 'b'] == ['a', 'b', '-...ypy', '--cov']\r\nE         Right contains 3 more items, first extra item: '--black'\r\nE         Full diff:\r\nE         - ['a', 'b', '--black', '--mypy', '--cov']\r\nE         + ['a', 'b']\r\n\r\ntesting/test_config.py:895: AssertionError\r\n```\r\nWhen I modify the test using the following patch:\r\n```\r\n--- pytest-7.4.1/testing/test_config.py.orig\r\n+++ pytest-7.4.1/testing/test_config.py\r\n@@ -886,7 +886,7 @@\r\n         option_dict = {\"verbose\": 444, \"foo\": \"bar\", \"capture\": \"no\"}\r\n         args = [\"a\", \"b\"]\r\n \r\n-        config = Config.fromdictargs(option_dict, args)\r\n+        config = Config.fromdictargs(option_dict, [\"-p\", \"no:foobar\"] + args)\r\n         with pytest.raises(AssertionError):\r\n             config.parse([\"should refuse to parse again\"])\r\n         assert config.option.verbose == 444\r\n```\r\nthen the test pass.",
      "state": "CLOSED",
      "createdAt": "2023-09-06T14:20:03Z",
      "updatedAt": "2023-09-06T20:23:49Z",
      "closedAt": "2023-09-06T14:31:04Z",
      "author": {
        "login": "mtelka"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 15
      }
    },
    {
      "number": 11396,
      "title": "pytest.main(['--collect-only']) error",
      "body": "> >old issues :https://github.com/pytest-dev/pytest/issues/11202\r\n> >\r\n> > demo:\r\n> \r\n> > ```python\r\n> > import pytest\r\n> > \r\n> > \r\n> > class TestClass_A:\r\n> >     @pytest.mark.parametrize(\r\n> >         \"case_lel,id,\",\r\n> >         [\r\n> >             (\"\u6d4b\u8bd5\u7528\u4f8b\u540d\u79f0P0\", 0),\r\n> >             (\"\u6d4b\u8bd5\u7528\u4f8b\u540d\u79f0P1\", 6),\r\n> >             (\"hzhzhzhzP0\", 1),\r\n> >             (\"\u6d4b\u8bd5\u7528\u4f8b\u540d\u79f0P2\", 2),\r\n> >             (\"hzhzhzhzP2\", 3),\r\n> >         ],\r\n> >         ids=[(\"\u6d4b\u8bd5\u7528\u4f8b\u540d\u79f0P0\"), (\"\u6d4b\u8bd5\u7528\u4f8b\u540d\u79f0P1\"), (\"hzhzhzhzP0\"), (\"\u6d4b\u8bd5\u7528\u4f8b\u540d\u79f0P2\"), (\"hzhzhzhzP2\")],\r\n> >     )\r\n> >     def test_demo(self, case_lel, id):\r\n> >         print(id)\r\n> > \r\n> >\r\n> > \r\n> > pytest D:\\\\python_test\\\\test\\\\demo8.py::TestClass_A::test_demo --co\r\n> > ====================================================================================== test session starts ======================================================================================\r\n> > platform win32 -- Python 3.10.3, pytest-6.2.4, py-1.10.0, pluggy-0.13.1\r\n> > rootdir: d:\\python_test\\test\r\n> > plugins: allure-pytest-2.9.43, anyio-3.6.2, Faker-15.2.0, forked-1.3.0, ordering-0.6, parallel-0.0.10, repeat-0.9.1, rerunfailures-10.0,  timeout-2.1.0, xdist-2.3.0\r\n> > collected 5 items                                                                                                                                                                                \r\n> > \r\n> > <Module demo8.py>\r\n> >   <Class TestClass_A>\r\n> >       <Function test_demo[\\u6d4b\\u8bd5\\u7528\\u4f8b\\u540d\\u79f0P0]>\r\n> >       <Function test_demo[\\u6d4b\\u8bd5\\u7528\\u4f8b\\u540d\\u79f0P1]>\r\n> >       <Function test_demo[hzhzhzhzP0]>\r\n> >       <Function test_demo[\\u6d4b\\u8bd5\\u7528\\u4f8b\\u540d\\u79f0P2]>\r\n> >       <Function test_demo[hzhzhzhzP2]>\r\n> > ```\r\n> > \r\n> > \r\n> > \r\n> > if only one Unicode-encoded test case name,it works.\r\n> > ```\r\n> > if __name__ == \"__main__\":\r\n> >    case_list = [\r\n> >        \"demo.py::TestClass_A::test_demo[\\\\u6d4b\\\\u8bd5\\\\u7528\\\\u4f8b\\\\u540d\\\\u79f0P0]\"\r\n> >    ]\r\n> >    for i in case_list:\r\n> >        pytest.main([i, \"--co\"])\r\n> > \r\n> >\r\n> >\r\n> > \r\n> >  C:/Python310/python.exe d:/python_test/test/demo8.py\r\n> > ===================================================================================== test session starts ======================================================================================\r\n> > platform win32 -- Python 3.10.3, pytest-6.2.4, py-1.10.0, pluggy-0.13.1\r\n> > rootdir: d:\\python_test\\test\r\n> > plugins: allure-pytest-2.9.43, anyio-3.6.2, Faker-15.2.0, forked-1.3.0, ordering-0.6, parallel-0.0.10, repeat-0.9.1, rerunfailures-10.0, > > timeout-2.1.0, xdist-2.3.0\r\n> > collected 1 item                                                                                                                                                                                 \r\n> > \r\n> > <Module demo8.py>\r\n> >   <Class TestClass_A>\r\n> >       <Function test_demo[\\u6d4b\\u8bd5\\u7528\\u4f8b\\u540d\\u79f0P0]>\r\n> > ```\r\n> >\r\n> > another Unicode-encoded test case name,it works.\r\n> > ```\r\n> > if __name__ == \"__main__\":\r\n> >    case_list = [\r\n> >        \"demo.py::TestClass_A::test_demo[\\\\u6d4b\\\\u8bd5\\\\u7528\\\\u4f8b\\\\u540d\\\\u79f0P1]\"\r\n> >    ]\r\n> >    for i in case_list:\r\n> >        pytest.main([i, \"--co\"])\r\n> > \r\n> >\r\n> > \r\n> > \r\n> > C:/Python310/python.exe d:/python_test/test/demo8.py\r\n> > ===================================================================================== test session starts ======================================================================================\r\n> > platform win32 -- Python 3.10.3, pytest-6.2.4, py-1.10.0, pluggy-0.13.1\r\n> > rootdir: d:\\python_test\\test\r\n> > plugins: allure-pytest-2.9.43, anyio-3.6.2, Faker-15.2.0, forked-1.3.0, ordering-0.6, parallel-0.0.10, repeat-0.9.1, rerunfailures-10.0, > > timeout-2.1.0, xdist-2.3.0\r\n> > collected 1 item                                                                                                                                                                                 \r\n> > \r\n> > <Module demo8.py>\r\n> >   <Class TestClass_A>\r\n> >       <Function test_demo[\\u6d4b\\u8bd5\\u7528\\u4f8b\\u540d\\u79f0P1]>\r\n> > ```\r\n> > \r\n> >     \r\n> >       \r\n> >     \r\n> > \r\n> >       \r\n> >     \r\n> > \r\n> >     \r\n> >   \r\n> > but if more than one Unicode-encoded test case name, only the first Unicode-encoded test case can find,others cann't find.\r\n> > ```\r\n> > if __name__ == \"__main__\":\r\n> >    case_list = [\r\n> >        \"demo.py::TestClass_A::test_demo[\\\\u6d4b\\\\u8bd5\\\\u7528\\\\u4f8b\\\\u540d\\\\u79f0P0]\",\r\n> >        \"demo.py::TestClass_A::test_demo[\\\\u6d4b\\\\u8bd5\\\\u7528\\\\u4f8b\\\\u540d\\\\u79f0P1]\",\r\n> >        \"demo.py::TestClass_A::test_demo[\\\\u6d4b\\\\u8bd5\\\\u7528\\\\u4f8b\\\\u540d\\\\u79f0P2]\"\r\n> >    ]\r\n> >    for i in case_list:\r\n> >        pytest.main([i, \"--co\"])\r\n> > \r\n> >\r\n> >\r\n> > \r\n> > C:/Python310/python.exe d:/python_test/test/demo8.py\r\n> > ===================================================================================== test session starts ======================================================================================\r\n> > platform win32 -- Python 3.10.3, pytest-6.2.4, py-1.10.0, pluggy-0.13.1\r\n> > rootdir: d:\\python_test\\test\r\n> > plugins: allure-pytest-2.9.43, anyio-3.6.2, Faker-15.2.0, forked-1.3.0, ordering-0.6, parallel-0.0.10, repeat-0.9.1, rerunfailures-10.0, > > timeout-2.1.0, xdist-2.3.0\r\n> > collected 1 item\r\n> > \r\n> > <Module demo8.py>\r\n> >   <Class TestClass_A>\r\n> >       <Function test_demo[\\u6d4b\\u8bd5\\u7528\\u4f8b\\u540d\\u79f0P0]>\r\n> > ================================================================================== 1 test collected in 0.02s =================================================================================== \r\n> > ===================================================================================== test session starts ======================================================================================\r\n> > platform win32 -- Python 3.10.3, pytest-6.2.4, py-1.10.0, pluggy-0.13.1\r\n> > rootdir: d:\\python_test\\test\r\n> > plugins: allure-pytest-2.9.43, anyio-3.6.2, Faker-15.2.0, forked-1.3.0, ordering-0.6, parallel-0.0.10, repeat-0.9.1, rerunfailures-10.0, timeout-2.1.0, xdist-2.3.0\r\n> > collected 0 items                                                                                                                                                                                \r\n> > ================================================================================= no tests collected in 0.01s ================================================================================== \r\n> > ERROR: not found: D:\\python_test\\test\\demo8.py::TestClass_A::test_demo[\\u6d4b\\u8bd5\\u7528\\u4f8b\\u540d\\u79f0P1]\r\n> > (no name 'D:\\\\python_test\\\\test\\\\demo8.py::TestClass_A::test_demo[\\\\u6d4b\\\\u8bd5\\\\u7528\\\\u4f8b\\\\u540d\\\\u79f0P1]' in any of [<Module demo8.py>])\r\n> > ===================================================================================== test session starts ======================================================================================\r\n> > platform win32 -- Python 3.10.3, pytest-6.2.4, py-1.10.0, pluggy-0.13.1\r\n> > rootdir: d:\\python_test\\test\r\n> > plugins: allure-pytest-2.9.43, anyio-3.6.2, Faker-15.2.0, forked-1.3.0, ordering-0.6, parallel-0.0.10, repeat-0.9.1, rerunfailures-10.0, timeout-2.1.0, xdist-2.3.0\r\n> > collected 0 items                                                                                                                                                                                \r\n> > ================================================================================= no tests collected in 0.01s ================================================================================== \r\n> > ERROR: not found: D:\\python_test\\test\\demo8.py::TestClass_A::test_demo[\\u6d4b\\u8bd5\\u7528\\u4f8b\\u540d\\u79f0P2]\r\n> > (no name 'D:\\\\python_test\\\\test\\\\demo8.py::TestClass_A::test_demo[\\\\u6d4b\\\\u8bd5\\\\u7528\\\\u4f8b\\\\u540d\\\\u79f0P2]' in any of [<Module demo8.py>])    \r\n> > ```       \r\n> >     \r\n> > \r\n> >       \r\n> >     \r\n> > \r\n> >     \r\n> >   \r\n> > but if test case name doesn't have Unicode-encoded, it works.\r\n> > ```\r\n> > if __name__ == \"__main__\":\r\n> >    case_list = [\r\n> >        \"demo.py::TestClass_A::test_demo[hzhzhzhzP0]\",\r\n> >        \"demo.py::TestClass_A::test_demo[hzhzhzhzP2]\",\r\n> >    ]\r\n> >    for i in case_list:\r\n> >        pytest.main([i, \"--co\"])\r\n> > ```\r\n> \r\n> ```\r\n> platform win32  \r\n> Python 3.10.3, \r\n> pytest-6.2.4, \r\n> py-1.10.0, \r\n> pluggy-0.13.1 \r\n> ```",
      "state": "CLOSED",
      "createdAt": "2023-09-06T06:11:07Z",
      "updatedAt": "2023-09-06T09:19:41Z",
      "closedAt": "2023-09-06T09:19:40Z",
      "author": {
        "login": "wang1150297847"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 11394,
      "title": "Pytest Fails to Run When Passing Long Command Line Arguments",
      "body": "<!--\r\nThanks for submitting an issue!\r\n\r\nQuick check-list while reporting bugs:\r\n-->\r\n\r\nI am seeing an issue when passing a very long command-line argument to pytest. It fails to run with the following error:\r\n\r\n```\r\nINTERNALERROR>   File \"/venv/lib/python3.11/site-packages/_pytest/main.py\", line 333, in pytest_collection\r\nINTERNALERROR>     session.perform_collect()\r\nINTERNALERROR>   File \"/venv/lib/python3.11/site-packages/_pytest/main.py\", line 638, in perform_collect\r\nINTERNALERROR>     fspath, parts = resolve_collection_argument(\r\nINTERNALERROR>                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nINTERNALERROR>   File \"/venv/lib/python3.11/site-packages/_pytest/main.py\", line 889, in resolve_collection_argument\r\nINTERNALERROR>   File \"/venv/lib/python3.11/site-packages/_pytest/main.py\", line 889, in resolve_collection_argument\r\nINTERNALERROR>     if not fspath.exists():\r\nINTERNALERROR>            ^^^^^^^^^^^^^^^\r\nINTERNALERROR>   File \"/usr/local/lib/python3.11/pathlib.py\", line 1235, in exists\r\nINTERNALERROR>     self.stat()\r\nINTERNALERROR>   File \"/usr/local/lib/python3.11/pathlib.py\", line 1013, in stat\r\nINTERNALERROR>     return os.stat(self, follow_symlinks=follow_symlinks)\r\nINTERNALERROR>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nINTERNALERROR> OSError: [Errno 36] File name too long: '/pwd/tests/very,long,comma-seperated,value,for,long_list'\r\n```\r\n\r\nPytest version:\r\nTested with 7.3.2 and 7.4.1\r\n\r\npip list output:\r\n```Package               Version\r\n--------------------- ---------\r\nallure-pytest         2.13.2\r\nallure-python-commons 2.13.2\r\nansi2html             1.8.0\r\nattrs                 23.1.0\r\nboto3                 1.28.40\r\nbotocore              1.31.40\r\ncertifi               2023.7.22\r\nchardet               5.2.0\r\ncharset-normalizer    3.2.0\r\nclick                 8.1.3\r\ncontourpy             1.0.7\r\ncycler                0.11.0\r\ndatadog               0.45.0\r\nexecnet               1.9.0\r\nfilelock              3.12.0\r\nfonttools             4.39.4\r\ngitdb                 4.0.10\r\nGitPython             3.1.31\r\nidna                  3.4\r\niniconfig             2.0.0\r\nJinja2                3.1.2\r\njmespath              1.0.1\r\nkiwisolver            1.4.4\r\nmarkdown-it-py        2.2.0\r\nMarkupSafe            2.1.3\r\nmatplotlib            3.7.1\r\nmdurl                 0.1.2\r\nnumpy                 1.24.3\r\npackaging             23.1\r\npandas                1.5.3\r\nPillow                9.5.0\r\npip                   22.3.1\r\npluggy                1.0.0\r\npy                    1.11.0\r\nPygments              2.15.1\r\npyparsing             3.0.9\r\npytest                7.4.1\r\npytest-html           4.0.0\r\npytest-metadata       2.0.4\r\npytest-xdist          3.3.1\r\npython-dateutil       2.8.2\r\npytz                  2022.7.1\r\nrequests              2.31.0\r\nrich                  13.3.5\r\ns3transfer            0.6.2\r\nsetuptools            65.5.0\r\nsix                   1.16.0\r\nsmmap                 5.0.0\r\nurllib3               1.26.16\r\n```\r\n\r\nExample usage:\r\n\r\nconftest.py:\r\n```\r\nimport pytest\r\n\r\ndef pytest_addoption(parser):\r\n    parser.addoption(\"--long-list\", dest=\"long_list\", action=\"store\", default=\"all\", help=\"List of things\")\r\n\r\n@pytest.fixture(scope=\"module\")\r\ndef specified_feeds(request):\r\n    list_string = request.config.getoption(\"--long-list\")\r\n    return list_string.split(',')\r\n```\r\n\r\nInvocation:\r\n`pytest /test_my_thing.py --long-list a,b,c,d,e,f`\r\n\r\nNote: the actual length of the string passed to `--long-list` is 396 characters\r\n\r\nThis seems to be similar to #10169",
      "state": "CLOSED",
      "createdAt": "2023-09-05T21:16:26Z",
      "updatedAt": "2023-09-12T20:58:35Z",
      "closedAt": "2023-09-07T15:49:26Z",
      "author": {
        "login": "iandonnelly"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: bug"
          },
          {
            "name": "status: help wanted"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 11
      }
    },
    {
      "number": 11391,
      "title": "weird \"Yandex Dependency Confusion\" plugins",
      "body": "\r\nhttps://github.com/pytest-dev/pytest/blob/9c8937b4800c72bb511a45f4548f0c58823ec30b/doc/en/reference/plugin_list.rst  lists a couple of plugins with the same description:\r\n\r\n```\r\n   :pypi:`pytest-check-requirements`                A package to prevent Dependency Confusion attacks against Yandex.                                                                                                                                         Feb 10, 2023    N/A                    N/A\r\n   :pypi:`pytest-diffeo`                            A package to prevent Dependency Confusion attacks against Yandex.                                                                                                                                         Feb 10, 2023    N/A                    N/A\r\n   :pypi:`pytest-factor`                            A package to prevent Dependency Confusion attacks against Yandex.                                                                                                                                         Feb 10, 2023    N/A                    N/A\r\n   :pypi:`pytest-star-track-issue`                  A package to prevent Dependency Confusion attacks against Yandex.                                                                                                                                         Feb 10, 2023    N/A                    N/A\r\n   :pypi:`pytest-xskynet`                           A package to prevent Dependency Confusion attacks against Yandex.                                                                                                                                         Feb 10, 2023    N/A                    N/A\r\n```\r\neach of these links to these strange, minimal pypi listings with \r\n> This is a security placeholder package. If you want to claim this name for legitimate purposes, please contact us at ...\r\n\r\nAre these legitimate plugins that should be listed in the pytest docs?",
      "state": "CLOSED",
      "createdAt": "2023-09-05T12:59:21Z",
      "updatedAt": "2023-09-06T10:34:40Z",
      "closedAt": "2023-09-06T10:34:40Z",
      "author": {
        "login": "soxofaan"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 5
      }
    },
    {
      "number": 11388,
      "title": "An easier way to have test cases in built-in functions",
      "body": "I'd like to suggest that calls to [inspect.isfunction](https://github.com/pytest-dev/pytest/blob/afb8d66e42a3449476cf9bf4526705b1e36ff5a5/src/_pytest/python.py#L247) are replaced with `inspect.isroutine`.\r\n\r\n#### What's the problem this feature will solve?\r\n<!-- What are you trying to do, that you are unable to achieve with pytest as it currently stands? -->\r\nI'm trying to test some native code functions I have written in Cython. Those are either coming from `.pxd` files or are `cdef` functions in `.pyx` files. These are not visible to Python code. They can only be called from Cython functions (which are built-in functions).\r\n\r\n#### Describe the solution you'd like\r\n\r\nI'd like to add a `conftest.py` file which defines in its `pytest_collect_file` how to load a Cython test module and then write `test_*` functions in Cython which call the said native functions. \r\n\r\n#### Alternative Solutions\r\n<!-- Have you tried to workaround the problem using a pytest plugin or other tools? Or a different approach to solving this issue? Please elaborate here. -->\r\nIt is currently impossible to have a `test_*` function be a built-in function. It fails the check for `inspect.isfunction` defined in [src/_pytest/python.py](https://github.com/pytest-dev/pytest/blob/afb8d66e42a3449476cf9bf4526705b1e36ff5a5/src/_pytest/python.py#L247). As a workaround I copy-paste the entire `pytest_pycollect_makeitem` and replace its `isfunction` checks with `isroutine` checks. This is enough of a workaround to get my test cases loaded.\r\n\r\n#### Additional context\r\n<!-- Add any other context, links, etc. about the feature here. -->\r\nIt's unfortunate that I have to copy-paste library code. This goes against the whole idea of having hooks. One solution is to add new hooks. Another is to just allow a wider range of callables to be detected as test functions.",
      "state": "OPEN",
      "createdAt": "2023-09-04T13:21:35Z",
      "updatedAt": "2023-09-26T10:07:09Z",
      "closedAt": null,
      "author": {
        "login": "joankaradimov"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: proposal"
          },
          {
            "name": "topic: collection"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 6
      }
    },
    {
      "number": 11387,
      "title": "Fine grain output verbosity",
      "body": "#### What's the problem this feature will solve?\r\nThere are multiple open issues that are requesting more control over the output displayed by `pytest`. `--verbose` turns everything up, but it would be nice to be able to just increase or decrease the verbosity for specific aspects of the output.\r\n\r\nOpen issues that I've found that fit into this problem space (there may be others):\r\n* #6723\r\n* #3962\r\n* #5285\r\n* #6292\r\n\r\n\r\n#### Describe the solution you'd like\r\nI think a way that could resolve all of these is to add an abstraction layer on top `config.option.verbose`. Rough pseudo-code example:\r\n\r\n```python\r\nclass OutputVerbosity:\r\n  def __init__(self, config_options):\r\n     self._options = config_options\r\n     self.verbose = self._options.verbose\r\n\r\n  def verbosity_for(self, output_type):\r\n     return getattr(self._options, output_type, self.verbose)\r\n```\r\n\r\nFor general cases, the `verbose` attribute could be used. For special cases, an output type name could be passed in retrieve the more fine grained setting. If the specific config is not set, it will default to the normal verbose level. Once this is in place, it would be easier to add more cases in the future if they come up.\r\n\r\n### Implementation\r\n* I should be able to work on an actual implementation. I'd likely start with only implementing diff verbosity since the PR might get large if I attempted to address all of the identified cases at once.\r\n* That being said, I think it makes sense to decide on a naming convention for these configuration fields. `verbosity_{OUTPUT_TYPE}` seems reasonable to me.\r\n* I'm leaning towards not providing CLI access to these configuration fields. They feel like they wouldn't be used regularly and it should be easy to add them after the fact if needed. \r\n",
      "state": "OPEN",
      "createdAt": "2023-09-04T12:05:57Z",
      "updatedAt": "2025-02-25T07:23:05Z",
      "closedAt": null,
      "author": {
        "login": "plannigan"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: proposal"
          },
          {
            "name": "topic: reporting"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 6
      }
    },
    {
      "number": 11386,
      "title": "pytest does not honor pytest.ini",
      "body": "``` \r\ntree\r\n.\r\n\u251c\u2500\u2500 app\r\n\u2502   \u251c\u2500\u2500 __init__.py\r\n\u2502   \u251c\u2500\u2500 app.py\r\n\u2502   \u2514\u2500\u2500 inner\r\n\u2502       \u2514\u2500\u2500 __init__.py\r\n\u251c\u2500\u2500 pytest.ini\r\n\u2514\u2500\u2500 tests\r\n    \u251c\u2500\u2500 __init__.py\r\n    \u2514\u2500\u2500 test_app.py\r\n ```\r\n\r\npytest.init content\r\n\r\n```\r\n[pytest]\r\nmarkers =\r\n    exception\r\n```\r\n\r\na test\r\n\r\n```\r\n@pytest.mark.exception(socket.gaierror())\r\ndef test_two_equals_two():\r\n    assert 2 == 2\r\n```\r\n\r\nrunning pytest -v\r\n```\r\n pytest -vv\r\n=============================================================================================================================================== test session starts ===============================================================================================================================================\r\nplatform darwin -- Python 3.9.6, pytest-7.4.0, pluggy-1.2.0 -- /Users/lky/repositories/development-environments-operator/venv/bin/python3\r\ncachedir: .pytest_cache\r\nrootdir: /Users/lky/repositories/development-environments-operator\r\nplugins: timeout-2.1.0, cov-4.1.0, asyncio-0.21.1, mock-3.11.1, aresponses-2.1.6, aiohttp-1.0.4\r\nasyncio: mode=strict\r\ncollected 15 items      \r\n```\r\n\r\n```\r\n PytestUnknownMarkWarning: Unknown pytest.mark.exception - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\r\n@pytest.mark.exception(socket.gaierror())\r\n```\r\n\r\n\r\n",
      "state": "CLOSED",
      "createdAt": "2023-09-04T06:49:55Z",
      "updatedAt": "2023-10-07T01:48:14Z",
      "closedAt": "2023-10-07T01:48:14Z",
      "author": {
        "login": "lkoniecz"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "status: needs information"
          },
          {
            "name": "stale"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 4
      }
    },
    {
      "number": 11381,
      "title": "Improvement Parser.addini - type parameter",
      "body": "<!--\r\nThanks for suggesting a feature!\r\n\r\nQuick check-list while suggesting features:\r\n-->\r\n\r\n#### What's the problem this feature will solve?\r\nAvoid writing extra code to convert data type from string to a numeric type (integer, float, etc)\r\n\r\n#### Describe the solution you'd like\r\n<!-- A clear and concise description of what you want to happen. -->\r\n`Parser.addini` method receives a parameter called `type` that can be any of these string literals:\r\n\r\n```\r\n        type: Optional[\r\n            \"Literal['string', 'paths', 'pathlist', 'args', 'linelist', 'bool']\"\r\n        ] = None,\r\n\r\n```\r\n<!-- Provide examples of real-world use cases that this would enable and how it solves the problem described above. -->\r\nAdd the literals (`int`, `float`) and have `pytest` to do the type check and conversion behind the scene.\r\n\r\n#### Alternative Solutions\r\n<!-- Have you tried to workaround the problem using a pytest plugin or other tools? Or a different approach to solving this issue? Please elaborate here. -->\r\n```\r\n    parser.addini(\r\n        \"my_param\",\r\n        type=\"string\",\r\n        default=\"1.0\",\r\n        help=\"My float param.\"\r\n    )\r\n\r\ndef my_param(request):\r\n    try:\r\n        return float(request.config.getini(\"my_param\"))\r\n    except:\r\n        return 1.0 #The default value set with default=\"1.0\", \r\n\r\n```\r\nWith the implementation of this feature, this can be reduced to this;\r\n```\r\n    parser.addini(\r\n        \"my_param\",\r\n        type=\"float\",\r\n        default=\"1.0\",\r\n        help=\"My float param.\"\r\n    )\r\n\r\ndef my_param(request):\r\n    return request.config.getini(\"my_param\")\r\n\r\n```\r\n\r\n#### Additional context\r\n<!-- Add any other context, links, etc. about the feature here. -->\r\n",
      "state": "CLOSED",
      "createdAt": "2023-09-03T09:33:58Z",
      "updatedAt": "2025-02-15T19:30:13Z",
      "closedAt": "2025-02-15T19:30:13Z",
      "author": {
        "login": "harmin-parra"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: enhancement"
          },
          {
            "name": "type: proposal"
          },
          {
            "name": "type: feature-branch"
          },
          {
            "name": "topic: config"
          },
          {
            "name": "topic: typing"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      }
    },
    {
      "number": 11376,
      "title": "Incorrect work with strings on Windows",
      "body": "# The Problem\r\n\r\nHello!\r\n\r\nI came across a strange bug that I still don't fully understand. My working hypothesis is that the problem is in the behavior of Pytest. Apparently, in certain situations, when comparing strings using the \"==\" operator inside the assert block, an extra \"\\r\" character may be added to the string.\r\n\r\nThe situation [is reproduced](https://github.com/pomponchik/instld/actions/runs/6051383125/job/16422703891#step:6:39) in my pipeline Github Actions:\r\n\r\n```\r\nRun coverage run --source=installed --omit=\"*tests*\" -m pytest --cache-clear && coverage report -m\r\n============================= test session starts =============================\r\nplatform win32 -- Python 3.8.10, pytest-7.4.0, pluggy-1.3.0\r\nrootdir: D:\\a\\instld\\instld\r\nplugins: timeout-2.1.0\r\ncollected 3[6](https://github.com/pomponchik/instld/actions/runs/6051383125/job/16422703891#step:6:7) items\r\n\r\ntests\\cli\\test_cli.py .F....                                             [ 16%]\r\ntests\\smokes\\test_smoke.py ...............                               [ 58%]\r\ntests\\units\\cli\\parsing_comments\\test_get_comment_string.py ....         [ 69%]\r\ntests\\units\\cli\\parsing_comments\\test_get_options_from_comments.py ...   [ [7](https://github.com/pomponchik/instld/actions/runs/6051383125/job/16422703891#step:6:8)7%]\r\ntests\\units\\cli\\traceback_cutting\\test_traceback_utils.py ...            [ [8](https://github.com/pomponchik/instld/actions/runs/6051383125/job/16422703891#step:6:9)6%]\r\ntests\\units\\common_utils\\test_convert_options.py ..                      [ 91%]\r\ntests\\units\\module\\test_context.py ..                                    [ 97%]\r\ntests\\units\\module\\test_proxy_module.py .                                [100%]\r\n\r\n================================== FAILURES ===================================\r\n_____________________ test_run_command_without_arguments ______________________\r\n\r\nmain_runner = <function main_runner.<locals>.runner_function at 0x000002C5E6D5CCA0>\r\n\r\n    def test_run_command_without_arguments(main_runner):\r\n        for index, runner in enumerate((main_runner, subprocess.run)):\r\n            result = runner(['instld'], stdout=subprocess.PIPE, stderr=subprocess.PIPE, bufsize=100)\r\n    \r\n            assert result.returncode == 1\r\n            assert result.stdout.decode('utf-8')  == ''\r\n            if not index:\r\n                print(result.before_stderr)\r\n                print(result.stderr)\r\n                print(repr(result.stderr.decode('utf-8')))\r\n                print(repr(f'usage: instld python_file.py [argv ...]{os.linesep}'))\r\n                print(result.stderr.decode('utf-8') == f'usage: instld python_file.py [argv ...]{os.linesep}')\r\n>           assert result.stderr.decode('utf-8') == f'usage: instld python_file.py [argv ...]{os.linesep}'\r\nE           AssertionError: assert 'usage: instl...gv ...]\\r\\r\\n' == 'usage: instl...argv ...]\\r\\n'\r\nE             - usage: instld python_file.py [argv ...]\r\n\r\nE             ?                                        \r\n-\r\nE             + usage: instld python_file.py [argv ...]\r\n\r\nE             +\r\n\r\ntests\\cli\\test_cli.py:58: AssertionError\r\n---------------------------- Captured stdout call -----------------------------\r\nb'usage: instld python_file.py [argv ...]\\r\\n'\r\nb'usage: instld python_file.py [argv ...]\\r\\n'\r\n'usage: instld python_file.py [argv ...]\\r\\n'\r\n'usage: instld python_file.py [argv ...]\\r\\n'\r\nTrue\r\n=========================== short test summary info ===========================\r\nFAILED tests/cli/test_cli.py::test_run_command_without_arguments - AssertionError: assert 'usage: instl...gv ...]\\r\\r\\n' == 'usage: instl...argv ...]\\r\\n'\r\n  - usage: instld python_file.py [argv ...]\r\n\r\n  ?                                        \r\n-\r\n  + usage: instld python_file.py [argv ...]\r\n\r\n  +\r\n================== 1 failed, 35 passed in 263 s (0:04:23) ===================\r\n```\r\n\r\nAs you can see, in the `test_run_command_without_arguments` test code, the same expression is executed twice:\r\n\r\n```python\r\nresult.stderr.decode('utf-8') == f'usage: instld python_file.py [argv ...]{os.linesep}'\r\n```\r\n\r\nHowever, in the first case, the result is printed using the `print` function, and in the second case, it is checked using `assert`. `True` is printed in this case, but the `assert` does not pass. I can't think of any other explanation, except that I encountered an error inside `pytest`.\r\n\r\n\r\n# Technical Details\r\n\r\n- [x] output of `pip list` from the virtual environment i'm using:\r\n\r\n```\r\nPackage            Version\r\n------------------ ---------\r\nbleach             6.0.0\r\ncertifi            2023.7.22\r\ncharset-normalizer 3.2.0\r\ncolorama           0.4.6\r\ncoverage           7.2.7\r\ndocutils           0.20.1\r\nexceptiongroup     1.1.3\r\nidna               3.4\r\nimportlib-metadata 6.8.0\r\niniconfig          2.0.0\r\ninstld             0.0.20\r\njaraco.classes     3.3.0\r\nkeyring            24.2.0\r\nmarkdown-it-py     3.0.0\r\nmdurl              0.1.2\r\nmore-itertools     10.1.0\r\npackaging          23.1\r\npip                23.2.1\r\npkginfo            1.9.6\r\npluggy             1.3.0\r\nPygments           2.16.1\r\npytest             7.4.0\r\npytest-timeout     2.1.0\r\npywin32-ctypes     0.2.2\r\nreadme-renderer    41.0\r\nrequests           2.31.0\r\nrequests-toolbelt  1.0.0\r\nrfc3986            2.0.0\r\nrich               13.5.2\r\nsetuptools         65.5.0\r\nsix                1.16.0\r\ntomli              2.0.1\r\ntwine              4.0.2\r\nurllib3            2.0.4\r\nwebencodings       0.5.1\r\nwheel              0.40.0\r\nzipp               3.16.2\r\n```\r\n\r\n- [x] pytest and operating system versions:\r\n\r\n```\r\nplatform win32 -- Python 3.8.10, pytest-7.4.0, pluggy-1.3.0\r\n```\r\n\r\nNote that the behavior was reproduced on different versions of Python on this platform.",
      "state": "CLOSED",
      "createdAt": "2023-09-01T16:59:34Z",
      "updatedAt": "2023-09-04T22:21:30Z",
      "closedAt": "2023-09-04T22:21:30Z",
      "author": {
        "login": "pomponchik"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 7
      }
    },
    {
      "number": 11374,
      "title": "Data stored in test instance objects is never released",
      "body": "## Description\r\n\r\nI have a test suite that started life in nosetests, and a lot of the tests still use xunit style with a `setup_method` that creates fixture objects and stores them in the instance of the test class. I ran into a problem with tests exhausting resources, and it seems like pytest is hanging on to references to the instances of the test classes, preventing these fixture objects from being garbage collected.\r\n\r\nHere's a proof-of-concept:\r\n\r\nconftest.py:\r\n```python\r\nimport gc\r\n\r\ndef pytest_runtest_logfinish(nodeid, location):\r\n    import test_leak\r\n    gc.collect()\r\n    print(f\"\\nExpensive objects: {test_leak.ExpensiveObject.count}\", end=\"\")\r\n```\r\n\r\ntest_leak.py:\r\n```python\r\nimport gc\r\nfrom typing import ClassVar\r\n\r\nimport pytest\r\n\r\n\r\nclass ExpensiveObject:\r\n    count: ClassVar[int] = 0\r\n\r\n    def __init__(self) -> None:\r\n        ExpensiveObject.count += 1\r\n\r\n    def __del__(self) -> None:\r\n        ExpensiveObject.count -= 1\r\n\r\n\r\nclass TestClass:\r\n    def setup_method(self) -> None:\r\n        self.obj = ExpensiveObject()\r\n\r\n    @pytest.mark.parametrize(\"x\", range(5))\r\n    def test(self, x: int) -> None:\r\n        pass\r\n```\r\n\r\nOutput:\r\n```\r\ntest_leak.py::TestClass::test[0] PASSED                                                                                                   [ 20%]\r\nExpensive objects: 1\r\ntest_leak.py::TestClass::test[1] PASSED                                                                                                   [ 40%]\r\nExpensive objects: 2\r\ntest_leak.py::TestClass::test[2] PASSED                                                                                                   [ 60%]\r\nExpensive objects: 3\r\ntest_leak.py::TestClass::test[3] PASSED                                                                                                   [ 80%]\r\nExpensive objects: 4\r\ntest_leak.py::TestClass::test[4] PASSED                                                                                                   [100%]\r\nExpensive objects: 5\r\n```\r\n\r\nSo despite the calls to `gc.collect()`, the number of ExpensiveObjects is increasing. In contrast, if I use a `pytest.fixture`, they are all cleaned up immediately.\r\n\r\n## Environment\r\n```\r\nPackage        Version\r\n-------------- -------\r\nexceptiongroup 1.1.3\r\niniconfig      2.0.0\r\npackaging      23.1\r\npip            23.2.1\r\npluggy         1.3.0\r\npytest         7.4.0\r\nsetuptools     68.1.2\r\ntomli          2.0.1\r\nwheel          0.41.2\r\n```\r\n\r\n- Pytest version: 7.4.0\r\n- OS version: Ubuntu 22.04\r\n- Python version: 3.10.12\r\n\r\n<!-- checklist -->\r\n- [x] a detailed description of the bug or problem you are having\r\n- [x] output of `pip list` from the virtual environment you are using\r\n- [x] pytest and operating system versions\r\n- [x] minimal example if possible\r\n",
      "state": "OPEN",
      "createdAt": "2023-08-31T09:26:56Z",
      "updatedAt": "2023-09-07T18:06:55Z",
      "closedAt": null,
      "author": {
        "login": "bmerry"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: performance"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 13
      }
    },
    {
      "number": 11373,
      "title": "`enable_assertion_pass_hook` doesn't work with pytester",
      "body": "```py\r\ndef test_foo(pytester: Pytester):\r\n    pytester.makeini(\"\"\"\r\n        [pytest]\r\n        enable_assertion_pass_hook=true\r\n    \"\"\")\r\n    pytester.makeconftest(\"\"\"\r\n        ran = False\r\n        def pytest_assertion_pass():\r\n            global ran\r\n            ran = True\r\n    \"\"\")\r\n    pytester.makepyfile(\"\"\"\r\n        import conftest\r\n        def test_foo():\r\n            assert True\r\n            assert conftest.ran\r\n    \"\"\")\r\n    pytester.runpytest().assert_outcomes(passed=1)\r\n```\r\nthis test fails because the `pytest_assertion_pass` hook is never executed, even after i've deleted my `.pyc` files. does pytester store `.pyc` files somewhere else perhaps?",
      "state": "CLOSED",
      "createdAt": "2023-08-30T14:56:10Z",
      "updatedAt": "2023-09-19T11:37:51Z",
      "closedAt": "2023-09-19T11:37:51Z",
      "author": {
        "login": "DetachHead"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "plugin: pytester"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      }
    },
    {
      "number": 11372,
      "title": "Pytest does not notify users when async tests are ignored",
      "body": "<!--\r\nThanks for suggesting a feature!\r\n\r\nQuick check-list while suggesting features:\r\n-->\r\n\r\n#### What's the problem this feature will solve?\r\nWhen writing async unit-tests, it is extremely easy to forget to install the pytest-async extension and end up ignoring the futures.  \r\nThis can cause unexpected silence:\r\n\r\n```python\r\nasync def test_should_fail_but_doesnt():\r\n    assert False\r\n```\r\n\r\nThis passes if pytest-async is not installed.  Instead, I'd like to propose we make this fail with a nice message indicating that you need too install python-async.\r\n\r\n#### Describe the solution you'd like\r\n\r\nI'd like to inspect tests to see if they return a future.   If they return a future, and pytest-async is not installed i'd like to error out and tell users to install it.\r\n\r\n#### Alternative Solutions\r\n\r\nIgnore the tests.\r\n\r\n#### Additional context\r\n\r\nI've been bit by this once~ know another team member of mine who has also been bitten by this.\r\nI'm happy to contribute this.",
      "state": "CLOSED",
      "createdAt": "2023-08-30T14:53:10Z",
      "updatedAt": "2024-10-25T18:15:48Z",
      "closedAt": "2024-10-25T18:15:47Z",
      "author": {
        "login": "LukeWood"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "topic: reporting"
          },
          {
            "name": "topic: collection"
          }
        ]
      },
      "milestone": {
        "title": "9.0",
        "dueOn": null
      },
      "comments": {
        "totalCount": 7
      }
    },
    {
      "number": 11370,
      "title": "Add a unique test counter to the final report",
      "body": "#### What's the problem this feature will solve?\r\n\r\nHello! I'm a big fan of pytest. However, I ran into a problem when using [pytest.mark.parametrize](https://docs.pytest.org/en/7.3.x/how-to/parametrize.html#pytest-mark-parametrize-parametrizing-test-functions). \r\n\r\nThe fact is that each individual parameter for the test is always displayed as a whole test in the final report. For me, these reports are an important indicator, and it is important for me to distinguish _unique_ tests from tests that are generated by the transmitted parameters.\r\n\r\n#### Describe the solution you'd like\r\n\r\nIdeally I would like to see both numbers: how many unique tests and how many of them in total, taking into account parameterized ones. This can be done both by default and when using a special command line option, for example `--show_unique_tests_number`. \r\n",
      "state": "CLOSED",
      "createdAt": "2023-08-30T11:24:07Z",
      "updatedAt": "2024-07-06T23:06:49Z",
      "closedAt": "2024-07-06T23:06:49Z",
      "author": {
        "login": "pomponchik"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: proposal"
          },
          {
            "name": "topic: reporting"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 7
      }
    },
    {
      "number": 11367,
      "title": "[junit] failed test is missing properties if there is error also in teardown",
      "body": "when test fails and it's teardown is failing the data add with `record_property` isn't attached to the test failure, but only to the teardown failure\r\n\r\nexample such run with `pytest  --junit-xml=junit.xml`:\r\n```\r\nimport pytest\r\n\r\n@pytest.fixture(scope=\"function\", autouse=True)\r\ndef fixture_add_props(record_property):\r\n    record_property('split_name', \"something_coming_form_env\")\r\n\r\nclass TestSomthing:\r\n    def test_pass(self):\r\n        pass\r\n\r\n    def test_fail(self):\r\n        raise Exception(\"failed\")\r\n\r\n    def test_pass_teardown_fail(self, request: pytest.FixtureRequest):\r\n        def fin():\r\n            raise Exception(\"failed teardown\")\r\n        request.addfinalizer(fin)\r\n        \r\n    def test_fail_test_and_teardown(self, request: pytest.FixtureRequest):\r\n        def fin():\r\n            raise Exception(\"failed teardown\")\r\n        request.addfinalizer(fin)\r\n\r\n        raise Exception(\"failed\")\r\n```\r\n\r\n\r\nI would expect both testcases to have properties that was attached to the test",
      "state": "CLOSED",
      "createdAt": "2023-08-29T09:50:02Z",
      "updatedAt": "2023-09-03T17:33:55Z",
      "closedAt": "2023-09-03T17:33:55Z",
      "author": {
        "login": "fruch"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      }
    },
    {
      "number": 11365,
      "title": "pytest won't run root conftest.py's pytest_configure in special circumstances",
      "body": "Consider the following project: https://github.com/Redoubts/_pytest_bug_report\r\n\r\nThere's a root level conftest.py, and 3 plugins (two loaded in the conftest, and a third loaded by plugin 2). All define a `pytest_configure` in some way.\r\n\r\nwith `platform darwin -- Python 3.11.4, pytest-7.4.0, pluggy-1.0.0`, we see\r\n\r\n```\r\n% pytest test1.py\r\nmypackage.plugin2 Configured\r\nmypackage.plugin3 Configured\r\nconftest Configured\r\nmypackage.plugin Configured\r\n```\r\n\r\nWhich is somewhat expected, each `pytest_configure` gets called.\r\n\r\n\r\nIf you update pluggy to 1.2+, you see\r\n\r\n```\r\n% pytest test1.py           \r\nmypackage.plugin2 Configured\r\nmypackage.plugin3 Configured\r\nmypackage.plugin Configured\r\nmypackage.plugin3 Configured\r\n============================================================================================ test session starts =============================================================================================\r\nplatform darwin -- Python 3.11.4, pytest-7.4.0, pluggy-1.2.0\r\n...\r\n```\r\n\r\nWhere the third plugin's `pytest_configure` is called twice, but the root `pytest_configure` is never called.\r\n\r\n\r\nI think this is more specifically due to `mypackage/plugin3.py`'s `@pytest.hookimpl` wrapper. Maybe it's ill advised to do that, but I found this bizarre scenario when testing package updates in a much larger codebase.",
      "state": "CLOSED",
      "createdAt": "2023-08-29T03:09:49Z",
      "updatedAt": "2024-02-18T23:56:59Z",
      "closedAt": "2024-02-18T21:48:19Z",
      "author": {
        "login": "Redoubts"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: bug"
          },
          {
            "name": "topic: config"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      }
    },
    {
      "number": 11363,
      "title": "[suggestion] Change the description of \"status: easy\" Label in CONTRIBUTING.rst.",
      "body": "The [Fix Bugs](https://github.com/pytest-dev/pytest/blob/main/CONTRIBUTING.rst#fix-bugs) section in CONTRIBUTING.rst says the following, but I don't see the \"status: easy\" Label in the current issue.(I could find \"good first issue\".)\r\n\r\n> Look through the GitHub issues for bugs. See also the \"status: easy\" issues that are friendly to new contributors.\r\n\r\nDoes \"status: easy\" mean the same as \"good first issue\" Label?\r\n\r\nIf so, I would suggest replacing \"status: easy\" in the [Fix Bugs](https://github.com/pytest-dev/pytest/blob/main/CONTRIBUTING.rst#fix-bugs) section with \"good first issue\".\r\n\r\nSorry for my poor English. thank you.",
      "state": "CLOSED",
      "createdAt": "2023-08-28T07:54:33Z",
      "updatedAt": "2023-09-12T14:38:33Z",
      "closedAt": "2023-09-06T12:52:55Z",
      "author": {
        "login": "kamiya-s-max"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: docs"
          },
          {
            "name": "good first issue"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 10
      }
    },
    {
      "number": 11356,
      "title": "pre-commit failing on flake8 hook with undefined name 'EncodingWarning' error",
      "body": "## description of problem\r\nOn VS Code, I am attempting to commit a staged change of src\\_pytest\\config\\__init__.py; however, the pre-commit hook fails on flake8 with command ouput:\r\n```\r\nflake8...................................................................Failed\r\n- hook id: flake8\r\n- exit code: 1\r\n\r\ntesting/_py/test_local.py:18:45: F821 undefined name 'EncodingWarning'\r\n```\r\nEvery other hook either passes or is skipped. I installed pre-commit and its hook on the pytest repo using\r\n\r\n## pip list output\r\n```\r\n\r\ncachetools                    5.3.1\r\ncertifi                       2022.12.7\r\ncffi                          1.15.1\r\ncfgv                          3.3.1\r\ncftime                        1.6.2\r\nchardet                       5.2.0\r\ncharset-normalizer            2.0.4\r\nclean                         0.1.4\r\nclean-text                    0.6.0\r\ncleantext                     1.1.4\r\nclick                         8.0.4\r\nclick-plugins                 1.1.1\r\ncligj                         0.7.2\r\ncloudpickle                   2.0.0\r\nclyent                        1.2.2\r\ncolorama                      0.4.6\r\ncolorcet                      3.0.1\r\ncomm                          0.1.2\r\nconda                         23.3.1\r\nconda-build                   3.23.3\r\nconda-content-trust           0.1.3\r\nconda-pack                    0.6.0\r\nconda-package-handling        2.0.2\r\nconda_package_streaming       0.7.0\r\nconda-repo-cli                1.0.41\r\nconda-token                   0.4.0\r\nconda-verify                  3.4.2\r\nconstantly                    15.1.0\r\ncontourpy                     1.0.6\r\ncookiecutter                  1.7.3\r\ncoverage                      6.5.0\r\ncpplint                       1.6.1\r\ncramjam                       2.6.2\r\ncryptography                  39.0.1\r\ncssselect                     1.1.0\r\ncycler                        0.11.0\r\nCython                        0.29.32\r\ncytoolz                       0.12.0\r\ndaal4py                       2023.0.2\r\ndask                          2023.3.2\r\ndatashader                    0.14.4\r\ndatashape                     0.5.4\r\ndb-dtypes                     1.0.4\r\ndebugpy                       1.5.1\r\ndecorator                     5.1.1\r\ndefusedxml                    0.7.1\r\ndiff-match-patch              20200713\r\ndill                          0.3.6\r\ndistlib                       0.3.7\r\ndistributed                   2023.3.2\r\nDjango                        4.2.2\r\ndocstring-to-markdown         0.11\r\ndocutils                      0.18.1\r\ndoit                          0.36.0\r\nemoji                         1.7.0\r\nentrypoints                   0.4\r\net-xmlfile                    1.1.0\r\nexceptiongroup                1.0.4\r\nexecnet                       1.9.0\r\nexecuting                     1.2.0\r\nfastjsonschema                2.16.2\r\nfastparquet                   2022.11.0\r\nfeedparser                    6.0.10\r\nfilelock                      3.12.2\r\nfindspark                     2.0.1\r\nFiona                         1.8.22\r\nfirebase                      3.0.1\r\nflake8                        6.0.0\r\nflake8-bugbear                22.7.1\r\nFlask                         1.1.2\r\nflatbuffers                   23.5.26\r\nflit_core                     3.8.0\r\nfonttools                     4.25.0\r\nfrozenlist                    1.3.3\r\nfsspec                        2023.3.0\r\nftfy                          6.1.1\r\nfuture                        0.18.3\r\ngast                          0.4.0\r\ngcsfs                         2021.11.0\r\ngensim                        4.3.0\r\ngeographiclib                 2.0\r\ngeopandas                     0.12.1\r\ngeopy                         2.3.0\r\ngitdb                         4.0.9\r\nGitPython                     3.1.29\r\nglob2                         0.7\r\ngmpy2                         2.1.2\r\ngoogle-api-core               2.10.2\r\ngoogle-auth                   2.14.1\r\ngoogle-auth-oauthlib          0.7.1\r\ngoogle-cloud-bigquery         3.3.6\r\ngoogle-cloud-bigquery-storage 2.16.2\r\ngoogle-cloud-core             2.3.2\r\ngoogle-cloud-storage          2.6.0\r\ngoogle-crc32c                 1.5.0\r\ngoogle-pasta                  0.2.0\r\ngoogle-resumable-media        2.4.0\r\ngoogleapis-common-protos      1.57.0\r\ngreenlet                      2.0.1\r\ngrpcio                        1.50.0\r\ngrpcio-status                 1.50.0\r\nh5py                          3.7.0\r\nHeapDict                      1.0.1\r\nholoviews                     1.15.4\r\nhtml5lib                      1.1\r\nhuggingface-hub               0.10.1\r\nhvplot                        0.8.2\r\nhyperlink                     21.0.0\r\nhypothesis                    6.58.0\r\nidentify                      2.5.8\r\nidna                          3.4\r\nimagecodecs                   2021.8.26\r\nimageio                       2.26.0\r\nimagesize                     1.4.1\r\nimbalanced-learn              0.10.1\r\nimportlib-metadata            6.0.0\r\nimportlib-resources           5.2.0\r\nincremental                   21.3.0\r\ninflection                    0.5.1\r\niniconfig                     1.1.1\r\nintake                        0.6.8\r\nintervaltree                  3.1.0\r\nipykernel                     6.19.2\r\nipython                       8.12.0\r\nipython-genutils              0.2.0\r\nipywidgets                    8.0.4\r\nisort                         5.10.1\r\nitemadapter                   0.3.0\r\nitemloaders                   1.0.4\r\nitsdangerous                  2.0.1\r\njaraco.classes                3.2.1\r\njdcal                         1.4.1\r\njedi                          0.18.1\r\njeepney                       0.7.1\r\njellyfish                     0.9.0\r\nJinja2                        3.0.0\r\njinja2-time                   0.2.0\r\njmespath                      0.10.0\r\njoblib                        1.1.1\r\njson5                         0.9.6\r\njsonpatch                     1.32\r\njsonpointer                   2.1\r\njsonschema                    4.17.3\r\njupyter                       1.0.0\r\njupyter_client                7.4.9\r\njupyter-console               6.6.3\r\njupyter_core                  5.3.0\r\njupyter-server                1.23.4\r\njupyterlab                    3.5.3\r\njupyterlab-pygments           0.1.2\r\njupyterlab-server             2.10.3\r\njupyterlab-widgets            3.0.5\r\njupyterlite                   0.1.0b12\r\nkeras                         2.13.1\r\nkeyring                       23.13.1\r\nkiwisolver                    1.4.4\r\nlazy-object-proxy             1.6.0\r\nlibarchive-c                  2.9\r\nlibclang                      16.0.6\r\nllvmlite                      0.39.1\r\nlocket                        1.0.0\r\nlxml                          4.9.1\r\nlz4                           3.1.3\r\nMarkdown                      3.4.1\r\nMarkupSafe                    2.1.1\r\nmatplotlib                    3.7.1\r\nmatplotlib-inline             0.1.6\r\nmccabe                        0.7.0\r\nmeteostat                     1.6.5\r\nmistune                       2.0.4\r\nmkl-fft                       1.3.1\r\nmkl-random                    1.2.2\r\nmkl-service                   2.4.0\r\nmock                          4.0.3\r\nmore-itertools                9.0.0\r\nmoto                          4.0.10\r\nmpmath                        1.2.1\r\nmsgpack                       1.0.3\r\nmultidict                     6.0.2\r\nmultipledispatch              0.6.0\r\nmunch                         2.5.0\r\nmunkres                       1.1.4\r\nmypy                          0.990\r\nmypy-extensions               0.4.3\r\nnatsort                       8.2.0\r\nnavigator-updater             0.3.0\r\nnbclassic                     0.5.4\r\nnbclient                      0.5.13\r\nnbconvert                     7.2.5\r\nnbformat                      5.7.0\r\nnbsphinx                      0.8.10\r\nnest-asyncio                  1.5.6\r\nnetworkx                      2.8.4\r\nnltk                          3.7\r\nnodeenv                       1.7.0\r\nnose                          1.3.7\r\nnotebook                      6.5.3\r\nnotebook_shim                 0.2.2\r\nnumba                         0.56.4\r\nnumexpr                       2.8.4\r\nnumpy                         1.23.5\r\nnumpydoc                      1.5.0\r\nnvidia-cublas-cu11            11.10.3.66\r\nnvidia-cuda-nvrtc-cu11        11.7.99\r\nnvidia-cuda-runtime-cu11      11.7.99\r\nnvidia-cudnn-cu11             8.5.0.96\r\noauthlib                      3.2.2\r\nodfpy                         1.4.1\r\nolefile                       0.46\r\nopenpyxl                      3.0.10\r\nopt-einsum                    3.3.0\r\nortools                       9.5.2237\r\npackaging                     23.1\r\npandas-datareader             0.10.0\r\npandas-dev-flaker             0.5.0\r\npandas-gbq                    0.17.9\r\npandoc                        2.2\r\npandocfilters                 1.5.0\r\npanel                         0.14.3\r\nparam                         1.12.3\r\nparsel                        1.6.0\r\nparso                         0.8.3\r\npartd                         1.2.0\r\npathlib                       1.0.1\r\npathspec                      0.10.3\r\npatsy                         0.5.3\r\npep8                          1.7.1\r\npexpect                       4.8.0\r\npickleshare                   0.7.5\r\nPillow                        9.4.0\r\npip                           23.0.1\r\npkginfo                       1.9.6\r\nplatformdirs                  3.10.0\r\nplotly                        5.9.0\r\npluggy                        1.2.0\r\nplumbum                       1.8.0\r\nply                           3.11\r\npooch                         1.4.0\r\npoyo                          0.5.0\r\npre-commit                    2.20.0\r\nprometheus-client             0.14.1\r\nprompt-toolkit                3.0.36\r\nProtego                       0.1.16\r\nproto-plus                    1.22.1\r\nprotobuf                      4.21.9\r\npsutil                        5.9.4\r\npsycopg2                      2.9.5\r\nptyprocess                    0.7.0\r\npure-eval                     0.2.2\r\npy                            1.11.0\r\npy4j                          0.10.9.5\r\npyarrow                       9.0.0\r\npyasn1                        0.4.8\r\npyasn1-modules                0.2.8\r\npycodestyle                   2.10.0\r\npycosat                       0.6.4\r\npycparser                     2.21\r\npyct                          0.5.0\r\npycurl                        7.45.2\r\npydata-google-auth            1.4.0\r\npydata-sphinx-theme           0.10.1\r\nPyDispatcher                  2.0.5\r\npydocstyle                    6.3.0\r\npyerfa                        2.0.0\r\npyflakes                      3.0.1\r\nPygments                      2.13.0\r\nPyHamcrest                    2.0.2\r\nPyJWT                         2.4.0\r\npylint                        2.16.2\r\npylint-venv                   2.3.0\r\npyls-spyder                   0.4.0\r\nPyMySQL                       1.0.2\r\npyodbc                        4.0.34\r\npyOpenSSL                     23.0.0\r\npyparsing                     3.0.9\r\npyproj                        3.4.0\r\npyproject-api                 1.5.4\r\nPyQt5-sip                     12.11.0\r\npyreadstat                    1.2.0\r\npyrsistent                    0.18.0\r\nPySocks                       1.7.1\r\npyspark                       3.3.1\r\npytest                        7.2.0\r\npytest-asyncio                0.20.2\r\npytest-cov                    4.0.0\r\npytest-cython                 0.2.0\r\npytest-xdist                  3.0.2\r\npython-dateutil               2.8.2\r\npython-lsp-black              1.2.1\r\npython-lsp-jsonrpc            1.0.0\r\npython-lsp-server             1.7.1\r\npython-slugify                5.0.2\r\npython-snappy                 0.6.1\r\npytoolconfig                  1.2.5\r\npytz                          2022.7\r\npyupgrade                     3.2.2\r\npyviz-comms                   2.0.2\r\nPyWavelets                    1.4.1\r\npyxdg                         0.27\r\npyxlsb                        1.0.10\r\nPyYAML                        6.0\r\npyzmq                         23.2.0\r\nQDarkStyle                    3.0.2\r\nqstylizer                     0.2.2\r\nQtAwesome                     1.2.2\r\nqtconsole                     5.4.0\r\nQtPy                          2.2.0\r\nqueuelib                      1.5.0\r\nregex                         2022.7.9\r\nrequests                      2.28.1\r\nrequests-file                 1.5.1\r\nrequests-oauthlib             1.3.1\r\nresponses                     0.22.0\r\nrope                          1.7.0\r\nrsa                           4.9\r\nRtree                         1.0.1\r\nruamel.yaml                   0.17.21\r\nruamel.yaml.clib              0.2.6\r\nruamel-yaml-conda             0.17.21\r\ns3fs                          2021.11.0\r\ns3transfer                    0.6.0\r\nscikit-image                  0.19.3\r\nscikit-learn                  1.2.2\r\nscikit-learn-intelex          20230228.214108\r\nscipy                         1.10.1\r\nScrapy                        2.8.0\r\nseaborn                       0.12.2\r\nSecretStorage                 3.3.1\r\nSend2Trash                    1.8.0\r\nservice-identity              18.1.0\r\nsetuptools                    65.6.3\r\nsgmllib3k                     1.0.0\r\nShapely                       1.8.5.post1\r\nsip                           6.6.2\r\nsix                           1.16.0\r\nsmart-open                    5.2.1\r\nsmmap                         5.0.0\r\nsniffio                       1.2.0\r\nsnowballstemmer               2.2.0\r\nsnscrape                      0.5.0.20230114.dev31+gf329b69\r\nsodapy                        2.2.0\r\nsortedcollections             2.1.0\r\nsortedcontainers              2.4.0\r\nsoupsieve                     2.4\r\nspark                         0.2.1\r\nSphinx                        5.0.2\r\nsphinx-copybutton             0.5.1\r\nsphinx-panels                 0.6.0\r\nsphinx-toggleprompt           0.2.0\r\nsphinxcontrib-applehelp       1.0.2\r\nsphinxcontrib-devhelp         1.0.2\r\nsphinxcontrib-htmlhelp        2.0.0\r\nsphinxcontrib-jsmath          1.0.1\r\nsphinxcontrib-qthelp          1.0.3\r\nsphinxcontrib-serializinghtml 1.1.5\r\nspyder                        5.4.2\r\nspyder-kernels                2.4.2\r\nSQLAlchemy                    1.4.44\r\nsqlparse                      0.4.4\r\nstack-data                    0.6.1\r\nstatsmodels                   0.13.5\r\nstyle                         1.1.0\r\nsympy                         1.11.1\r\ntables                        3.7.0\r\ntabulate                      0.9.0\r\nTBB                           0.2\r\ntblib                         1.7.0\r\ntenacity                      8.0.1\r\ntensorboard                   2.13.0\r\ntensorboard-data-server       0.7.1\r\ntensorflow                    2.13.0\r\ntensorflow-estimator          2.13.0\r\ntensorflow-io-gcs-filesystem  0.33.0\r\ntermcolor                     2.3.0\r\nterminado                     0.17.1\r\ntestpath                      0.6.0\r\ntext-unidecode                1.3\r\ntextdistance                  4.2.1\r\nthreadpoolctl                 2.2.0\r\nthree-merge                   0.1.1\r\ntifffile                      2021.7.2\r\ntinycss                       0.4\r\ntinycss2                      1.2.1\r\ntldextract                    3.2.0\r\ntokenize-rt                   5.0.0\r\ntokenizers                    0.11.4\r\ntoml                          0.10.2\r\ntomli                         2.0.1\r\ntomlkit                       0.11.1\r\ntoolz                         0.12.0\r\ntorch                         1.13.0\r\ntornado                       6.2\r\ntox                           4.10.0\r\ntqdm                          4.65.0\r\ntraitlets                     5.7.1\r\ntransformers                  4.24.0\r\ntweepy                        4.12.1\r\nTwisted                       22.2.0\r\ntyped-ast                     1.4.3\r\ntypes-PyMySQL                 1.0.19.1\r\ntypes-python-dateutil         2.8.19.4\r\ntypes-pytz                    2022.6.0.1\r\ntypes-setuptools              65.6.0.0\r\ntypes-toml                    0.10.8.1\r\ntyping_extensions             4.4.0\r\ntzdata                        2022.6\r\nujson                         5.4.0\r\nUnidecode                     1.2.0\r\nupdate                        0.0.1\r\nurllib3                       1.26.15\r\nversioneer                    0.28\r\nvirtualenv                    20.24.3\r\nw3lib                         1.21.0\r\nwatchdog                      2.1.6\r\nwcwidth                       0.2.5\r\nwebencodings                  0.5.1\r\nwebsocket-client              0.58.0\r\nWerkzeug                      2.2.2\r\nwhatthepatch                  1.0.2\r\nwheel                         0.38.4\r\nwidgetsnbextension            4.0.5\r\nwrapt                         1.14.1\r\nwurlitzer                     3.0.2\r\nxarray                        2022.11.0\r\nxlrd                          2.0.1\r\nXlsxWriter                    3.0.3\r\nxmltodict                     0.13.0\r\nyapf                          0.31.0\r\nyarl                          1.8.1\r\nzict                          2.1.0\r\nzipp                          3.11.0\r\nzope.interface                5.4.0\r\nzstandard                     0.19.0\r\n```\r\n\r\n## pytest and operating system versions\r\n```\r\npytest --version\r\npytest 7.1.2\r\n```\r\n\r\n```\r\nDistributor ID: Ubuntu\r\nDescription:    Ubuntu 22.04.2 LTS\r\nRelease:        22.04\r\nCodename:       jammy\r\n```\r\n\r\n## minimal example\r\nIf I discard my changes and do pre-commit run --all-files, everything passes or is skipped except for: \r\nIssue with mypy that can be found here: https://github.com/pytest-dev/pytest/issues/11343\r\nand \r\n```\r\nflake8...................................................................Failed\r\n- hook id: flake8\r\n- exit code: 1\r\n\r\ntesting/_py/test_local.py:18:45: F821 undefined name 'EncodingWarning'\r\n```",
      "state": "CLOSED",
      "createdAt": "2023-08-26T20:53:35Z",
      "updatedAt": "2023-08-28T21:34:31Z",
      "closedAt": "2023-08-28T08:26:39Z",
      "author": {
        "login": "seanjedi"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "good first issue"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 4
      }
    },
    {
      "number": 11354,
      "title": "Better explain --last-failed-no-failures in docs",
      "body": "As discussed in https://github.com/pytest-dev/pytest/issues/11346#issuecomment-1694335296, the feature could be made clearer in the docs:\r\n\r\nhttps://docs.pytest.org/en/stable/how-to/cache.html#behavior-when-no-tests-failed-in-the-last-run",
      "state": "CLOSED",
      "createdAt": "2023-08-26T18:08:46Z",
      "updatedAt": "2023-08-29T00:18:18Z",
      "closedAt": "2023-08-29T00:14:46Z",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: docs"
          },
          {
            "name": "good first issue"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 10
      }
    },
    {
      "number": 11352,
      "title": "self._node_ids_dict[\".\".join(branch)] KeyError: ''",
      "body": "I see there is some strange internal error when running tests:\r\n\r\nVersions:\r\n```\r\npytest | 7.4.0 | 7.4.0\r\npytest-html | 3.2.0 | 3.2.0\r\npytest-json-report | 1.5.0 | 1.5.0\r\npytest-metadata | 3.0.0 | 3.0.0\r\npytest-reportportal | 5.2.1 | 5.2.1\r\npytest-schema | 0.1.1 | 0.1.1\r\n```\r\n\r\n```\r\n\r\nINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"C:\\Users\\MunteanuGabriel\\venv\\Lib\\site-packages\\_pytest\\main.py\", line 270, in wrap_session\r\nINTERNALERROR>     session.exitstatus = doit(config, session) or 0\r\nINTERNALERROR>                          ^^^^^^^^^^^^^^^^^^^^^\r\nINTERNALERROR>   File \"C:\\Users\\MunteanuGabriel\\venv\\Lib\\site-packages\\_pytest\\main.py\", line 324, in _main\r\nINTERNALERROR>     config.hook.pytest_runtestloop(session=session)\r\nINTERNALERROR>   File \"C:\\Users\\MunteanuGabriel\\venv\\Lib\\site-packages\\pluggy\\_hooks.py\", line 433, in __call__\r\nINTERNALERROR>     return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)\r\nINTERNALERROR>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nINTERNALERROR>   File \"C:\\Users\\MunteanuGabriel\\venv\\Lib\\site-packages\\pluggy\\_manager.py\", line 112, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\r\nINTERNALERROR>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nINTERNALERROR>   File \"C:\\Users\\MunteanuGabriel\\venv\\Lib\\site-packages\\pluggy\\_callers.py\", line 155, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>            ^^^^^^^^^^^^^^^^^^^^\r\nINTERNALERROR>   File \"C:\\Users\\MunteanuGabriel\\venv\\Lib\\site-packages\\pluggy\\_result.py\", line 108, in get_result\r\nINTERNALERROR>     raise exc.with_traceback(exc.__traceback__)\r\nINTERNALERROR>   File \"C:\\Users\\MunteanuGabriel\\venv\\Lib\\site-packages\\pluggy\\_callers.py\", line 80, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>           ^^^^^^^^^^^^^^^^^^^^^^^^^\r\nINTERNALERROR>   File \"C:\\Users\\MunteanuGabriel\\venv\\Lib\\site-packages\\_pytest\\main.py\", line 349, in pytest_runtestloop\r\nINTERNALERROR>     item.config.hook.pytest_runtest_protocol(item=item, nextitem=nextitem)\r\nINTERNALERROR>   File \"C:\\Users\\MunteanuGabriel\\venv\\Lib\\site-packages\\pluggy\\_hooks.py\", line 433, in __call__\r\nINTERNALERROR>     return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)\r\nINTERNALERROR>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nINTERNALERROR>   File \"C:\\Users\\MunteanuGabriel\\venv\\Lib\\site-packages\\pluggy\\_manager.py\", line 112, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\r\nINTERNALERROR>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nINTERNALERROR>   File \"C:\\Users\\MunteanuGabriel\\venv\\Lib\\site-packages\\pluggy\\_callers.py\", line 155, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>            ^^^^^^^^^^^^^^^^^^^^\r\nINTERNALERROR>   File \"C:\\Users\\MunteanuGabriel\\venv\\Lib\\site-packages\\pluggy\\_result.py\", line 108, in get_result\r\nINTERNALERROR>     raise exc.with_traceback(exc.__traceback__)\r\nINTERNALERROR>   File \"C:\\Users\\MunteanuGabriel\\venv\\Lib\\site-packages\\pluggy\\_callers.py\", line 80, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>           ^^^^^^^^^^^^^^^^^^^^^^^^^\r\nINTERNALERROR>   File \"C:\\Users\\MunteanuGabriel\\venv\\Lib\\site-packages\\_pytest\\runner.py\", line 114, in pytest_runtest_protocol\r\nINTERNALERROR>     runtestprotocol(item, nextitem=nextitem)\r\nINTERNALERROR>   File \"C:\\Users\\MunteanuGabriel\\venv\\Lib\\site-packages\\_pytest\\runner.py\", line 134, in runtestprotocol\r\nINTERNALERROR>     reports.append(call_and_report(item, \"teardown\", log, nextitem=nextitem))\r\nINTERNALERROR>                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nINTERNALERROR>   File \"C:\\Users\\MunteanuGabriel\\venv\\Lib\\site-packages\\_pytest\\runner.py\", line 226, in call_and_report\r\nINTERNALERROR>     hook.pytest_runtest_logreport(report=report)\r\nINTERNALERROR>   File \"C:\\Users\\MunteanuGabriel\\venv\\Lib\\site-packages\\pluggy\\_hooks.py\", line 433, in __call__\r\nINTERNALERROR>     return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)\r\nINTERNALERROR>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nINTERNALERROR>   File \"C:\\Users\\MunteanuGabriel\\venv\\Lib\\site-packages\\pluggy\\_manager.py\", line 112, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\r\nINTERNALERROR>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nINTERNALERROR>   File \"C:\\Users\\MunteanuGabriel\\venv\\Lib\\site-packages\\pluggy\\_callers.py\", line 116, in _multicall\r\nINTERNALERROR>     raise exception.with_traceback(exception.__traceback__)\r\nINTERNALERROR>   File \"C:\\Users\\MunteanuGabriel\\venv\\Lib\\site-packages\\pluggy\\_callers.py\", line 80, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>           ^^^^^^^^^^^^^^^^^^^^^^^^^\r\nINTERNALERROR>   File \"C:\\Program Files\\JetBrains\\PyCharm Community Edition 2022.3\\plugins\\python-ce\\helpers\\pycharm\\teamcity\\pytest_plugin.py\", line 305, in pytest_runtest_logreport\r\nINTERNALERROR>     self.teamcity.blockOpened(block_name, flowId=test_id)\r\nINTERNALERROR>   File \"C:\\Program Files\\JetBrains\\PyCharm Community Edition 2022.3\\plugins\\python-ce\\helpers\\pycharm\\teamcity\\messages.py\", line 112, in blockOpened\r\nINTERNALERROR>     self.message('blockOpened', name=name, flowId=flowId)\r\nINTERNALERROR>   File \"C:\\Program Files\\JetBrains\\PyCharm Community Edition 2022.3\\plugins\\python-ce\\helpers\\pycharm\\_jb_runner_tools.py\", line 105, in message\r\nINTERNALERROR>     current, parent = _TREE_MANAGER_HOLDER.manager.get_node_ids(properties[\"name\"])\r\nINTERNALERROR>                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nINTERNALERROR>   File \"C:\\Program Files\\JetBrains\\PyCharm Community Edition 2022.3\\plugins\\python-ce\\helpers\\pycharm\\_jb_serial_tree_manager.py\", line 111, in get_node_ids\r\nINTERNALERROR>     current = self._get_node_id(self.current_branch)\r\nINTERNALERROR>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nINTERNALERROR>   File \"C:\\Program Files\\JetBrains\\PyCharm Community Edition 2022.3\\plugins\\python-ce\\helpers\\pycharm\\_jb_serial_tree_manager.py\", line 102, in _get_node_id\r\nINTERNALERROR>     return self._node_ids_dict[\".\".join(branch)]\r\nINTERNALERROR>            ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^\r\nINTERNALERROR> KeyError: ''\r\n```",
      "state": "CLOSED",
      "createdAt": "2023-08-25T19:04:05Z",
      "updatedAt": "2023-08-25T20:10:45Z",
      "closedAt": "2023-08-25T20:10:45Z",
      "author": {
        "login": "itsMGA"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 11351,
      "title": "I want to encourage beginners to contribute by making refactoring pull requests",
      "body": "I have started to learn the codebase and I would like to perform refactorings. In part, I am hoping to make it easier for others to get involved. This issue was created to discuss the idea that this could be an improvement. \r\n\r\n#### What's the problem this improvement will solve?\r\nAs someone that is not particularly clever, I get confused by long functions with multiple responsibilities. I have found the complexity and length of some of the code blocks in the repository a barrier to entry. I think this makes it harder for people to engage with the codebase. Why is that a problem?\r\n\r\nTesting is important. It is also hard and uninspiring to some. But cars will crash and medical equipment will deliver lethal doses when inadequately tested. So testing is needed - especially as the length of code's shadow grows. On LinkedIn, a lot of veterans comment that their programming mindset and methodology were largely determined by what they enjoyed and/or were exposed to at the start of their programming journey. This makes me think it would be helpful if programmers had formative experiences in a passionate and beginner-friendly testing community. \r\n\r\nIf I can make the *pytest* codebase more accessible to beginners like me, maybe programmers will find some of the passion and professionalism they will need to make the world safer by being part of the *pytest* community. I would also work at supporting new arrivals, doing outreach and creating documentation as I become more seasoned. But that is in the future and ultimately separate from the proposal. \r\n\r\n#### Describe the solution you'd like\r\nAs I learn the codebase, I would like to perform opportunistic and simple `Extract Function/Method` refactors. I'd consider doing other refactorings as my skills increase but my proposal for now is to keep things simple. The algorithm would be\r\n\r\n1. Do [Extract Function/Method](https://refactoring.com/catalog/extractFunction.html)\r\n2. Type annotate it\r\n3. Write its docstring\r\n4. Commit the refactoring: `refactor(optional scope): summary` and a body for additional information and questions.\r\n\r\nAn example of my proposed refactoring approach can be seen by applying the algorithm to the argument-parsing responsibilities of [`_prepareconfig(...)`](https://github.com/pytest-dev/pytest/blob/main/src/_pytest/config/__init__.py#L308):\r\n\r\n#### The argument-parsing behaviour of `_prepareconfig` delegated to the function `get_parsed_args`.\r\n```python\r\n#src/_pytest/config/__init__.py\r\ndef _prepareconfig(\r\n    args: Optional[Union[List[str], \"os.PathLike[str]\"]] = None,\r\n    plugins: Optional[Sequence[Union[str, _PluggyPlugin]]] = None,\r\n) -> \"Config\":\r\n    args = get_parsed_args(args) <--- THIS\r\n    config = get_config(args, plugins)\r\n    . . .\r\n)\r\n```\r\n#### `get_parsed_args` with annotations and docstring.\r\n```python\r\n#src/_pytest/config/__init__.py\r\ndef get_parsed_args(\r\n    args: Optional[Union[List[str], \"os.PathLike[str]\"]] = None\r\n) -> List[str]:\r\n    \"\"\"Return `args` as a list of strings.\r\n\r\n    This function ensures that process command line arguments (:data:`sys.argv`)\r\n    are read in and that the rest of the application can treat command line\r\n    arguments as a list of strings.\r\n\r\n    :param args:\r\n        List of command line arguments.\r\n        If `args` is `None` or not given, defaults to reading arguments\r\n        directly from the process command line (:data:`sys.argv`).\r\n        If an :class:`os.PathLike` object, it is converted to a path string.\r\n\r\n    :returns: A list of strings.\r\n\r\n    :raises TypeError:\r\n        If `args` is not `None`, not an :class:`os.PathLike` object, and not\r\n        a list.\r\n\r\n    \"\"\"\r\n    if args is None:\r\n        args = sys.argv[1:]\r\n    elif isinstance(args, os.PathLike):\r\n        args = [os.fspath(args)]\r\n    elif not isinstance(args, list):\r\n        msg = (  # type:ignore[unreachable]\r\n            \"`args` parameter expected to be a list of strings, got: {!r} (type: {})\"\r\n        )\r\n        raise TypeError(msg.format(args, type(args)))\r\n\r\n    return args\r\n```\r\n\r\n#### The commit\r\n\r\n> refactor(config): extract argument-parsing\r\n> \r\n> Responsibility for parsing arguments is removed from the body of [`_prepareconfig`](https://github.com/pytest-dev/pytest/blob/main/src/_pytest/config/__init__.py#L308) and encapsulated in its own function, `get_parsed_args`. \r\n> \r\n> ### Questions\r\n> 1. The documentation of `os.PathLike` says it can return a bytes object. \r\n> `get_parsed_args` is type annotated to return a list of strings.\r\n> Is that a problem?\r\n> \r\n> 2. Are f-strings to be avoided for backward compatibility reasons?\r\n>\r\n> 3. Does the use of a hyperlink in the commit body couple this commit to a source file in an undesirable way?\r\n\r\n\r\n#### Alternative Solutions\r\nTo restate, I hope to make it easier for people to get involved. I want people to have the opportunity to find intellectual, social and emotional welcome in the *pytest* community. That would be a satisfying end in itself. But I also hope to increase the number of people who have a passion for something I think is very important: \r\n\r\n- testing systems and making them safer; and\r\n- building and maintaining testing tools so that others can make systems safer.\r\n\r\nI think outreach and documentation of all stripes could achieve this. For example, one documentation idea is Case Study documents. Case Study documents would give an example of how a beginner (me) learned how to contribute to *pytest*. An example of that could be: documenting the work I do on [changing the --fixtures-per-test output to ignore the parameterize mark's pseudo-fixtures](https://github.com/pytest-dev/pytest/issues/11295). Of course, documentation ideas are not true alternatives - they can support rather than compete with the proposal.\r\n\r\n#### Additional context\r\nA worry I have is that my enthusiasm to contribute creates more work for the maintainers than it is worth to them on balance. My dream is not necessarily their dream and I feel self-conscious on this point. I do not want to take up their hours when it is my brain and heart - not theirs - motivating me to make this proposal. I've never liked the idea of getting others to do my work for me.\r\nTo that end, what steps would I need to take and what skills would I need to develop and demonstrate in order to be trusted with authority so that I can take the extra load this proposal might create - especially if it caught the interest of others - off the current maintainer's shoulders? \r\n",
      "state": "CLOSED",
      "createdAt": "2023-08-25T12:12:50Z",
      "updatedAt": "2024-07-06T23:08:52Z",
      "closedAt": "2024-07-06T23:08:52Z",
      "author": {
        "login": "WarrenTheRabbit"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: proposal"
          },
          {
            "name": "type: refactoring"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 4
      }
    },
    {
      "number": 11350,
      "title": "`params` on Fixture are not always detected during test generation",
      "body": "### Issue\r\n`params` on fixtures that are used by a _shadowed but used_ other fixture are not always detected during test generation and subsequent test execution fails with an error.\r\n\r\n### Example\r\n```python\r\n@pytest.fixture(params=(1,))\r\ndef b(): pass\r\n\r\n@pytest.fixture(name=\"a\")\r\ndef a1(b):  pass\r\n\r\n@pytest.fixture(name=\"a\")\r\ndef a2(a): pass\r\n\r\ndef test_deep_params(a): pass\r\n```\r\n```\r\n> pytest -q -vvv\r\n============================= test session starts =============================\r\nplatform win32 -- Python 3.11.2, pytest-7.4.0, pluggy-1.2.0 -- xxx\r\ncachedir: .pytest_cache\r\nrootdir: xxx\r\ncollecting ... \r\ncollected 1 item\r\n\r\n::test_deep_params ERROR\r\n\r\n=================================== ERRORS ====================================\r\n_____________________ ERROR at setup of test_deep_params ______________________\r\nThe requested fixture has no parameter defined for test:\r\n    ::test_deep_params\r\n\r\nRequested fixture 'c' defined in:\r\n:24\r\n\r\nRequested here:\r\n.venv\\Lib\\site-packages\\_pytest\\fixtures.py:712\r\n=========================== short test summary info ===========================\r\nERROR test_base.py::test_deep_params - Failed: The requested fixture has no p...\r\n============================== 1 error in 0.07s ===============================\r\n```\r\n\r\n### Cause\r\nDuring calculation of the fixture closue only the the arguments of the last `FixtureDef` for a fiven argument are expanded.\r\nThe sequences of `FixtureDef`s are ordered ___alphabetical___ by their name (qualname?) of their function object (e.g. swapping the names of `a1`and `a2` works).\r\nIn the example above this result in the arguments of `a1` being ignored and `b` never being picked up on, resulting in the error at execution time.\r\n\r\n",
      "state": "OPEN",
      "createdAt": "2023-08-25T08:03:50Z",
      "updatedAt": "2023-10-09T08:20:08Z",
      "closedAt": null,
      "author": {
        "login": "jgersti"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: bug"
          },
          {
            "name": "topic: fixtures"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 6
      }
    },
    {
      "number": 11349,
      "title": "AttributeError when typehinting from FixtureRequest.param",
      "body": "<!--\r\nThanks for submitting an issue!\r\n\r\nQuick check-list while reporting bugs:\r\n-->\r\n\r\nHello, I'm using `FixtureRequest` and it's associated `param` value when writing tests. When I run `pytest file_name.py` I get the following error message: `AttributeError: type object 'FixtureRequest' has no attribute 'param'`. I believe this is because I am type-hinting with `FixtureRequest.param`. I saw the notes from #10133 on using when parameterizing fixtures, which I believe I am doing here (let me know if not!).  See the code block below to understand how I am using it and the screenshot for my pytest version/`pip list` output. Thank you!\r\n\r\n- [x] a detailed description of the bug or problem you are having\r\n- [x] output of `pip list` from the virtual environment you are using\r\n- [x] pytest and operating system versions\r\n- [x] minimal example if possible\r\n\r\nCode block: \r\n```\r\nimport pytest\r\nfrom pytest import FixtureRequest\r\nfrom typing import List, Tuple\r\n\r\ndef _create_list_of_tuples() -> List[Tuple]:\r\n    first_group = ['a', 'b', 'c']\r\n    second_group = ['a', 'b', 'c']\r\n    return list(zip(first_group, second_group))\r\n\r\n@pytest.fixture(params=_create_list_of_tuples())\r\ndef get_zipped_groups(request: FixtureRequest) -> FixtureRequest.param:\r\n    yield request.param\r\n\r\ndef test_equality(get_zipped_groups: Tuple[str, str]) -> None:\r\n    first: str = get_zipped_groups[0]\r\n    second: str = get_zipped_groups[1]\r\n    assert first == second\r\n```\r\n\r\n`pip list` output: \r\n\r\n<img width=\"217\" alt=\"image\" src=\"https://github.com/pytest-dev/pytest/assets/65363575/7611861f-b949-4266-959b-41f0545f32cf\">\r\n\r\nMy env:\r\n    macOS-13.4\r\n    Python 3.8.17\r\n\r\n",
      "state": "CLOSED",
      "createdAt": "2023-08-24T21:24:53Z",
      "updatedAt": "2023-08-24T21:33:24Z",
      "closedAt": "2023-08-24T21:31:45Z",
      "author": {
        "login": "charlesriver456"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 11348,
      "title": "-k expression fails for same function name as module",
      "body": "- [x] a detailed description of the bug or problem you are having\r\n\r\nI have a test module named *test_variable.py*. I have a function *test_variable* in that module, as well as several others.\r\nWhen I run\r\n\r\n    pytest -vv -k test_variable test_variable.py\r\n\r\nit picks other functions, apart from *test_variable*, as well. When I require another function from that module to be tested, it is selected fine.\r\n\r\n- [ ] output of `pip list` from the virtual environment you are using\r\nIs it really necessary? It looks violating some privacy issues.\r\n\r\n- [x] pytest and operating system versions\r\n\r\n7.4.0, Arch Linux 6.4.10-arch1-1.\r\n\r\n- [ ] minimal example if possible\r\n",
      "state": "CLOSED",
      "createdAt": "2023-08-24T09:46:56Z",
      "updatedAt": "2023-09-07T18:35:54Z",
      "closedAt": "2023-09-07T18:22:02Z",
      "author": {
        "login": "ynikitenko"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: question"
          },
          {
            "name": "topic: collection"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 13
      }
    },
    {
      "number": 11347,
      "title": "ModuleNotFoundError: No module named 'py.xml'; 'py' is not a package",
      "body": "I am able to reproduce https://github.com/pytest-dev/pytest/issues/10428\r\n\r\npytest 7.4.0\r\n\r\nReproduced on Linux Mint and on Fedora 37\r\n\r\n`pip3 list `on Linux Mint:\r\n\r\n```\r\nPackage                       Version             \r\n----------------------------- --------------------\r\nalabaster                     0.7.8               \r\napt-clone                     0.2.1               \r\napturl                        0.5.2               \r\narrow                         1.2.3               \r\nasn1                          2.6.0               \r\nattrs                         22.2.0              \r\nBabel                         2.12.1              \r\nbcrypt                        4.0.1               \r\nbeautifulsoup4                4.8.2               \r\nbinaryornot                   0.4.4               \r\nbleach                        6.0.0               \r\nblinker                       1.4                 \r\nBrlapi                        0.7.0               \r\nbsddb3                        6.2.7               \r\nbuild                         0.10.0              \r\ncertifi                       2023.7.22           \r\ncffi                          1.15.1              \r\nchardet                       3.0.4               \r\ncharset-normalizer            3.2.0               \r\nClick                         7.0                 \r\ncolorama                      0.4.3               \r\ncommand-not-found             0.3                 \r\nconfigobj                     5.0.6               \r\ncookiecutter                  2.2.3               \r\ncryptography                  41.0.1              \r\ncupshelpers                   1.0                 \r\ndbus-python                   1.2.16              \r\ndefer                         1.0.6               \r\ndistro                        1.4.0               \r\ndistro-info                   0.23ubuntu1         \r\ndocutils                      0.20.1              \r\nentrypoints                   0.3                 \r\nenum-compat                   0.0.3               \r\nexceptiongroup                1.1.1               \r\nflit                          3.9.0               \r\nflit-core                     3.9.0               \r\ngrpcio                        1.16.1              \r\nh11                           0.14.0              \r\nhtml5lib                      1.0.1               \r\nhttplib2                      0.14.0              \r\nidna                          2.8                 \r\nifaddr                        0.1.6               \r\nimagesize                     1.4.1               \r\nIMDbPY                        6.8                 \r\nimportlib-metadata            6.8.0               \r\nimportlib-resources           5.12.0              \r\niniconfig                     2.0.0               \r\nJinja2                        3.1.2               \r\njsonschema                    4.17.3              \r\nkeyring                       18.0.1              \r\nlaunchpadlib                  1.10.13             \r\nlazr.restfulclient            0.14.2              \r\nlazr.uri                      1.0.3               \r\nldap3                         2.9.1               \r\nlouis                         3.12.0              \r\nlxml                          4.5.0               \r\nmacaroonbakery                1.3.1               \r\nMako                          1.1.0               \r\nMarkdown                      3.1.1               \r\nmarkdown-it-py                3.0.0               \r\nMarkupSafe                    2.1.3               \r\nmdurl                         0.1.2               \r\nmenulibre                     2.2.1               \r\nmeson                         0.53.2              \r\nmutagen                       1.45.1              \r\nmysqlclient                   1.4.4               \r\nnemo-emblems                  5.2.0               \r\nnetaddr                       0.7.19              \r\nnetifaces                     0.10.4              \r\noauthlib                      3.1.0               \r\nonboard                       1.4.1               \r\noutcome                       1.2.0               \r\npackaging                     23.1                \r\nPAM                           0.4.2               \r\nparamiko                      3.1.0               \r\npexpect                       4.6.0               \r\nPillow                        7.0.0               \r\npip                           20.0.2              \r\npkginfo                       1.9.6               \r\npkgutil-resolve-name          1.3.10              \r\npluggy                        1.0.0               \r\nprotobuf                      3.6.1               \r\npsutil                        5.5.1               \r\npuddletag                     2.0.1               \r\npy                            1.11.0              \r\npyasn1                        0.4.8               \r\npycairo                       1.16.2              \r\npyclean                       2.7.0               \r\npycparser                     2.21                \r\npycrypto                      2.6.1               \r\npycups                        1.9.73              \r\npycurl                        7.43.0.2            \r\nPygments                      2.15.1              \r\nPyGObject                     3.36.0              \r\nPyICU                         2.4.2               \r\npyinotify                     0.9.6               \r\nPyJWT                         1.7.1               \r\npymacaroons                   0.13.0              \r\nPyNaCl                        1.5.0               \r\npyOpenSSL                     23.2.0              \r\npyparsing                     2.4.6               \r\npyparted                      3.11.2              \r\npyproject-hooks               1.0.0               \r\nPyQt5                         5.14.1              \r\npyRFC3339                     1.1                 \r\npyrsistent                    0.19.3              \r\npysftp                        0.2.9               \r\nPySocks                       1.7.1               \r\npytest                        7.4.0               \r\npytest-html                   3.2.0               \r\npytest-metadata               3.0.0               \r\npython-apt                    2.0.1+ubuntu0.20.4.1\r\npython-dateutil               2.8.2               \r\npython-debian                 0.1.36+ubuntu1.1    \r\npython-Levenshtein            0.12.0              \r\npython-magic                  0.4.16              \r\npython-slugify                8.0.1               \r\npython-xapp                   2.2.1               \r\npython-xlib                   0.23                \r\npythondialog                  3.4.0               \r\npytz                          2019.3              \r\npyxdg                         0.26                \r\nPyYAML                        5.3.1               \r\nqrcode                        6.1                 \r\nreadme-renderer               40.0                \r\nreportlab                     3.5.34              \r\nrequests                      2.31.0              \r\nrequests-file                 1.4.3               \r\nrequests-toolbelt             1.0.0               \r\nrequests-unixsocket           0.2.0               \r\nrfc3986                       2.0.0               \r\nrich                          13.5.0              \r\nroman                         2.0.0               \r\nSecretStorage                 2.3.1               \r\nselenium                      4.11.0              \r\nsetproctitle                  1.1.10              \r\nsetuptools                    45.2.0              \r\nsimplejson                    3.16.0              \r\nsip                           4.19.21             \r\nsix                           1.14.0              \r\nsniffio                       1.3.0               \r\nsnowballstemmer               2.2.0               \r\nsortedcontainers              2.4.0               \r\nsoupsieve                     1.9.5               \r\nsphinx                        7.1.2               \r\nsphinxcontrib-applehelp       1.0.4               \r\nsphinxcontrib-devhelp         1.0.2               \r\nsphinxcontrib-htmlhelp        2.0.1               \r\nsphinxcontrib-jsmath          1.0.1               \r\nsphinxcontrib-qthelp          1.0.3               \r\nsphinxcontrib-serializinghtml 1.1.5               \r\nsystemd-python                234                 \r\ntext-unidecode                1.3                 \r\ntinycss2                      1.0.2               \r\ntldextract                    2.2.1               \r\ntomli                         2.0.1               \r\ntomli-w                       1.0.0               \r\ntqdm                          4.65.0              \r\ntrio                          0.22.2              \r\ntrio-websocket                0.10.3              \r\ntwine                         4.0.2               \r\ntyping-extensions             4.7.1               \r\nubuntu-advantage-tools        8001                \r\nubuntu-drivers-common         0.0.0               \r\nufw                           0.36                \r\nUnidecode                     1.1.1               \r\nurllib3                       2.0.4               \r\nvboxapi                       1.0                 \r\nwadllib                       1.3.3               \r\nwebencodings                  0.5.1               \r\nwheel                         0.34.2              \r\nwsproto                       1.2.0               \r\nxkit                          0.0.0               \r\nxlrd                          1.1.0               \r\nyoutube-dl                    2021.4.26           \r\nzipp                          3.15.0 \r\n```\r\n\r\n- [ X ] a detailed description of the bug or problem you are having\r\n- [ X ] output of `pip list` from the virtual environment you are using\r\n- [ X ] pytest and operating system versions\r\n- [ X ] minimal example if possible\r\n",
      "state": "CLOSED",
      "createdAt": "2023-08-24T08:08:48Z",
      "updatedAt": "2023-08-24T13:20:26Z",
      "closedAt": "2023-08-24T13:02:31Z",
      "author": {
        "login": "harmin-parra"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "status: needs information"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 5
      }
    },
    {
      "number": 11346,
      "title": "`--lfnf` does nothing unless you also pass `--lf`",
      "body": "this will run every test regardless of if there were any previous failures\r\n```\r\npytest --lfnf=none\r\n```\r\ni have to pass both arguments for it to work:\r\n```\r\npytest --lf --lfnf=none\r\n```\r\n\r\ni'm not sure if this is intended functionality for whatever reason, but if it is, it should be documented in the `--help` description. the current documentation seems a bit unclear:\r\n```\r\n  --lfnf={all,none}, --last-failed-no-failures={all,none}\r\n                        Which tests to run with no previously (known) failures\r\n```",
      "state": "CLOSED",
      "createdAt": "2023-08-24T01:29:16Z",
      "updatedAt": "2023-08-26T18:10:05Z",
      "closedAt": "2023-08-26T18:09:46Z",
      "author": {
        "login": "DetachHead"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: docs"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 9
      }
    },
    {
      "number": 11343,
      "title": "pre-commit failing on mypy hook with at least a 'Module has no attribute \"getuid\" error'",
      "body": "# description of problem\r\nOn VS Code, I am attempting to commit a staged change of `src\\_pytest\\config\\__init__.py`; however, the pre-commit hook fails on mypy with command ouput: \r\n```\r\nmypy.....................................................................Failed\r\n- hook id: mypy\r\n- exit code: 1\r\n\r\nsrc\\_pytest\\compat.py:324: error: Module has no attribute \"getuid\"; maybe \"getpid\" or \"getppid\"?  [attr-defined]\r\nFound 1 error in 1 file (checked 1 source file)\r\n```\r\nEvery other hook either passes or is skipped. I installed pre-commit and its hook on the pytest repo using \r\n```bash\r\n$ pip install --user pre-commit\r\n$ pre-commit install\r\n```\r\n# `pip list` output\r\n```\r\n(.venv) PS C:\\pytest\\pytest> pip list\r\nPackage            Version                           Editable project location\r\n------------------ --------------------------------- -------------------------\r\nargcomplete        3.1.1\r\nattrs              23.1.0\r\ncachetools         5.3.1\r\ncertifi            2023.7.22\r\ncfgv               3.4.0\r\nchardet            5.2.0\r\ncharset-normalizer 3.2.0\r\ncolorama           0.4.6\r\ndistlib            0.3.7\r\nelementpath        4.1.5\r\nexceptiongroup     1.1.3\r\nfilelock           3.12.2\r\nhypothesis         6.82.6\r\nidentify           2.5.26\r\nidna               3.4\r\niniconfig          2.0.0\r\nmock               5.1.0\r\nnodeenv            1.8.0\r\nnose               1.3.7\r\npackaging          23.1\r\npip                23.2.1\r\nplatformdirs       3.10.0\r\npluggy             1.2.0\r\npre-commit         3.3.3\r\nPygments           2.16.1\r\npyproject-api      1.5.4\r\npytest             8.0.0.dev167+g37bb18617.d20230822 C:\\pytest\\pytest\r\nPyYAML             6.0.1\r\nrequests           2.31.0\r\nsetuptools         58.1.0\r\nsortedcontainers   2.4.0\r\ntomli              2.0.1\r\ntox                4.9.0\r\nurllib3            2.0.4\r\nvirtualenv         20.24.3\r\nxmlschema          2.4.0\r\n```\r\n# pytest and operating system versions\r\n```bash\r\n$ pytest --version\r\n$ pytest 8.0.0.dev167+g37bb18617.d20230822\r\n```\r\n```python\r\n>>> platform.system(), platform.release(), platform.version()  \r\n('Windows', '10', '10.0.19045')\r\n```\r\n\r\n# minimal example \r\nIf I discard my changes and do `pre-commit run --all-files`, everything passes or is skipped except for\r\n\r\n```\r\nmypy.....................................................................Failed\r\n- hook id: mypy\r\n- exit code: 1\r\n\r\nsrc\\_pytest\\compat.py:324: error: Module has no attribute \"getuid\"; maybe \"getpid\" or \"getppid\"?  [attr-defined]\r\ntesting\\test_parseopt.py:294: error: Module has no attribute \"getencoding\"  [attr-defined]\r\nFound 2 errors in 2 files (checked 224 source files)\r\n```\r\n",
      "state": "CLOSED",
      "createdAt": "2023-08-23T13:45:38Z",
      "updatedAt": "2023-08-27T12:40:31Z",
      "closedAt": "2023-08-27T12:40:30Z",
      "author": {
        "login": "WarrenTheRabbit"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 11340,
      "title": "setup_class does not work well with @pytest.fixture",
      "body": "### Discussed in https://github.com/pytest-dev/pytest/discussions/11330\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **vipkum2** August 21, 2023</sup>\r\n**What I want:** I need a session level setup for some data, this data need by the test scripts/tests, Also test scripts has some class level setup.\r\n**Issue:** I am using below code to achieve the same but \"setup_class\" in test script, start executing with each test case. I am expecting it to run only once for the class. Without fixture It run once for class.\r\n\r\n**Workaround:** I can use fixture directly in test case like: `def test_01(self,abc):`, it works. But I want that If I can only use value of \"abc\" in `setup_class`, so only one place I need to access the \"abc\".\r\n\r\n```\r\n#conftest.py file:\r\n\r\n@pytest.fixture(scope=\"session\")\r\ndef abc():\r\n    print(\"\\n\\n ### ABC Session Level Setup ###\")\r\n    abc = 6\r\n    #os.environ[\"a\"] = str(data)\r\n    yield abc\r\n    print(\"\\n\\n ### ABC Session Level TearDown ###\")\r\n```\r\n\r\n```\r\n#test03.py\r\nimport pytest\r\n\r\nclass Test3:\r\n    @pytest.fixture(autouse=True)\r\n    def setup_class(self,abc):\r\n        self.d = abc\r\n        print(\"\\n Inside Test3 setup_module\",)\r\n\r\n    def test_01(self,):\r\n        print(\"test_01\",self.d)\r\n\r\n    def test_02(self,):\r\n        print(\"test_02\",self.d)\r\n\r\n    def test_03(self,):\r\n        print(\"test_03\", self.d)```\r\n\r\n```\r\n#Execution logs:\r\nvipin@nmjwr7pwg0 test % python3 -m pytest -s -vv test3.py -x\r\n========================================================================= test session starts =========================================================================\r\nplatform darwin -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0 -- /opt/homebrew/opt/python@3.10/bin/python3.10\r\ncachedir: .pytest_cache\r\nrootdir: /Users/vipin/my_mac/pyLogger, configfile: pytest.ini\r\ncollected 3 items\r\n\r\ntest3.py::Test3::test_01\r\n\r\n ### ABC Session Level Setup ###\r\n\r\n Inside Test3 setup_module\r\ntest_01 6\r\nPASSED\r\ntest3.py::Test3::test_02\r\n Inside Test3 setup_module\r\ntest_02 6\r\nPASSED\r\ntest3.py::Test3::test_03\r\n Inside Test3 setup_module\r\ntest_03 6\r\nPASSED\r\n\r\n ### ABC Session Level TearDown ###\r\n\r\n\r\n========================================================================== 3 passed in 0.00s ==========================================================================\r\n```</div>",
      "state": "CLOSED",
      "createdAt": "2023-08-23T03:48:23Z",
      "updatedAt": "2023-08-23T05:16:27Z",
      "closedAt": "2023-08-23T05:16:27Z",
      "author": {
        "login": "vipkum2"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 11337,
      "title": "`params` on Fixtures are silently hidden when the Fixture is shadowed but used",
      "body": "### Issue\r\n`params` on fixtures that are shadowed but used are silently dropped.\r\n\r\n### Example\r\n```python\r\n@pytest.fixture\r\ndef b(a): return a\r\n\r\n@pytest.fixture(name=\"a\", params=(\"inner\", \"near\"))\r\ndef a_inner(request):\r\n    return f\"#{request.param}\"\r\n\r\n@pytest.fixture(name=\"a\", params=(\"outer\", \"far\"))\r\ndef a_outer(request, a, b):\r\n    return f\"+{request.param} {a} {b}\"\r\n\r\ndef test_nested(a):\r\n    print(a)\r\n```\r\nthis result in something like\r\n```\r\n> pytest -s -q -vvv\r\n::test_nested[outer]\r\n+outer #outer #outer\r\nPASSED\r\n::test_nested[far]\r\n+far #far #far\r\nPASSED\r\n```\r\nI expect to atleast get a warning that the `params` on the inner fixture are overwritten by the `params`on the outer one\r\n\r\n####  Note I:\r\nI actually hoped to get all four cases (`outer-inner`, `outer-near`, `far-inner`, `far-near`), but i guess that wont happen anytime (_see Note III_)\r\n\r\n#### Note II:\r\nThe fixture `b` is only included to demonstrate that the inner fixture is/can be accessed when necessary.\r\nIncreasing the scope on the inner fixture does not change anything.\r\n\r\n####  Note III:\r\nI am aware that the current behaviour (ignoring the params on the inner fixture) is the current way to make indirect parameters in `pytest.mark.parametrize` work, because `pytest.mark.parametrize` in effect just shadows fixtures.\r\n\r\n### Sytem Info:\r\npytest-7.4.0 \r\nwin10 & python 3.11 ",
      "state": "OPEN",
      "createdAt": "2023-08-22T11:55:19Z",
      "updatedAt": "2023-08-25T06:27:37Z",
      "closedAt": null,
      "author": {
        "login": "jgersti"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "topic: parametrize"
          },
          {
            "name": "topic: fixtures"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      }
    },
    {
      "number": 11332,
      "title": "Add a (supported) way to override assertion messages for custom types",
      "body": "<!--\r\nThanks for suggesting a feature!\r\n\r\nQuick check-list while suggesting features:\r\n-->\r\n\r\n#### What's the problem this feature will solve?\r\n<!-- What are you trying to do, that you are unable to achieve with pytest as it currently stands? -->\r\nIt would be useful for comparisons of custom types to be able to raise user-defined assertion messages. This is technically currently possible (for `==` comparisons anyway) by making those types subclass `ApproxBase`, but a supported API would be preferable.\r\n\r\n\r\n#### Describe the solution you'd like\r\n<!-- A clear and concise description of what you want to happen. -->\r\nIf pytest is comparing two values of type X and that type has a `repr_compare` method, it could be called by pytest to provide the list of lines for the assertion message (just like `ApproxBase._repr_compare`)\r\n\r\n<!-- Provide examples of real-world use cases that this would enable and how it solves the problem described above. -->\r\n\r\n\r\n#### Alternative Solutions\r\n<!-- Have you tried to workaround the problem using a pytest plugin or other tools? Or a different approach to solving this issue? Please elaborate here. -->\r\nHandling comparisons other than `==` might be useful too; I'm not sure what that would look like though. Perhaps we should use a method name like `repr_compare_eq` to leave room for other comparisons to be added later\r\n\r\n#### Additional context\r\n\r\nWe added a `ContainsSubdict` type to check that a dict contains at least a group of items (and ignores any extra items it has). Code is [here](https://gist.github.com/craigds/8383da1b62dbfec54db8e4520c2f26ca) and usage looks like:\r\n\r\n```python\r\n    def test_foo():\r\n        value = {\"a\": 1, \"b\": 2, \"c\": 3}\r\n>       assert value == ContainsSubdict({\"b\": 2, \"d\": 4})\r\nE       AssertionError: assert {'a': 1, 'b': 2, 'c': 3} == {'b': 2, 'd': 4}\r\nE         Omitting 1 identical items, use -vv to show\r\nE         Right contains 1 more item:\r\nE         {'d': 4}\r\n```\r\n\r\nYou will note the assertion error ignores the fields on `value` that are irrelevant to the comparison (ie not in the expected value dict) To accomplish this slightly custom error message we had to subclass pytest's `ApproxBase`, since the assertion code special-cases that type to allow an assertion message override. This feels pretty hacky and it would be great if there was an official way to do this instead.\r\n",
      "state": "CLOSED",
      "createdAt": "2023-08-21T23:10:08Z",
      "updatedAt": "2023-08-21T23:53:55Z",
      "closedAt": "2023-08-21T23:53:55Z",
      "author": {
        "login": "craigds"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: proposal"
          },
          {
            "name": "topic: rewrite"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 11327,
      "title": "update-plugin-list job is failing",
      "body": "the update-plugin-list job has been failing for about a month\r\n\r\nhttps://github.com/pytest-dev/pytest/actions/runs/5914257523/job/16039386893\r\n\r\n```\r\n Traceback (most recent call last):\r\n  File \"scripts/update-plugin-list.py\", line 65, in <module>\r\n    ) -> OriginalResponse | CachedResponse:\r\nTypeError: unsupported operand type(s) for |: 'type' and 'type'\r\n```",
      "state": "CLOSED",
      "createdAt": "2023-08-21T09:11:24Z",
      "updatedAt": "2023-08-21T12:29:43Z",
      "closedAt": "2023-08-21T12:29:43Z",
      "author": {
        "login": "DetachHead"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 11325,
      "title": "`pytest.__getattr__` disables type checker errors on invalid imports",
      "body": "```py\r\nfrom pytest import asdfasdf\r\n```\r\nno error from mypy:\r\n```\r\n>mypy main.py\r\nSuccess: no issues found in 1 source file\r\n```\r\n\r\ni'm not sure what the purpose of this `__getattr__` method is, but it should probably be inside an `if not TYPE_CHECKING` block to avoid this issue:\r\n```py\r\nfrom typing import TYPE_CHECKING:\r\n\r\nif not TYPE_CHECKING:\r\n    def __getattr__(name: str) -> object:\r\n        if name == \"Instance\":\r\n            # The import emits a deprecation warning.\r\n            from _pytest.python import Instance\r\n    \r\n            return Instance\r\n        raise AttributeError(f\"module {__name__} has no attribute {name}\")\r\n```",
      "state": "CLOSED",
      "createdAt": "2023-08-21T07:57:16Z",
      "updatedAt": "2023-08-22T10:53:47Z",
      "closedAt": "2023-08-22T10:53:47Z",
      "author": {
        "login": "DetachHead"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: enhancement"
          },
          {
            "name": "topic: typing"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      }
    },
    {
      "number": 11314,
      "title": "log_file_format does not default to log_format",
      "body": "# Problem\r\n\r\n[Pytest's documentation](https://docs.pytest.org/en/7.1.x/how-to/logging.html#live-logs) states (emphasis mine)\r\n\r\n> specify `--log-cli-format` and `--log-cli-date-format` which **mirror and default to** `--log-format` and `--log-date-format` if not provided, but are applied only to the console logging handler\r\n> [...]\r\n> `--log-file-format` and `--log-file-date-format which` are **equal** to `--log-format` and `--log-date-format` but are applied to the log file logging handler\r\n\r\nThis works as intended with the `--log-cli-...` options: When I have a pytest.ini file with `log_cli = true` and run `pytest --log-format \"%(message)s\"` the console uses the specified format, even though I did not specify `--log-cli-format`, but the more general `--log-format`.\r\nFor the `--log-file-...` options, I interpreted the wording \"**equal**\" just the same as I interpreted \"**mirror and default to**\", so I was very surprised that `pytest --log-file log.txt --log-format \"%(message)s\"` did not change the log format of `log.txt`.\r\n  \r\nI debugged into _pytest and found that the option is queried using [`log_file_format = get_option_ini(config, \"log_file_format\", \"log_format\")`](https://github.com/pytest-dev/pytest/blob/73d754bd74ae8ddf86eb90cda29545cef495e927/src/_pytest/logging.py#L646) which indicates that my interpretation of the documentation is the intended behavior. However, contrary to `log_cli_format`, the `log_file_format` option is defined with a [`default=DEFAULT_LOG_FORMAT`](https://github.com/pytest-dev/pytest/blob/73d754bd74ae8ddf86eb90cda29545cef495e927/src/_pytest/logging.py#L306). This causes `get_option_ini` to return the default for `log_file_format` in every case. The additionally specified fallback `log_format` is never checked.\r\n\r\nFrom *git blame* it *seems* the commit \"[Merge the pytest-catchlog plugin](https://github.com/pytest-dev/pytest/commit/8eafbd05ca2d980b36541fbc9d547e52b6016a9a)\" introduced the bug (?) 6 years ago, affecting every version from 3.3.0 till today (). But as the name suggests, that commit did not really change the code, but only directly included it into the _pytest project. So the bug is even older than that.\r\n\r\n# Minimal Reproducible Example\r\n\r\nHere is a minimal script reproduce the unexpected behavior. I used Python 3.9 on Windows 10, but that should be irrelevant here.\r\n\r\nCreate an empty directory and add a file `test_logging.py` with content\r\n```\r\nimport logging\r\ndef test_format():\r\n    logging.error('my message')\r\n```\r\nThen run this powershell script in that directory. You should be able to run this script with minimal changes in a posix sh shell on Linux too (e.g. `python3` instead of `python` and `source venv/bin/activate` instead of `venv/Scripts/activate`).\r\n```\r\npython -m venv venv\r\nvenv\\Scripts\\activate\r\npip install pytest\r\npip freeze\r\npytest --log-file log.txt --log-format \"%(message)s\"\r\ntype log.txt\r\n```\r\nThis is the relevant output from `pytest freeze`\r\n```\r\ncolorama==0.4.6\r\nexceptiongroup==1.1.3\r\niniconfig==2.0.0\r\npackaging==23.1\r\npluggy==1.2.0\r\npytest==7.4.0\r\ntomli==2.0.1\r\n```\r\nand `type log.txt`:\r\n```\r\nERROR    root:test_logging.py:3 my message\r\n```\r\nAs you can see, the custom log format wasn't used for the file. Instead, pytest's [`DEFAULT_LOG_FORMAT`](https://github.com/pytest-dev/pytest/blob/73d754bd74ae8ddf86eb90cda29545cef495e927/src/_pytest/logging.py#L48) was used.  \r\nWhen I specify `--log-file-format \"%(message)s` instead, I get the expected `log.txt`:\r\n```\r\nmy message\r\n```\r\n\r\n# Solution\r\n\r\n**Remove the [default value for `--log-file-format`](https://github.com/pytest-dev/pytest/blob/73d754bd74ae8ddf86eb90cda29545cef495e927/src/_pytest/logging.py#L267)** so that it falls back to `--log-format` and only uses the default format if neither of them are defined. Same for [`--log-file-date-format`](https://github.com/pytest-dev/pytest/blob/73d754bd74ae8ddf86eb90cda29545cef495e927/src/_pytest/logging.py#L312).  \r\n<sub>If you want to do it like this, I can create a pull request for you. I only created this issue first, in case you wanted to keep the behavior; see below:</sub>\r\n\r\n**Alternative:** officially declare the bug as a feature, update the documentation, and remove the dead fallbacks to the general `log_format`/`log_date_format` options from the code.  \r\n<sub>I would be really sad if you went with the latter option. But it would be understandable, because the bug is ancient and I couldn't find any complains about this yet.</sub>",
      "state": "CLOSED",
      "createdAt": "2023-08-15T17:45:01Z",
      "updatedAt": "2023-09-18T18:45:57Z",
      "closedAt": "2023-09-18T18:45:57Z",
      "author": {
        "login": "schaetzc"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: enhancement"
          },
          {
            "name": "plugin: logging"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 6
      }
    },
    {
      "number": 11311,
      "title": "AssertionError triggered by `pytest --override-ini='pythonpath=foo'`",
      "body": "# Description\r\n\r\nThe option `--override-ini='pythonpath=foo'` may trigger an `AssertionError`.\r\n\r\n## Minimal example\r\n\r\nRunning `pytest --override-ini='pythonpath=foo'` in an *empty* directory fails with\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/miccoli/.pyenv/versions/3.11.4/envs/_pytest_bug/lib/python3.11/site-packages/_pytest/config/__init__.py\", line 1495, in getini\r\n    return self._inicache[name]\r\n           ~~~~~~~~~~~~~~^^^^^^\r\nKeyError: 'pythonpath'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/miccoli/.pyenv/versions/_pytest_bug/bin/pytest\", line 8, in <module>\r\n    sys.exit(console_main())\r\n             ^^^^^^^^^^^^^^\r\n  File \"/Users/miccoli/.pyenv/versions/3.11.4/envs/_pytest_bug/lib/python3.11/site-packages/_pytest/config/__init__.py\", line 189, in console_main\r\n    code = main()\r\n           ^^^^^^\r\n  File \"/Users/miccoli/.pyenv/versions/3.11.4/envs/_pytest_bug/lib/python3.11/site-packages/_pytest/config/__init__.py\", line 147, in main\r\n    config = _prepareconfig(args, plugins)\r\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/miccoli/.pyenv/versions/3.11.4/envs/_pytest_bug/lib/python3.11/site-packages/_pytest/config/__init__.py\", line 328, in _prepareconfig\r\n    config = pluginmanager.hook.pytest_cmdline_parse(\r\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/miccoli/.pyenv/versions/3.11.4/envs/_pytest_bug/lib/python3.11/site-packages/pluggy/_hooks.py\", line 433, in __call__\r\n    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/miccoli/.pyenv/versions/3.11.4/envs/_pytest_bug/lib/python3.11/site-packages/pluggy/_manager.py\", line 112, in _hookexec\r\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/miccoli/.pyenv/versions/3.11.4/envs/_pytest_bug/lib/python3.11/site-packages/pluggy/_callers.py\", line 133, in _multicall\r\n    teardown[0].send(outcome)\r\n  File \"/Users/miccoli/.pyenv/versions/3.11.4/envs/_pytest_bug/lib/python3.11/site-packages/_pytest/helpconfig.py\", line 103, in pytest_cmdline_parse\r\n    config: Config = outcome.get_result()\r\n                     ^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/miccoli/.pyenv/versions/3.11.4/envs/_pytest_bug/lib/python3.11/site-packages/pluggy/_result.py\", line 108, in get_result\r\n    raise exc.with_traceback(exc.__traceback__)\r\n  File \"/Users/miccoli/.pyenv/versions/3.11.4/envs/_pytest_bug/lib/python3.11/site-packages/pluggy/_callers.py\", line 80, in _multicall\r\n    res = hook_impl.function(*args)\r\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/miccoli/.pyenv/versions/3.11.4/envs/_pytest_bug/lib/python3.11/site-packages/_pytest/config/__init__.py\", line 1075, in pytest_cmdline_parse\r\n    self.parse(args)\r\n  File \"/Users/miccoli/.pyenv/versions/3.11.4/envs/_pytest_bug/lib/python3.11/site-packages/_pytest/config/__init__.py\", line 1425, in parse\r\n    self._preparse(args, addopts=addopts)\r\n  File \"/Users/miccoli/.pyenv/versions/3.11.4/envs/_pytest_bug/lib/python3.11/site-packages/_pytest/config/__init__.py\", line 1327, in _preparse\r\n    self.hook.pytest_load_initial_conftests(\r\n  File \"/Users/miccoli/.pyenv/versions/3.11.4/envs/_pytest_bug/lib/python3.11/site-packages/pluggy/_hooks.py\", line 433, in __call__\r\n    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/miccoli/.pyenv/versions/3.11.4/envs/_pytest_bug/lib/python3.11/site-packages/pluggy/_manager.py\", line 112, in _hookexec\r\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/miccoli/.pyenv/versions/3.11.4/envs/_pytest_bug/lib/python3.11/site-packages/pluggy/_callers.py\", line 155, in _multicall\r\n    return outcome.get_result()\r\n           ^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/miccoli/.pyenv/versions/3.11.4/envs/_pytest_bug/lib/python3.11/site-packages/pluggy/_result.py\", line 108, in get_result\r\n    raise exc.with_traceback(exc.__traceback__)\r\n  File \"/Users/miccoli/.pyenv/versions/3.11.4/envs/_pytest_bug/lib/python3.11/site-packages/pluggy/_callers.py\", line 80, in _multicall\r\n    res = hook_impl.function(*args)\r\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/miccoli/.pyenv/versions/3.11.4/envs/_pytest_bug/lib/python3.11/site-packages/_pytest/python_path.py\", line 15, in pytest_load_initial_conftests\r\n    for path in reversed(early_config.getini(\"pythonpath\")):\r\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/miccoli/.pyenv/versions/3.11.4/envs/_pytest_bug/lib/python3.11/site-packages/_pytest/config/__init__.py\", line 1497, in getini\r\n    self._inicache[name] = val = self._getini(name)\r\n                                 ^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/miccoli/.pyenv/versions/3.11.4/envs/_pytest_bug/lib/python3.11/site-packages/_pytest/config/__init__.py\", line 1540, in _getini\r\n    assert self.inipath is not None\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^\r\nAssertionError\r\n```\r\n\r\n## Output of `pip list` and enviornment\r\n\r\n```\r\nPackage    Version\r\n---------- -------\r\niniconfig  2.0.0\r\npackaging  23.1\r\npip        23.2.1\r\npluggy     1.2.0\r\npytest     7.4.0\r\nsetuptools 65.5.0\r\n```\r\n\r\nRun on `macOS-13.2.1-x86_64-i386-64bit`, but same problem also on linux.\r\n\r\n## Context\r\n\r\nI stumbled in this error while building a python package for Arch: instead of using\r\n```bash\r\ncheck(){\r\n    cd \"$_name-$pkgver\"\r\n    PYTHONPATH=src pytest\r\n}\r\n```\r\nI tried \r\n```bash\r\ncheck(){\r\n    cd \"$_name-$pkgver\"\r\n    pytest -o pythonpath=src\r\n}\r\n```\r\nwhich fails with the above traceback.\r\n\r\nI replicated the problem on a MacOs stripped down venv just to be sure that it is not related to the ArchLinux build env, which is quite complicated.\r\n",
      "state": "CLOSED",
      "createdAt": "2023-08-14T13:27:12Z",
      "updatedAt": "2024-02-14T18:53:29Z",
      "closedAt": "2024-02-14T18:53:29Z",
      "author": {
        "login": "miccoli"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: bug"
          },
          {
            "name": "topic: config"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 11307,
      "title": "`pytest.hookimpl` does not respect the `specname` keyword argument",
      "body": "Hook wrappers require the function name to start with the name of the hookspec, even when the  `specname` keyword argument is passed to `pytest.hookimpl`.\r\n\r\n## Use case\r\nI want to implement the same hook multiple times, once as a `tryfirst` hook and once as a wrapper. I cannot use the same function name in the same file, otherwise the second function overrides the first. I'm left with either putting the hookimpls into different modules or using the `specname` keyword argument which didn't work as expected.\r\n\r\nThe pytest docs about hooks link to pluggy and pytest exposes the pluggy hook interface. However, the pytest docs never mention the use of `specname` explicitly. Therefore, I'm not sure if this is a bug or if `specname` is not even intended to work in pytest. If this is the case, it would be helpful to receive an error, for example.\r\n\r\n## Minimal reproducer\r\nThe following setup is expected to print \"Before hooks\" and \"After hooks\" a couple of times when run with `pytest -s`.\r\nIt actually prints nothing and the hook implementation is silently ignored.\r\n\r\ntest_wrapper.py\r\n```python\r\ndef test_anything():\r\n    pass\r\n```\r\n\r\nconftest.py\r\n```python\r\nimport pytest\r\n\r\n@pytest.hookimpl(specname=\"pytest_pycollect_makeitem\", hookwrapper=True)\r\n# def pytest_pycollect_makeitem(collector, name, obj):  # works\r\n# def pytest_pycollect_makeitem_abcd(collector, name, obj):  # works\r\ndef my_func_name(collector, name, obj):  # fails\r\n    print(\"Before hooks\")\r\n    hook_result = yield\r\n    print(\"After hooks\")\r\n```\r\n\r\nNote that the `specname` keyword argument is not ignored. It raises and exception, when the specname does not correspond to a valid hookspec. However, the function name cannot be chosen freely even in presence of the `specname` kwarg. The function must always start with the name of the hookspec for the example to work.\r\n\r\n## Workaround\r\n* Define hookimpls in different files\r\n* Ensure that function names start with the name of the hook spec, i.e. `pytest_pycollect_makeitemXYZ`\r\n\r\n\r\n## Virtual environment\r\n```\r\n$ pip list\r\nPackage    Version\r\n---------- -------\r\niniconfig  2.0.0\r\npackaging  23.1\r\npip        23.2.1\r\npluggy     1.2.0\r\npytest     7.4.0\r\nsetuptools 68.0.0\r\n```\r\n",
      "state": "OPEN",
      "createdAt": "2023-08-11T11:38:51Z",
      "updatedAt": "2023-08-20T02:25:45Z",
      "closedAt": null,
      "author": {
        "login": "seifertm"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: docs"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      }
    },
    {
      "number": 11306,
      "title": "Module code is executed twice when collecting doctests",
      "body": "- [x] a detailed description of the bug or problem you are having\r\n- [x] output of `pip list` from the virtual environment you are using\r\n- [x] pytest and operating system versions\r\n- [x] minimal example if possible\r\n\r\n### Bug description and minimal example\r\n\r\nhttps://github.com/flying-sheep/pytest-doctest-import-twice\r\n\r\n### Versions\r\n\r\nOS: Arch Linux\r\n\r\n```nushell\r\npip list --format=json --exclude-editable | from json | to md --pretty\r\n```\r\n\r\n| name       | version |\r\n| ---------- | ------- |\r\n| iniconfig  | 2.0.0   |\r\n| packaging  | 23.1    |\r\n| pip        | 23.2.1  |\r\n| pluggy     | 1.2.0   |\r\n| pytest     | 7.4.0   |\r\n| setuptools | 68.0.0  |\r\n| wheel      | 0.41.0  |",
      "state": "CLOSED",
      "createdAt": "2023-08-11T10:47:35Z",
      "updatedAt": "2023-09-05T22:42:42Z",
      "closedAt": "2023-09-05T22:42:42Z",
      "author": {
        "login": "flying-sheep"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "topic: collection"
          },
          {
            "name": "plugin: doctests"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 13
      }
    },
    {
      "number": 11304,
      "title": "pytest fails to ignore warnings from netCDF4 C-level Warnings",
      "body": "- [x] a detailed description of the bug or problem you are having\r\n\r\nUnsure if this is a bug or a known issue/limitation, or just something I am doing incorrectly, but I will list as a bug for now. I use pytest in the CI for my project (works very well for us), and we currently have our warnings filtered to errors so we will catch any warnings in the tests. Naturally, it is then important that we can ignore the warnings that are hard for us to avoid but we know are benign. The `RuntimeWarning: numpy.ndarray size changed, may indicate binary incompatibility` is one such warning that often can arise but [is benign in most cases ](https://stackoverflow.com/questions/40845304/runtimewarning-numpy-dtype-size-changed-may-indicate-binary-incompatibility). So, we want to ignore this warning. However, at least in the case of the `netCDF4` package, when this warning is raised, it is NOT raised directly from python code, but rather from a python binding inside C code (this specific warning is raised in this file [here](https://github.com/erdc/netCDF4-Python/blob/master/netCDF4.c) around line 52657, which I re-paste here for convience:\r\n```C\r\n    if (!strict && (size_t)((PyTypeObject *)result)->tp_basicsize > size) {\r\n        PyOS_snprintf(warning, sizeof(warning),\r\n            \"%s.%s size changed, may indicate binary incompatibility\", ! Line 52657\r\n            module_name, class_name);\r\n        #if PY_VERSION_HEX < 0x02050000\r\n        if (PyErr_Warn(NULL, warning) < 0) goto bad;\r\n        #else\r\n        if (PyErr_WarnEx(NULL, warning, 0) < 0) goto bad;\r\n        #endif\r\n```\r\n\r\nin our setup.cfg, I have it set to filter warnings to errors, but to ignore warnings from the netCDF4 package:\r\n```\r\nfilterwarnings=\r\n    error\r\n    ignore::RuntimeWarning:netCDF4.*\r\n    ignore::RuntimeWarning:_netCDF4.*\r\n```\r\n\r\nhowever, when I attempt to run `pytest` , I still get an error during the `conftest.py` when this package is loaded in:\r\n\r\n```\r\nImportError while loading conftest '/home/dpanici/DESC/tests/conftest.py'.\r\ntests/conftest.py:12: in <module>\r\n    from netCDF4 import Dataset\r\n../miniconda3/envs/desc-diffrax/lib/python3.11/site-packages/netCDF4/__init__.py:3: in <module>\r\n    from ._netCDF4 import *\r\nsrc/netCDF4/_netCDF4.pyx:1: in init netCDF4._netCDF4\r\n    ???\r\nE   RuntimeWarning: numpy.ndarray size changed, may indicate binary incompatibility. Expected 16 from C header, got 96 from PyObject\r\n```\r\n\r\nIt seems to me that this means that if a warning is raised from C-level code, pytest (or `warnings`, I don't know exactly how you handle the warnings filtering) cannot detect it as warning from a specific module, and will therefore allow it past. \r\n\r\nI will note that if I change my setup.cfg filterwarnings block to instead block ALL RuntimeWarnings:\r\n```\r\nfilterwarnings=\r\n    error\r\n    ignore::RuntimeWarning\r\n```\r\nI can run fine without error, so it probably is something to do with filterwarnings being unable to realize that the warning is coming from the `netCDF4` module, maybe because it is being raised in C code.\r\n\r\n\r\n- [x] output of `pip list` from the virtual environment you are using\r\n```\r\nPackage                       Version\r\n----------------------------- -------------------\r\nalabaster                     0.7.13\r\naniso8601                     9.0.1\r\nansi2html                     1.8.0\r\narrow                         1.2.3\r\nasttokens                     2.2.1\r\nattrs                         23.1.0\r\nBabel                         2.12.1\r\nbackcall                      0.2.0\r\nbeautifulsoup4                4.12.2\r\nblack                         22.10.0\r\nbleach                        6.0.0\r\nbuild                         0.10.0\r\ncertifi                       2023.7.22\r\ncfgv                          3.3.1\r\ncftime                        1.6.2\r\ncharset-normalizer            3.2.0\r\nclick                         8.1.6\r\ncolorama                      0.4.6\r\ncomm                          0.1.4\r\ncontourpy                     1.1.0\r\ncoverage                      7.2.7\r\ncycler                        0.11.0\r\ndebugpy                       1.6.7.post1\r\ndecorator                     5.1.1\r\ndefusedxml                    0.7.1\r\ndesc-opt                      0.8.2+172.g594c254d\r\ndiffrax                       0.4.1\r\ndistlib                       0.3.7\r\ndocutils                      0.18.1\r\nequinox                       0.10.11\r\neradicate                     2.3.0\r\nexecuting                     1.2.0\r\nfastjsonschema                2.18.0\r\nfilelock                      3.12.2\r\nflake8                        6.0.0\r\nflake8-docstrings             1.7.0\r\nflake8-eradicate              1.5.0\r\nflake8-isort                  6.0.0\r\nFlask                         2.1.3\r\nFlask-RESTful                 0.3.10\r\nfonttools                     4.42.0\r\nh5py                          3.9.0\r\nidentify                      2.5.26\r\nidna                          3.4\r\nimagesize                     1.4.1\r\niniconfig                     2.0.0\r\nipykernel                     6.25.1\r\nipython                       8.14.0\r\nisort                         5.12.0\r\nitsdangerous                  2.1.2\r\njax                           0.4.13\r\njaxlib                        0.4.13\r\njaxtyping                     0.2.20\r\njedi                          0.19.0\r\nJinja2                        3.1.2\r\njsonschema                    4.19.0\r\njsonschema-specifications     2023.7.1\r\njupyter_client                8.3.0\r\njupyter_core                  5.3.1\r\njupyterlab-pygments           0.2.2\r\nkiwisolver                    1.4.4\r\nMarkupSafe                    2.0.1\r\nmatplotlib                    3.6.0\r\nmatplotlib-inline             0.1.6\r\nmccabe                        0.7.0\r\nmemory-profiler               0.61.0\r\nmistune                       3.0.1\r\nml-dtypes                     0.1.0\r\nmpmath                        1.3.0\r\nmypy-extensions               1.0.0\r\nnbclient                      0.6.8\r\nnbconvert                     7.7.3\r\nnbformat                      5.9.2\r\nnbmake                        1.4.1\r\nnbsphinx                      0.8.12\r\nnest-asyncio                  1.5.7\r\nnetCDF4                       1.6.4\r\nnodeenv                       1.8.0\r\nnumpy                         1.24.4\r\nnvgpu                         0.10.0\r\nopt-einsum                    3.3.0\r\npackaging                     23.1\r\npandas                        2.0.3\r\npandocfilters                 1.5.0\r\nparso                         0.8.3\r\npathspec                      0.11.2\r\npexpect                       4.8.0\r\npickleshare                   0.7.5\r\nPillow                        10.0.0\r\npip                           23.2.1\r\nplatformdirs                  3.10.0\r\npluggy                        1.2.0\r\npre-commit                    3.3.3\r\nprompt-toolkit                3.0.39\r\npsutil                        5.9.5\r\nptyprocess                    0.7.0\r\npure-eval                     0.2.2\r\npy-cpuinfo                    9.0.0\r\npycodestyle                   2.10.0\r\npydantic                      1.10.12\r\npydocstyle                    6.3.0\r\npyflakes                      3.0.1\r\nPygments                      2.16.1\r\npynvml                        11.5.0\r\npyparsing                     3.1.1\r\npyproject_hooks               1.0.0\r\npytest                        7.4.0\r\npytest-benchmark              4.0.0\r\npytest-cov                    4.1.0\r\npytest-monitor                1.6.6\r\npytest-mpl                    0.16.1\r\npytest-split                  0.8.1\r\npython-dateutil               2.8.2\r\npytz                          2023.3\r\nPyYAML                        6.0.1\r\npyzmq                         25.1.1\r\nqicna                         0.0.1\r\nqsc                           0.1.2\r\nreferencing                   0.30.2\r\nrequests                      2.31.0\r\nrpds-py                       0.9.2\r\nscipy                         1.10.1\r\nsetuptools                    68.0.0\r\nshapely                       2.0.1\r\nsix                           1.16.0\r\nsnowballstemmer               2.2.0\r\nsoupsieve                     2.4.1\r\nSphinx                        6.2.1\r\nsphinx-argparse               0.4.0\r\nsphinx-copybutton             0.5.2\r\nsphinx-rtd-theme              1.2.2\r\nsphinxcontrib-applehelp       1.0.6\r\nsphinxcontrib-devhelp         1.0.4\r\nsphinxcontrib-htmlhelp        2.0.3\r\nsphinxcontrib-jquery          4.1\r\nsphinxcontrib-jsmath          1.0.1\r\nsphinxcontrib-qthelp          1.0.5\r\nsphinxcontrib-serializinghtml 1.1.7\r\nstack-data                    0.6.2\r\ntabulate                      0.9.0\r\ntermcolor                     2.3.0\r\ntinycss2                      1.2.1\r\ntornado                       6.3.2\r\ntraitlets                     5.9.0\r\ntypeguard                     4.1.0\r\ntyping_extensions             4.7.1\r\ntzdata                        2023.3\r\nurllib3                       2.0.4\r\nvirtualenv                    20.24.2\r\nwcwidth                       0.2.6\r\nwebencodings                  0.5.1\r\nWerkzeug                      2.1.2\r\nwheel                         0.38.4\r\n```\r\n- [x] pytest and operating system versions\r\npytest 7.4.0\r\nOS: Windows Subsystem for Linux, Ubuntu 20.04\r\n- [ ] minimal example if possible\r\nI have not recreated this with a minimal example yet but will update once I do",
      "state": "CLOSED",
      "createdAt": "2023-08-10T20:50:36Z",
      "updatedAt": "2023-08-11T15:45:20Z",
      "closedAt": "2023-08-11T15:45:20Z",
      "author": {
        "login": "dpanici"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "status: needs information"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 11724,
      "title": "INTERNALERROR> SystemError: AST constructor recursion depth mismatch (before=78, after=133)",
      "body": "# Summary\r\n\r\nWe are seeing a very weird error in which coverage runs with html outputs are raising this `INTERNALERROR`\r\n\r\nexecuted command and options:\r\n\r\n```\r\npytest --cov app/ --cov-report term-missing --cov-report html:coverage --cov-branch --cov-append -vv\r\n```\r\n\r\nError traceback\r\n```\r\nINTERNALERROR> Traceback (most recent call last):00:14\r\nINTERNALERROR>   File \"/usr/local/lib/python3.11/site-packages/_pytest/main.py\", line 270, in wrap_session00:14\r\nINTERNALERROR>     session.exitstatus = doit(config, session) or 000:14\r\nINTERNALERROR>                          ^^^^^^^^^^^^^^^^^^^^^00:14\r\nINTERNALERROR>   File \"/usr/local/lib/python3.11/site-packages/_pytest/main.py\", line 324, in _main00:14\r\nINTERNALERROR>     config.hook.pytest_runtestloop(session=session)00:14\r\nINTERNALERROR>   File \"/usr/local/lib/python3.11/site-packages/pluggy/_hooks.py\", line 433, in __call__00:14\r\nINTERNALERROR>     return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)00:14\r\nINTERNALERROR>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^00:14\r\nINTERNALERROR>   File \"/usr/local/lib/python3.11/site-packages/pluggy/_manager.py\", line 112, in _hookexec00:14\r\nINTERNALERROR>     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)00:14\r\nINTERNALERROR>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^00:14\r\nINTERNALERROR>   File \"/usr/local/lib/python3.11/site-packages/pluggy/_callers.py\", line 133, in _multicall00:14\r\nINTERNALERROR>     teardown[0].send(outcome)00:14\r\nINTERNALERROR>   File \"/usr/local/lib/python3.11/site-packages/pytest_cov/plugin.py\", line 307, in pytest_runtestloop00:14\r\nINTERNALERROR>     self.cov_total = self.cov_controller.summary(self.cov_report)00:14\r\nINTERNALERROR>                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^00:14\r\nINTERNALERROR>   File \"/usr/local/lib/python3.11/site-packages/pytest_cov/engine.py\", line 44, in ensure_topdir_wrapper00:14\r\nINTERNALERROR>     return meth(self, *args, **kwargs)00:14\r\nINTERNALERROR>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^00:14\r\nINTERNALERROR>   File \"/usr/local/lib/python3.11/site-packages/pytest_cov/engine.py\", line 189, in summary00:14\r\nINTERNALERROR>     total = self.cov.html_report(ignore_errors=True, directory=output)00:14\r\nINTERNALERROR>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^00:14\r\nINTERNALERROR>   File \"/usr/local/lib/python3.11/site-packages/coverage/control.py\", line 1157, in html_report00:14\r\nINTERNALERROR>     ret = reporter.report(morfs)00:14\r\nINTERNALERROR>           ^^^^^^^^^^^^^^^^^^^^^^00:14\r\nINTERNALERROR>   File \"/usr/local/lib/python3.11/site-packages/coverage/html.py\", line 313, in report00:14\r\nINTERNALERROR>     self.write_html_file(ftr, prev_html, next_html)00:14\r\nINTERNALERROR>   File \"/usr/local/lib/python3.11/site-packages/coverage/html.py\", line 388, in write_html_file00:14\r\n 00:14\r\nINTERNALERROR>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^00:14\r\nINTERNALERROR>   File \"/usr/local/lib/python3.11/site-packages/coverage/html.py\", line 130, in data_for_file00:14\r\nINTERNALERROR>     for lineno, tokens in enumerate(fr.source_token_lines(), start=1):00:14\r\nINTERNALERROR>   File \"/usr/local/lib/python3.11/site-packages/coverage/phystokens.py\", line 120, in source_token_lines00:14\r\nINTERNALERROR>     match_case_lines = MatchCaseFinder(source).match_case_lines00:14\r\nINTERNALERROR>                        ^^^^^^^^^^^^^^^^^^^^^^^00:14\r\nINTERNALERROR>   File \"/usr/local/lib/python3.11/site-packages/coverage/phystokens.py\", line 85, in __init__00:14\r\nINTERNALERROR>     self.visit(ast.parse(source))00:14\r\nINTERNALERROR>                ^^^^^^^^^^^^^^^^^00:14\r\nINTERNALERROR>   File \"/usr/local/lib/python3.11/ast.py\", line 50, in parse00:14\r\nINTERNALERROR>     return compile(source, filename, mode, flags,00:14\r\nINTERNALERROR>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^00:14\r\nINTERNALERROR> SystemError: AST constructor recursion depth mismatch (before=78, after=133)\r\n```\r\n\r\nWe also cannot reproduce locally, only on CI (semaphore), very strange.\r\n\r\n## Expected vs actual result\r\n\r\nI would expect the coverage not to raise this error. However I am not entirely convinced it is a bug, and not a config issue. Please educate me.\r\n\r\n# Reproducer\r\n\r\n## Versions\r\n\r\nOutput of relevant packages `pip list`, `python --version`, `pytest --version` etc.\r\n\r\n```\r\npytest==7.4.0\r\npytest-cov==4.1.0\r\n```\r\n\r\n```\r\n% python --version\r\nPython 3.11.3\r\n```\r\n\r\nMake sure you include complete output of `tox` if you use it (it will show versions of various things).\r\n\r\n## Config\r\n\r\nInclude your `tox.ini`, `pytest.ini`, `.coveragerc`, `setup.cfg` or any relevant configuration.\r\n\r\n## Code\r\n\r\nLink to your repository, gist, pastebin or just paste raw code that illustrates the issue.\r\n\r\nIf you paste raw code make sure you quote it, eg:\r\n\r\n```python\r\ndef foobar():\r\n    pass\r\n```\r\n",
      "state": "CLOSED",
      "createdAt": "2023-08-10T19:01:42Z",
      "updatedAt": "2024-02-17T20:03:20Z",
      "closedAt": "2024-02-17T20:03:03Z",
      "author": {
        "login": "coneybeare"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: bug"
          },
          {
            "name": "topic: rewrite"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 11
      }
    },
    {
      "number": 11303,
      "title": "File execution order different when using class/method notation in CLI",
      "body": "## Pytest\r\n7.4.0\r\n## OS\r\nWindows 10 Enterprise\r\n\r\n# Overview\r\nIssue where test files are not run in order when using test class/method notation in CLI. This issue arose when creating a test setup file to make test setup easier (as opposed to other methods).\r\n\r\n# Example Setup\r\n\r\nFolder structure:  \r\n\r\n```\r\n|-- src\r\n    |-- add.py\r\n    |-- opp.py\r\n|-- test\r\n    |-- test_opp.py\r\n```\r\n\r\nadd.py:  \r\n```python\r\ndef add_2(a, b):\r\n    return a + b\r\n```\r\n\r\nopp.py\r\n```python\r\nfrom add import add_2\r\n\r\nclass OppClass:\r\n    def opp_add_2(self, a, b):\r\n        return add_2(a, b)\r\n```\r\n\r\ntest_opp.py\r\n```python\r\nfrom opp import OppClass\r\n\r\nclass Test_Opp:\r\n    def test_add_2(self):\r\n        oppClass = OppClass()\r\n\r\n        assert 2 == oppClass.opp_add_2(1, 1)\r\n        assert 3 == oppClass.opp_add_2(2, 1)\r\n```\r\n\r\nWhen executing `python -m pytest ./test/test_opp.py`, I get the following:\r\n```\r\nPS C:\\Users\\User\\Documents\\pytesterror> python -m pytest ./test/test_opp.py\r\n========================================================= test session starts ==========================================================\r\nplatform win32 -- Python 3.10.10, pytest-7.4.0, pluggy-1.2.0\r\nPyQt5 5.15.9 -- Qt runtime 5.15.2 -- Qt compiled 5.15.2     \r\nrootdir: C:\\Users\\User\\Documents\\pytesterror\r\nplugins: cov-4.1.0, qt-4.2.0\r\ncollected 0 items / 1 error\r\n\r\n================================================================ ERRORS ================================================================\r\n__________________________________________________ ERROR collecting test/test_opp.py ___________________________________________________\r\nImportError while importing test module 'C:\\Users\\User\\Documents\\pytesterror\\test\\test_opp.py'.\r\nHint: make sure your test modules/packages have valid Python names.\r\nTraceback:\r\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\importlib\\__init__.py:126: in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\ntest\\test_opp.py:1: in <module>\r\n    from opp import OppClass\r\nE   ModuleNotFoundError: No module named 'opp'\r\n======================================================= short test summary info ========================================================\r\nERROR test/test_opp.py\r\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n=========================================================== 1 error in 0.09s ===========================================================\r\n```\r\n\r\nOkay, makes sense, there is an error with the import paths.  \r\nTo simplify adding the import path to `sys.path` for my test file (in actuality, dozens of test files), I create the following `test_setup.py`:  \r\n\r\n```\r\n|-- src\r\n    |-- add.py\r\n    |-- opp.py\r\n|-- test\r\n    |-- test_opp.py\r\n    |-- test_setup.py NEW\r\n```\r\n\r\ntest_setup.py\r\n```python\r\nimport sys\r\n\r\n# Add src to sys.path so all test files do not need to add it in manually\r\nsys.path.insert(0, 'src')\r\n```\r\n\r\nNow, when running `python -m pytest ./test/test_setup.py ./test/test_opp.py`, the test runs and works:\r\n```\r\nPS C:\\Users\\User\\Documents\\pytesterror> python -m pytest ./test/test_setup.py ./test/test_opp.py\r\n========================================================= test session starts ==========================================================\r\nplatform win32 -- Python 3.10.10, pytest-7.4.0, pluggy-1.2.0\r\nPyQt5 5.15.9 -- Qt runtime 5.15.2 -- Qt compiled 5.15.2\r\nrootdir: C:\\Users\\User\\Documents\\pytesterror\r\nplugins: cov-4.1.0, qt-4.2.0\r\ncollected 1 item\r\n\r\ntest\\test_opp.py .                                                                                                                [100%]\r\n\r\n========================================================== 1 passed in 0.01s ===========================================================\r\n```\r\nWonderful, this is working great, I am taking advantage of naming my setup file test_ so that it runs in pytest, and I can add the import before all of the other test files run (among any other things, without refactoring my dozens of test files).    \r\n\r\n# Bug\r\n\r\nThe bug, however, is if I want to run a test \"class\" or test \"method\" with this setup.  \r\nFor example, running `python -m pytest ./test/test_setup.py ./test/test_opp.py::Test_Opp`  \r\n```\r\nPS C:\\Users\\User\\Documents\\pytesterror> python -m pytest ./test/test_setup.py ./test/test_opp.py::Test_Opp\r\n========================================================= test session starts ==========================================================\r\nplatform win32 -- Python 3.10.10, pytest-7.4.0, pluggy-1.2.0\r\nPyQt5 5.15.9 -- Qt runtime 5.15.2 -- Qt compiled 5.15.2\r\nrootdir: C:\\Users\\User\\Documents\\pytesterror\r\nplugins: cov-4.1.0, qt-4.2.0\r\ncollected 0 items / 1 error\r\n\r\n================================================================ ERRORS ================================================================ \r\n__________________________________________________ ERROR collecting test/test_opp.py ___________________________________________________ \r\nImportError while importing test module 'C:\\Users\\User\\Documents\\pytesterror\\test\\test_opp.py'.\r\nHint: make sure your test modules/packages have valid Python names.\r\nTraceback:\r\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\importlib\\__init__.py:126: in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\ntest\\test_opp.py:1: in <module>\r\n    from opp import OppClass\r\nE   ModuleNotFoundError: No module named 'opp'\r\n======================================================= short test summary info ======================================================== \r\nERROR test/test_opp.py\r\n=========================================================== 1 error in 0.07s =========================================================== \r\nERROR: not found: C:\\Users\\User\\Documents\\pytesterror\\test\\test_opp.py::Test_Opp\r\n(no name 'C:\\\\Users\\\\User\\\\Documents\\\\pytesterror\\\\test\\\\test_opp.py::Test_Opp' in any of [<Module test/test_opp.py>])\r\n```\r\n\r\nIt appears that by adding the class option, `::Test_Opp`, the `test_opp.py` file was run (or pre-run / compiled / pytest magic-ed) _before_ `test_setup.py`  \r\n\r\nThis appears to be a bug, that the order of file execution changes when adding a class option, `::`, to a test in the CLI args.  \r\nI would think that `python -m pytest ./test/test_setup.py ./test/test_opp.py::Test_Opp` should run `./test/test_setup.py` before `./test/test_opp.py::Test_Opp`.\r\n\r\nThis particular example may not make the strongest case for this change (as there are other ways to solve the path import issue for the test files), however, I think it points out an unexpected outcome with the test order in the CLI.\r\n\r\n# Workaround\r\n\r\nOn a side note, I can workaround this issue if I wrap the functionality in `test_setup` with a \"test class\":  \r\ntest_setup.py  \r\n```python\r\nimport sys\r\n\r\n# Add src to sys.path so all test files do not need to add it in\r\nclass Test_Setup: # Wrap in class\r\n    sys.path.insert(0, 'src')\r\n```\r\nAnd then run the tests using both class options `python -m pytest ./test/test_setup.py::Test_Setup ./test/test_opp.py::Test_Opp`:\r\n```\r\nPS C:\\Users\\User\\Documents\\pytesterror> python -m pytest ./test/test_setup.py::Test_Setup ./test/test_opp.py::Test_Opp\r\n========================================================= test session starts ==========================================================\r\nplatform win32 -- Python 3.10.10, pytest-7.4.0, pluggy-1.2.0\r\nPyQt5 5.15.9 -- Qt runtime 5.15.2 -- Qt compiled 5.15.2\r\nrootdir: C:\\Users\\User\\Documents\\pytesterror\r\nplugins: cov-4.1.0, qt-4.2.0\r\ncollected 1 item\r\n\r\ntest\\test_opp.py .                                                                                                                [100%] \r\n\r\n========================================================== 1 passed in 0.03s ===========================================================\r\n```\r\nThe tests execute as expected.\r\n\r\n# Appendix\r\n`pip list`:\r\n```\r\nPackage                   Version\r\n------------------------- ---------\r\naltgraph                  0.17.3\r\nannotated-types           0.5.0\r\nazure-core                1.28.0\r\nazure-storage-blob        12.17.0\r\nblinker                   1.6.2\r\ncan                       0.0.0\r\ncanlib                    1.23.804\r\ncertifi                   2023.7.22\r\ncffi                      1.15.1\r\ncharset-normalizer        3.2.0\r\nclick                     8.1.6\r\ncolorama                  0.4.6\r\ncoverage                  7.2.7\r\ncryptography              38.0.3\r\nDateTime                  5.2\r\ndefusedxml                0.7.1\r\ndocopt                    0.6.2\r\nexceptiongroup            1.1.2\r\nFlask                     2.3.2\r\ngcovr                     6.0\r\nidna                      3.4\r\niniconfig                 2.0.0\r\nisodate                   0.6.1\r\nitsdangerous              2.1.2\r\nJinja2                    3.1.2\r\njoblib                    1.3.1\r\nkvaser                    0.1.7\r\nlxml                      4.9.3\r\nmarkdown-it-py            3.0.0\r\nMarkupSafe                2.1.3\r\nmdurl                     0.1.2\r\nmock                      5.0.2\r\nnetworkx                  3.1\r\nnumpy                     1.25.1\r\npackaging                 23.1\r\npandas                    2.0.3\r\npatsy                     0.5.3\r\npefile                    2023.2.7\r\nPillow                    10.0.0\r\npip                       23.2.1\r\npipreqs                   0.4.13\r\nplotly                    5.15.0\r\npluggy                    1.2.0\r\npsutil                    5.9.4\r\npycparser                 2.21\r\npydantic                  2.1.1\r\npydantic_core             2.4.0\r\npydot                     1.4.2\r\nPygments                  2.15.1\r\npyinstaller               5.13.0\r\npyinstaller-hooks-contrib 2023.6\r\npyparsing                 3.1.0\r\nPyQt5                     5.15.9\r\nPyQt5-Qt5                 5.15.2\r\nPyQt5-sip                 12.12.0\r\npyqtgraph                 0.12.4\r\npyserial                  3.5\r\npytest                    7.4.0\r\npytest-cov                4.1.0\r\npytest-qt                 4.2.0\r\npython-can                4.0.0\r\npython-dateutil           2.8.2\r\npytz                      2023.3\r\npywin32                   306\r\npywin32-ctypes            0.2.2\r\nrequests                  2.31.0\r\nrich                      13.4.2\r\nRP1210                    0.0.26\r\nscikit-learn              1.3.0\r\nscipy                     1.11.1\r\nsetuptools                65.5.0\r\nsix                       1.16.0\r\ntenacity                  8.2.2\r\nthreadpoolctl             3.2.0\r\ntoml                      0.10.2\r\ntomli                     2.0.1\r\ntyping_extensions         4.7.1\r\ntzdata                    2023.3\r\nurllib3                   2.0.4\r\nWerkzeug                  2.3.6\r\nwindows-curses            2.3.1\r\nwrapt                     1.15.0\r\nyarg                      0.1.9\r\nzope.interface            6.0\r\n```\r\n",
      "state": "CLOSED",
      "createdAt": "2023-08-10T18:19:54Z",
      "updatedAt": "2023-08-10T20:17:54Z",
      "closedAt": "2023-08-10T20:17:54Z",
      "author": {
        "login": "ee-4-me"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 11300,
      "title": "support plugins as a class",
      "body": "<!--\r\nThanks for suggesting a feature!\r\n\r\nQuick check-list while suggesting features:\r\n-->\r\n\r\n#### What's the problem this feature will solve?\r\ncurrently, there is no way to type check your hook functions:\r\n```py\r\nfrom pytest import Item\r\n\r\ndef pytest_runtestloop(session: Item): # no type error, it should be Session\r\n    ...\r\n```\r\n\r\n#### Describe the solution you'd like\r\nexpose a base class for plugins to extend, so they can be defined like so:\r\n```py\r\nfrom typing_extensions import override\r\nfrom pytest import Plugin\r\n\r\nclass SomePlugin(Plugin):\r\n    @override\r\n    def pytest_runtestloop(self, session: Item): # type error: signature does not match base method\r\n        ...\r\n```\r\n#### Alternative Solutions\r\n<!-- Have you tried to workaround the problem using a pytest plugin or other tools? Or a different approach to solving this issue? Please elaborate here. -->\r\n\r\n#### Additional context\r\n<!-- Add any other context, links, etc. about the feature here. -->\r\n",
      "state": "OPEN",
      "createdAt": "2023-08-09T05:03:47Z",
      "updatedAt": "2023-08-20T02:12:45Z",
      "closedAt": null,
      "author": {
        "login": "DetachHead"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: proposal"
          },
          {
            "name": "topic: typing"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 7
      }
    },
    {
      "number": 11299,
      "title": "--lf (last-failed) does not collect tests failed under xdist_group mark",
      "body": "- [x] a detailed description of the bug or problem you are having\r\n\r\nNOTE: Looks like this is also mostly about parametrized tests.\r\n\r\nWhen there are failed tests that we run within [xdist_group](https://pytest-xdist.readthedocs.io/en/latest/distribution.html) they added into .pytest_cache lastfailed file with entries like:\r\n\r\n```\r\n{\r\n\"tests/test_one.py::test_example_1[param]@group1\",\r\n\"tests/test_one.py::test_example_2[param]@group2\",\r\netc...\r\n}\r\n```\r\n\r\nWhere `@group1`, `@group2` is the name of the group that was used. This is the place in xdist where node is modified with @ https://github.com/pytest-dev/pytest-xdist/blob/master/src/xdist/remote.py#L195\r\n\r\nWhen I do `pytest --lf` those entries will be ignored because of this condition https://github.com/pytest-dev/pytest/blob/main/src/_pytest/cacheprovider.py#L348 nodeids modified by xdist from self.lastfailed entries won't contain actual test nodeid without @ group prefix. \r\n\r\nFurther investigations showed additional problem. If I ran lastfailed file that contains `only` @ xdist grouped tests with option  `-n` they will be collected and re-run, if I add any amount of tests that are not using xdist groups, only those tests will be selected for run but grouped tests will be ignored.\r\n\r\n- [x] output of `pip list` from the virtual environment you are using\r\n\r\nBoth code lines present in pytest 7.4.0 (latest for now), 7.2.2 (my project version) and xdist 3.2.1, 3.3.1 (latest)\r\n\r\n- [x] pytest and operating system versions\r\n\r\nOS does not affect the behavior.\r\n\r\n- [x] minimal example if possible\r\n\r\nExplained above.\r\n",
      "state": "CLOSED",
      "createdAt": "2023-08-08T17:42:25Z",
      "updatedAt": "2023-09-23T01:47:18Z",
      "closedAt": "2023-09-23T01:47:18Z",
      "author": {
        "login": "konflic"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "plugin: xdist"
          },
          {
            "name": "topic: parametrize"
          },
          {
            "name": "topic: collection"
          },
          {
            "name": "status: needs information"
          },
          {
            "name": "stale"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 4
      }
    },
    {
      "number": 11295,
      "title": "`--fixtures-per-test`: Exclude parametrizing pseudo fixtures?",
      "body": "With something like:\r\n\r\n```python\r\nimport pytest\r\n\r\ndef test_one(monkeypatch):\r\n    pass\r\n\r\n@pytest.mark.parametrize(\"x\", [1, 2])\r\ndef test_two(x):\r\n    pass\r\n```\r\n\r\nrunning `pytest --fixtures-per-test` results in:\r\n\r\n```\r\n-------------------------- fixtures used by test_one ---------------------------\r\n----------------------------------- (x.py:4) -----------------------------------\r\nmonkeypatch -- .../_pytest/monkeypatch.py:30\r\n    A convenient fixture for monkey-patching.\r\n\r\n------------------------- fixtures used by test_two[1] -------------------------\r\n----------------------------------- (x.py:7) -----------------------------------\r\nx -- .../_pytest/fixtures.py:352\r\n    no docstring available\r\n\r\n------------------------- fixtures used by test_two[2] -------------------------\r\n----------------------------------- (x.py:7) -----------------------------------\r\nx -- .../_pytest/fixtures.py:352\r\n    no docstring available\r\n```\r\n\r\nIMHO, the output for `x` should be excluded here - while it is technically a (pseudo) fixture internally, showing it like that is rather confusing for users. It doesn't make sense to show it as a fixture without a docstring which is \"defined\" here:\r\n\r\nhttps://github.com/pytest-dev/pytest/blob/d9bf9dbec104af1e3a2c02b04f4e1d501d5d86a2/src/_pytest/fixtures.py#L351-L352",
      "state": "OPEN",
      "createdAt": "2023-08-07T10:34:23Z",
      "updatedAt": "2023-08-30T02:15:16Z",
      "closedAt": null,
      "author": {
        "login": "The-Compiler"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "topic: reporting"
          },
          {
            "name": "topic: fixtures"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 6
      }
    },
    {
      "number": 11293,
      "title": "7.4.x pluggy CI builds fail",
      "body": "see e.g. https://github.com/pytest-dev/pytest/actions/runs/5772741776/job/15648272495?pr=11286\r\n\r\n```\r\nINFO: pip is looking at multiple versions of pluggy to determine which version is compatible with other requirements. This could take a while.\r\npy37-pluggymain-pylib-xdist: exit 1 (11.93 seconds) /home/runner/work/pytest/pytest> python -I -m pip install 'pluggy@ git+https://github.com/pytest-dev/pluggy.git' 'py>=1.8.2' 'pytest-xdist>=2.1.0' -e . pid=1883\r\n  Running command git clone --filter=blob:none --quiet https://github.com/pytest-dev/pluggy.git /tmp/pip-install-i9cw8ots/pluggy_51a0b7decb294cd0865e1b815f453f8b\r\nERROR: Package 'pluggy' requires a different Python: 3.7.17 not in '>=3.8'\r\n  py37-pluggymain-pylib-xdist: FAIL code 1 (12.27 seconds)\r\n```\r\n\r\nNot sure what to do there... should we just upgrade those pluggy builds from py37 to py38 for CI?",
      "state": "CLOSED",
      "createdAt": "2023-08-07T08:46:24Z",
      "updatedAt": "2024-07-17T04:51:57Z",
      "closedAt": "2024-07-17T04:51:57Z",
      "author": {
        "login": "The-Compiler"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: bug"
          },
          {
            "name": "type: infrastructure"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      }
    },
    {
      "number": 11289,
      "title": "calling pytest.Metafunc.parametrize multiple times",
      "body": "Hey.\r\n\r\nI think this is at least a documentation ambiguity. ;-)\r\n\r\nhttps://github.com/pytest-dev/pytest/blob/cc0adf6bf3c9f356e3473ff8a21004b9c1fb2b93/src/_pytest/python.py#L1242-L1249\r\n\r\nAFAIU however, this can be only **called** multiple times on **different** parameters.\r\n\r\nOtherwise I get a:\r\n```\r\nERROR test_foo.py - ValueError: duplicate 'cal'\r\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\r\n```\r\n\r\nI stumbled over this while trying what [what I've asked for on discord](https://discord.com/channels/810210251398840371/810244286293213204/1137526973346881588)... maybe the behaviour there is another bug, but maybe some pytest expert can look at it and confirm whether it's fishy... I'm still basically a complete pytest beginner... so I don't wanna file issues for everything that seems just strange to me ;-)",
      "state": "CLOSED",
      "createdAt": "2023-08-05T23:42:52Z",
      "updatedAt": "2023-08-10T02:45:50Z",
      "closedAt": "2023-08-07T11:14:53Z",
      "author": {
        "login": "calestyo"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 16
      }
    },
    {
      "number": 11288,
      "title": "don't call pytest_generate_tests called on tests that are not even run",
      "body": "#### What's the problem this feature will solve?\r\nI have a test, which gets a huge number input/expected output pars via parametrisation. These pairs are themselves generated by some algorithm.<br>\r\nSince not all tests in the module may require that test data I though it would be proper design, to only create the test data if the (requiring) test actually runs.\r\n\r\nWhat, AFAIU, cannot be done is any of the following:\r\n- Parametrising a fixture via (`@pytest.fixture(params=\u2026)` wouldn't help, as the value for `params` would need to be already available and thus be **always** generated (on importing the test module), also, since the test data is really just generated pairs (input / expected output) of strings, a fixture function would do nothing but return the two values for each param pair.\r\n- It doesn't help if I put my test data in a test class, because same as above, the class variable would get set on import.\r\n- AFAIU there is no way that a fixture function itself would generated the param pairs, or is there?\r\n\r\nAFAIU, the only way would be using `pytest_generate_tests` called and there, check whether the respective fixture(s) are actually needed and only if so, generate the test data params in the function.\r\n\r\nWhen playing around with that (my problem is that there seems little to no documentation on what `conftest.py` should contain... e.g. should `pytest_generate_tests` go in that, or in the module (the examples do both)... and what if the function is in both? ...etc.) I noticed somewhat unexpected behaviour:\r\n\r\nEven if I call e.g. `pytest test_foo.py::test_bar`, and `pytest` in the end actually just runs that test... it nevertheless invokes `pytest_generate_tests` for every test (even though it's clear that another e.g. `test_foo.py::test_blafasl` ain't going to run).<br>\r\nI checked that by printing the requested `metafunc.fixturenames` in some debug file and using different fixture signature for the different test.\r\n\r\nWouldn't it be better if it only runs on the tests that are actually going to be run, if that's anyway already clear like with the invocation above?\r\n\r\nThanks,\r\nChris.\r\n\r\n\r\n\r\n#### Describe the solution you'd like\r\n<!-- A clear and concise description of what you want to happen. -->\r\n\r\n<!-- Provide examples of real-world use cases that this would enable and how it solves the problem described above. -->\r\n\r\n#### Alternative Solutions\r\n<!-- Have you tried to workaround the problem using a pytest plugin or other tools? Or a different approach to solving this issue? Please elaborate here. -->\r\n\r\n#### Additional context\r\n<!-- Add any other context, links, etc. about the feature here. -->\r\n",
      "state": "CLOSED",
      "createdAt": "2023-08-05T22:53:56Z",
      "updatedAt": "2023-08-20T02:14:21Z",
      "closedAt": "2023-08-20T02:14:21Z",
      "author": {
        "login": "calestyo"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: proposal"
          },
          {
            "name": "topic: collection"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 6
      }
    },
    {
      "number": 11282,
      "title": "config.getini returns an empty list for an option of type string absent in INI file",
      "body": "I want to manage this INI option \r\n```\r\n    parser.addini(\r\n        \"my_option\",\r\n        type=\"string\",\r\n        default=None,\r\n        help=\"My option\",\r\n    )\r\n```\r\n\r\nI decide not to include this option in the INI file\r\n\r\nI read the value with this code\r\n\r\n```\r\n@pytest.fixture(scope='session')\r\ndef my_option(request):\r\n    return request.config.getini(\"my_option\")\r\n```\r\n\r\nActual result: The returned value is an empty list\r\n\r\nExpected result: None\r\n\r\nTested with pytest 7.4.0 on Linux Mint\r\n",
      "state": "CLOSED",
      "createdAt": "2023-08-04T17:45:01Z",
      "updatedAt": "2023-11-11T16:08:20Z",
      "closedAt": "2023-11-11T16:08:20Z",
      "author": {
        "login": "harmin-parra"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: bug"
          },
          {
            "name": "topic: config"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 8
      }
    },
    {
      "number": 11281,
      "title": "Autouse fixtures with the same name in class and module scopes are executed in the wrong order",
      "body": "Key parts from the docs:\r\nquote 1:\r\n[Autouse fixtures are executed first within their scope](https://docs.pytest.org/en/6.2.x/fixture.html#higher-scoped-fixtures-are-executed-first)\r\nquote 2:\r\n[Higher-scoped fixtures are executed first](https://docs.pytest.org/en/6.2.x/fixture.html#autouse-fixtures-are-executed-first-within-their-scope)\r\n\r\nAccording to this docs module level setup should be executed before class level setup, but:\r\n\r\nCorrect behavior (fixtures has different names):\r\n```\r\nimport pytest\r\n\r\n\r\n@pytest.fixture(scope='module', autouse=True, )\r\ndef module_setup():\r\n    print()\r\n    print(1)\r\n\r\n\r\nclass TestFoo:\r\n\r\n    @classmethod\r\n    @pytest.fixture(scope='class', autouse=True, )\r\n    def class_setup(cls, ):\r\n        print()\r\n        print(2)\r\n\r\n    def test_class(self):\r\n        \"\"\"without this test cls fixture will not be executed at all\"\"\"\r\n\r\n\r\ndef test_module():  # Intentionally at the end\r\n    \"\"\"without this test module fixture will not be executed at all\"\"\"\r\n```\r\n\r\nOutput:\r\n```\r\n(venv) david@david-comp:~/.config/JetBrains/PyCharmCE2023.2/scratches$ pytest -s scratch_4.py \r\n=============================================== test session starts ================================================\r\nplatform linux -- Python 3.10.12, pytest-7.4.0, pluggy-1.2.0\r\nrootdir: /home/david/.config/JetBrains/PyCharmCE2023.2/scratches\r\nplugins: profiling-1.7.0, Faker-19.2.0, postgresql-5.0.0\r\ncollected 2 items                                                                                                  \r\n\r\nscratch_4.py \r\n1\r\n\r\n2\r\n..\r\n\r\n================================================ 2 passed in 0.02s =================================================\r\n(venv) david@david-comp:~/.config/JetBrains/PyCharmCE2023.2/scratches$ \r\n```\r\n\r\n\r\nincorrect / undocumentated behavior (fixtures has the same names):\r\n```\r\nimport pytest\r\n\r\n\r\n@pytest.fixture(scope='module', autouse=True, )\r\ndef setup():\r\n    print()\r\n    print(1)\r\n\r\nclass TestFoo:\r\n\r\n    @classmethod\r\n    @pytest.fixture(scope='class', autouse=True, )\r\n    def setup(cls, ):\r\n        print()\r\n        print(2)\r\n\r\n    def test_class(self):\r\n        \"\"\"without this test cls fixture will not be executed at all\"\"\"\r\n\r\n\r\ndef test_module():  # Intentionally at the end\r\n    \"\"\"without this test module fixture will not be executed at all\"\"\"\r\n```\r\n\r\nOutput:\r\n```\r\n(venv) david@david-comp:~/.config/JetBrains/PyCharmCE2023.2/scratches$ pytest -s scratch_4.py \r\n=============================================== test session starts ================================================\r\nplatform linux -- Python 3.10.12, pytest-7.4.0, pluggy-1.2.0\r\nrootdir: /home/david/.config/JetBrains/PyCharmCE2023.2/scratches\r\nplugins: profiling-1.7.0, Faker-19.2.0, postgresql-5.0.0\r\ncollected 2 items                                                                                                  \r\n\r\nscratch_4.py \r\n2\r\n.\r\n1\r\n.\r\n\r\n================================================ 2 passed in 0.03s =================================================\r\n(venv) david@david-comp:~/.config/JetBrains/PyCharmCE2023.2/scratches$ \r\n```\r\n\r\n\r\nBonuses:\r\nPlacing some test before `TestFoo` cls will restore the order execution to the proper one.\r\n",
      "state": "OPEN",
      "createdAt": "2023-08-04T09:33:04Z",
      "updatedAt": "2023-08-20T02:16:29Z",
      "closedAt": null,
      "author": {
        "login": "david-shiko"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: bug"
          },
          {
            "name": "topic: fixtures"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      }
    },
    {
      "number": 11276,
      "title": "Change of behaviour: `ImportPathMismatchError` with test module + src package layout",
      "body": "I've found that the dev version `pytest` crashed on collection for a package of mine.\r\nHere's a minimal package which reproduces the problem https://github.com/neutrinoceros/pytest_bug_reprod\r\n\r\nNote that the presence of `tests/__init__.py` is essential to reproduce !\r\n\r\n\r\n- [x] a detailed description of the bug or problem you are having\r\n- [x] output of `pip list` from the virtual environment you are using\r\n```\r\nPackage    Version\r\n---------- ----------------------\r\nattrs      23.1.0\r\niniconfig  2.0.0\r\npackaging  23.1\r\npip        23.2.1\r\npkg        0.0.0\r\npluggy     1.2.0\r\npytest     8.0.0.dev144+g4797deab\r\nsetuptools 65.5.\r\n```\r\n- [x] pytest and operating system versions\r\n- [x] minimal example if possible\r\n\r\n\r\nIs this change intentional ? Is it bad practice to include a `__init__.py` file in `tests/` ? IIRC it's there so that `setuptools` automatically includes test in source distributions/wheels",
      "state": "CLOSED",
      "createdAt": "2023-08-03T08:22:59Z",
      "updatedAt": "2023-08-03T09:48:30Z",
      "closedAt": "2023-08-03T09:48:30Z",
      "author": {
        "login": "neutrinoceros"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 4
      }
    },
    {
      "number": 11275,
      "title": "Pytest Discovery broken when multiple modules have overlapping paths",
      "body": "### Issue\r\nPytest Discovery appears to get confused if a module previously imported by a `conftest.py` module has a path that's a prefix of the module currently being imported.  As the conftests are being imported in `_getconftestmodules` (https://github.com/pytest-dev/pytest/blob/main/src/_pytest/config/__init__.py#L608-L616) we can get path conflicts.\r\n\r\nIn our case it's causing a crash, in more pathalogical cases it could cause the wrong `conftest.py` file to be imported and referenced.\r\n\r\n### pytest and operating system versions\r\n\r\npytest==7.4.0\r\nmacOS 13.5 & Ubuntu\r\n\r\n### Minimal Example\r\n\r\n```bash\r\nmkdir -p pytest_discover_failure && cd pytest_discover_failure\r\nmkdir -p a/tests/helpers\r\ntouch a/tests/__init__.py\r\ntouch a/tests/helpers/__init__.py\r\ncat <<EOF > a/tests/helpers/test_helpers.py\r\ndef get_a():\r\n    return 'a'\r\nEOF\r\ncat <<EOF > a/tests/test_a.py\r\ndef test_a():\r\n    assert 1 == 1\r\nEOF\r\ncat <<EOF > a/conftest.py\r\nimport pytest\r\nfrom tests.helpers.test_helpers import get_a\r\n\r\n\r\n@pytest.fixture()\r\ndef some_fixture():\r\n    return get_a()\r\nEOF\r\nmkdir -p b/tests\r\ntouch b/tests/__init__.py\r\ncat <<EOF > b/tests/conftest.py\r\nimport pytest\r\n\r\n@pytest.fixture()\r\ndef some_fixture():\r\n    return 'b'\r\nEOF\r\ncat <<EOF > b/tests/test_b.py\r\ndef test_a():\r\n    assert 1 == 1\r\nEOF\r\n\r\npytest --collect-only ./a ./b\r\n```\r\n\r\nOutput:\r\n```\r\n$ pytest --collect-only ./a ./b\r\nImportError while loading conftest '/Users/roy/code/oss/pytest_discover_failure/b/tests/conftest.py'.\r\nModuleNotFoundError: No module named 'tests.conftest'\r\n```\r\n\r\nNote that `pytest --collect-only` works for `./a` and `./b` individually.",
      "state": "OPEN",
      "createdAt": "2023-08-02T21:05:26Z",
      "updatedAt": "2023-08-09T18:20:43Z",
      "closedAt": null,
      "author": {
        "login": "rowillia"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "topic: collection"
          },
          {
            "name": "topic: config"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      }
    },
    {
      "number": 11273,
      "title": "ValueError: Plugin already registered",
      "body": "```\r\nD:.\r\n\u2514\u2500fake_data\r\n    \u2502  conftest.py\r\n    \u2502  pytest.ini\r\n    \u2502  __init__.py\r\n    \u2502\r\n    \u2514\u2500test_one\r\n            test_haha.py\r\n            __init__.py\r\n```\r\nI think this line of code in `test.haha.py` is the cause of the error.  But I don't know why:\r\n```python\r\nfrom fake_data.test_one import *\r\n```\r\n\r\nSituation 1: use `pytest -sv -m test` ; everything thing is ok!\r\n\r\nSituation 2: use vscode plugin [code runner] `python.exe d:/fake_date/test_haha.py` ; everything thing is ok!\r\n\r\nSituation 3: run in terminal, `python.exe d:/fake_date/test_haha.py`; then an error has occurred:\r\n\r\n```\r\n(base) PS D:\\gitrepository\\test_owl> & D:/python/anaconda3/python.exe -u d:/gitrepository/test_owl/fake_data/test_one/test_haha.py\r\n========================================================= test session starts =========================================================\r\nplatform win32 -- Python 3.10.9, pytest-7.1.2, pluggy-1.0.0 -- D:\\python\\anaconda3\\python.exe\r\ncachedir: .pytest_cache\r\nrootdir: d:\\gitrepository\\test_owl\\fake_data, configfile: pytest.ini\r\nplugins: anyio-3.5.0\r\ncollected 0 items\r\nINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"D:\\python\\anaconda3\\lib\\site-packages\\_pytest\\main.py\", line 268, in wrap_session\r\nINTERNALERROR>     session.exitstatus = doit(config, session) or 0\r\nINTERNALERROR>   File \"D:\\python\\anaconda3\\lib\\site-packages\\_pytest\\main.py\", line 321, in _main\r\nINTERNALERROR>     config.hook.pytest_collection(session=session)\r\nINTERNALERROR>   File \"D:\\python\\anaconda3\\lib\\site-packages\\pluggy\\_hooks.py\", line 265, in __call__\r\nINTERNALERROR>     return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\r\nINTERNALERROR>   File \"D:\\python\\anaconda3\\lib\\site-packages\\pluggy\\_manager.py\", line 80, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\r\nINTERNALERROR>   File \"D:\\python\\anaconda3\\lib\\site-packages\\pluggy\\_callers.py\", line 60, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"D:\\python\\anaconda3\\lib\\site-packages\\pluggy\\_result.py\", line 60, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"D:\\python\\anaconda3\\lib\\site-packages\\pluggy\\_callers.py\", line 39, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"D:\\python\\anaconda3\\lib\\site-packages\\_pytest\\main.py\", line 332, in pytest_collection\r\nINTERNALERROR>     session.perform_collect()\r\nINTERNALERROR>   File \"D:\\python\\anaconda3\\lib\\site-packages\\_pytest\\main.py\", line 643, in perform_collect\r\nINTERNALERROR>     rep = collect_one_node(self)\r\nINTERNALERROR>   File \"D:\\python\\anaconda3\\lib\\site-packages\\_pytest\\runner.py\", line 535, in collect_one_node\r\nINTERNALERROR>     ihook = collector.ihook\r\nINTERNALERROR>   File \"D:\\python\\anaconda3\\lib\\site-packages\\_pytest\\nodes.py\", line 269, in ihook\r\nINTERNALERROR>     return self.session.gethookproxy(self.path)\r\nINTERNALERROR>   File \"D:\\python\\anaconda3\\lib\\site-packages\\_pytest\\main.py\", line 539, in gethookproxy\r\nINTERNALERROR>     my_conftestmodules = pm._getconftestmodules(\r\nINTERNALERROR>   File \"D:\\python\\anaconda3\\lib\\site-packages\\_pytest\\config\\__init__.py\", line 575, in _getconftestmodules\r\nINTERNALERROR>     mod = self._importconftest(conftestpath, importmode, rootpath)\r\nINTERNALERROR>   File \"D:\\python\\anaconda3\\lib\\site-packages\\_pytest\\config\\__init__.py\", line 623, in _importconftest\r\nINTERNALERROR>     self.consider_conftest(mod)\r\nINTERNALERROR>   File \"D:\\python\\anaconda3\\lib\\site-packages\\_pytest\\config\\__init__.py\", line 704, in consider_conftest\r\nINTERNALERROR>     self.register(conftestmodule, name=conftestmodule.__file__)\r\nINTERNALERROR>   File \"D:\\python\\anaconda3\\lib\\site-packages\\_pytest\\config\\__init__.py\", line 463, in register\r\nINTERNALERROR>     ret: Optional[str] = super().register(plugin, name)\r\nINTERNALERROR>   File \"D:\\python\\anaconda3\\lib\\site-packages\\pluggy\\_manager.py\", line 91, in register\r\nINTERNALERROR>     raise ValueError(\r\nINTERNALERROR> ValueError: Plugin already registered: D:\\gitrepository\\test_owl\\fake_data\\conftest.py=<module 'fake_data.conftest' from \r\n'D:\\\\gitrepository\\\\test_owl\\\\fake_data\\\\conftest.py'>\r\nINTERNALERROR> {'2225410613904': <_pytest.config.PytestPluginManager object at 0x0000020624CF2290>, 'pytestconfig': <_pytest.config.Config object at 0x0000020625A3CF40>, 'mark': <module '_pytest.mark' from 'D:\\\\python\\\\anaconda3\\\\lib\\\\site-packages\\\\_pytest\\\\mark\\\\__init__.py'>, 'main': <module '_pytest.main' from 'D:\\\\python\\\\anaconda3\\\\lib\\\\site-packages\\\\_pytest\\\\main.py'>, 'runner': <module '_pytest.runner' from 'D:\\\\python\\\\anaconda3\\\\lib\\\\site-packages\\\\_pytest\\\\runner.py'>, 'fixtures': <module '_pytest.fixtures' from 'D:\\\\python\\\\anaconda3\\\\lib\\\\site-packages\\\\_pytest\\\\fixtures.py'>, 'helpconfig': <module '_pytest.helpconfig' from 'D:\\\\python\\\\anaconda3\\\\lib\\\\site-packages\\\\_pytest\\\\helpconfig.py'>, 'python': <module '_pytest.python' from 'D:\\\\python\\\\anaconda3\\\\lib\\\\site-packages\\\\_pytest\\\\python.py'>, 'terminal': <module '_pytest.terminal' from 'D:\\\\python\\\\anaconda3\\\\lib\\\\site-packages\\\\_pytest\\\\terminal.py'>, 'debugging': <module '_pytest.debugging' from 'D:\\\\python\\\\anaconda3\\\\lib\\\\site-packages\\\\_pytest\\\\debugging.py'>, 'unittest': <module '_pytest.unittest' \r\nfrom 'D:\\\\python\\\\anaconda3\\\\lib\\\\site-packages\\\\_pytest\\\\unittest.py'>, 'capture': <module '_pytest.capture' from 'D:\\\\python\\\\anaconda3\\\\lib\\\\site-packages\\\\_pytest\\\\capture.py'>, 'skipping': <module '_pytest.skipping' from 'D:\\\\python\\\\anaconda3\\\\lib\\\\site-packages\\\\_pytest\\\\skipping.py'>, 'legacypath': <module '_pytest.legacypath' from 'D:\\\\python\\\\anaconda3\\\\lib\\\\site-packages\\\\_pytest\\\\legacypath.py'>, 'tmpdir': <module '_pytest.tmpdir' from 'D:\\\\python\\\\anaconda3\\\\lib\\\\site-packages\\\\_pytest\\\\tmpdir.py'>, 'monkeypatch': <module '_pytest.monkeypatch' from 'D:\\\\python\\\\anaconda3\\\\lib\\\\site-packages\\\\_pytest\\\\monkeypatch.py'>, 'recwarn': <module '_pytest.recwarn' from 'D:\\\\python\\\\anaconda3\\\\lib\\\\site-packages\\\\_pytest\\\\recwarn.py'>, 'pastebin': <module '_pytest.pastebin' from 'D:\\\\python\\\\anaconda3\\\\lib\\\\site-packages\\\\_pytest\\\\pastebin.py'>, 'nose': <module '_pytest.nose' from 'D:\\\\python\\\\anaconda3\\\\lib\\\\site-packages\\\\_pytest\\\\nose.py'>, 'assertion': <module '_pytest.assertion' from 'D:\\\\python\\\\anaconda3\\\\lib\\\\site-packages\\\\_pytest\\\\assertion\\\\__init__.py'>, 'junitxml': <module '_pytest.junitxml' from 'D:\\\\python\\\\anaconda3\\\\lib\\\\site-packages\\\\_pytest\\\\junitxml.py'>, 'doctest': <module '_pytest.doctest' from 'D:\\\\python\\\\anaconda3\\\\lib\\\\site-packages\\\\_pytest\\\\doctest.py'>, 'cacheprovider': <module '_pytest.cacheprovider' from \r\n'D:\\\\python\\\\anaconda3\\\\lib\\\\site-packages\\\\_pytest\\\\cacheprovider.py'>, 'freeze_support': <module '_pytest.freeze_support' from 'D:\\\\python\\\\anaconda3\\\\lib\\\\site-packages\\\\_pytest\\\\freeze_support.py'>, 'setuponly': <module '_pytest.setuponly' from 'D:\\\\python\\\\anaconda3\\\\lib\\\\site-packages\\\\_pytest\\\\setuponly.py'>, 'setupplan': <module '_pytest.setupplan' from 'D:\\\\python\\\\anaconda3\\\\lib\\\\site-packages\\\\_pytest\\\\setupplan.py'>, 'stepwise': <module '_pytest.stepwise' from 'D:\\\\python\\\\anaconda3\\\\lib\\\\site-packages\\\\_pytest\\\\stepwise.py'>, 'warnings': <module '_pytest.warnings' from 'D:\\\\python\\\\anaconda3\\\\lib\\\\site-packages\\\\_pytest\\\\warnings.py'>, 'logging': <module '_pytest.logging' from 'D:\\\\python\\\\anaconda3\\\\lib\\\\site-packages\\\\_pytest\\\\logging.py'>, 'reports': <module '_pytest.reports' from 'D:\\\\python\\\\anaconda3\\\\lib\\\\site-packages\\\\_pytest\\\\reports.py'>, 'python_path': <module '_pytest.python_path' from 'D:\\\\python\\\\anaconda3\\\\lib\\\\site-packages\\\\_pytest\\\\python_path.py'>, 'unraisableexception': <module '_pytest.unraisableexception' from 'D:\\\\python\\\\anaconda3\\\\lib\\\\site-packages\\\\_pytest\\\\unraisableexception.py'>, 'threadexception': <module '_pytest.threadexception' from 'D:\\\\python\\\\anaconda3\\\\lib\\\\site-packages\\\\_pytest\\\\threadexception.py'>, 'faulthandler': <module '_pytest.faulthandler' from 'D:\\\\python\\\\anaconda3\\\\lib\\\\site-packages\\\\_pytest\\\\faulthandler.py'>, 'anyio': <module 'anyio.pytest_plugin' from 'D:\\\\python\\\\anaconda3\\\\lib\\\\site-packages\\\\anyio\\\\pytest_plugin.py'>, 'capturemanager': <CaptureManager _method='no' _global_capturing=<MultiCapture out=None err=None in_=None _state='suspended' _in_suspended=False> _capture_fixture=None>, 'D:\\\\gitrepository\\\\test_owl\\\\fake_data\\\\conftest.py': <module 'fake_data.conftest' from 'D:\\\\gitrepository\\\\test_owl\\\\fake_data\\\\conftest.py'>, 'session': <Session fake_data exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>, 'lfplugin': <_pytest.cacheprovider.LFPlugin object at 0x0000020625AFCCD0>, 'nfplugin': <_pytest.cacheprovider.NFPlugin object at 0x0000020625AFCB80>, 'legacypath-tmpdir': <class '_pytest.legacypath.LegacyTmpdirPlugin'>, 'terminalreporter': <_pytest.terminal.TerminalReporter object at 0x00000206265F1870>, 'logging-plugin': <_pytest.logging.LoggingPlugin object at 0x00000206265F3A90>, 'funcmanage': <_pytest.fixtures.FixtureManager object at 0x0000020625A3D0F0>}\r\n\r\n======================================================== no tests ran in 0.05s ========================================================\r\n```\r\n[test_owl.zip](https://github.com/pytest-dev/pytest/files/12238805/test_owl.zip)\r\n",
      "state": "CLOSED",
      "createdAt": "2023-08-02T09:57:25Z",
      "updatedAt": "2023-11-27T01:49:55Z",
      "closedAt": "2023-11-27T01:49:54Z",
      "author": {
        "login": "iknownoth1ng"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "topic: collection"
          },
          {
            "name": "platform: windows"
          },
          {
            "name": "status: needs information"
          },
          {
            "name": "stale"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 13
      }
    },
    {
      "number": 11270,
      "title": "The colors of the logs are not displayed  using --capture=tee-sys",
      "body": "<!--\r\nThanks for submitting an issue!\r\n\r\nQuick check-list while reporting bugs:\r\n-->\r\n\r\n- [x] a detailed description of the bug or problem you are having:\r\n\r\nWhen I use `--capture=tee-sys` instead of `-s` the logs are not colored anymore. Example:\r\n![image](https://github.com/pytest-dev/pytest/assets/18548911/ca37e861-dfd0-490e-ae5c-a36f6a5627fd)\r\n\r\nThe source of the issue is that I want to capture to logs to put them in an HTML report, but I also want to see live what is going on in the test as it takes a long time to execute and I need to check the progress. Not having the colors makes it harder to read.\r\n\r\n- [x] output of `pip list` from the virtual environment you are using\r\n```\r\ncolorama==0.4.6\r\nexceptiongroup==1.1.2\r\niniconfig==2.0.0     \r\nloguru==0.7.0        \r\npackaging==23.1      \r\npluggy==1.2.0        \r\npytest==7.4.0        \r\ntomli==2.0.1\r\nwin32-setctime==1.1.0\r\n```\r\n- [x] pytest and operating system versions\r\n```\r\nWindows 10:\r\nPython 3.10.10\r\n```\r\n- [x] minimal example if possible:\r\n```python\r\n\"\"\"\r\nMy test module\r\n\"\"\"\r\nfrom loguru import logger\r\n\r\n\r\ndef test_color():\r\n    \"\"\"\r\n    My test\r\n    \"\"\"\r\n    logger.info(\"My colored log\")\r\n``` \r\n",
      "state": "OPEN",
      "createdAt": "2023-08-01T10:14:44Z",
      "updatedAt": "2024-05-24T03:49:31Z",
      "closedAt": null,
      "author": {
        "login": "nck974"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: enhancement"
          },
          {
            "name": "plugin: capture"
          },
          {
            "name": "plugin: logging"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 5
      }
    },
    {
      "number": 11267,
      "title": "fail test when side_effect is only called once",
      "body": "<!--\r\nThanks for suggesting a feature!\r\n\r\nQuick check-list while suggesting features:\r\n-->\r\n\r\n#### What's the problem this feature will solve?\r\nMock.side_effect is tricky to use properly. Problem cases include:\r\n1. setting the value to an array of length less than two, in which case return_value is more readable and debuggable\r\n2. setting the value to an array of length n where the value doesn't change. This can be dangerous when the value is another mock or otherwise mutable byref\r\n\r\nHaving the test simply fail in these cases prevents other hard-to-trace errors from arising in the first place.\r\n\r\n#### Describe the solution you'd like\r\ntwo options:\r\n1. throw an error which includes an instructive message like \"please ensure that a method under side_effect is called more than once, otherwise prefer return_value\r\n2. whenever side_effect is set, automatically create an assertion that the method under side effect is not called only once\r\n\r\nthis behavior would only trigger when the side_effect has a non-None return value; ie it is exempt if it is actually creating a side effect like throwing an error instead of being used as a sort of dynamic return_value tool\r\n\r\n#### Alternative Solutions\r\nfeature request also filed on ruff [here](https://github.com/astral-sh/ruff/issues/6199) and we have considered a custom internal linter (not ideal ofc)\r\n",
      "state": "CLOSED",
      "createdAt": "2023-07-31T23:24:35Z",
      "updatedAt": "2023-08-05T18:45:01Z",
      "closedAt": "2023-08-01T04:02:55Z",
      "author": {
        "login": "upstartjohnvandivier"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 11266,
      "title": "Pytest not recognizing --config-file in pytest.main",
      "body": "I have a project where we launch pytest from pytest.main(). For example a simple example is `python -m pytest --config-file tests/pytest.ini` is equivalent to `pytest.main([\"--config-file\", \"tests/pytest.ini\"])` as per [docs](https://docs.pytest.org/en/7.1.x/how-to/usage.html#calling-pytest-from-python-code). I went through and tested this with this example and did not get this expected behavior. This is what `pytest --help` return in terms of `--config-file`\r\n```\r\n-c FILE, --config-file=FILE\r\n                        Load configuration from `FILE` instead of trying to locate one of the implicit configuration files.\r\n```\r\n\r\nMy example\r\n```\r\nimport pytest\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    # with ini file\r\n    discovery_args = [\r\n        \"--config-file\",\r\n        \"tests/pytest.ini\",\r\n        \"-v\",\r\n    ]\r\n    print(\r\n        \"running pytest with the following args to perform collection: \",\r\n        \" \".join(discovery_args),\r\n    )\r\n    pytest.main([\"--config-file=tests/pytest.ini\"])\r\n```\r\nreturned\r\n```\r\n(.venv) eleanorboyd@Eleanors-MacBook-Pro test_directory % /opt/homebrew/bin/python3 /Users/eleanorboyd/testing\r\nFiles/from_users/test_directory/script.py\r\nrunning pytest with the following args to perform collection:  --config-file tests/pytest.ini -v\r\nERROR: usage: script.py [options] [file_or_dir] [file_or_dir] [...]\r\nscript.py: error: unrecognized arguments: --config-file\r\n```\r\n\r\nI tried the same with the following and got the same result. \r\n`pytest.main(['--config-file','tests/pytest.ini'])`\r\n`pytest.main(['--config-file=','tests/pytest.ini'])`\r\n`pytest.main(['--config-file=tests/pytest.ini'])`\r\n`pytest.main(['--config-file tests/pytest.ini'])` (when this runs it just thinks it is a file or directory so not noticing it as a arg)\r\nPlease let me know if I am running it incorrectly from pytest.main(). Thanks\r\n",
      "state": "CLOSED",
      "createdAt": "2023-07-31T21:54:21Z",
      "updatedAt": "2023-08-01T18:48:43Z",
      "closedAt": "2023-08-01T09:04:22Z",
      "author": {
        "login": "eleanorjboyd"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      }
    },
    {
      "number": 11265,
      "title": "documentation: still no assertion introspection if assertion has message?",
      "body": "Hey.\r\n\r\nSorry if I miss something obvious and just make noise... O:-)\r\n\r\nhttps://docs.pytest.org/en/7.4.x/how-to/assert.html claims:\r\n> However, if you specify a message with the assertion like this:\r\n> assert a % 2 == 0, \"value was odd, should be even\"\r\n> then no assertion introspection takes places at all and the message will be simply shown in the traceback.\r\n\r\nBut when I try this, then introspection **does** seem to happen i.e. I see e.g.:\r\n```\r\n>       assert len(pathname) <= len(escaped_pathname), \"foobar\"\r\nE       AssertionError: foobar\r\nE       assert 2 <= 1\r\nE        +  where 2 = len('//')\r\nE        +  and   1 = len('/')\r\n\r\ntest_misc.py:48: AssertionError\r\n```\r\njust with the additional message.\r\n\r\nCould it be that this has changed at some point in time but documentation wasn't updated?\r\n\r\nThanks,\r\nChris.",
      "state": "CLOSED",
      "createdAt": "2023-07-31T18:47:36Z",
      "updatedAt": "2023-08-05T19:30:43Z",
      "closedAt": "2023-08-05T19:30:43Z",
      "author": {
        "login": "calestyo"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      }
    },
    {
      "number": 11261,
      "title": "highest conftest.py in my directory tree is not being loaded ",
      "body": "I created a fixture located in my `test/` directory in `conftest.py`.\r\n\r\nI also have another conftest.py file located under `test/unit` with more fixtures specific to unit tests.\r\n\r\nI am observing that after I upgrade from pytest 7.3.1 to 7.4.0, the \"higher\" of the two conftest.py files I have is never loaded.\r\n\r\nDowngrading back to pytest 7.3.1 restores the expected functionality.\r\n\r\n```\r\n<snip>\r\n...\r\npytest-cov==4.1.0\r\npytest-freezer==0.4.8\r\npytest-mock==3.11.1\r\npytest-xdist==3.3.1\r\npytest==7.3.1\r\n...\r\n</snip>\r\n```",
      "state": "CLOSED",
      "createdAt": "2023-07-30T05:26:09Z",
      "updatedAt": "2023-07-31T13:13:13Z",
      "closedAt": "2023-07-31T13:13:13Z",
      "author": {
        "login": "blockjon-dd"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 11260,
      "title": "documentation: provide best-practise example for multiple tests with one set of parametrised input but different expected outputs",
      "body": "#### What's the problem this feature will solve?\r\nI read through all of [How to parametrize fixtures and test functions](https://docs.pytest.org/en/7.4.x/how-to/parametrize.html) and [Parametrizing tests](https://docs.pytest.org/en/7.4.x/example/parametrize.html) and while of course one could \"hack\" something together from the examples already given there, I think one typical use case might deserve it's own description on how one should do it.\r\n\r\nNamely, if one has multiple of tests, with multiple inputs (but the same for all tests) and for each test a different set of expected outputs (where each output corresponds to one of the shared inputs.\r\n\r\nFor example:<br>\r\nI want to test `str` methods that take zero parameters, e.g. `str.capitalize()`, `str.casefold()`, ` str.isalnum()`, ` str.islower()` and so on.\r\n\r\nI might want to do this on various strings like `\"\"`, `\"abcd\"`, `b\"\\u65\"`, perhaps some with awkward unicode chars, control characters etc. pp..<br>\r\nThe expected output would obviously differ depending on the input.\r\n\r\n#### Describe the solution you'd like\r\nThe closest of what I personally (being an absolute noob+beginner in pytest) would consider the most idiomatic something based on the [Parametrizing test methods through per-class configuration](https://docs.pytest.org/en/7.4.x/example/parametrize.html#parametrizing-test-methods-through-per-class-configuration) example:\r\n\r\nLike having a class for all tests of that type (`str`-methods that take zero arguments, with one test per function).<br>\r\nThere would be one `common_input` which would be a list of the strings. And then, as in the referenced example, per test a `\"test_isalnum\": [\u2026],` which gives the list of expected outputs.<br>\r\nThe problem with that of course is, that if the lists get longer, it gets error prone, as the position of the expected input and ouput in their respective lists must match.\r\n\r\nSo question is also: is there a better way? And if so which?\r\n\r\nBut if it would be the above, then ideally the example would tell how to set part of the `id`, but only on the `common_input`, so I could use IDs like `empty-string`, `plain-ascii-chars`, `weird-unicode-chars`, etc. pp. but just once, and not having to re-set the IDs per test.",
      "state": "CLOSED",
      "createdAt": "2023-07-29T01:06:39Z",
      "updatedAt": "2023-11-28T06:34:58Z",
      "closedAt": "2023-11-28T06:34:58Z",
      "author": {
        "login": "calestyo"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: question"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 4
      }
    },
    {
      "number": 11259,
      "title": "pytest hangs if \"platform\" module is used in multi-threading environment on an Apple Silicon Mac",
      "body": "Here's a simple test file that demonstrates the problem:\r\n\r\n```\r\nimport concurrent.futures as futures\r\nimport platform\r\n\r\ndef _invoke():\r\n    platform.platform()\r\n    return None\r\n\r\ndef test_this():\r\n    #platform.platform()   # uncomment this line to fix the problem\r\n\r\n    with futures.ThreadPoolExecutor(max_workers=1) as executor:\r\n        executor.submit(_invoke).result()\r\n```\r\n\r\nIf `platform.platform()` is only called inside the thread pool the test hangs forever.\r\nIf `platform.platform()` is first called outside the thread pool, then the platform module will cache the result and use it later, which will prevent the hanging.\r\n\r\nThis seems to be a MacOS problem, possibly only Apple Silicon, but I can't say for sure as I have no Intel Macs handy to verity.\r\nThis test works just fine on Linux.\r\n\r\nRunning `test_this` function via a regular command line (with no pytest involved) works fine.\r\n\r\nIt seems to hang somewhere around `platform.uname` method.\r\n\r\nMy env:\r\n* macOS-13.4.1-arm64-arm-64bit\r\n* Python 3.10.11\r\n* pytest 7.4.0",
      "state": "CLOSED",
      "createdAt": "2023-07-29T00:52:50Z",
      "updatedAt": "2023-08-25T01:48:11Z",
      "closedAt": "2023-08-25T01:48:11Z",
      "author": {
        "login": "avoskresensky"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "status: needs information"
          },
          {
            "name": "stale"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 7
      }
    },
    {
      "number": 11258,
      "title": "documentation: improve \"Parametrizing conditional raising\" example?",
      "body": "#### What's the problem this feature will solve?\r\nI think the [Parametrizing conditional raising](https://docs.pytest.org/en/7.4.x/example/parametrize.html#parametrizing-conditional-raising) misses the crucial point:<br>\r\nActually checking **both**, the expected output for input that does not cause an exception to be raised **and** the exception being raised for input where this is expected:\r\n\r\n#### Describe the solution you'd like\r\nSimply using this:\r\n\r\n```python\r\nfrom contextlib import nullcontext as does_not_raise\r\n\r\nimport pytest\r\n\r\n@pytest.mark.parametrize(\r\n    \"example_input,expectation\",\r\n    [\r\n        (3, does_not_raise(2)),\r\n        (2, does_not_raise(3)),\r\n        (1, does_not_raise(6)),\r\n        (0, pytest.raises(ZeroDivisionError)),\r\n    ],\r\n)\r\ndef test_division(example_input, expectation):\r\n    \"\"\"Test how much I know division.\"\"\"\r\n    with expectation as e:\r\n        assert (6 / example_input) == e\r\n```\r\nseems to work (though I'd just drop the use of the new name `does_not_raise` as it just confuses IMO).\r\nIf one uses e.g. `(1, does_not_raise(5))` it correctly fails.\r\n\r\nThe only think what I'm not sure about is (though that should be completely irrelevant in the real world:<br>\r\nIn the case that the expected output is `pytest.raises(\u2026)`, `e` will be a object of type `<class '_pytest._code.code.ExceptionInfo'>`, right?!\r\n\r\nSo what if that by bad luck actually compares somehow in the `assert`\u2019s expression **and** no exception is raised? It might give a false positive.",
      "state": "CLOSED",
      "createdAt": "2023-07-29T00:52:13Z",
      "updatedAt": "2023-08-03T16:31:19Z",
      "closedAt": "2023-08-03T16:31:18Z",
      "author": {
        "login": "calestyo"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: docs"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 11255,
      "title": "Crash on `parametrize(..., scope=\"package\")` without a `Package`",
      "body": "The following test crashes:\r\n\r\n```py\r\nimport pytest\r\n\r\n@pytest.mark.parametrize(\"x\", [0], scope=\"package\")\r\ndef test_it(x): pass\r\n```\r\n\r\nwith this traceback:\r\n\r\n```\r\nsrc/_pytest/runner.py:340: in from_call\r\n    result: Optional[TResult] = func()\r\nsrc/_pytest/runner.py:371: in <lambda>\r\n    call = CallInfo.from_call(lambda: list(collector.collect()), \"collect\")\r\nsrc/_pytest/python.py:530: in collect\r\n    return super().collect()\r\nsrc/_pytest/python.py:451: in collect\r\n    res = ihook.pytest_pycollect_makeitem(\r\n.tox/venv/lib/python3.11/site-packages/pluggy/_hooks.py:433: in __call__\r\n    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)\r\n.tox/venv/lib/python3.11/site-packages/pluggy/_manager.py:112: in _hookexec\r\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\r\nsrc/_pytest/python.py:267: in pytest_pycollect_makeitem\r\n    return list(collector._genfunctions(name, obj))\r\nsrc/_pytest/python.py:501: in _genfunctions\r\n    fixtures.add_funcarg_pseudo_fixture_def(self, metafunc, fm)\r\nsrc/_pytest/fixtures.py:195: in add_funcarg_pseudo_fixture_def\r\n    assert scope is Scope.Class and isinstance(\r\nE   AssertionError\r\n```",
      "state": "CLOSED",
      "createdAt": "2023-07-28T11:01:44Z",
      "updatedAt": "2023-08-11T20:52:16Z",
      "closedAt": "2023-08-11T20:52:16Z",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": [
          {
            "login": "bluetech"
          }
        ]
      },
      "labels": {
        "nodes": [
          {
            "name": "type: bug"
          },
          {
            "name": "topic: parametrize"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 11254,
      "title": "Changing a variable defined in a script is not registered when running multiple tests",
      "body": "I have a file `config.py` that contains a variable. This variable is changed in every `test_*.py` script. All tests in all files are run using the same value for this variable regardless of the value that was set in a specific script. This causes some tests that access the variable to fail. If each test file is run individually, there is no problem.\r\n\r\nUsing Python 3.8.10, 32-bit and pytest 7.4.0 on Win10.\r\n\r\nMinimal example project: [pytestProject.zip](https://github.com/pytest-dev/pytest/files/12191821/pytestProject.zip). Run tests with `pytest tests` (project root must be in PYTHONPATH).\r\n",
      "state": "CLOSED",
      "createdAt": "2023-07-28T08:04:22Z",
      "updatedAt": "2023-07-28T08:28:24Z",
      "closedAt": "2023-07-28T08:28:13Z",
      "author": {
        "login": "LoremasterLH"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "invalid"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 11252,
      "title": "Security vulnerability is showing for py with ID CVE-2022-42969 when pytest used",
      "body": "A high vulnerability is getting raised with ID \"CVE-2022-42969\" when we are using pytest in python 3.11.2.\r\nDescription : The py library through 1.11.0 for Python allows remote attackers to conduct a ReDoS (Regular expression Denial of Service) attack via a Subversion repository with crafted info data, because the InfoSvnCommand argument is mishandled.",
      "state": "CLOSED",
      "createdAt": "2023-07-26T08:37:19Z",
      "updatedAt": "2023-07-26T08:41:41Z",
      "closedAt": "2023-07-26T08:40:45Z",
      "author": {
        "login": "shripad-bhat"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      }
    },
    {
      "number": 11250,
      "title": "ModuleNotFoundError: No module named opentelemetry w/ manual tracing",
      "body": "Hi all,\r\n\r\nRunning `python -m pytest --export-traces` (without any OTEL code in my `app.py`) works perfectly.\r\n\r\nAfter I add manual tracing code to my app.py, `python -m pytest --export-traces` fails with the error:\r\n\r\n```\r\nstderr='Traceback (most recent call las...\", line 2, in <module>\\n    from opentelemetry import trace\\nModuleNotFoundError: No module named \\'opentelemetry\\'\\n'\r\n```\r\n\r\n# OS\r\n\r\nWin11\r\n\r\n# Python Version\r\n\r\n```\r\npython --version\r\nPython 3.11.3\r\n```\r\n\r\n# requirements.txt\r\n\r\n```\r\npytest==7.4.0\r\npytest-opentelemetry==0.6.2\r\nopentelemetry-api==1.19.0\r\nopentelemetry-sdk==1.19.0\r\n```\r\n\r\n# The Code `app.py`\r\n\r\n```\r\nimport argparse\r\nimport time\r\nfrom opentelemetry import trace\r\nfrom opentelemetry.sdk.trace import TracerProvider\r\nfrom opentelemetry.sdk.trace.export import BatchSpanProcessor\r\nfrom opentelemetry.exporter.otlp.proto.grpc.trace_exporter import OTLPSpanExporter\r\nfrom opentelemetry.sdk.resources import SERVICE_NAME, Resource\r\n\r\nparser = argparse.ArgumentParser()\r\nparser.add_argument('-f', '--first', required=True, default=\"\")\r\nparser.add_argument('-s', '--second', required=True, default=\"\")\r\n\r\ndef concat_strings(first, second):\r\n\r\n    if first == \"\":\r\n        return None\r\n    if second == \"\":\r\n        return None\r\n    \r\n    return first + \" \" + second\r\n\r\nif __name__ == \"__main__\":\r\n\r\n    # OpenTelemetry Boilerplate\r\n    # Service name is required for most backends\r\n    resource = Resource(attributes={\r\n        SERVICE_NAME: \"pytest-otel-demo\"\r\n    })\r\n\r\n    provider = TracerProvider(resource=resource)\r\n    processor = BatchSpanProcessor(OTLPSpanExporter(endpoint=\"localhost:4317\", insecure=True))\r\n    provider.add_span_processor(processor)\r\n    trace.set_tracer_provider(provider)\r\n\r\n    # Creates a tracer from the global tracer provider\r\n    tracer = trace.get_tracer(\"my.tracer.name\")\r\n\r\n    with tracer.start_as_current_span(\"app.py\"):\r\n        with tracer.start_as_current_span(\"parse-args\") as span:\r\n            args = parser.parse_args()\r\n            first = args.first\r\n            second = args.second\r\n            time.sleep(0.100) # sleep for 100ms\r\n        \r\n        with tracer.start_as_current_span(name=\"concat_strings\") as concat_strings_span:\r\n        \r\n            concat_strings_span.set_attribute(\"first-string\", first)\r\n            concat_strings_span.set_attribute(\"second-string\", second)\r\n            \r\n            result = concat_strings(first, second)\r\n\r\n            concat_strings_span.set_attribute(\"result\", result)\r\n\r\n            time.sleep(0.200) # sleep for 200ms\r\n```\r\n\r\n## app_test.py\r\n```\r\nimport subprocess\r\n\r\ndef run_program(first=\"\", second=\"\"):\r\n    output = subprocess.run(f\"python3 app.py -f {first} -s {second}\" , capture_output=True, shell=True, text=True)\r\n    return output\r\n\r\n# Run program with no input params\r\n# Should error and so check error is present\r\ndef test_run_no_params():\r\n    output = run_program()\r\n    assert output.returncode != 0\r\n    assert output.stderr != \"\"\r\n\r\n# Run program with one input\r\n# Should error so check\r\ndef test_run_with_only_first_param():\r\n    output = run_program(first=\"foo\")\r\n    assert output.returncode != 0\r\n    assert output.stderr != \"\"\r\n\r\n# Run program as it should\r\n# with two valid parameters\r\ndef test_run_with_both_valid_params(first=\"foo\", second=\"bar\"):\r\n    output = run_program(first=\"foo\", second=\"bar\")\r\n    assert output.returncode == 0\r\n    assert output.stderr == \"\"\r\n    assert \"Result is: foo bar\" in output.stdout\r\n```",
      "state": "CLOSED",
      "createdAt": "2023-07-26T02:55:55Z",
      "updatedAt": "2023-07-26T06:41:58Z",
      "closedAt": "2023-07-26T06:41:58Z",
      "author": {
        "login": "agardnerIT"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 11245,
      "title": "Change how nodeids are created in relation to rootdir",
      "body": "This issue is about the path part of the nodeid (the part before the `::`).\r\n\r\n### Problem\r\n\r\nGenerally, the path part of a nodeid is created by taking the node's path relative to the rootdir. \r\n**But**, if the node's path is not below the rootdir (\"out of tree\"), then we create its nodeid relative to the initial paths (= paths given in the command line), specifically the first one which contains the path. This was added in 14b6380e5f8c2e26aa518de8a499978eb9601848 as a fix for an issue with out-of-tree `--pyargs` (2775) which would result in an empty nodeid path.\r\n\r\nThis change broke an important property of the nodeid, that it is always relative to the rootdir, or said differently, that the nodeid cannot be relied upon to be the root of all nodeids. This causes various issues that crop up when such invariants are broken:\r\n- ambiguous nodeids\r\n- duplicate nodeids\r\n- incorrect printing of nodeids\r\n\r\nSee #11186, #6605, #3714.\r\n\r\nThe issues mostly stem from the fact that a nodeid does not carry around the context of which path it it relative to, so the context is lost and becomes ambiguous.\r\n\r\n### Proposed solution\r\n    \r\nPerhaps the simplest fix is to change back to always using the rootdir, but now allowing `..` (parent directory) segments in the nodeid path. This is kind of ugly, but running tests outside the rootdir is discouraged anyway, so I'm not too worried about it, in fact it might encourage settings the rootdir correctly...\r\n\r\nI have an initial implementation here: https://github.com/bluetech/pytest/commits/rootdir-rel\r\n\r\n### Other solutions?\r\n\r\nAnother solution might be to change nodeids to be structured and maintain the context. However, users still interact with nodeids as strings so I don't think this can go very far.\r\n\r\nAnd another solution can be that out-of-tree nodeids just always use absolute paths e.g. `/my/out/of/tree/test.py::test_it` instead of `../../of/tree/test.py::test_it`. Maybe it's better?",
      "state": "OPEN",
      "createdAt": "2023-07-23T22:19:08Z",
      "updatedAt": "2023-08-02T18:48:41Z",
      "closedAt": null,
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: proposal"
          },
          {
            "name": "topic: collection"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 11240,
      "title": "Custom plugins with required options break CLI parsing when using pytest.main()",
      "body": "<!--\r\nThanks for submitting an issue!\r\n\r\nQuick check-list while reporting bugs:\r\n-->\r\n\r\n- [x] a detailed description of the bug or problem you are having\r\n  When running pytest via `pytest.main()`, plugins which add a required options no longer parse their options correctly. This doesn't happen when using `pytest` script as the runner\r\n- [x] output of `pip list` from the virtual environment you are using\r\n  ```\r\n  Package        Version\r\n  -------------- -------\r\n  attrs          23.1.0\r\n  exceptiongroup 1.1.2\r\n  iniconfig      2.0.0\r\n  packaging      23.1\r\n  pip            21.2.4\r\n  pluggy         1.2.0\r\n  py             1.11.0\r\n  pytest         7.4.0\r\n  setuptools     58.1.0\r\n  toml           0.10.2\r\n  tomli          2.0.1\r\n  ```\r\n- [x] pytest and operating system versions\r\n  Python 3.9.9, Ubuntu 22.04, pytest 7.4.0, but I've been able to reproduce it all the way back to 5.4.3\r\n- [x] minimal example if possible\r\n  `runner.py`, broken:\r\n  ```python\r\n  import sys\r\n  import pytest\r\n  \r\n  class Plugin:\r\n      def pytest_addoption(self, parser, pluginmanager):\r\n          parser.addoption(\"--param\", required=True)\r\n  \r\n  \r\n  def main():\r\n      sys.exit(pytest.main(plugins=[Plugin()]))\r\n  \r\n  \r\n  if __name__ == \"__main__\":\r\n      main()\r\n  ```\r\n  ```\r\n  $ python runner.py --param foo\r\n  ERROR: usage: runner.py [options] [file_or_dir] [file_or_dir] [...]\r\n  runner.py: error: the following arguments are required: --param (via addopts config)\r\n  ```\r\n  \r\n  `conftest.py`, works:\r\n  ```python\r\n  import pytest\r\n  \r\n  def pytest_addoption(self, parser, pluginmanager):\r\n      parser.addoption(\"--param\", required=True)\r\n  ```\r\n\r\n  ```\r\n  $ pytest \r\n  ============================================================================================================================= test session starts ==============================================================================================================================\r\n  platform linux -- Python 3.9.9, pytest-5.4.3, py-1.11.0, pluggy-0.13.1\r\n  rootdir: /tmp/bugreport\r\n  collected 0 items                                                                                                                                                                                                                                                              \r\n  \r\n  ============================================================================================================================ no tests ran in 0.01s =============================================================================================================================\r\n  ```",
      "state": "OPEN",
      "createdAt": "2023-07-22T17:09:25Z",
      "updatedAt": "2023-07-24T07:31:17Z",
      "closedAt": null,
      "author": {
        "login": "mathrick"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "topic: config"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 11239,
      "title": "Assignment expression changes value of variable in unrelated test case",
      "body": "The `assert` rewriting in `test2` effects the result of `test_1` just because both asserts are using the same identifier `state`.\r\nTested with pytest `7.3.2` and `7.4.0`.\r\n\r\n```py\r\ndef test_1():\r\n    state = {\"x\": 2}.get(\"x\")\r\n    assert state is not None\r\n\r\ndef test_2():\r\n    db = {\"x\": 2}\r\n    assert (state := db.get(\"x\")) is not None\r\n```\r\n\r\n```py\r\n    def test_1():\r\n        state = {\"x\": 2}.get(\"x\")\r\n>       assert state is not None\r\nE       NameError: name 'db' is not defined\r\n\r\ncustom_tests/test_a.py:3: NameError\r\n```\r\n\r\nI bisected the issue to https://github.com/pytest-dev/pytest/pull/11041. From what I can tell, the assertion rewriter doesn't track the current context. Thus `state` in `test_1` is replaced with `db.get(\"x\")` from `test_2` even though they are in separate functions.\r\n\r\nThis behavior can be quite surprising as a user typically doesn't expect test cases with purely local variables and without side effects to influence one another.\r\n\r\nAs there is another regression (#11115) with this PR already, maybe it would be best to revert it?\r\n\r\n/CC @aless10",
      "state": "CLOSED",
      "createdAt": "2023-07-22T11:45:53Z",
      "updatedAt": "2023-09-09T12:09:33Z",
      "closedAt": "2023-09-09T12:09:33Z",
      "author": {
        "login": "cdce8p"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: regression"
          },
          {
            "name": "topic: rewrite"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      }
    },
    {
      "number": 11237,
      "title": "@cached_property is not checked for doctests",
      "body": "- [x] a detailed description of the bug or problem you are having\r\nIf I have doctests in a function decorated with `@cached_property`, they will not be run.\r\n- [x] output of `pip list` from the virtual environment you are using\r\n```\r\nPackage           Version Editable project location\r\n----------------- ------- ---------------------------------------------\r\ncoverage          6.5.0\r\nexceptiongroup    1.1.2\r\niniconfig         2.0.0\r\nnodeenv           1.8.0\r\npackaging         23.1\r\npip               23.2\r\npluggy            1.2.0\r\npyright           1.1.318\r\npytest            7.4.0\r\nsetuptools        68.0.0\r\ntomli             2.0.1\r\ntyping_extensions 4.7.1\r\nwheel             0.38.4\r\n```\r\n- [x] pytest and operating system versions\r\npytest 7.4.0\r\nPop!_OS 22.04 LTS\r\n- [x] minimal example if possible\r\n```python\r\nfrom functools import cached_property\r\n\r\nclass Test:\r\n    @cached_property\r\n    def test_me(self):\r\n        \"\"\"\r\n        A function that returns the string `ok`\r\n\r\n        Examples\r\n        --------\r\n        >>> Test().test_me\r\n        'ok'\r\n        \"\"\"\r\n        return \"ok\"\r\n\r\n    @property\r\n    def test_me_2(self):\r\n        \"\"\"\r\n        A function that returns the string `ok`\r\n\r\n        Examples\r\n        --------\r\n        >>> Test().test_me_2\r\n        'ok'\r\n        \"\"\"\r\n        return \"ok\"\r\n```\r\nRun `python -m pytest --doctest-modules`, only one test will be captured and run.",
      "state": "CLOSED",
      "createdAt": "2023-07-21T15:54:36Z",
      "updatedAt": "2023-09-07T12:39:04Z",
      "closedAt": "2023-09-07T12:39:04Z",
      "author": {
        "login": "Lubba-64"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: bug"
          },
          {
            "name": "plugin: doctests"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      }
    },
    {
      "number": 11235,
      "title": "TestIds not relative to rootdir & cannot be run as pytest args",
      "body": "<!--\r\nThanks for submitting an issue!\r\n\r\nQuick check-list while reporting bugs:\r\n-->\r\n\r\n- [x] a detailed description of the bug or problem you are having\r\n- [x] output of `pip list` from the virtual environment you are using\r\n- [x] pytest and operating system versions\r\nMac ARM\r\npytest version: pytest 7.2.2\r\n- [x] minimal example if possible\r\n\r\nHi! This question is a little different but tried to provide as much detail as possible to have the report be clear. Let me know if I can provide more information! I have a project structured as following:\r\n\r\nroot\r\n\u2514\u2500 module\r\n\u2514\u2500 tests\r\n\u2500\u2514\u2500 unittest\r\n\u2500\u2500\u2514\u2500 test_uppercase.py\r\n\u2500\u2500\u2514\u2500 pytest.init\r\n\r\nI created the following demo which I have attached but this is the jist. \r\n```\r\nif __name__ == \"__main__\":\r\n    # with ini file\r\n    print(\"with ini file\")\r\n    pytest.main([\"-p\", \"plugin_ex\", \"-c\", \"tests/pytest.ini\", \"-v\"])\r\n    # with ini file\r\n    print(\"with ini file & test ID from previous run plugin\")\r\n    pytest.main(\r\n        [\r\n            \"-p\",\r\n            \"plugin_ex\",\r\n            \"-c\",\r\n            \"tests/pytest.ini\",\r\n            \"-v\",\r\n            \"unittests/test_param.py::test_odd_even[1]\",\r\n        ]\r\n    )\r\n```\r\nrun the above script file.\r\n\r\n```\r\ndef pytest_sessionfinish(session, exitstatus):\r\n    for test_case in session.items:\r\n        print(\"test ids from plugin:\", test_case.nodeid)\r\n\r\n```\r\nhave the given code for my plugin_ex\r\n\r\nget the following output\r\n```\r\nwith ini file\r\n================================================== test session starts ===================================================\r\nplatform darwin -- Python 3.10.8, pytest-7.4.0, pluggy-1.2.0 -- /Users/eleanorboyd/testingFiles/from_users/test_directory/.venv/bin/python\r\ncachedir: .pytest_cache\r\nrootdir: /Users/eleanorboyd/testingFiles/from_users/test_directory/tests\r\nconfigfile: pytest.ini\r\ncollected 6 items                                                                                                        \r\n\r\ntests/unittests/test_add.py::test_add_two_numbers PASSED                                                           [ 16%]\r\ntests/unittests/test_add.py::TestAdd::test_add_two_numbers PASSED                                                  [ 33%]\r\ntests/unittests/test_param.py::test_odd_even[1] PASSED                                                             [ 50%]\r\ntests/unittests/test_param.py::test_odd_even[2] PASSED                                                             [ 66%]\r\ntests/unittests/test_param.py::test_odd_even[3] PASSED                                                             [ 83%]\r\ntests/unittests/test_param.py::test_odd_even[4] PASSED                                                             [100%]test ids from plugin: unittests/test_add.py::test_add_two_numbers\r\ntest ids from plugin: unittests/test_add.py::TestAdd::test_add_two_numbers\r\ntest ids from plugin: unittests/test_param.py::test_odd_even[1]\r\ntest ids from plugin: unittests/test_param.py::test_odd_even[2]\r\ntest ids from plugin: unittests/test_param.py::test_odd_even[3]\r\ntest ids from plugin: unittests/test_param.py::test_odd_even[4]\r\n\r\n\r\n=================================================== 6 passed in 0.01s ====================================================\r\nwith ini file & test ID from previous run plugin\r\n================================================== test session starts ===================================================\r\nplatform darwin -- Python 3.10.8, pytest-7.4.0, pluggy-1.2.0 -- /Users/eleanorboyd/testingFiles/from_users/test_directory/.venv/bin/python\r\ncachedir: .pytest_cache\r\nrootdir: /Users/eleanorboyd/testingFiles/from_users/test_directory/tests\r\nconfigfile: pytest.ini\r\ncollected 0 items                                                                                                        \r\n\r\n================================================= no tests ran in 0.00s ==================================================\r\nERROR: file or directory not found: unittests/test_param.py::test_odd_even[1]\r\n```\r\nYou can see that with the init file in the first run the rootdir is listed as `rootdir: /Users/eleanorboyd/testingFiles/from_users/test_directory/tests` and the test ids as printed out through the plugin are `test ids from plugin: unittests/test_param.py::test_odd_even[4]`. But then when I try and run a given test via its testID it doesn't work and returns the error you see in the second run even though its root dir is still listed as `rootdir: /Users/eleanorboyd/testingFiles/from_users/test_directory/tests`\r\n\r\nFrom what I got of the doc is that all testIDs would be relative to the rootDir and therefore the testID when the rootdir stays the same should also be the same.\r\n\r\nThe reason I am experiencing this bug is I want to get testIDs from a plugin and then be able to call the given test from the command line. Is this actually a bug or am I getting the testID incorrectly somewhere or misunderstanding the docs in that the testID is relative to the rootdir?\r\n\r\nAppreciate any help!\r\n\r\nTO REPRO:\r\nrun script.py from the following example code I uploaded\r\n[test_directory.zip](https://github.com/pytest-dev/pytest/files/12113626/test_directory.zip)\r\n\r\n\r\n**Output of pip list:**\r\nPackage        Version\r\n-------------- -------\r\nexceptiongroup 1.1.2\r\niniconfig      2.0.0\r\npackaging      23.1\r\npip            23.2\r\npluggy         1.2.0\r\npytest         7.4.0\r\nsetuptools     65.4.1\r\ntomli          2.0.1\r\n\r\n\r\nThanks! Sorry for the length here",
      "state": "CLOSED",
      "createdAt": "2023-07-20T19:58:02Z",
      "updatedAt": "2023-08-02T18:27:19Z",
      "closedAt": "2023-08-02T18:27:18Z",
      "author": {
        "login": "eleanorjboyd"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: docs"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 5
      }
    },
    {
      "number": 11234,
      "title": "Some possible improvements in fixtures module",
      "body": "Here are a list of possible improvements in pytest fixtures, initially introduced in #10771 .\r\n\r\n|Improvement| Corresponding PR|\r\n|---|---|\r\n|Remove `funcargs` attribute from `Callspec` to unify parameters of the test item, as funcargs are transformed into pseudo-fixtures.| #11220 |\r\n|Remove `fixtures.py::add_funcarg_pseudo_fixture_def` and care for transforming funcargs to pseudo fixturedefs right in `MetaFunc.parametrize`. | #11220 |\r\n|Make `FixtureArgKey` to represent fixture param by its value rather than its index if possible, as does `FixtureDef::cache_key` .| #11271  |\r\n|When parametrizing with multiple parametersets (or multiple tuples of params), index of parameters in a parameter set is determined by their index in the existing values of the parameter, not by the index of their parameter set in the parameter set list. This results in better identifying dependencies of tests, thus better reordering.| #11257  |\r\n|Creating `FixtureArgKey` for representing fixture dependencies.| #11231 |\r\n|Taking nonparametrized tests into consideration for reordering as well. Beforehand, only parametrized tests were considered, by retrieving their fixture dependecies. | #11236  |\r\n|Remove `fixtures.py::FuncFixtureInfo::prune_dependecy_tree` and move its responsibility to very `FixtureManager::getfixtureclosure`. I note that populating `arg2fixturedefs` is done only once.| #11243  |\r\n| Considering used shadowed fixture dependencies for reordering as well. This was done by changing fixturemanager::getfixtureclosure algo from BFS to DFS.| |\r\n|Pruning dependency tree is done only if we have a `metafunc.parametrize` call within module-specific or class-specific `pytest_generate_tests` hooks.| #11243  |\r\n|Fix a few typos, or tiny bugs and do a few small improvements| #11277, #11284  |",
      "state": "OPEN",
      "createdAt": "2023-07-20T13:18:51Z",
      "updatedAt": "2023-08-06T13:56:43Z",
      "closedAt": null,
      "author": {
        "login": "sadra-barikbin"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: proposal"
          },
          {
            "name": "type: refactoring"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      }
    },
    {
      "number": 11233,
      "title": "`-rx` and `-rX` should turn on output for xfail/xpass",
      "body": "- [x] a detailed description of the bug or problem you are having\r\n\r\n* `-rx` and `-rX` (as well as `-ra` and `-rA`) should allow output for xfail and xpass, but they don't.\r\n* There seems to be no way at all to get the traceback from xfailed tests.\r\n* There seems to be no way to get the output from xfail/xpass. (other than turning all xpass into fail with xpass strict, but that still doesn't solve the xfail case).\r\n* The summary report for xfail doesn't include the assert line, as fail does\r\n\r\nThis shows up in a discussion #9834 and another issue #10618.\r\n\r\n* discussion #9834\"\r\n   * showing there is confusion in the user base about this\r\n*  issue #10618\r\n   * This is tagged \"question\". It's not a question. It's a defect.\r\n   * @RonnyPfannschmidt [notes there](https://github.com/pytest-dev/pytest/issues/10618#issuecomment-1367289285) that the way around it is to use strict. \"That's intentional, With strict, xpass gets treated as error and should have output.\"\r\n   * That's not a sufficient response because there is still no way to get the output from xfail\r\n   * Even if this is as designed, there need to be a way to see the traceback and output from xfail and xpass. And it seems like `-rx` and `-rX` are the obvious choice. \r\n\r\n**---- More detail about problem and expectations  ----**\r\n\r\n**Observations:**\r\nBased on a simple test script below that includes `test_pass`, `test_fail`, `test_xfail`, `test_xpass`.\r\n\r\n1. Output and exception for `test_fail` but not for `test_xfail`. \r\n    * I would have expected `test_xfail` to look mostly just like `test_fail`. \r\n    * If there's a reason to NOT report exception traceback and output for xfails, we should have an option to turn it on.\r\n    \r\n2. `assert 1 == 2` is displayed in summary info for `FAILED` but not for `XFAIL`.\r\n   * I can't come up with reason why this would be correct behavior.\r\n   * `assert 1 == 2` should show up for XFAIL also.\r\n\r\n3. `-rP` (which is included in `-rA`) is \"pass with output\", and it applies to `PASSED`, but not `XPASS`.\r\n\r\n**Opinion on how to fix this:**\r\n\r\n* `XFAIL` should act like `FAILED` if it's turned on with `-rx` or `-ra` or `-rA`\r\n   * output should be reported\r\n   * traceback should be reported\r\n   * assert message should be listed in summary\r\n* `XPASS` should act like `PASSED` if it's turned on with `-rX` or `-ra` or `-rA`\r\n   * output should be reported\r\n* It seems reasonable that someone might not want to see all of this extra output.\r\n  * That's why I've suggested that this extra output NOT be on by default.\r\n  * Controlling the extra output with `-r` flags seems like the right way to do this.\r\n\r\nMy opinions, of course. But this would follow the idea of \"behavior with the least surprise\". And it doesn't require any extra flags.\r\n\r\n\r\n- [x] output of `pip list` from the virtual environment you are using\r\n\r\n```\r\n$ pip list\r\nPackage    Version\r\n---------- -------\r\ncolorama   0.4.6\r\niniconfig  2.0.0\r\npackaging  23.1\r\npip        23.2\r\npluggy     1.2.0\r\npytest     7.4.0\r\nsetuptools 65.5.0\r\n```\r\n\r\n- [x] pytest and operating system versions\r\n\r\n  * pytest 7.4.0\r\n  * Windows something, but also tested on Mac, so I think OS is irrelevant.\r\n\r\n- [x] minimal example if possible\r\n\r\n\r\n**Example: test_foo.py**\r\n```python\r\nimport pytest\r\n\r\ndef test_pass():\r\n    print('in test_pass()')\r\n    a, b = 1, 1\r\n    assert a == b\r\n\r\ndef test_fail():\r\n    print('in test_fail()')\r\n    a, b = 1, 2\r\n    assert a == b\r\n\r\n@pytest.mark.xfail\r\ndef test_xfail():\r\n    print('in test_xfail()')\r\n    a, b = 1, 2\r\n    assert a == b\r\n\r\n@pytest.mark.xfail\r\ndef test_xpass():\r\n    print('in test_xpass()')\r\n    a, b = 1, 1\r\n    assert a == b\r\n```\r\n\r\n**Current output:**\r\n```\r\n$ pytest -rA test_foo.py\r\n============================= test session starts =============================\r\nplatform win32 -- Python 3.11.0, pytest-7.4.0, pluggy-1.0.0\r\nrootdir: C:\\Users\\okken\\projects\\instrument_updater\r\nconfigfile: tox.ini\r\ncollected 4 items\r\n\r\ntest_foo.py .FxX                                                         [100%]\r\n\r\n================================== FAILURES ===================================\r\n__________________________________ test_fail __________________________________\r\n\r\n    def test_fail():\r\n        print('in test_fail()')\r\n        a, b = 1, 2\r\n>       assert a == b\r\nE       assert 1 == 2\r\n\r\ntest_foo.py:11: AssertionError\r\n---------------------------- Captured stdout call -----------------------------\r\nin test_fail()\r\n=================================== PASSES ====================================\r\n__________________________________ test_pass __________________________________\r\n---------------------------- Captured stdout call -----------------------------\r\nin test_pass()\r\n=========================== short test summary info ===========================\r\nPASSED test_foo.py::test_pass\r\nXFAIL test_foo.py::test_xfail\r\nXPASS test_foo.py::test_xpass\r\nFAILED test_foo.py::test_fail - assert 1 == 2\r\n============== 1 failed, 1 passed, 1 xfailed, 1 xpassed in 0.28s ==============\r\n```\r\n\r\n\r\n",
      "state": "CLOSED",
      "createdAt": "2023-07-19T20:38:54Z",
      "updatedAt": "2024-01-05T12:59:21Z",
      "closedAt": "2024-01-05T12:59:20Z",
      "author": {
        "login": "okken"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: bug"
          },
          {
            "name": "type: proposal"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 5
      }
    },
    {
      "number": 11232,
      "title": "Dynamically generate plugins table with sortable columns",
      "body": "With almost 1300 plugins in the [plugin list](https://docs.pytest.org/en/latest/reference/plugin_list.html), it's pretty much impossible to browse through it... you can search for things if you know what you're looking for, but it's impossible to really find anything new. There are just too many plugins there which happen to be on PyPI but aren't really meant for public usage; or e.g. various joke plugins (I'm [guilty of that one](https://pypi.org/project/pytest-vw/)!).\r\n\r\nSomeone at Europython 2023 proposed to me that we sort it by popularity instead. I feel like it's a good idea! I recognize the downside that it makes it even harder for unpopular plugins to gain popularity, but then again, that seems better than making it harder for plugins that start with a z...\r\n\r\nTo get the data, we could use [the PyPI Stats API](https://pypistats.org/api/) - or perhaps, if 1300 plugins is too big of a hit against that, query the [data ourselves](https://packaging.python.org/en/latest/guides/analyzing-pypi-package-downloads/). I suppose the latter would be preferrable.\r\n\r\nIf people don't object to this, and someone at Europython 2023 wants to pair up at the Sprints to give this a try (newcomers very much welcome!), let me know.",
      "state": "OPEN",
      "createdAt": "2023-07-19T19:33:09Z",
      "updatedAt": "2024-07-06T23:05:08Z",
      "closedAt": null,
      "author": {
        "login": "The-Compiler"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: proposal"
          },
          {
            "name": "type: docs"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 5
      }
    },
    {
      "number": 11225,
      "title": "Error message for pytest.warns() if regex patterns don't match",
      "body": "I suggest to align the error message for an unmatching regex pattern of `with pytest.warns` with the one used for `with pytest.raises `.\r\n\r\nMinimal example:\r\n\r\n```\r\nimport pytest\r\nimport warnings\r\n\r\ndef some_function():\r\n    warnings.warn((\"`Blablabla` is deprecated (more info)\"), FutureWarning)\r\n\r\ndef test_warning_some_function():\r\n    with pytest.warns(FutureWarning, match=\"`Blablabla` is deprecated (more info)\"):\r\n        some_function()\r\n```\r\n\r\nWhen I run pytest on this file, I get this error:\r\n\r\n```\r\nE       Failed: DID NOT WARN. No warnings of type (<class 'FutureWarning'>,) matching the regex were emitted.\r\nE        Regex: `Blablabla` is deprecated (more info)\r\nE        Emitted warnings: [FutureWarning('`Blablabla` is deprecated (more info)')]\r\n```\r\n\r\nI was pretty confused because of  `Failed: DID NOT WARN.`: it seemed to hint to the fact that no FutureWarning was rosen in the first place.\r\nHowever, the warning rose. Only the regex patters of the warning wouldn't match with the expected pattern (which would easily be resolved with  `re.escape()`, if the test would fail more explicitly).\r\n\r\nThis is more explicitly dealt with in `with pytest.raises `:\r\n\r\n```\r\ndef some_function():\r\n    raise ValueError(\"`Blablabla` is invalid (more info)\")\r\n\r\ndef test_error_some_function():\r\n    with pytest.raises(ValueError, match=\"`Blablabla` is invalid (more info)\"):\r\n        some_function()\r\n```\r\n\r\nError message:\r\n\r\n```\r\nE       AssertionError: Regex pattern did not match.\r\nE        Regex: '`Blablabla` is invalid (more info)'\r\nE        Input: '`Blablabla` is invalid (more info)'\r\nE        Did you mean to `re.escape()` the regex?\r\n```\r\n`AssertionError: Regex pattern did not match.` is much clearer than `Failed: DID NOT WARN.` \r\n\r\n\r\nTherefore, I would suggest to align the the error message shown for an unmatching regex pattern of `with pytest.warns` with the one used for `with pytest.raises `.\r\n\r\n\r\n\r\n\r\nOutput of `pip list:`\r\n```\r\nPackage        Version\r\n-------------- -------\r\nexceptiongroup 1.1.2\r\niniconfig      2.0.0\r\npackaging      23.1\r\npip            22.2.1\r\npluggy         1.2.0\r\npytest         7.4.0\r\nsetuptools     63.2.0\r\ntomli          2.0.1\r\n```\r\n\r\nOS:\r\nUbuntu 20.04\r\n",
      "state": "OPEN",
      "createdAt": "2023-07-17T15:04:26Z",
      "updatedAt": "2023-07-24T07:33:27Z",
      "closedAt": null,
      "author": {
        "login": "StefanieSenger"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: enhancement"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      }
    },
    {
      "number": 11224,
      "title": "Launch test's dependencies too when executing single test",
      "body": "When executing single test using `pytest test_name` if test has a dependency (marked by pytest-dependency extension) the test is simply ignored because it's dependency is skipped.\r\n\r\nLaunch test's dependency too when executing single test. (Either by default of with a special flag being passed). This allows to quickly debug failing tests without waiting for all tests to complete each time.",
      "state": "CLOSED",
      "createdAt": "2023-07-17T13:30:17Z",
      "updatedAt": "2023-07-19T17:35:44Z",
      "closedAt": "2023-07-19T17:35:44Z",
      "author": {
        "login": "Roo4L"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "status: needs information"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 11223,
      "title": "Support __notes__ in pytest.raises",
      "body": "I would like `pytest.raises` to have some form of support for `__notes__`.\r\n\r\n#### What's the problem this feature will solve?\r\n\r\nI am currently looking into replacing dynamic patching of error messages with the new `__notes__` feature added in [PEP-678](https://peps.python.org/pep-0678/).\r\n\r\nHowever, once I use `__notes__` my checks using `pytest.raises` now fail, and I'd like them to not. Or at least, I would like for pytest to have some features for matching these errors. Since this is a language level feature for python, I think it's usage should be covered by `pytest`.\r\n\r\n#### Describe the solution you'd like\r\n\r\nI would like the regex from `pytest.raises` to match against the notes as well as the body of the error. It would be fine for this to be specified with a keyword argument.\r\n\r\nExample of usage:\r\n\r\n```python\r\nimport pytest\r\n\r\ndef foo():\r\n    assert False\r\n\r\ndef bar():\r\n    try:\r\n        foo()\r\n    except AssertionError as e:\r\n        e.add_note(\"Raised by bar\")\r\n        raise\r\n\r\nwith pytest.raises(AssertionError, match=\"Raised by bar\"):\r\n    bar()\r\n```\r\n\r\n<!-- Provide examples of real-world use cases that this would enable and how it solves the problem described above. -->\r\n\r\n#### Alternative Solutions\r\n<!-- Have you tried to workaround the problem using a pytest plugin or other tools? Or a different approach to solving this issue? Please elaborate here. -->\r\n\r\n##### Do nothing\r\n\r\nI could manually check for notes, but I don't think python makes it obvious which part of an exception is from a note. Here is a small example of what a note looks like:\r\n\r\n<details>\r\n<summary> setup </summary>\r\n\r\n```python\r\n# Python 3.11.4 | packaged by conda-forge | (main, Jun 10 2023, 18:10:28) [Clang 15.0.7 ] on darwin\r\n# Type \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import sys\r\n>>> \r\n>>> def add_note(err: BaseException, msg: str) -> None:\r\n...     if sys.version_info < (3, 11):\r\n...         err.__notes__ = getattr(err, \"__notes__\", []) + [msg]\r\n...     else:\r\n...         err.add_note(msg)\r\n... \r\n>>> def foo():\r\n...     raise AssertionError(\"foo is a bad function\")\r\n... \r\n>>> try:\r\n...     foo()\r\n... except AssertionError as e:\r\n...     add_note(e, \"yeah, foo is awful\")\r\n...     raise e\r\n```\r\n</details>\r\n\r\n```pytb\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 5, in <module>\r\n  File \"<stdin>\", line 2, in <module>\r\n  File \"<stdin>\", line 2, in foo\r\nAssertionError: foo is a bad function\r\nyeah, foo is awful\r\n```\r\n\r\nI think this would make it quite difficult for someone receiving an exception with notes from an upstream library to know how to match against it.\r\n\r\nI'm currently handling this with a helper function:\r\n\r\n```python\r\ndef check_error_or_notes_match(e: pytest.ExceptionInfo, pattern: str):\r\n    \"\"\"\r\n    Checks whether the printed error message or the notes contains the given pattern.\r\n\r\n    DOES NOT WORK IN IPYTHON - because of the way IPython handles exceptions\r\n    \"\"\"\r\n    import traceback\r\n\r\n    message = \"\".join(traceback.format_exception_only(e.type, e.value))\r\n    assert re.search(\r\n        pattern, message\r\n    ), f\"Could not find pattern: '{pattern}' in error:\\n\\n{message}\\n\"\r\n```\r\n\r\n\r\n#### Additional context\r\n<!-- Add any other context, links, etc. about the feature here. -->\r\n\r\nThis line would have to change: https://github.com/pytest-dev/pytest/blob/b20e7f6d0cd85f439d7963b4ae7c3c3fc908452d/src/_pytest/_code/code.py#L707.\r\n",
      "state": "CLOSED",
      "createdAt": "2023-07-17T11:21:39Z",
      "updatedAt": "2023-07-18T11:39:41Z",
      "closedAt": "2023-07-18T11:39:40Z",
      "author": {
        "login": "ivirshup"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 10
      }
    },
    {
      "number": 11218,
      "title": "fixtures: refactor `FixtureRequest`/`SubRequest` a bit  ",
      "body": "The `FixtureRequest`/`SubRequest` situation is currently quite confusing.\r\n    \r\n- `FixtureRequest` (on its own, not its subclass `SubRequest`) is used for the `request` fixture in a test function itself. One is created even if the `request` fixture is not explicitly requested.  The name is a bit confusing -- it is not a request for a fixture. I think it wanted to be named `RequestFixture` i.e. the `request` fixture, but not 100% sure.\r\n    \r\n   A test function itself cannot be parametrized using `request.param`, only a fixture can.\r\n    \r\n   For `FixtureRequest` the `request.scope` is always `function` and the `request.node` is the item.\r\n    \r\n    In the pytest internals, it is used to drive getting the fixture values of the fixtures needed by the item (`_fillfixtures`).\r\n    \r\n- `SubRequest` is used for `request` inside a fixture. The `SubRequest` holds a reference to the `FixtureDef` it handles.\r\n    \r\n   For parametrized fixtures it holds the parameter value (`request.param`).\r\n    \r\n   In the pytest internals, it is used to drive the execution of a specific \"fixture request\" .\r\n    \r\n  While executing an item, the `SubRequest`s and the top `FixtureRequest` form a chain/stack. For example, if we have `test_it` requesting `fix1` requesting `fix2`, then there is `SubRequest(fix2)` which points to `SubRequest(fix1)` which points to `FixtureRequest(test_it)`. This is only used in practice for printing a \"fixture stack\" in some errors, but is useful to understand conceptually.\r\n\r\n`SubRequest` inherits from `FixtureRequest`, but in a pretty hard to understand way, e.g. its `__init__` doesn't call the super.\r\n\r\nAs an initial way to clarify things a bit, I propose making `FixtureRequest` itself abstract, and add a new `TopRequest` subclass for the test-function `request`.\r\n\r\nThe name `TopRequest` would not be my TopChoice, but renaming `FixtureRequest` or `SubRequest` at this point would be a disruptive breaking change, so better to choose a name which makes sense in relation to `SubRequest`.\r\n\r\nThis will break plugins which instantiate `FixtureRequest` directly. It's private so not an official breaking change. I found `pytest-alembic`, `pytest-yield`, `pytest-wdl`, `pytest-play`. I can notify them about this change if this proposal is accepted.",
      "state": "CLOSED",
      "createdAt": "2023-07-16T20:44:11Z",
      "updatedAt": "2023-08-15T18:52:48Z",
      "closedAt": "2023-08-15T18:52:47Z",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: proposal"
          },
          {
            "name": "topic: fixtures"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      }
    },
    {
      "number": 11216,
      "title": "fixtures: show test as skip location if skipped from an xunit setup function",
      "body": "PR #10482 made it so that if a fixture calls `skip()`, the skip location is shown as the test function, not the fixture. But it excluded xunit setup fixtures from this.\r\n    \r\nI suspect this was done to make a pre-existing test pass, however I think that the same reason for fixtures applies to xunit fixtures just as well, so we shouldn't exclude it.\r\n    \r\nWould also remove a string-hack that was used to implement this exclusion...\r\n\r\nhttps://github.com/pytest-dev/pytest/blob/bf451d47a1b3be80a7f89b3076e4816c47390037/src/_pytest/fixtures.py#L1162-L1168",
      "state": "CLOSED",
      "createdAt": "2023-07-16T20:24:21Z",
      "updatedAt": "2023-07-17T14:30:08Z",
      "closedAt": "2023-07-17T14:30:08Z",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "topic: fixtures"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      }
    },
    {
      "number": 11208,
      "title": "fixtures: change `FixtureDef.cached_result[2]` from exception triplet to exception",
      "body": "I propose changing the type of the 3rd item of `FixtureDef.cached_result` (which indicates a cached exception outcome of the fixture) from a `sys.exc_info` style triplet to just the exception instance.\r\n    \r\nThe `sys.exc_info` exception triplet format is legacy from Python 2 and just complicates things nowadays.\r\n    \r\nWhile `cached_result` is not documented and is a private API, from 680 plugins I have checked out locally, 15 access it. However, none of them care about the type of `cached_result[2]`, except for `pytest-yield` plugin, but it's already broken in recent pytests and only supports pytest<=4.\r\n",
      "state": "CLOSED",
      "createdAt": "2023-07-14T08:53:30Z",
      "updatedAt": "2023-07-15T16:40:54Z",
      "closedAt": "2023-07-15T16:40:54Z",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: proposal"
          },
          {
            "name": "topic: fixtures"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      }
    },
    {
      "number": 11206,
      "title": "`ImportPathMismatchError` from subprojects with same test folder structure",
      "body": "\r\nWe have a big CI job that runs pytest against a couple (sub)projects checked out side by side. We added a `__init__.py` file in one of the `tests` folders to allow for some internal code reuse, and now the whole test suite fails to run with a `ImportPathMismatchError`.\r\n\r\nMinimal reproduction example:\r\n\r\n```\r\ncd some_empty_root_dir\r\nmkdir -p projectA/tests\r\ntouch projectA/tests/__init__.py\r\ntouch projectA/tests/conftest.py\r\nmkdir -p projectB/tests\r\ntouch projectB/tests/__init__.py\r\ntouch projectB/tests/conftest.py\r\n```\r\n\r\nSo file structure is as follows\r\n```\r\n$ tree\r\n.\r\n\u251c\u2500\u2500 projectA\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 tests\r\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 conftest.py\r\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 __init__.py\r\n\u2514\u2500\u2500 projectB\r\n    \u2514\u2500\u2500 tests\r\n        \u251c\u2500\u2500 conftest.py\r\n        \u2514\u2500\u2500 __init__.py\r\n```\r\n\r\nRunning pytest in each of the subprojects works fine (`collected 0 items`, but that is expected).\r\n\r\nHowever, when running at the toplevel:\r\n```\r\n$ pytest\r\n=============================================================================================== test session starts ===============================================================================================\r\nplatform linux -- Python 3.11.0, pytest-7.4.0, pluggy-1.2.0\r\nrootdir: /tmp/fruplz\r\ncollected 0 items / 1 error                                                                                                                                                                                       \r\n\r\n===================================================================================================== ERRORS ======================================================================================================\r\n__________________________________________________________________________________________ ERROR collecting test session __________________________________________________________________________________________\r\n.venv/lib/python3.11/site-packages/_pytest/config/__init__.py:642: in _importconftest\r\n    mod = import_path(conftestpath, mode=importmode, root=rootpath)\r\n.venv/lib/python3.11/site-packages/_pytest/pathlib.py:588: in import_path\r\n    raise ImportPathMismatchError(module_name, module_file, path)\r\nE   _pytest.pathlib.ImportPathMismatchError: ('tests.conftest', '/tmp/fruplz/projectA/tests/conftest.py', PosixPath('/tmp/fruplz/projectB/tests/conftest.py'))\r\n============================================================================================= short test summary info =============================================================================================\r\nERROR  - _pytest.pathlib.ImportPathMismatchError: ('tests.conftest', '/tmp/fruplz/projectA/tests/conftest.py', PosixPath('/tmp/fruplz/projectB/tests/conftest.py'))\r\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n================================================================================================ 1 error in 0.04s =================================================================================================\r\n```\r\n\r\nApparently pytest doesn't like that both `projectA/tests/conftest.py` and `projectB/tests/conftest.py` map to `tests.conftest`.\r\nIs there a workaround for this?\r\n\r\n\r\n(using pytest  7.4.0)",
      "state": "OPEN",
      "createdAt": "2023-07-13T20:54:41Z",
      "updatedAt": "2023-07-24T07:34:15Z",
      "closedAt": null,
      "author": {
        "login": "soxofaan"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "topic: collection"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 11205,
      "title": "How should fixtures scopes work for nested packages and classes?",
      "body": "We have two collection nodes (and fixture scopes), `Package` and `Class`, which may be nested. I'll use classes for example because it's easier to discuss (single file) but it's the same for packages.\r\n\r\nConsider the following:\r\n\r\n```py\r\nimport pytest\r\n\r\n\r\n@pytest.fixture(scope=\"class\")\r\ndef fix(request):\r\n    print(\"SETUP\", request.node)\r\n    yield\r\n    print(\"TEARDOWN\", request.node)\r\n\r\n\r\nclass TestTop:\r\n    def test_top(self, fix):\r\n        print(\"top\")\r\n\r\n    class TestNested1:\r\n        def test_nested1(self, fix):\r\n            print(\"nested1\")\r\n\r\n    class TestNested2:\r\n        def test_nested2(self, fix):\r\n            print(\"nested2\")\r\n```\r\n\r\nThe collection tree is:\r\n\r\n```\r\n<Module x.py>\r\n  <Class TestTop>\r\n    <Function test_top>\r\n    <Class TestNested1>\r\n      <Function test_nested1>\r\n    <Class TestNested2>\r\n      <Function test_nested2>\r\n```\r\n\r\nWhat should be printed?\r\n\r\n(I'm adding some indentation to the outputs to make them clearer).\r\n\r\n### Option 1 - Current behavior\r\n\r\nThe current behavior is the following.\r\n\r\n```\r\nSETUP <Class TestTop>\r\n    top\r\n    nested1\r\nTEARDOWN <Class TestTop>\r\nSETUP <Class TestNested2>\r\n    nested2\r\nTEARDOWN <Class TestNested2>\r\n```\r\n\r\n<details>\r\n<summary>Technical details why it happens</summary>\r\n\r\nEach fixture definition is pytest becomes a `FixtureDef` instance. In the example we have one `FixtureDef`, for `fix`.\r\n\r\nIn the current implementation, the `FixtureDef` itself holds a fixture's value (`cached_value`). When a fixture value is requested (`SubRequest.getfixturevalue()`), if the `FixtureDef`'s `cached_value` is not already set, it calculates it by running the fixture function. Then it schedules a finalizer on the fixture request's node (`request.node`) to clear the `cached_value`.\r\n\r\nIn the example:\r\n- `test_top` requests `fix` for the first time, which runs the fixture and schedules to clear `fix`'s `cached_result` when `TestTop` is torn down.\r\n- `test_nested1` requests `fix`. At this point the `fix` `FixtureDef` has `cached_value` set (since `TestTop`'s finalizer hasn't run yet), so it just uses it without rerunning the fixture. Then it schedules a finalizer to clear `fix` when `TestNested1` is torn down.\r\n- `TestNested1` is torn down which clears `fix`.\r\n- `test_nested2` requests `fix`. The `cached_value` is cleared so it reruns the fixture.\r\n- `TestNested2` is torn down, clears `fix`.\r\n- `TestTop` is torn down, wants to clear `cached_value`, but it is already cleared, goes :shrug: and continues.\r\n</details>\r\n\r\n### Option 2 - Nested scope\r\n\r\nNested classes/packages get their own scope, nested within the parent class/package scope.\r\n\r\n```\r\nSETUP <Class TestTop>\r\n    top\r\n    SETUP <Class TestNested1>\r\n        nested1\r\n    TEARDOWN <Class TestNested1>\r\n    SETUP <Class TestNested2>\r\n        nested2\r\n    TEARDOWN <Class TestNested2>\r\nTEARDOWN <Class TestTop>\r\n```\r\n\r\n### Option 3 - Independent scope\r\n\r\nNested classes/packages get their own scope, independent of the parent class/package.\r\n\r\n```\r\nSETUP <Class TestTop>\r\n    top\r\nTEARDOWN <Class TestTop>\r\nSETUP <Class TestNested1>\r\n    nested1\r\nTEARDOWN <Class TestNested1>\r\nSETUP <Class TestNested2>\r\n    nested2\r\nTEARDOWN <Class TestNested2>\r\n```\r\n\r\n### Option 4 - Shared scope\r\n\r\nNested classes do not have a scope of their own; same scope as the top class/package.\r\n\r\n```\r\nSETUP <Class TestTop>\r\n    top\r\n    nested1\r\n    nested2\r\nTEARDOWN <Class TestNested2>\r\n```\r\n\r\n### My opinion\r\n\r\nOption 1 seems broken to me, I don't think there's any case to be made for it.\r\n\r\nOption 2 is my preference, I think it's the most coherent with the collection tree, lexical/filesystem layout and is pretty intuitive, for both packages and classes.\r\n\r\nOption 3 I think is not intuitive, i.e. I think most would not expect fixtures to behave this way. It imposes some restrictions on tests ordering between the class and nested. Note that currently due to #7777, Packages work like this in practice.\r\n\r\nOption 4 would be my second choice, it does make sense logically (that what if there is no `test_top`?), but I think it's less intuitive than Option 2.\r\n\r\nI can write more but don't want to make this too long.",
      "state": "OPEN",
      "createdAt": "2023-07-13T15:35:54Z",
      "updatedAt": "2023-12-02T20:08:16Z",
      "closedAt": null,
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "topic: fixtures"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 11202,
      "title": "some test cases not being found when running pytest.main(['--co']) due to Unicode-encoded test case names",
      "body": "- [ ] a detailed description of the bug or problem you are having\r\nwhy test_cases/test_product/demo/demo7_pytest_main.py::TestClass_A::test_demo[\\u6d4b\\u8bd5\\u7528\\u4f8b\\u540d\\u79f0P2] in case_list was not found in the specified module. but in case_list02 it was found\r\n```\r\n#demo.py\r\nclass TestClass_A: \r\n   @pytest.mark.parametrize(\"case_lel,id,\", [('\u6d4b\u8bd5\u7528\u4f8b\u540d\u79f0P0',0),('\u6d4b\u8bd5\u7528\u4f8b\u540d\u79f0P1',6),('hzhzhzhzP0',1),('\u6d4b\u8bd5\u7528\u4f8b\u540d\u79f0P2',2),('hzhzhzhzP2',3)],ids=[('\u6d4b\u8bd5\u7528\u4f8b\u540d\u79f0P0'),('\u6d4b\u8bd5\u7528\u4f8b\u540d\u79f0P1'),('hzhzhzhzP0'),('\u6d4b\u8bd5\u7528\u4f8b\u540d\u79f0P2'),('hzhzhzhzP2')]) \r\n   def test_demo(self,case_lel,id): \r\n          print(id) \r\nif __name__ == '__main__': \r\n   case_list=['demo/demo7_pytest_main.py::TestClass_A::test_demo[\\\\u6d4b\\\\u8bd5\\\\u7528\\\\u4f8b\\\\u540d\\\\u79f0P0]','demo/demo7_pytest_main.py::TestClass_A::test_demo[\\\\u6d4b\\\\u8bd5\\\\u7528\\\\u4f8b\\\\u540d\\\\u79f0P1]', 'demo/demo7_pytest_main.py::TestClass_A::test_demo[hzhzhzhzP0]', 'demo/demo7_pytest_main.py::TestClass_A::test_demo[\\\\u6d4b\\\\u8bd5\\\\u7528\\\\u4f8b\\\\u540d\\\\u79f0P2]', 'demo/demo7_pytest_main.py::TestClass_A::test_demo[hzhzhzhzP2]'] \r\n   for i in case_list: \r\n         pytest.main([i,'--co'])\r\n\r\n\r\n========================================================================= test session starts ==========================================================================\r\nplatform win32 -- Python 3.10.3, pytest-6.2.4, py-1.10.0, pluggy-0.13.1\r\nrootdir: d:\\autotest\\interface-autotest-pytest, configfile: pytest.ini\r\nplugins: allure-pytest-2.9.43, anyio-3.6.2, Faker-15.2.0, forked-1.3.0, ordering-0.6, parallel-0.0.10, repeat-0.9.1, rerunfailures-10.0, timeout-2.1.0, xdist-2.3.0      \r\ncollecting ... 2023-07-13 10:20:06,453 [pid:53784] INFO [FILE:conftest.py:271 FUN:pytest_collection_modifyitems]: \u6d4b\u8bd5\u7528\u4f8b\u540d\u79f0\uff1a['test_demo[\u6d4b\u8bd5\u7528\u4f8b\u540d\u79f0P0]']\r\n2023-07-13 10:20:06,453 [pid:53784] INFO [FILE:conftest.py:272 FUN:pytest_collection_modifyitems]: \u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u8def\u5f84\uff1a['test_cases/test_product/demo/demo7_pytest_main.py::TestClass_A::test_demo[\u6d4b\u8bd5\u7528\u4f8b\u540d\u79f0P0]']\r\ncollected 1 item                                                                                                                                                         \r\n\r\n<Package demo>\r\n  <Module demo7_pytest_main.py>\r\n    <Class TestClass_A>\r\n        <Function test_demo[\u6d4b\u8bd5\u7528\u4f8b\u540d\u79f0P0]>\r\n\r\n\u6536\u96c6\u6d4b\u8bd5\u7528\u4f8b\u7ed3\u679c\r\n2023-07-13 10:20:06,457 [pid:53784] INFO [FILE:conftest.py:74 FUN:pytest_terminal_summary]: total: 1; passed: 0; failed: 0; skipped: 0; error: 0; duration: 0.03\r\n====================================================================== 1 test collected in 0.03s ======================================================================= \r\n========================================================================= test session starts ==========================================================================\r\nplatform win32 -- Python 3.10.3, pytest-6.2.4, py-1.10.0, pluggy-0.13.1\r\nrootdir: d:\\autotest\\interface-autotest-pytest, configfile: pytest.ini\r\nplugins: allure-pytest-2.9.43, anyio-3.6.2, Faker-15.2.0, forked-1.3.0, ordering-0.6, parallel-0.0.10, repeat-0.9.1, rerunfailures-10.0, timeout-2.1.0, xdist-2.3.0      \r\ncollected 0 items                                                                                                                                                        \r\n\r\n\u6536\u96c6\u6d4b\u8bd5\u7528\u4f8b\u7ed3\u679c\r\n2023-07-13 10:20:06,557 [pid:53784] INFO [FILE:conftest.py:74 FUN:pytest_terminal_summary]: total: 0; passed: 0; failed: 0; skipped: 0; error: 0; duration: 0.02\r\n===================================================================== no tests collected in 0.03s ====================================================================== \r\nERROR: not found: d:\\autotest\\interface-autotest-pytest\\test_cases\\test_product\\demo\\demo7_pytest_main.py::TestClass_A::test_demo[\\u6d4b\\u8bd5\\u7528\\u4f8b\\u540d\\u79f0P1](no name 'd:\\\\autotest\\\\interface-autotest-pytest\\\\test_cases\\\\test_product\\\\demo\\\\demo7_pytest_main.py::TestClass_A::test_demo[\\\\u6d4b\\\\u8bd5\\\\u7528\\\\u4f8b\\\\u540d\\\\u79f0P1]' in any of [<Module demo7_pytest_main.py>])\r\n\r\n========================================================================= test session starts ==========================================================================\r\nplatform win32 -- Python 3.10.3, pytest-6.2.4, py-1.10.0, pluggy-0.13.1\r\nrootdir: d:\\autotest\\interface-autotest-pytest, configfile: pytest.ini\r\nplugins: allure-pytest-2.9.43, anyio-3.6.2, Faker-15.2.0, forked-1.3.0, ordering-0.6, parallel-0.0.10, repeat-0.9.1, rerunfailures-10.0, timeout-2.1.0, xdist-2.3.0      \r\ncollecting ... 2023-07-13 10:20:06,665 [pid:53784] INFO [FILE:conftest.py:271 FUN:pytest_collection_modifyitems]: \u6d4b\u8bd5\u7528\u4f8b\u540d\u79f0\uff1a['test_demo[hzhzhzhzP0]']\r\n2023-07-13 10:20:06,665 [pid:53784] INFO [FILE:conftest.py:272 FUN:pytest_collection_modifyitems]: \u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u8def\u5f84\uff1a['test_cases/test_product/demo/demo7_pytest_main.py::TestClass_A::test_demo[hzhzhzhzP0]']\r\ncollected 1 item                                                                                                                                                         \r\n\r\n<Package demo>\r\n  <Module demo7_pytest_main.py>\r\n    <Class TestClass_A>\r\n        <Function test_demo[hzhzhzhzP0]>\r\n\r\n\u6536\u96c6\u6d4b\u8bd5\u7528\u4f8b\u7ed3\u679c\r\n2023-07-13 10:20:06,670 [pid:53784] INFO [FILE:conftest.py:74 FUN:pytest_terminal_summary]: total: 1; passed: 0; failed: 0; skipped: 0; error: 0; duration: 0.03\r\n====================================================================== 1 test collected in 0.03s ======================================================================= \r\n========================================================================= test session starts ==========================================================================\r\nplatform win32 -- Python 3.10.3, pytest-6.2.4, py-1.10.0, pluggy-0.13.1\r\nrootdir: d:\\autotest\\interface-autotest-pytest, configfile: pytest.ini\r\nplugins: allure-pytest-2.9.43, anyio-3.6.2, Faker-15.2.0, forked-1.3.0, ordering-0.6, parallel-0.0.10, repeat-0.9.1, rerunfailures-10.0, timeout-2.1.0, xdist-2.3.0      \r\ncollected 0 items                                                                                                                                                        \r\n\r\n\u6536\u96c6\u6d4b\u8bd5\u7528\u4f8b\u7ed3\u679c\r\n2023-07-13 10:20:06,780 [pid:53784] INFO [FILE:conftest.py:74 FUN:pytest_terminal_summary]: total: 0; passed: 0; failed: 0; skipped: 0; error: 0; duration: 0.02\r\n===================================================================== no tests collected in 0.02s ====================================================================== \r\nERROR: not found: d:\\autotest\\interface-autotest-pytest\\test_cases\\test_product\\demo\\demo7_pytest_main.py::TestClass_A::test_demo[\\u6d4b\\u8bd5\\u7528\\u4f8b\\u540d\\u79f0P2](no name 'd:\\\\autotest\\\\interface-autotest-pytest\\\\test_cases\\\\test_product\\\\demo\\\\demo7_pytest_main.py::TestClass_A::test_demo[\\\\u6d4b\\\\u8bd5\\\\u7528\\\\u4f8b\\\\u540d\\\\u79f0P2]' in any of [<Module demo7_pytest_main.py>])\r\n\r\n========================================================================= test session starts ==========================================================================\r\nplatform win32 -- Python 3.10.3, pytest-6.2.4, py-1.10.0, pluggy-0.13.1\r\nrootdir: d:\\autotest\\interface-autotest-pytest, configfile: pytest.ini\r\nplugins: allure-pytest-2.9.43, anyio-3.6.2, Faker-15.2.0, forked-1.3.0, ordering-0.6, parallel-0.0.10, repeat-0.9.1, rerunfailures-10.0, timeout-2.1.0, xdist-2.3.0      \r\ncollecting ... 2023-07-13 10:20:06,892 [pid:53784] INFO [FILE:conftest.py:271 FUN:pytest_collection_modifyitems]: \u6d4b\u8bd5\u7528\u4f8b\u540d\u79f0\uff1a['test_demo[hzhzhzhzP2]']\r\n2023-07-13 10:20:06,892 [pid:53784] INFO [FILE:conftest.py:272 FUN:pytest_collection_modifyitems]: \u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u8def\u5f84\uff1a['test_cases/test_product/demo/demo7_pytest_main.py::TestClass_A::test_demo[hzhzhzhzP2]']\r\ncollected 1 item                                                                                                                                                         \r\n\r\n<Package demo>\r\n  <Module demo7_pytest_main.py>\r\n    <Class TestClass_A>\r\n        <Function test_demo[hzhzhzhzP2]>\r\n\r\n\u6536\u96c6\u6d4b\u8bd5\u7528\u4f8b\u7ed3\u679c\r\n2023-07-13 10:20:06,897 [pid:53784] INFO [FILE:conftest.py:74 FUN:pytest_terminal_summary]: total: 1; passed: 0; failed: 0; skipped: 0; error: 0; duration: 0.03\r\n====================================================================== 1 test collected in 0.03s ======================================================================= \r\n```\r\n\r\n```\r\n#demo02.py\r\nclass TestClass_A: \r\n   @pytest.mark.parametrize(\"case_lel,id,\", [('\u6d4b\u8bd5\u7528\u4f8b\u540d\u79f0P0',0),('\u6d4b\u8bd5\u7528\u4f8b\u540d\u79f0P1',6),('hzhzhzhzP0',1),('\u6d4b\u8bd5\u7528\u4f8b\u540d\u79f0P2',2),('hzhzhzhzP2',3)],ids=[('\u6d4b\u8bd5\u7528\u4f8b\u540d\u79f0P0'),('\u6d4b\u8bd5\u7528\u4f8b\u540d\u79f0P1'),('hzhzhzhzP0'),('\u6d4b\u8bd5\u7528\u4f8b\u540d\u79f0P2'),('hzhzhzhzP2')]) \r\n   def test_demo(self,case_lel,id): \r\n          print(id) \r\nif __name__ == '__main__': \r\n   case_list02 =['demo7_pytest_main.py::TestClass_A::test_demo[\\\\u6d4b\\\\u8bd5\\\\u7528\\\\u4f8b\\\\u540d\\\\u79f0P2]']\r\n   for i in case_list: \r\n         pytest.main([i,'--co'])\r\n\r\n\r\n======================================================================== test session starts ==========================================================================\r\nplatform win32 -- Python 3.10.3, pytest-6.2.4, py-1.10.0, pluggy-0.13.1\r\nrootdir: d:\\autotest\\interface-autotest-pytest, configfile: pytest.ini\r\nplugins: allure-pytest-2.9.43, anyio-3.6.2, Faker-15.2.0, forked-1.3.0, ordering-0.6, parallel-0.0.10, repeat-0.9.1, rerunfailures-10.0, timeout-2.1.0, xdist-2.3.0      \r\ncollecting ... 2023-07-13 10:17:13,975 [pid:61924] INFO [FILE:conftest.py:271 FUN:pytest_collection_modifyitems]: \u6d4b\u8bd5\u7528\u4f8b\u540d\u79f0\uff1a['test_demo[\u6d4b\u8bd5\u7528\u4f8b\u540d\u79f0P2]']\r\n2023-07-13 10:17:13,975 [pid:61924] INFO [FILE:conftest.py:272 FUN:pytest_collection_modifyitems]: \u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u8def\u5f84\uff1a['test_cases/test_product/demo/demo7_pytest_main.py::TestClass_A::test_demo[\u6d4b\u8bd5\u7528\u4f8b\u540d\u79f0P2]']\r\ncollected 1 item                                                                                                                                                         \r\n\r\n<Package demo>\r\n  <Module demo7_pytest_main.py>\r\n    <Class TestClass_A>\r\n        <Function test_demo[\u6d4b\u8bd5\u7528\u4f8b\u540d\u79f0P2]>\r\n\r\n\u6536\u96c6\u6d4b\u8bd5\u7528\u4f8b\u7ed3\u679c\r\n2023-07-13 10:17:13,979 [pid:61924] INFO [FILE:conftest.py:74 FUN:pytest_terminal_summary]: total: 1; passed: 0; failed: 0; skipped: 0; error: 0; duration: 0.03\r\n```\r\n\r\n- [ ] output of `pip list` from the virtual environment you are using\r\n```\r\nPackage                   Version\r\nallure-pytest             2.9.43\r\nallure-python-commons     2.9.43\r\naltgraph                  0.17.2\r\nanyio                     3.6.2\r\narrow                     1.2.3\r\nasgiref                   3.6.0\r\nastroid                   2.15.1\r\nasync-timeout             4.0.2\r\natomicwrites              1.4.0\r\nattrs                     21.2.0\r\nautopep8                  2.0.2\r\nbcrypt                    4.0.1\r\ncertifi                   2021.5.30\r\ncffi                      1.15.1\r\nchardet                   4.0.0\r\ncharset-normalizer        2.0.12\r\nclick                     8.1.3\r\ncolorama                  0.4.4\r\nconf                      0.4.1\r\nconfigobj                 5.0.6\r\nconfigparser              5.2.0\r\ncontourpy                 1.0.6\r\ncryptography              38.0.1\r\ncx-Oracle                 8.3.0\r\ncycler                    0.11.0\r\ndataclasses               0.6\r\nDeprecated                1.2.13\r\ndill                      0.3.6\r\ndistlib                   0.3.4\r\nDjango                    4.1.7\r\ndjangorestframework       3.14.0\r\ndocstring-to-markdown     0.12\r\ndvadmin-ak-sk             1.0.0\r\ndynaconf                  3.1.4\r\net-xmlfile                1.1.0\r\nexceptiongroup            1.1.1\r\nexecnet                   1.9.0\r\nFaker                     15.2.0\r\nfastapi                   0.89.1\r\nfilelock                  3.6.0\r\nflake8                    6.0.0\r\nfonttools                 4.38.0\r\nfuture                    0.18.2\r\ngevent                    22.10.1\r\ngreenlet                  1.1.3.post0\r\nh11                       0.14.0\r\nidna                      2.10\r\niniconfig                 1.1.1\r\nisort                     5.12.0\r\njedi                      0.18.2\r\nJPype1                    1.4.0\r\njsonpath                  0.82\r\nkiwisolver                1.4.4\r\nlazy-object-proxy         1.9.0\r\nlxml                      4.9.2\r\nmatplotlib                3.6.2\r\nmccabe                    0.7.0\r\nnumpy                     1.22.3\r\nopenpyxl                  3.0.10\r\npackaging                 20.9\r\npandas                    1.4.2\r\nparamiko                  2.11.0\r\nparso                     0.8.3\r\npefile                    2021.9.3\r\npika                      1.3.0\r\nPillow                    9.3.0\r\npip                       22.3.1\r\nplatformdirs              2.5.2\r\npluggy                    0.13.1\r\npsycopg2                  2.9.3\r\npy                        1.10.0\r\npyasn1                    0.4.8\r\npycodestyle               2.10.0\r\npycparser                 2.21\r\npycryptodome              3.14.1\r\npydantic                  1.10.4\r\npydocstyle                6.3.0\r\npyflakes                  3.0.1\r\npyinstaller               4.10\r\npyinstaller-hooks-contrib 2022.3\r\npylint                    2.17.1\r\npymongo                   4.2.0\r\nPyMySQL                   1.0.2\r\nPyNaCl                    1.5.0\r\npyparsing                 2.4.7\r\npytest                    6.2.4\r\npytest-forked             1.3.0\r\npytest-ordering           0.6\r\npytest-parallel           0.0.10\r\npytest-repeat             0.9.1\r\npytest-rerunfailures      10.0\r\npytest-timeout            2.1.0\r\npytest-xdist              2.3.0\r\npython-dateutil           2.8.2\r\npython-editor             1.0.4\r\npython-lsp-jsonrpc        1.0.0\r\npython-lsp-server         1.7.2\r\npytoolconfig              1.2.5\r\npytz                      2023.3\r\npywin32-ctypes            0.2.0\r\nPyYAML                    6.0\r\nredis                     4.3.4\r\nredis-py-cluster          2.1.3\r\nrequests                  2.27.1\r\nrope                      1.7.0\r\nrsa                       4.8\r\nruamel.yaml               0.16.12\r\nsetuptools                62.1.0\r\nsix                       1.16.0\r\nsniffio                   1.3.0\r\nsnowballstemmer           2.2.0\r\nsqlparse                  0.4.3\r\nstarlette                 0.22.0\r\ntblib                     1.7.0\r\ntoml                      0.10.2\r\ntomli                     2.0.1\r\ntomlkit                   0.11.7\r\ntyping_extensions         4.4.0\r\ntzdata                    2022.7\r\nujson                     5.7.0\r\nurllib3                   1.26.6\r\nuvicorn                   0.20.0\r\nvirtualenv                20.14.1\r\nwhatthepatch              1.0.4\r\nwrapt                     1.14.1\r\nxlrd                      2.0.1\r\nxlrd2                     1.3.4\r\nxlwt                      1.3.0\r\nXMind                     1.2.0\r\nxmindparser               1.0.9\r\nyapf                      0.32.0\r\nzope.event                4.5.0\r\nzope.interface            5.5.0\r\n```\r\n- [ ] pytest and operating system versions\r\n```\r\nplatform linux  \r\nPython 3.8.8, \r\npytest-6.2.4, \r\npy-1.10.0, \r\npluggy-0.13.1 \r\n```",
      "state": "OPEN",
      "createdAt": "2023-07-13T02:34:43Z",
      "updatedAt": "2023-07-24T07:36:58Z",
      "closedAt": null,
      "author": {
        "login": "wang1150297847"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "topic: collection"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      }
    },
    {
      "number": 11201,
      "title": "7.4.0: pytest is failing with internal error on testing `mypy` (possible bug in pytest?)",
      "body": "- [x] a detailed description of the bug or problem you are having\r\n- [x] output of `pip list` from the virtual environment you are using\r\n- [x] pytest and operating system versions\r\n- [x] minimal example if possible\r\n\r\nI'm packaging `mypy` as the rpm package so I'm using the typical PEP517 based build, install and test cycle used on building packages from non-root account.\r\n- `python3 -sBm build -w --no-isolation`\r\n- because I'm calling `build` with `--no-isolation` I'm using during all processes only locally installed modules\r\n- install .whl file in </install/prefix> using 'installer` module\r\n- run pytest with $PYTHONPATH pointing to sitearch and sitelib inside </install/prefix>\r\n- build is performed in env which is *`cut off from access to the public network`* (pytest is executed with `-m \"not network\"`)\r\n\r\nHere is pytest output:\r\n<details>\r\n\r\n```console\r\n+ PYTHONPATH=/home/tkloczko/rpmbuild/BUILDROOT/python-mypy-1.4.1-3.fc35.x86_64/usr/lib64/python3.8/site-packages:/home/tkloczko/rpmbuild/BUILDROOT/python-mypy-1.4.1-3.fc35.x86_64/usr/lib/python3.8/site-packages\r\n+ /usr/bin/pytest -ra -m 'not network' -vvv\r\n==================================================================================== test session starts ====================================================================================\r\nplatform linux -- Python 3.8.17, pytest-7.4.0, pluggy-1.0.0 -- /usr/bin/python3\r\ncachedir: .pytest_cache\r\nrootdir: /home/tkloczko/rpmbuild/BUILD/mypy-1.4.1\r\nconfigfile: pytest.ini\r\ntestpaths: mypy/test, mypyc/test\r\nplugins: cov-4.0.0, xdist-3.3.1, forked-1.6.0\r\n24 workers [11206 items]\r\nscheduling tests via LoadScheduling\r\n\r\nmypy/test/test_find_sources.py::SourceFinderSuite::test_crawl_namespace\r\nmypy/test/testcheck.py::TypeCheckSuite::check-classes.test::testTypeUsingTypeCInUpperBound <- test-data/unit/check-classes.test\r\n[gw0] [  0%] PASSED mypy/test/test_find_sources.py::SourceFinderSuite::test_crawl_namespace\r\nmypy/test/test_find_sources.py::SourceFinderSuite::test_crawl_namespace_explicit_base\r\n[gw0] [  0%] PASSED mypy/test/test_find_sources.py::SourceFinderSuite::test_crawl_namespace_explicit_base\r\nmypy/test/test_find_sources.py::SourceFinderSuite::test_crawl_namespace_multi_dir\r\nmypy/test/testcheck.py::TypeCheckSuite::check-dynamic-typing.test::testImplicitGlobalFunctionSignature <- test-data/unit/check-dynamic-typing.test\r\nmypy/test/testcheck.py::TypeCheckSuite::check-enum.test::testFinalWithDunderAssignment <- test-data/unit/check-enum.test\r\nmypy/test/testcheck.py::TypeCheckSuite::check-annotated.test::testAnnotatedAliasGenericUnion <- test-data/unit/check-annotated.test\r\nmypy/test/testcheck.py::TypeCheckSuite::check-classes.test::testDescriptorDunderSetWrongArgTypes <- test-data/unit/check-classes.test\r\nmypy/test/testcheck.py::TypeCheckSuite::check-columns.test::testColumnReturnValueExpected <- test-data/unit/check-columns.test\r\nmypy/test/testcheck.py::TypeCheckSuite::check-bound.test::testBoundHigherOrderWithVoid <- test-data/unit/check-bound.test\r\n[gw0] [  0%] PASSED mypy/test/test_find_sources.py::SourceFinderSuite::test_crawl_namespace_multi_dir\r\nmypy/test/test_find_sources.py::SourceFinderSuite::test_crawl_no_namespace\r\n\r\n[..]\r\n\r\n[gw0] [ 67%] SKIPPED mypy/test/testfinegrainedcache.py::FineGrainedCacheSuite::fine-grained-follow-imports.test::testFollowImportsNormalAddSuppressed3_cached <- test-data/unit/fine-grained-follow-imports.test\r\nmypy/test/testfinegrainedcache.py::FineGrainedCacheSuite::fine-grained-follow-imports.test::testFollowImportsNormalEditingFileBringNewModule_cached <- test-data/unit/fine-grained-follow-imports.test\r\nINTERNALERROR> def worker_internal_error(self, node, formatted_error):\r\nINTERNALERROR>         \"\"\"\r\nINTERNALERROR>         pytest_internalerror() was called on the worker.\r\nINTERNALERROR>\r\nINTERNALERROR>         pytest_internalerror() arguments are an excinfo and an excrepr, which can't\r\nINTERNALERROR>         be serialized, so we go with a poor man's solution of raising an exception\r\nINTERNALERROR>         here ourselves using the formatted message.\r\nINTERNALERROR>         \"\"\"\r\nINTERNALERROR>         self._active_nodes.remove(node)\r\nINTERNALERROR>         try:\r\nINTERNALERROR> >           assert False, formatted_error\r\nINTERNALERROR> E           AssertionError: Traceback (most recent call last):\r\nINTERNALERROR> E               File \"/usr/lib/python3.8/site-packages/_pytest/main.py\", line 270, in wrap_session\r\nINTERNALERROR> E                 session.exitstatus = doit(config, session) or 0\r\nINTERNALERROR> E               File \"/usr/lib/python3.8/site-packages/_pytest/main.py\", line 324, in _main\r\nINTERNALERROR> E                 config.hook.pytest_runtestloop(session=session)\r\nINTERNALERROR> E               File \"/usr/lib/python3.8/site-packages/pluggy/_hooks.py\", line 265, in __call__\r\nINTERNALERROR> E                 return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\r\nINTERNALERROR> E               File \"/usr/lib/python3.8/site-packages/pluggy/_manager.py\", line 80, in _hookexec\r\nINTERNALERROR> E                 return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\r\nINTERNALERROR> E               File \"/usr/lib/python3.8/site-packages/pluggy/_callers.py\", line 60, in _multicall\r\nINTERNALERROR> E                 return outcome.get_result()\r\nINTERNALERROR> E               File \"/usr/lib/python3.8/site-packages/pluggy/_result.py\", line 60, in get_result\r\nINTERNALERROR> E                 raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR> E               File \"/usr/lib/python3.8/site-packages/pluggy/_callers.py\", line 39, in _multicall\r\nINTERNALERROR> E                 res = hook_impl.function(*args)\r\nINTERNALERROR> E               File \"/usr/lib/python3.8/site-packages/xdist/remote.py\", line 157, in pytest_runtestloop\r\nINTERNALERROR> E                 self.run_one_test()\r\nINTERNALERROR> E               File \"/usr/lib/python3.8/site-packages/xdist/remote.py\", line 174, in run_one_test\r\nINTERNALERROR> E                 self.config.hook.pytest_runtest_protocol(item=item, nextitem=nextitem)\r\nINTERNALERROR> E               File \"/usr/lib/python3.8/site-packages/pluggy/_hooks.py\", line 265, in __call__\r\nINTERNALERROR> E                 return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\r\nINTERNALERROR> E               File \"/usr/lib/python3.8/site-packages/pluggy/_manager.py\", line 80, in _hookexec\r\nINTERNALERROR> E                 return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\r\nINTERNALERROR> E               File \"/usr/lib/python3.8/site-packages/pluggy/_callers.py\", line 60, in _multicall\r\nINTERNALERROR> E                 return outcome.get_result()\r\nINTERNALERROR> E               File \"/usr/lib/python3.8/site-packages/pluggy/_result.py\", line 60, in get_result\r\nINTERNALERROR> E                 raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR> E               File \"/usr/lib/python3.8/site-packages/pluggy/_callers.py\", line 39, in _multicall\r\nINTERNALERROR> E                 res = hook_impl.function(*args)\r\nINTERNALERROR> E               File \"/usr/lib/python3.8/site-packages/_pytest/runner.py\", line 114, in pytest_runtest_protocol\r\nINTERNALERROR> E                 runtestprotocol(item, nextitem=nextitem)\r\nINTERNALERROR> E               File \"/usr/lib/python3.8/site-packages/_pytest/runner.py\", line 133, in runtestprotocol\r\nINTERNALERROR> E                 reports.append(call_and_report(item, \"call\", log))\r\nINTERNALERROR> E               File \"/usr/lib/python3.8/site-packages/_pytest/runner.py\", line 224, in call_and_report\r\nINTERNALERROR> E                 report: TestReport = hook.pytest_runtest_makereport(item=item, call=call)\r\nINTERNALERROR> E               File \"/usr/lib/python3.8/site-packages/pluggy/_hooks.py\", line 265, in __call__\r\nINTERNALERROR> E                 return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\r\nINTERNALERROR> E               File \"/usr/lib/python3.8/site-packages/pluggy/_manager.py\", line 80, in _hookexec\r\nINTERNALERROR> E                 return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\r\nINTERNALERROR> E               File \"/usr/lib/python3.8/site-packages/pluggy/_callers.py\", line 55, in _multicall\r\nINTERNALERROR> E                 gen.send(outcome)\r\nINTERNALERROR> E               File \"/usr/lib/python3.8/site-packages/_pytest/skipping.py\", line 266, in pytest_runtest_makereport\r\nINTERNALERROR> E                 rep = outcome.get_result()\r\nINTERNALERROR> E               File \"/usr/lib/python3.8/site-packages/pluggy/_result.py\", line 60, in get_result\r\nINTERNALERROR> E                 raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR> E               File \"/usr/lib/python3.8/site-packages/pluggy/_callers.py\", line 39, in _multicall\r\nINTERNALERROR> E                 res = hook_impl.function(*args)\r\nINTERNALERROR> E               File \"/usr/lib/python3.8/site-packages/_pytest/runner.py\", line 368, in pytest_runtest_makereport\r\nINTERNALERROR> E                 return TestReport.from_item_and_call(item, call)\r\nINTERNALERROR> E               File \"/usr/lib/python3.8/site-packages/_pytest/reports.py\", line 362, in from_item_and_call\r\nINTERNALERROR> E                 longrepr = item.repr_failure(excinfo)\r\nINTERNALERROR> E               File \"/home/tkloczko/rpmbuild/BUILD/mypy-1.4.1/mypy/test/data.py\", line 392, in repr_failure\r\nINTERNALERROR> E                 self.parent._prunetraceback(excinfo)\r\nINTERNALERROR> E             AttributeError: 'DataFileCollector' object has no attribute '_prunetraceback'\r\nINTERNALERROR> E           assert False\r\nINTERNALERROR>\r\nINTERNALERROR> /usr/lib/python3.8/site-packages/xdist/dsession.py:197: AssertionError\r\n[gw21] [ 67%] PASSED mypy/test/testfinegrainedcache.py::FineGrainedCacheSuite::fine-grained.test::testMakeClassNoLongerAbstract1_cached <- test-data/unit/fine-grained.test\r\nmypy/test/testfinegrainedcache.py::FineGrainedCacheSuite::fine-grained.test::testMakeClassNoLongerAbstract2_cached <- test-data/unit/fine-grained.test\r\nINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"/usr/lib/python3.8/site-packages/_pytest/main.py\", line 270, in wrap_session\r\nINTERNALERROR>     session.exitstatus = doit(config, session) or 0\r\nINTERNALERROR>   File \"/usr/lib/python3.8/site-packages/_pytest/main.py\", line 324, in _main\r\nINTERNALERROR>     config.hook.pytest_runtestloop(session=session)\r\nINTERNALERROR>   File \"/usr/lib/python3.8/site-packages/pluggy/_hooks.py\", line 265, in __call__\r\nINTERNALERROR>     return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\r\nINTERNALERROR>   File \"/usr/lib/python3.8/site-packages/pluggy/_manager.py\", line 80, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\r\nINTERNALERROR>   File \"/usr/lib/python3.8/site-packages/pluggy/_callers.py\", line 60, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"/usr/lib/python3.8/site-packages/pluggy/_result.py\", line 60, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/usr/lib/python3.8/site-packages/pluggy/_callers.py\", line 39, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/usr/lib/python3.8/site-packages/xdist/dsession.py\", line 122, in pytest_runtestloop\r\nINTERNALERROR>     self.loop_once()\r\nINTERNALERROR>   File \"/usr/lib/python3.8/site-packages/xdist/dsession.py\", line 145, in loop_once\r\nINTERNALERROR>     call(**kwargs)\r\nINTERNALERROR>   File \"/usr/lib/python3.8/site-packages/xdist/dsession.py\", line 184, in worker_workerfinished\r\nINTERNALERROR>     assert not crashitem, (crashitem, node)\r\nINTERNALERROR> AssertionError: ('mypy/test/testpep561.py::PEP561Suite::pep561.test::testTypedPkg_config_nositepackages', <WorkerController gw9>)\r\nINTERNALERROR> assert not 'mypy/test/testpep561.py::PEP561Suite::pep561.test::testTypedPkg_config_nositepackages'\r\n\r\n======================================================================= 7476 passed, 133 skipped, 6 xfailed in 43.78s =======================================================================\r\n```\r\n</details>\r\n\r\nHere is list of installed modules in build env\r\n<details>\r\n\r\n```console\r\nPackage                       Version\r\n----------------------------- -------\r\nalabaster                     0.7.13\r\nast_decompiler                0.7.0\r\nasttokens                     2.2.1\r\nattrs                         23.1.0\r\nBabel                         2.12.1\r\nbackcall                      0.2.0\r\nbuild                         0.10.0\r\ncharset-normalizer            3.1.0\r\ncoverage                      7.2.7\r\ndecorator                     5.1.1\r\ndistlib                       0.3.6\r\ndistro                        1.8.0\r\ndocutils                      0.19\r\nexceptiongroup                1.1.1\r\nexecnet                       1.9.0\r\nexecuting                     1.2.0\r\nfilelock                      3.12.2\r\nflake8                        5.0.4\r\nflake8-bugbear                22.7.1\r\nflake8-pyi                    22.11.0\r\ngpg                           1.20.0\r\nidna                          3.4\r\nimagesize                     1.4.1\r\nimportlib-metadata            6.7.0\r\niniconfig                     2.0.0\r\ninstaller                     0.7.0\r\nipython                       8.12.0\r\njedi                          0.18.2\r\nJinja2                        3.1.2\r\nlibcomps                      0.1.19\r\nlxml                          4.9.3\r\nMarkupSafe                    2.1.2\r\nmatplotlib-inline             0.1.6\r\nmccabe                        0.7.0\r\nmypy-extensions               1.0.0\r\npackaging                     23.1\r\nparso                         0.8.3\r\npexpect                       4.8.0\r\npickleshare                   0.7.5\r\nplatformdirs                  3.8.1\r\npluggy                        1.0.0\r\nprompt-toolkit                3.0.38\r\npsutil                        5.9.2\r\nptyprocess                    0.7.0\r\npure-eval                     0.2.2\r\npy                            1.11.0\r\npycodestyle                   2.9.1\r\npyflakes                      2.5.0\r\nPygments                      2.15.1\r\npyproject_hooks               1.0.0\r\npytest                        7.4.0\r\npytest-cov                    4.0.0\r\npytest-forked                 1.6.0\r\npytest-xdist                  3.3.1\r\npython-dateutil               2.8.2\r\npytz                          2023.2\r\nrequests                      2.31.0\r\nsetuptools                    68.0.0\r\nsix                           1.16.0\r\nsnowballstemmer               2.2.0\r\nSphinx                        6.2.1\r\nsphinx-rtd-theme              1.2.1\r\nsphinxcontrib-applehelp       1.0.4\r\nsphinxcontrib-devhelp         1.0.2\r\nsphinxcontrib-htmlhelp        2.0.0\r\nsphinxcontrib-jquery          4.1\r\nsphinxcontrib-jsmath          1.0.1\r\nsphinxcontrib-qthelp          1.0.3\r\nsphinxcontrib-serializinghtml 1.1.5\r\nstack-data                    0.6.2\r\ntomli                         2.0.1\r\ntraitlets                     5.9.0\r\ntyped-ast                     1.5.4\r\ntyping_extensions             4.7.1\r\nurllib3                       1.26.15\r\nvirtualenv                    20.23.1\r\nwcwidth                       0.2.6\r\nwheel                         0.40.0\r\nzipp                          3.15.0\r\n```\r\n</details>\r\n",
      "state": "CLOSED",
      "createdAt": "2023-07-12T09:47:02Z",
      "updatedAt": "2023-07-12T12:02:20Z",
      "closedAt": "2023-07-12T11:16:04Z",
      "author": {
        "login": "kloczek"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 4
      }
    },
    {
      "number": 11200,
      "title": "pytest_keyboard_interrupt called on collection error",
      "body": "### Discussed in https://github.com/pytest-dev/pytest/discussions/11199\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **eleanorjboyd** July 11, 2023</sup>\r\nQuick question on pytest_keyboard_interrupt. When I use a pytest plugin and the tests I am running my plugin on have a ModuleNotFoundError my plugin calls both the pytest_exception_interact hook and then the pytest_keyboard_interrupt hook. Why is pytest_keyboard_interrupt called for a ModuleNotFoundError? Is there any way to make it so it hits only one of the exception hooks? I am trying to keep track of the number of errors hit during discovery and a single error triggering two error hooks is making that more complicated. Also open to suggestions regarding another work-around. Thanks!</div>",
      "state": "OPEN",
      "createdAt": "2023-07-11T19:59:35Z",
      "updatedAt": "2023-07-23T13:35:29Z",
      "closedAt": null,
      "author": {
        "login": "The-Compiler"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "topic: collection"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 4
      }
    },
    {
      "number": 11198,
      "title": "when running several tests it appears that before one test is over other one starts",
      "body": "I have the following tests:\r\n\r\n```\r\nimport os\r\nimport tempfile\r\nfrom pathlib import Path\r\n\r\nimport pytest\r\nimport yaml\r\nimport torch\r\n\r\nfrom denoiser.models.create_model import Model\r\nfrom denoiser.models.create_model import read_config\r\nfrom denoiser.models.create_rnn_model import RNNCompatibleModel\r\nfrom denoiser.trainer.core import Trainer, RnnTrainWrapper, SingleFrameTrainWrapper\r\nfrom denoiser.trainer.losses.loss_handler import Loss\r\nfrom denoiser.trainer.losses.memory_range_loss import MemoryRangeLoss\r\nfrom denoiser.trainer.losses.motion_loss import MotionLoss\r\nfrom denoiser.trainer.losses.l1_loss import L1Loss\r\n\r\nfrom tests.denoiser.simple_train_config import SimpleTrainerConfigInstance\r\n\r\n\r\ndef check_denoiser_train_dir(train_dir):\r\n    success = True\r\n    # check that all the directories has been created\r\n    success = success and sum([1 for _d in os.listdir(train_dir) if os.path.isdir(f'{train_dir}/{_d}')]) == 5\r\n    # check the amount of checkpoints is correct\r\n    success = success and sum([1 for _c in os.listdir(f'{train_dir}/checkpoints') if _c.endswith('.pt')]) == 2\r\n    return success\r\n\r\n\r\ndef correct_model_yaml(model_config, test_dir, model_name, num_input_channels):\r\n    cfg = read_config(model_config)\r\n    _inputs = []\r\n    for _in in cfg['input_names']:\r\n        if 'input_image' in _in:\r\n            _in['input_image'] = num_input_channels\r\n        _inputs.append(_in)\r\n\r\n    cfg['input_names'] = _inputs\r\n    cfg['model_architecture'][-1][-1]['out_channels'] = num_input_channels\r\n\r\n    # save the correct model yaml\r\n    with open(test_dir / f'model_{model_name}.yaml', 'w') as fp:\r\n        yaml.dump(cfg, fp, sort_keys=False)\r\n\r\n    return\r\n\r\n\r\ndef correct_datasets(cfg, is_compressed=False, is_sf=False):\r\n    # make sure the sampling will always match the amount of datasets\r\n    cfg.train_dataset_config.sampling = 'uniform'\r\n    cfg.train_dataset_config.debug_flag = False\r\n\r\n    # set the number of frame\r\n    if is_sf:\r\n        cfg.train_dataset_config.num_frames=1\r\n\r\n    # set dataset to compressed type\r\n    if is_compressed:\r\n        cfg.train_dataset_config.datasets_rules = [\r\n            (\"/fast6/share/POC/EmbeddedCam|LAPTOP-19AFT6AU/Static_single/High_snr/*\", {}),\r\n            (\"/fast6/share/POC/EmbeddedCam|DESKTOP-UT9UDPH/Static_single/Low_snr/*\", {}),\r\n        ]\r\n\r\n    return cfg\r\n\r\n\r\ndef correct_loss(cfg, is_compressed=False, is_sf=False):\r\n    losses = []\r\n    if is_sf or is_compressed:\r\n        losses.append(Loss(L1Loss()))\r\n    \r\n    if len(losses) > 0:\r\n        cfg.loss_fn = tuple(losses)\r\n    return cfg\r\n\r\n\r\ndef correct_transforms(cfg, is_compressed=False):\r\n    if is_compressed:\r\n        cfg.input_transform = None\r\n        cfg.output_transform = None\r\n        cfg.train_dataset_config.transform_params.remove_black_level = False\r\n        cfg.train_dataset_config.transform_params.remove_dead_pixels_on_gt = False\r\n    return cfg\r\n\r\n\r\n@pytest.mark.denoiser\r\ndef test_sf_bayer_training(tmp_path):\r\n    _config = SimpleTrainerConfigInstance()\r\n    \r\n    _config = correct_datasets(cfg=_config, is_sf=True)\r\n    _config = correct_loss(cfg=_config, is_sf=True)\r\n    _config = correct_transforms(cfg=_config)\r\n\r\n    _config.name = 'test_sf_bayer_training'\r\n    _config.output_path = str(tmp_path / _config.name)\r\n\r\n    correct_model_yaml('tests/denoiser/models/sf.yaml', tmp_path, _config.name, 4)\r\n    _config.model_config_path = str(tmp_path / f'model_{_config.name}.yaml')\r\n    _config.model = SingleFrameTrainWrapper(Model(_config.model_config_path))\r\n\r\n    Trainer(config=_config).train()\r\n    torch.cuda.empty_cache()\r\n    return check_denoiser_train_dir(_config.output_path)\r\n\r\n\r\n@pytest.mark.denoiser\r\ndef test_mf_bayer_training(tmp_path):\r\n    _config = SimpleTrainerConfigInstance()\r\n\r\n    _config = correct_datasets(cfg=_config)\r\n    _config = correct_loss(cfg=_config)\r\n    _config = correct_transforms(cfg=_config)\r\n\r\n    _config.name = 'test_mf_bayer_training'\r\n    _config.output_path = str(tmp_path / _config.name)\r\n\r\n    correct_model_yaml('tests/denoiser/models/mf.yaml', tmp_path, _config.name, 4)\r\n    _config.model_config_path = str(tmp_path / f'model_{_config.name}.yaml')\r\n    _config.model = RnnTrainWrapper(\r\n        RNNCompatibleModel(_config.model_config_path), rnn_warmup_min_iters=1, rnn_warmup_iters=2\r\n    )\r\n\r\n    Trainer(config=_config).train()\r\n    torch.cuda.empty_cache()\r\n    return check_denoiser_train_dir(_config.output_path)\r\n\r\n\r\n@pytest.mark.denoiser\r\ndef test_sf_compressed_training(tmp_path):\r\n    _config = SimpleTrainerConfigInstance()\r\n\r\n    _config = correct_datasets(cfg=_config, is_compressed=True, is_sf=True)\r\n    _config = correct_loss(cfg=_config, is_compressed=True, is_sf=True)\r\n    _config = correct_transforms(cfg=_config, is_compressed=True)\r\n\r\n    _config.name = 'test_sf_compressed_training'\r\n    _config.output_path = str(tmp_path / _config.name)\r\n\r\n    correct_model_yaml('tests/denoiser/models/sf.yaml', tmp_path, _config.name, 3)\r\n    _config.model_config_path = str(tmp_path / f'model_{_config.name}.yaml')\r\n    _config.model = SingleFrameTrainWrapper(Model(_config.model_config_path))\r\n\r\n    Trainer(config=_config).train()\r\n    torch.cuda.empty_cache()\r\n    return check_denoiser_train_dir(_config.output_path)\r\n\r\n\r\n@pytest.mark.denoiser\r\ndef test_mf_compressed_training(tmp_path):\r\n    _config = SimpleTrainerConfigInstance()\r\n\r\n    _config = correct_datasets(cfg=_config, is_compressed=True)\r\n    _config = correct_loss(cfg=_config, is_compressed=True)\r\n    _config = correct_transforms(cfg=_config, is_compressed=True)\r\n\r\n    _config.name = 'test_mf_compressed_training'\r\n    _config.output_path = str(tmp_path / _config.name)\r\n\r\n    correct_model_yaml('tests/denoiser/models/mf.yaml', tmp_path, _config.name, 3)\r\n    _config.model_config_path = str(tmp_path / f'model_{_config.name}.yaml')\r\n    _config.model = RnnTrainWrapper(\r\n        RNNCompatibleModel(_config.model_config_path), rnn_warmup_min_iters=1, rnn_warmup_iters=2\r\n    )\r\n\r\n    Trainer(config=_config).train()\r\n    torch.cuda.empty_cache()\r\n    return check_denoiser_train_dir(_config.output_path)\r\n\r\n\r\nif __name__ == '__main__':\r\n    with tempfile.TemporaryDirectory() as tempdir:\r\n        test_sf_bayer_training(Path(tempdir))\r\n        # test_mf_bayer_training(Path(tempdir))\r\n        # test_sf_compressed_training(Path(tempdir))\r\n        # test_mf_compressed_training(Path(tempdir))\r\n```\r\n\r\nWhen I run each of them they all pass.\r\nBut when I run them using: `pytest -m denoiser`\r\nThe first one passes and the other fails, now when I look at the logs of the Trainer I can see that the execution of the next test starts before the previous closed everything.\r\n\r\nIs there a way to make sure it doesn't happen or should use some internals to avoid this case? \r\n\r\n\r\n\r\n",
      "state": "CLOSED",
      "createdAt": "2023-07-11T18:08:08Z",
      "updatedAt": "2023-08-03T01:51:53Z",
      "closedAt": "2023-08-03T01:51:52Z",
      "author": {
        "login": "srikervai"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "status: needs information"
          },
          {
            "name": "stale"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 4
      }
    },
    {
      "number": 11194,
      "title": "unable to use filter with levelname",
      "body": "Hello,\r\n\r\nI have an issue where log filters are not working with level names. I looked for similar issues / solutions and couldn't find any.\r\n\r\nA minimal example:\r\n\r\n`pytest.ini` file:\r\n```\r\n[pytest]\r\nlog_cli = 1\r\nlog_cli_level = DEBUG\r\nlog_cli_format = %(levelname)-10s %(message)s\r\n```\r\n\r\nMinimal code snippet `test_example.py`\r\n```\r\nimport logging\r\n\r\n\r\nlogger = logging.getLogger(__name__)\r\n\r\n\r\ndef log_filter(record: logging.LogRecord) -> bool:\r\n    record.levelname = '[%s]' % record.levelname\r\n    return True\r\n\r\n\r\nlogger.addFilter(log_filter)\r\n\r\n\r\ndef test_logger():\r\n    logger.info('hello')\r\n```\r\n\r\nExpected output:\r\n```\r\n[INFO]       hello\r\n```\r\n\r\nActual output:\r\n```\r\nINFO       hello\r\n```\r\n\r\nOS: Ubuntu 22.04\r\npytest version: 7.2.1\r\n[pip_list.txt](https://github.com/pytest-dev/pytest/files/12010933/pip_list.txt)\r\n",
      "state": "CLOSED",
      "createdAt": "2023-07-11T05:25:39Z",
      "updatedAt": "2024-05-21T15:19:01Z",
      "closedAt": "2024-05-21T15:19:01Z",
      "author": {
        "login": "michael-123123"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "plugin: logging"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 7
      }
    },
    {
      "number": 11186,
      "title": "rootdir is not considered as expected",
      "body": "### note\r\n\r\nI made a repository to reproduce the bug: https://github.com/roeniss/pytest-bug-rootdir\r\n\r\n### issue\r\n\r\n```\r\n> tree \r\n.\r\n\u251c\u2500\u2500 settings\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 pytest.ini\r\n\u2514\u2500\u2500 test\r\n    \u2514\u2500\u2500 test_hello.py\r\n\r\n> pytest -c settings/pytest.ini\r\n=== test session starts === \r\nplatform darwin -- Python 3.11.4, pytest-7.4.0, pluggy-1.2.0\r\nrootdir: /Users/roeniss/tmp/pytest-error-reproduce/settings\r\nconfigfile: pytest.ini\r\ncollected 1 item\r\n\r\nsettings/test/test_hello.py .                                                                                                                       [100%\r\n\r\n=== 1 passed in 0.00s ===  \r\n```\r\n\r\nAs we can see above, `settings/test/test_hello.py` doesn't exist. I came up with some idea:\r\n\r\n1. `rootdir` is just a string placeholder for readability. It is set as the configuration's directory by default and does not affect any actual test run. So this is the expected output.\r\n2. `rootdir` is something that is considered as source root or test root, meaning that this is a real bug. What should happen here is that no test has run because `settings` directory has no test.\r\n3. `rootdir` is worked but somehow it fallbacks to root path because there is no test in settings or any reason. Then it starts finding test and find it, run, but sadly the output shows wrong directory. So the log-side should be fixed.\r\n\r\nI brought this bug here because I'm not sure what `rootdir` actually does. Is there any correct assumption on my thought?\r\n\r\n### versions\r\n\r\n```\r\n> pip list\r\nPackage    Version\r\n---------- -------\r\niniconfig  2.0.0\r\npackaging  23.1\r\npip        23.1.2\r\npluggy     1.2.0\r\npytest     7.4.0\r\nsetuptools 67.6.1\r\n\r\n> pytest --version\r\npytest 7.4.0\r\n\r\n> neofetch\r\n                    'c.          roeniss@Roenissui-MacBookAir-2.local\r\n                 ,xNMM.          ------------------------------------\r\n               .OMMMMo           OS: macOS 13.2.1 22D68 arm64\r\n               OMMM0,            Host: Mac14,2\r\n     .;loddo:' loolloddol;.      Kernel: 22.3.0\r\n   cKMMMMMMMMMMNWMMMMMMMMMM0:    Uptime: 5 days, 15 hours, 30 mins\r\n .KMMMMMMMMMMMMMMMMMMMMMMMWd.    Packages: 278 (brew)\r\n XMMMMMMMMMMMMMMMMMMMMMMMX.      Shell: zsh 5.8.1\r\n;MMMMMMMMMMMMMMMMMMMMMMMM:       Resolution: 2048x1152\r\n:MMMMMMMMMMMMMMMMMMMMMMMM:       DE: Aqua\r\n.MMMMMMMMMMMMMMMMMMMMMMMMX.      WM: Rectangle\r\n kMMMMMMMMMMMMMMMMMMMMMMMMWd.    Terminal: iTerm2\r\n .XMMMMMMMMMMMMMMMMMMMMMMMMMMk   Terminal Font: JetBrainsMono-Regular 11\r\n  .XMMMMMMMMMMMMMMMMMMMMMMMMK.   CPU: Apple M2\r\n    kMMMMMMMMMMMMMMMMMMMMMMd     GPU: Apple M2\r\n     ;KMMMMMMMWXXWMMMMMMMk.      Memory: 1487MiB / 8192MiB\r\n       .cooc,.    .,coo:.\r\n\r\n\r\n\r\n```\r\n\r\n<!--\r\nThanks for submitting an issue!\r\n\r\nQuick check-list while reporting bugs:\r\n-->\r\n\r\n- [x] a detailed description of the bug or problem you are having\r\n- [x] output of `pip list` from the virtual environment you are using\r\n- [x] pytest and operating system versions\r\n- [x] minimal example if possible\r\n",
      "state": "OPEN",
      "createdAt": "2023-07-09T08:01:21Z",
      "updatedAt": "2023-07-09T12:07:53Z",
      "closedAt": null,
      "author": {
        "login": "roeniss"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: bug"
          },
          {
            "name": "topic: collection"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 11183,
      "title": "Calling pytest.main() without arguments unpredictably reads arguments from the command line",
      "body": "In my opinion, it would be quite reasonable to assume that running\r\n```python\r\npytest.main()\r\n```\r\nwould be equivalent to simply executing `pytest` from the command line with no arguments. The [documentation](https://docs.pytest.org/en/stable/how-to/usage.html#invoke-other) even seems to suggest that this should be the case:\r\n> You can invoke pytest from Python code directly:\r\n> ```python\r\n> retcode = pytest.main()\r\n> ```\r\n> this acts as if you would call \u201cpytest\u201d from the command line.\r\n\r\nInstead, the default value of `args` passed into the function is `None`, in which case we end up reading arguments from the command line. That seems to be a fairly weird choice for the \"default\" behavior, since we are now trying to use arguments passed to a completely different program. At best, this can easily lead to complaints about unrecognized options and at worst, if we happen to share some options with the calling script, possible misinterpretation of those options and subsequent unexpected behavior.\r\n\r\nIt seems to me that automatically reading arguments directly from the command line would only be reasonable and expected when `pytest` is executed directly from the command line. When called programmatically from a script, it would probably be more predictable to just assume having no arguments unless explicitly specified otherwise.\r\n\r\nThis would obviously introduce a breaking change for those relying on `main()` silently reading arguments from the command line but that frankly does not seem like a good practice anyway. And considering that it would be a trivial single-line change of using `main(sys.argv[1:])` instead, it definitely seems like a good idea to be explicit about it.\r\n\r\nAnyway, if introducing a breaking change would be unacceptable, despite the arguably more predictable default behavior, it would probably be a good idea to at least amend the documentation and add an explicit warning about this behavior.\r\n",
      "state": "CLOSED",
      "createdAt": "2023-07-08T21:24:29Z",
      "updatedAt": "2023-07-09T10:55:46Z",
      "closedAt": "2023-07-09T03:06:41Z",
      "author": {
        "login": "antosikv"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 4
      }
    },
    {
      "number": 11176,
      "title": "pytest fail for interanl package py",
      "body": "I installed pytest via `pip install pytest` and with the following simple test:\r\n\r\n```\r\ndef test_sf_bayer_training(tmpdir):\r\n    print(tmpdir)\r\n    _config = TestingTrainerConfigInstance()\r\n    _config.name = 'test_sf_bayer_training'\r\n    _config.output_path = tmpdir / _config.name\r\n    _curr_p = os.getcwd()\r\n    _config.model_config_path = f'.models/sf.yaml'\r\n    print(_config)\r\n    return\r\n```\r\nI recieve the following error:\r\n```\r\n  File \"/home/davids/venvs/vai/lib/python3.10/site-packages/_pytest/_io/terminalwriter.py\", line 10, in <module>\r\n    from _pytest.compat import final\r\n  File \"/home/davids/venvs/vai/lib/python3.10/site-packages/_pytest/compat.py\", line 44, in <module>\r\n    LEGACY_PATH = py.path. local\r\nAttributeError: module 'py' has no attribute 'path'\r\n\r\nProcess finished with exit code 1\r\n\r\n```\r\n\r\nWhen I check locally:\r\n\r\n```\r\n(vai) \u279c  ~ ipython\r\nPython 3.10.6 (main, May 29 2023, 11:10:38) [GCC 11.3.0]\r\nType 'copyright', 'credits' or 'license' for more information\r\nIPython 8.8.0 -- An enhanced Interactive Python. Type '?' for help.\r\n\r\nIn [1]: import py\r\n\r\nIn [2]: py.path. local\r\nOut[2]: py._path.local.LocalPath\r\n\r\n```\r\n\r\nHow can I solve the issue with pytest so it can run?\r\n\r\nEdit:\r\nMy pytest package:\r\n\r\n```\r\npy==1.11.0\r\npytest==7.4.0\r\n```\r\n",
      "state": "CLOSED",
      "createdAt": "2023-07-06T05:45:39Z",
      "updatedAt": "2023-07-11T07:44:22Z",
      "closedAt": "2023-07-07T05:28:12Z",
      "author": {
        "login": "srikervai"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: question"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 4
      }
    },
    {
      "number": 11174,
      "title": "Test using multiprocessing only hangs when ran with test suite, works alone",
      "body": "**TL;DR:**\r\nIf you're experiencing a hanging issue during tests with a program using multiprocessing, try adding the following code at the beginning of your problematic test function:\r\n```Python\r\ndef a_test():\r\n    import multiprocessing as mp\r\n    mp.set_start_method(\"spawn\", force=True)\r\n    # [... rest of test ...]\r\n```\r\n\r\n**Description**\r\n\r\nI've encountered an odd test hanging issue with a program that uses multiprocessing.\r\nThe program completes:\r\n- When run individually from the command line\r\n- As part of a test function invoked alone via pytest\r\n\r\nThe program hangs indefinitely when run as part of a full suite of tests.\r\n\r\nI wanted to at least document what I experienced even if I can't create a simple minimal example, since I found a workaround that could help others, and no other issue mentioning something like this. All issues are for single tests.\r\n\r\n**Environment**\r\n\r\npython: `3.8.10`\r\npytest: `7.2.0`\r\npytest-mock: `3.10.0`\r\nOS: `Ubuntu 20.04.6 LTS`\r\n\r\n**Details**\r\n\r\nThe problem occurs with a test that runs a program to completion, which internally uses multiprocessing (via pool.starmap on a generator). When the test is run individually, it completes without problems within roughly 5 seconds. However, when the test is included in a full test suite and run with pytest, it hangs indefinitely (for over 6 minutes at least).\r\n\r\nThe issue persists even when using `concurrent.futures` in place of `multiprocessing` (without a `partial` as seen below).\r\n\r\nMy workaround is using `mp.set_start_method(\"spawn\", force=True)` at the start of the test.\r\n\r\nFix in immediate context:\r\n```Python\r\n    func = partial(run_prediction, estimator=estimator, name=name, logdir=logdir)\r\n    items = enumerate(ea_handler.yield_split())\r\n\r\n    mp.set_start_method(\"spawn\", force=True) # --> the fix, also works by being at the complete start of the test\r\n    with mp.Pool(nb_workers) as pool:\r\n        pool.starmap(func, items)\r\n```\r\n\r\nWhile the fix makes the test run slower (about 20 seconds), at least it doesn't hang indefinitely.\r\n\r\nI'm still uncertain as to why this issue occurs and why the fix works, so I would greatly appreciate any insights!\r\n\r\n**Complete pip Environment**\r\n<details><summary>pip list output - click me</summary>\r\n<p>\r\n\r\n```text\r\nPackage                       Version          Location                                                           \r\n----------------------------- ---------------- -------------------------------------------------------------------\r\nabsl-py                       1.4.0            \r\naiohttp                       3.8.4            \r\naiosignal                     1.3.1            \r\nalabaster                     0.7.13           \r\nalembic                       1.11.1           \r\nanyio                         3.7.0            \r\nargon2-cffi                   21.3.0           \r\nargon2-cffi-bindings          21.2.0           \r\nastroid                       2.15.5           \r\nasttokens                     2.2.1            \r\nasync-timeout                 4.0.2            \r\nattrs                         23.1.0           \r\nautopage                      0.5.1            \r\nBabel                         2.12.1           \r\nbackcall                      0.2.0            \r\nbeautifulsoup4                4.12.2           \r\nblack                         23.1.0           \r\nbleach                        6.0.0            \r\ncachetools                    5.3.1            \r\ncertifi                       2023.5.7         \r\ncffi                          1.15.1           \r\ncfgv                          3.3.1            \r\ncharset-normalizer            3.1.0            \r\nclick                         8.1.3            \r\ncliff                         4.3.0            \r\ncloudpickle                   2.2.1            \r\ncmaes                         0.9.1            \r\ncmd2                          2.4.3            \r\ncolorama                      0.4.6            \r\ncolorlog                      6.7.0            \r\ncomet-ml                      3.21.0           \r\ncomm                          0.1.3            \r\ncommonmark                    0.9.1            \r\nconfigobj                     5.0.8            \r\ncycler                        0.11.0           \r\ndebugpy                       1.6.7            \r\ndecorator                     5.1.1            \r\ndefusedxml                    0.7.1            \r\ndill                          0.3.6            \r\ndistlib                       0.3.6            \r\ndoc2dash                      2.4.1            \r\ndocutils                      0.20.1           \r\ndulwich                       0.21.5           \r\nEpiLaP                        0.1              $HOME/Projects/sources/epi_ml/src/python\r\neverett                       3.2.0            \r\nexceptiongroup                1.1.1            \r\nexecuting                     1.2.0            \r\nfastjsonschema                2.17.1           \r\nfilelock                      3.12.0           \r\nfonttools                     4.39.4           \r\nfrozenlist                    1.3.3            \r\nfsspec                        2023.5.0         \r\ngitdb                         4.0.10           \r\nGitPython                     3.1.31           \r\ngoogle-auth                   2.19.0           \r\ngoogle-auth-oauthlib          1.0.0            \r\ngreenlet                      2.0.2            \r\ngrpcio                        1.54.2           \r\nh5py                          3.6.0            \r\nidentify                      2.5.24           \r\nidna                          3.4              \r\nimagesize                     1.4.1            \r\nimbalanced-learn              0.8.0            \r\nimportlib-metadata            4.13.0           \r\nimportlib-resources           5.12.0           \r\niniconfig                     2.0.0            \r\nipykernel                     6.23.1           \r\nipython                       8.12.2           \r\nipython-genutils              0.2.0            \r\nipywidgets                    8.0.6            \r\nisort                         5.12.0           \r\njedi                          0.18.2           \r\nJinja2                        3.1.2            \r\njoblib                        1.2.0            \r\njsonschema                    4.17.3           \r\njupyter                       1.0.0            \r\njupyter-client                8.2.0            \r\njupyter-console               6.6.3            \r\njupyter-core                  5.3.0            \r\njupyter-events                0.6.3            \r\njupyter-server                2.6.0            \r\njupyter-server-mathjax        0.2.6            \r\njupyter-server-terminals      0.4.4            \r\njupyterlab-pygments           0.2.2            \r\njupyterlab-widgets            3.0.7            \r\nkaleido                       0.2.1            \r\nkiwisolver                    1.4.4            \r\nlazy-object-proxy             1.9.0            \r\nlightgbm                      3.3.5            \r\nllvmlite                      0.40.0           \r\nMako                          1.2.4            \r\nMarkdown                      3.4.3            \r\nMarkupSafe                    2.1.2            \r\nmatplotlib                    3.5.3            \r\nmatplotlib-inline             0.1.6            \r\nmccabe                        0.7.0            \r\nmistune                       2.0.5            \r\nmultidict                     6.0.4            \r\nmypy-extensions               1.0.0            \r\nnbclassic                     0.5.3            \r\nnbclient                      0.7.2            \r\nnbconvert                     7.2.9            \r\nnbdime                        3.1.0            \r\nnbformat                      5.7.0            \r\nnest-asyncio                  1.5.6            \r\nnodeenv                       1.8.0            \r\nnotebook                      6.5.4            \r\nnotebook-shim                 0.2.3            \r\nnumba                         0.57.0           \r\nnumpy                         1.22.4           \r\nnvidia-ml-py3                 7.352.0          \r\noauthlib                      3.2.2            \r\noptuna                        3.0.6            \r\noverrides                     7.3.1            \r\npackaging                     23.1             \r\npandas                        1.4.4            \r\npandocfilters                 1.5.0            \r\nparso                         0.8.3            \r\npathspec                      0.11.1           \r\npbr                           5.11.1           \r\npexpect                       4.8.0            \r\npickleshare                   0.7.5            \r\nPillow                        9.5.0            \r\npip                           20.0.2           \r\npkg-resources                 0.0.0            \r\npkgutil-resolve-name          1.3.10           \r\nplatformdirs                  3.5.1            \r\nplotly                        5.11.0           \r\npluggy                        1.0.0            \r\npre-commit                    3.0.4            \r\nprettytable                   3.7.0            \r\nprometheus-client             0.17.0           \r\nprompt-toolkit                3.0.38           \r\nprotobuf                      3.20.1           \r\npsutil                        5.9.5            \r\nptyprocess                    0.7.0            \r\npure-eval                     0.2.2            \r\npyaml                         23.5.9           \r\npyasn1                        0.5.0            \r\npyasn1-modules                0.3.0            \r\npycparser                     2.21             \r\npyDeprecate                   0.3.2            \r\nPygments                      2.15.1           \r\npylint                        2.16.4           \r\npyparsing                     3.0.9            \r\npyperclip                     1.8.2            \r\npyrsistent                    0.19.3           \r\npytest                        7.2.0            \r\npytest-mock                   3.10.0           \r\npytest-timeout                2.1.0            \r\npython-dateutil               2.8.2            \r\npython-json-logger            2.0.7            \r\npytorch-lightning             1.6.5            \r\npytz                          2023.3           \r\nPyYAML                        6.0              \r\npyzmq                         25.1.0           \r\nqtconsole                     5.4.3            \r\nQtPy                          2.3.1            \r\nrequests                      2.31.0           \r\nrequests-oauthlib             1.3.1            \r\nrequests-toolbelt             1.0.0            \r\nrfc3339-validator             0.1.4            \r\nrfc3986-validator             0.1.1            \r\nrich                          11.2.0           \r\nrsa                           4.9              \r\nscikit-learn                  1.1.2            \r\nscikit-optimize               0.9.0+unofficial \r\nscipy                         1.8.1            \r\nsemantic-version              2.10.0           \r\nSend2Trash                    1.8.2            \r\nsetuptools                    44.0.0           \r\nshap                          0.41.0           \r\nsix                           1.16.0           \r\nslicer                        0.0.7            \r\nsmmap                         5.0.0            \r\nsniffio                       1.3.0            \r\nsnowballstemmer               2.2.0            \r\nsoupsieve                     2.4.1            \r\nsphinx                        7.0.1            \r\nsphinx-gallery                0.11.1           \r\nsphinxcontrib-applehelp       1.0.4            \r\nsphinxcontrib-devhelp         1.0.2            \r\nsphinxcontrib-htmlhelp        2.0.1            \r\nsphinxcontrib-jsmath          1.0.1            \r\nsphinxcontrib-qthelp          1.0.3            \r\nsphinxcontrib-serializinghtml 1.1.5            \r\nSQLAlchemy                    2.0.15           \r\nstack-data                    0.6.2            \r\nstevedore                     5.1.0            \r\ntabulate                      0.8.10           \r\ntenacity                      8.2.2            \r\ntensorboard                   2.13.0           \r\ntensorboard-data-server       0.7.0            \r\nterminado                     0.17.1           \r\nthreadpoolctl                 3.1.0            \r\ntinycss2                      1.2.1            \r\ntoml                          0.10.2           \r\ntomli                         2.0.1            \r\ntomlkit                       0.11.8           \r\ntorch                         1.10.2           \r\ntorchinfo                     1.6.3            \r\ntorchmetrics                  0.7.2            \r\ntornado                       6.3.2            \r\ntqdm                          4.65.0           \r\ntraitlets                     5.9.0            \r\ntyping-extensions             4.4.0            \r\nurllib3                       2.0.2            \r\nvirtualenv                    20.23.0          \r\nwcwidth                       0.2.6            \r\nwebencodings                  0.5.1            \r\nwebsocket-client              1.5.2            \r\nWerkzeug                      2.3.4            \r\nwheel                         0.40.0           \r\nwidgetsnbextension            4.0.7            \r\nwrapt                         1.15.0           \r\nwurlitzer                     3.0.3            \r\nyarl                          1.9.2            \r\nzipp                          3.15.0       \r\n```\r\n</p>\r\n</details>\r\n\r\n\r\n\r\n",
      "state": "CLOSED",
      "createdAt": "2023-07-05T18:59:30Z",
      "updatedAt": "2024-10-19T04:59:44Z",
      "closedAt": "2024-02-17T22:32:56Z",
      "author": {
        "login": "rabyj"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: question"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 14
      }
    },
    {
      "number": 11168,
      "title": "Pypy 3.9 segfaults while rewriting test assertions",
      "body": "- [x] a detailed description of the bug or problem you are having\r\n\r\nWhen testing the project I work on in CI I frequently see a segfault in pytest's test assert rewriting when running with pypy 3.9. (I haven't yet seen it with 3.10, but I only just added that to CI.)\r\n\r\n```python\r\nRun coverage run -m pytest --ignore=tests/simplepoll\r\n  coverage run -m pytest --ignore=tests/simplepoll\r\n  shell: /usr/bin/bash -e {0}\r\n  env:\r\n    CARGO_INCREMENTAL: 0\r\n    CARGO_TERM_COLOR: always\r\n    CACHE_ON_FAILURE: false\r\n    pythonLocation: /opt/hostedtoolcache/PyPy/3.9.16/x64/bin\r\n    PYTHONFAULTHANDLER: 1\r\n    RUST_BACKTRACE: 1\r\nFatal Python error: Segmentation fault\r\n\r\nStack (most recent call first, approximate line numbers):\r\n  File \"/opt/hostedtoolcache/PyPy/3.9.16/x64/lib/pypy3.9/site-packages/_pytest/assertion/rewrite.py\", line 346 in _rewrite_test\r\n  File \"/opt/hostedtoolcache/PyPy/3.9.16/x64/lib/pypy3.9/site-packages/_pytest/assertion/rewrite.py\", line 138 in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 659 in _load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 967 in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 1002 in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 1018 in _gcd_import\r\n  File \"/opt/hostedtoolcache/PyPy/3.9.16/x64/lib/pypy3.9/importlib/__init__.py\", line 109 in import_module\r\n  File \"/opt/hostedtoolcache/PyPy/3.9.16/x64/lib/pypy3.9/site-packages/_pytest/pathlib.py\", line 486 in import_path\r\n  File \"/opt/hostedtoolcache/PyPy/3.9.16/x64/lib/pypy3.9/site-packages/_pytest/python.py\", line 613 in _importtestmodule\r\n  File \"/opt/hostedtoolcache/PyPy/3.9.16/x64/lib/pypy3.9/site-packages/_pytest/python.py\", line 527 in _getobj\r\n  File \"/opt/hostedtoolcache/PyPy/3.9.16/x64/lib/pypy3.9/site-packages/_pytest/python.py\", line 305 in obj\r\n  File \"/opt/hostedtoolcache/PyPy/3.9.16/x64/lib/pypy3.9/site-packages/_pytest/python.py\", line 536 in _inject_setup_module_fixture\r\n  File \"/opt/hostedtoolcache/PyPy/3.9.16/x64/lib/pypy3.9/site-packages/_pytest/python.py\", line 530 in collect\r\n  File \"/opt/hostedtoolcache/PyPy/3.9.16/x64/lib/pypy3.9/site-packages/_pytest/runner.py\", line 372 in <lambda>\r\n  File \"/opt/hostedtoolcache/PyPy/3.9.16/x64/lib/pypy3.9/site-packages/_pytest/runner.py\", line 318 in from_call\r\n  File \"/opt/hostedtoolcache/PyPy/3.9.16/x64/lib/pypy3.9/site-packages/_pytest/runner.py\", line 371 in pytest_make_collect_report\r\n  File \"/opt/hostedtoolcache/PyPy/3.9.16/x64/lib/pypy3.9/site-packages/pluggy/_callers.py\", line 30 in _multicall\r\n  File \"/opt/hostedtoolcache/PyPy/3.9.16/x64/lib/pypy3.9/site-packages/pluggy/_manager.py\", line 103 in _hookexec\r\n  File \"/opt/hostedtoolcache/PyPy/3.9.16/x64/lib/pypy3.9/site-packages/pluggy/_hooks.py\", line 427 in __call__\r\n  File \"/opt/hostedtoolcache/PyPy/3.9.16/x64/lib/pypy3.9/site-packages/_pytest/runner.py\", line 544 in collect_one_node\r\n  File \"/opt/hostedtoolcache/PyPy/3.9.16/x64/lib/pypy3.9/site-packages/_pytest/main.py\", line 827 in genitems\r\n  File \"/opt/hostedtoolcache/PyPy/3.9.16/x64/lib/pypy3.9/site-packages/_pytest/main.py\", line 827 in genitems\r\n  File \"/opt/hostedtoolcache/PyPy/3.9.16/x64/lib/pypy3.9/site-packages/_pytest/main.py\", line 610 in perform_collect\r\n  File \"/opt/hostedtoolcache/PyPy/3.9.16/x64/lib/pypy3.9/site-packages/_pytest/main.py\", line 333 in pytest_collection\r\n  File \"/opt/hostedtoolcache/PyPy/3.9.16/x64/lib/pypy3.9/site-packages/pluggy/_callers.py\", line 30 in _multicall\r\n  File \"/opt/hostedtoolcache/PyPy/3.9.16/x64/lib/pypy3.9/site-packages/pluggy/_manager.py\", line 103 in _hookexec\r\n  File \"/opt/hostedtoolcache/PyPy/3.9.16/x64/lib/pypy3.9/site-packages/pluggy/_hooks.py\", line 427 in __call__\r\n  File \"/opt/hostedtoolcache/PyPy/3.9.16/x64/lib/pypy3.9/site-packages/_pytest/main.py\", line 320 in _main\r\n  File \"/opt/hostedtoolcache/PyPy/3.9.16/x64/lib/pypy3.9/site-packages/_pytest/main.py\", line 257 in wrap_session\r\n  File \"/opt/hostedtoolcache/PyPy/3.9.16/x64/lib/pypy3.9/site-packages/_pytest/main.py\", line 316 in pytest_cmdline_main\r\n  File \"/opt/hostedtoolcache/PyPy/3.9.16/x64/lib/pypy3.9/site-packages/pluggy/_callers.py\", line 30 in _multicall\r\n  File \"/opt/hostedtoolcache/PyPy/3.9.16/x64/lib/pypy3.9/site-packages/pluggy/_manager.py\", line 103 in _hookexec\r\n  File \"/opt/hostedtoolcache/PyPy/3.9.16/x64/lib/pypy3.9/site-packages/pluggy/_hooks.py\", line 427 in __call__\r\n  File \"/opt/hostedtoolcache/PyPy/3.9.16/x64/lib/pypy3.9/site-packages/_pytest/config/__init__.py\", line 134 in main\r\n  File \"/opt/hostedtoolcache/PyPy/3.9.16/x64/lib/pypy3.9/site-packages/_pytest/config/__init__.py\", line 182 in console_main\r\n  File \"/opt/hostedtoolcache/PyPy/3.9.16/x64/lib/pypy3.9/site-packages/pytest/__main__.py\", line 1 in <module>\r\n  File \"/opt/hostedtoolcache/PyPy/3.9.16/x64/lib/pypy3.9/site-packages/coverage/execfile.py\", line 169 in run\r\n  File \"/opt/hostedtoolcache/PyPy/3.9.16/x64/lib/pypy3.9/site-packages/coverage/cmdline.py\", line 813 in do_run\r\n  File \"/opt/hostedtoolcache/PyPy/3.9.16/x64/lib/pypy3.9/site-packages/coverage/cmdline.py\", line 611 in command_line\r\n  File \"/opt/hostedtoolcache/PyPy/3.9.16/x64/lib/pypy3.9/site-packages/coverage/cmdline.py\", line 964 in main\r\n  File \"/opt/hostedtoolcache/PyPy/3.9.16/x64/bin/coverage\", line 3 in <module>\r\n  File \"<builtin>/app_main.py\", line 1012 in execfile\r\n  File \"<builtin>/app_main.py\", line 131 in run_toplevel\r\n  File \"<builtin>/app_main.py\", line 733 in run_command_line\r\n  File \"<builtin>/app_main.py\", line 1126 in entry_point\r\n/home/runner/actions-runner/_work/_temp/4b79962b-6f8c-4a60-9e1a-65886acc7eb7.sh: line 1:  1738 Segmentation fault      (core dumped) coverage run -m pytest --ignore=tests/simplepoll\r\nError: Process completed with exit code 139.\r\n```\r\n\r\n- [x] output of `pip list` from the virtual environment you are using\r\n\r\n```\r\nPackage                Version               Editable project location\r\n---------------------- --------------------- --------------------------------------------------\r\namqp                   5.1.1\r\nanyio                  3.7.0\r\nasgiref                3.6.0\r\nattrs                  23.1.0\r\nbilliard               4.1.0\r\nblack                  23.3.0\r\nboto3                  1.27.0\r\nbotocore               1.30.0\r\nbuild                  0.10.0\r\ncelery                 5.3.1\r\nCerberus               1.3.4\r\ncertifi                2023.5.7\r\ncffi                   1.15.1\r\ncharset-normalizer     3.1.0\r\nclick                  8.1.3\r\nclick-didyoumean       0.3.0\r\nclick-plugins          1.1.1\r\nclick-repl             0.3.0\r\ncolored                1.4.4\r\ncoverage               7.2.7\r\ndj-database-url        2.0.0\r\nDjango                 3.2.20\r\ndjango-environ         0.10.0\r\ndjango-hashid-field    3.3.7\r\ndjango-pgcrypto-fields 2.6.0\r\ndjangorestframework    3.14.0\r\nexceptiongroup         1.1.2\r\nfactory-boy            3.2.1\r\nFaker                  18.11.2\r\nfreezegun              1.2.2\r\ngreenlet               0.4.13\r\nh11                    0.14.0\r\nhashids                1.3.1\r\nhpy                    0.0.4.dev179+g9b5d200\r\nhttpcore               0.17.2\r\nhttpretty              1.1.4\r\nhttpx                  0.24.1\r\nhuey                   2.4.5\r\nidna                   3.4\r\niniconfig              2.0.0\r\nJinja2                 3.1.2\r\njmespath               1.0.1\r\nkolo                   2.11.0+local          /home/runner/actions-runner/_work/kolo/kolo/python\r\nkombu                  5.3.1\r\nMarkupSafe             2.1.3\r\nmaturin                1.1.0\r\nmore-itertools         9.1.0\r\nmypy-extensions        1.0.0\r\npackaging              23.1\r\npathspec               0.11.1\r\npip                    23.0.1\r\nplatformdirs           3.8.0\r\npluggy                 1.2.0\r\nprompt-toolkit         3.0.38\r\npyproject_hooks        1.0.0\r\npytest                 7.4.0\r\npytest-asyncio         0.21.0\r\npytest-celery          0.0.0\r\npytest-django          4.5.2\r\npytest-httpx           0.22.0\r\npython-dateutil        2.8.2\r\npytz                   2023.3\r\nreadline               6.2.4.1\r\nrequests               2.31.0\r\ns3transfer             0.6.1\r\nsetuptools             58.1.0\r\nsix                    1.16.0\r\nsniffio                1.3.0\r\nsqlglot                17.0.0\r\nsqlparse               0.4.4\r\nsyrupy                 4.0.4\r\ntemppathlib            1.2.0\r\ntomli                  2.0.1\r\ntomli_w                1.0.0\r\ntoolz                  0.12.0\r\ntypes-freezegun        1.1.10\r\ntypes-requests         2.31.0.1\r\ntypes-urllib3          1.26.25.13\r\ntyping_extensions      4.7.1\r\ntzdata                 2023.3\r\nulid-py                1.1.0\r\nurllib3                1.26.15\r\nvine                   5.0.0\r\nwcwidth                0.2.6\r\n```\r\n\r\n- [x] pytest and operating system versions\r\npytest 7.4.0\r\nubuntu 22.04 (`buildjet-2vcpu-ubuntu-2204` https://buildjet.com/for-github-actions/docs/runners/hardware)\r\n\r\n- [ ] minimal example if possible\r\nI'm not sure how to narrow down to the problematic files.",
      "state": "CLOSED",
      "createdAt": "2023-07-04T11:27:27Z",
      "updatedAt": "2024-03-27T21:04:35Z",
      "closedAt": "2024-03-27T21:04:35Z",
      "author": {
        "login": "LilyAcorn"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: bug"
          },
          {
            "name": "topic: rewrite"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 25
      }
    },
    {
      "number": 11167,
      "title": "7.4.0 docs missing",
      "body": "https://docs.pytest.org/ still redirects to https://docs.pytest.org/en/7.3.x/ and https://docs.pytest.org/en/7.4.x/ returns a 404.\r\n\r\nAs part of this, I think https://docs.pytest.org/ should redirect to https://docs.pytest.org/en/stable/ instead of to a specific version",
      "state": "CLOSED",
      "createdAt": "2023-07-04T07:55:46Z",
      "updatedAt": "2023-07-04T20:14:28Z",
      "closedAt": "2023-07-04T20:14:28Z",
      "author": {
        "login": "cjw296"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 11161,
      "title": "./pytest: symbol lookup error: ./pytest: undefined symbol: _PyGC_generation0",
      "body": "- [ ] a detailed description of the bug or problem you are having\r\nMy machine contains both python2.7 and python 3.8 installed where pytest picks up python 2.7 to use. Hitting undefined symbol error while using python2.7\r\n- [ ] output of `pip list` from the virtual environment you are using\r\nPackage                Version\r\n---------------------- --------------------\r\napturl                 0.5.2\r\nautopep8               1.5\r\nbcrypt                 3.1.7\r\nblinker                1.4\r\nbottle                 0.12.15\r\nBrlapi                 0.7.0\r\ncertifi                2019.11.28\r\nchardet                3.0.4\r\nClick                  7.0\r\ncolorama               0.4.3\r\ncommand-not-found      0.3\r\ncryptography           2.8\r\ncupshelpers            1.0\r\ndbus-python            1.2.16\r\ndefer                  1.0.6\r\ndistro                 1.4.0\r\ndistro-info            0.23ubuntu1\r\nduplicity              0.8.12.0\r\nentrypoints            0.3\r\nexceptiongroup         1.1.1\r\nfasteners              0.14.1\r\nflake8                 3.7.9\r\nfrozendict             1.2\r\nfuture                 0.18.2\r\nhttplib2               0.14.0\r\nidna                   2.8\r\niniconfig              2.0.0\r\njedi                   0.15.2\r\nkeyring                18.0.1\r\nlanguage-selector      0.1\r\nlaunchpadlib           1.10.13\r\nlazr.restfulclient     0.14.2\r\nlazr.uri               1.0.3\r\nlockfile               0.12.2\r\nlouis                  3.12.0\r\nmacaroonbakery         1.3.1\r\nMako                   1.1.0\r\nMarkupSafe             1.1.0\r\nmccabe                 0.6.1\r\nmonotonic              1.5\r\nnetifaces              0.10.4\r\noauthlib               3.1.0\r\nolefile                0.46\r\npackaging              23.1\r\nparamiko               2.6.0\r\nparso                  0.5.2\r\npep8                   1.7.1\r\npexpect                4.6.0\r\nPillow                 7.0.0\r\npip                    20.0.2\r\npluggy                 1.2.0\r\nprotobuf               3.6.1\r\npycairo                1.16.2\r\npycodestyle            2.5.0\r\npycups                 1.9.73\r\npyflakes               2.1.1\r\nPyGObject              3.36.0\r\nPyJWT                  1.7.1\r\npymacaroons            0.13.0\r\nPyNaCl                 1.3.0\r\npyRFC3339              1.1\r\npytest                 7.4.0\r\npython-apt             2.0.0+ubuntu0.20.4.5\r\npython-dateutil        2.7.3\r\npython-debian          0.1.36ubuntu1\r\npytz                   2019.3\r\npyxdg                  0.26\r\nPyYAML                 5.3.1\r\nreportlab              3.5.34\r\nrequests               2.22.0\r\nrequests-futures       1.0.0\r\nrequests-unixsocket    0.2.0\r\nSecretStorage          2.3.1\r\nsetuptools             45.2.0\r\nsimplejson             3.16.0\r\nsix                    1.14.0\r\nssh-import-id          5.10\r\nsystemd-python         234\r\ntomli                  2.0.1\r\nubuntu-advantage-tools 27.2\r\nubuntu-drivers-common  0.0.0\r\nufw                    0.36\r\nunattended-upgrades    0.1\r\nurllib3                1.25.8\r\nusb-creator            0.3.7\r\nwadllib                1.3.3\r\nwaitress               1.4.1\r\nwheel                  0.34.2\r\nxkit                   0.0.0\r\n\r\n- [ ] pytest and operating system versions\r\n\r\n- [ ] minimal example if possible\r\n./pytest: Symbol `PyLong_Type' has different size in shared object, consider re-linking\r\n./pytest: Symbol `PySlice_Type' has different size in shared object, consider re-linking\r\n./pytest: Symbol `PyAsyncGen_Type' has different size in shared object, consider re-linking\r\n./pytest: symbol lookup error: ./pytest: undefined symbol: _PyGC_generation0",
      "state": "CLOSED",
      "createdAt": "2023-07-02T23:49:50Z",
      "updatedAt": "2023-07-03T14:37:49Z",
      "closedAt": "2023-07-03T14:11:01Z",
      "author": {
        "login": "vijay-subramanian-wdc"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "status: needs information"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 7
      }
    },
    {
      "number": 11157,
      "title": "tox: `PYTHONWARNDEFAULTENCODING` should only be applied to tests",
      "body": "Currently `PYTHONWARNDEFAULTENCODING` [is set](https://github.com/pytest-dev/pytest/blob/b77d0deaf53697630ba534f62dc871f4eb275f14/tox.ini#L42) for all tox environments. But most tools like pre-commit, mypy, sphinx are not clean of this warning, it causes noise when running `tox`, in some cases a *lot* of noise.\r\n\r\nI tried fixing it myself but couldn't figure out how to get tox to only set an envvar only for the py* environments. Hopefully someone who knows more about tox can figure it out.",
      "state": "CLOSED",
      "createdAt": "2023-07-01T21:50:41Z",
      "updatedAt": "2023-07-05T16:48:28Z",
      "closedAt": "2023-07-05T16:48:28Z",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: infrastructure"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      }
    },
    {
      "number": 11151,
      "title": "Drop Python 3.7, which has reached end-of-life",
      "body": "- [x] Remove it from CI to unblock e.g. https://github.com/pytest-dev/pytest/pull/10937\r\n- [x] Update our pre-commit hooks to enforce 3.8+\r\n- [x] [Check what's new in Python 3.8](https://docs.python.org/3/whatsnew/3.8.html) for other new features, e.g. `f\"{x=}\"`, `typing` changes, `importlib.metadata`, positional-only arguments, etc.\r\n\r\nPreviously: https://github.com/pytest-dev/pytest/issues/7808 (Python 3.5), https://github.com/pytest-dev/pytest/issues/9437 (Python 3.6).",
      "state": "CLOSED",
      "createdAt": "2023-06-30T20:44:25Z",
      "updatedAt": "2023-07-01T03:56:48Z",
      "closedAt": "2023-07-01T03:56:48Z",
      "author": {
        "login": "Zac-HD"
      },
      "assignees": {
        "nodes": [
          {
            "login": "Zac-HD"
          }
        ]
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      }
    },
    {
      "number": 11150,
      "title": " PytestAssertRewriteWarning when including a plugin via 'pytest_plugins' and importing",
      "body": "Warning when running pytest:\r\n`PytestAssertRewriteWarning: Module already imported so cannot be rewritten: plugin`\r\n\r\n#### Steps to reproduce\r\n- Create a local plugin, e.g. empty `plugin.py` file.\r\n- Create a test that includes the plugin via `pytest_plugins` and also imports the plugin:\r\n```python\r\nimport plugin\r\npytest_plugins = (\"plugin\",)\r\n```\r\n- Run the tests:\r\n```\r\n$pytest test.py\r\n=============================================== test session starts ================================================\r\nplatform linux -- Python 3.8.10, pytest-7.4.0, pluggy-1.2.0\r\nrootdir: /home/legaul/tmp/pytest-issue\r\ncollected 0 items\r\n\r\n================================================= warnings summary =================================================\r\nvenv/lib/python3.8/site-packages/_pytest/config/__init__.py:755\r\n  /home/legaul/tmp/pytest-issue/venv/lib/python3.8/site-packages/_pytest/config/__init__.py:755: PytestAssertRewriteWarning: Module already imported so cannot be rewritten: plugin\r\n    self.import_plugin(import_spec)\r\n\r\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\r\n================================================ 1 warning in 0.01s ================================================\r\n```\r\n\r\n#### Extra information\r\n\r\nObviously this is a contrived minimal example; a more realistic scenario is:\r\n- `conftest.py` contains `pytest_plugins = (...)`\r\n- Some indirect import of the plugin, e.g. for the purpose of type annotations\r\n\r\nThis is not seen when loading the plugin using `pytest -p plugin` instead (since the import happens earlier?).\r\n\r\nPerhaps related to https://github.com/pytest-dev/pytest/issues/10230?",
      "state": "CLOSED",
      "createdAt": "2023-06-30T12:18:48Z",
      "updatedAt": "2024-06-03T19:04:33Z",
      "closedAt": "2023-06-30T12:28:34Z",
      "author": {
        "login": "LewisGaul"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 5
      }
    },
    {
      "number": 11149,
      "title": "Python 3.10.3, pytest-7.4.0, pytest.main('--co')--ERROR: not found testcase",
      "body": "Python 3.10.3, pytest-7.4.0\r\nwhy test_cases/test_product/demo/demo7_pytest_main.py::TestClass_A::test_demo[\\u6d4b\\u8bd5\\u7528\\u4f8b\\u540d\\u79f0P2]  in case_list was not found in the specified module.  but in case_list02 it was found .\r\ntest function:\r\n`#demo.py\r\n@pytest.mark.parametrize(\"case_lel,id,\", [('\u6d4b\u8bd5\u7528\u4f8b\u540d\u79f0P0',0),('\u6d4b\u8bd5\u7528\u4f8b\u540d\u79f0P1',6),('hzhzhzhzP0',1),('\u6d4b\u8bd5\u7528\u4f8b\u540d\u79f0P2',2),('hzhzhzhzP2',3)],ids=[('\u6d4b\u8bd5\u7528\u4f8b\u540d\u79f0P0'),('\u6d4b\u8bd5\u7528\u4f8b\u540d\u79f0P1'),('hzhzhzhzP0'),('\u6d4b\u8bd5\u7528\u4f8b\u540d\u79f0P2'),('hzhzhzhzP2')])\r\nclass TestClass_A:\r\n   def test_demo(self,case_lel,id):\r\n        print(id)\r\nif __name__ == '__main__':\r\n    case_list=['demo/demo7_pytest_main.py::TestClass_A::test_demo[\\\\u6d4b\\\\u8bd5\\\\u7528\\\\u4f8b\\\\u540d\\\\u79f0P0]','demo/demo7_pytest_main.py::TestClass_A::test_demo[\\\\u6d4b\\\\u8bd5\\\\u7528\\\\u4f8b\\\\u540d\\\\u79f0P1]', 'demo/demo7_pytest_main.py::TestClass_A::test_demo[hzhzhzhzP0]', 'demo/demo7_pytest_main.py::TestClass_A::test_demo[\\\\u6d4b\\\\u8bd5\\\\u7528\\\\u4f8b\\\\u540d\\\\u79f0P2]', 'demo/demo7_pytest_main.py::TestClass_A::test_demo[hzhzhzhzP2]']\r\n    for i in case_list:\r\n        pytest.main([i,'--co'])`\r\n\r\n> ============================================================================================================== test session starts ==============================================================================================================\r\nplatform win32 -- Python 3.10.3, pytest-6.2.4, py-1.10.0, pluggy-0.13.1\r\nrootdir: d:\\autotest\\interface-autotest-pytest, configfile: pytest.ini\r\nplugins: allure-pytest-2.9.43, anyio-3.6.2, Faker-15.2.0, forked-1.3.0, ordering-0.6, parallel-0.0.10, repeat-0.9.1, rerunfailures-10.0, timeout-2.1.0, xdist-2.3.0\r\ncollected 0 items                                                                                                                                                                                                                                 \r\n\r\n\u6536\u96c6\u6d4b\u8bd5\u7528\u4f8b\u7ed3\u679c\r\n2023-06-29 20:33:47,811 [pid:60564] INFO [FILE:conftest.py:74 FUN:pytest_terminal_summary]: total: 0; passed: 0; failed: 0; skipped: 0; error: 0; duration: 0.02\r\n========================================================================================================== no tests collected in 0.02s ========================================================================================================== \r\nERROR: not found: d:\\autotest\\interface-autotest-pytest\\test_cases\\test_product\\demo\\demo7_pytest_main.py::TestClass_A::test_demo[\\u6d4b\\u8bd5\\u7528\\u4f8b\\u540d\\u79f0P2]\r\n(no name 'd:\\\\autotest\\\\interface-autotest-pytest\\\\test_cases\\\\test_product\\\\demo\\\\demo7_pytest_main.py::TestClass_A::test_demo[\\\\u6d4b\\\\u8bd5\\\\u7528\\\\u4f8b\\\\u540d\\\\u79f0P2]' in any of [<Module demo7_pytest_main.py>])\r\n\r\n\r\n\r\n-------------------------------------------------------------------------------------------------------------------------------------\r\n> @pytest.mark.parametrize(\"case_lel,id,\", [('\u6d4b\u8bd5\u7528\u4f8b\u540d\u79f0P0',0),('\u6d4b\u8bd5\u7528\u4f8b\u540d\u79f0P1',6),('hzhzhzhzP0',1),('\u6d4b\u8bd5\u7528\u4f8b\u540d\u79f0P2',2),('hzhzhzhzP2',3)],ids=[('\u6d4b\u8bd5\u7528\u4f8b\u540d\u79f0P0'),('\u6d4b\u8bd5\u7528\u4f8b\u540d\u79f0P1'),('hzhzhzhzP0'),('\u6d4b\u8bd5\u7528\u4f8b\u540d\u79f0P2'),('hzhzhzhzP2')])\r\n#demo.py\r\nclass TestClass_A:\r\n    def test_demo(self,case_lel,id):\r\n        print(id)\r\nif __name__ == '__main__':\r\n    case_list02 =[demo/demo7_pytest_main.py::TestClass_A::test_demo[\\\\u6d4b\\\\u8bd5\\\\u7528\\\\u4f8b\\\\u540d\\\\u79f0P2]']\r\n    for i in case_list02 :\r\n        pytest.main([i,'--co'])\r\n\r\n> pytest --co demo/demo7_pytest_main.py::TestClass_A::test_demo[\\u6d4b\\u8bd5\\u7528\\u4f8b\\u540d\\u79f0P2] \r\n============================================================================================================== test session starts ==============================================================================================================\r\nplatform win32 -- Python 3.10.3, pytest-6.2.4, py-1.10.0, pluggy-0.13.1\r\nrootdir: d:\\autotest\\interface-autotest-pytest, configfile: pytest.ini\r\nplugins: allure-pytest-2.9.43, anyio-3.6.2, Faker-15.2.0, forked-1.3.0, ordering-0.6, parallel-0.0.10, repeat-0.9.1, rerunfailures-10.0, timeout-2.1.0, xdist-2.3.0\r\ncollected 1 item\r\n\r\n<Package demo>\r\n  <Module demo7_pytest_main.py>\r\n    <Class TestClass_A>\r\n        <Function test_demo[\u6d4b\u8bd5\u7528\u4f8b\u540d\u79f0P2]>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
      "state": "CLOSED",
      "createdAt": "2023-06-29T13:01:03Z",
      "updatedAt": "2023-07-13T02:35:06Z",
      "closedAt": "2023-07-13T02:35:06Z",
      "author": {
        "login": "wang1150297847"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      }
    },
    {
      "number": 11146,
      "title": "Pytest 7.4.0 causing skip reason for long test names to disappear in small terminal",
      "body": "\r\n\r\nHi, after updating to pytest-7.4.0, I noticed that skip reasons for long tests names either get cutoff or disappear when running pytest in a small width terminal or piping output to a file.  \r\n\r\nI'm pretty sure this is due to https://github.com/pytest-dev/pytest/pull/10958/files.  Since the test name is longer than the terminal width, the extra whitespace that is added to pad the line gets wrapped and then dropped, causing the removal later to be wrong. \r\n\r\n\r\n`tinyrepro.py`:\r\n```\r\nimport pytest\r\n\r\n@pytest.mark.skip(\"Random skip reason\")\r\ndef test_really_really_really_really_really_really_really_long_test_name():\r\n    assert 1 == 1\r\n\r\n\r\n@pytest.mark.skip(\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\")\r\ndef test_really_really_really_really_really_really_really_long_test_name2():\r\n    assert 1 == 1\r\n\r\n```\r\n\r\n\r\nOutput from `pytest tinyrepro.py -vv` when my terminal has width 236\r\n```\r\n=========================================================================================================== test session starts ============================================================================================================\r\nplatform darwin -- Python 3.11.3, pytest-7.4.0, pluggy-1.2.0 -- /Users/csl/opt/anaconda3/envs/delete/bin/python\r\ncachedir: .pytest_cache\r\nrootdir: /Users/csl/zzzzzzzz/random-testing\r\ncollected 2 items                                                                                                                                                                                                                          \r\n\r\ntinyrepro.py::test_really_really_really_really_really_really_really_long_test_name SKIPPED [0.0001s] (Random skip reason)                                                                                                            [ 50%]\r\ntinyrepro.py::test_really_really_really_really_really_really_really_long_test_name2 SKIPPED [0.0001s] (Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\nUt enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint\r\noccaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.)                                                                                                                                     [100%]\r\n\r\n============================================================================================================ 2 skipped in 0.01s ============================================================================================================\r\n\r\n```\r\n\r\nOutput with terminal width 90:\r\n```\r\n================================== test session starts ===================================\r\nplatform darwin -- Python 3.11.3, pytest-7.4.0, pluggy-1.2.0 -- /Users/csl/opt/anaconda3/envs/delete/bin/python\r\ncachedir: .pytest_cache\r\nrootdir: /Users/csl/zzzzzzzz/random-testing\r\ncollected 2 items                                                                        \r\n\r\ntinyrepro.py::test_really_really_really_really_really_really_really_long_test_name SKIPPED [0.0002s] [ 50%]\r\ntinyrepro.py::test_really_really_really_really_really_really_really_long_test_name2 SKIPPED [0.0001s]ncididunt ut labore et dolore magna aliqua. Ut enim ad minim\r\nveniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\r\nconsequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum\r\ndolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident,\r\nsunt in culpa qui officia deserunt mollit anim id est laborum.)                    [100%]\r\n\r\n=================================== 2 skipped in 0.00s ===================================\r\n```\r\n\r\nContents of `output.txt` from `pytest tinyrepro.py -vv > output.txt`\r\n```\r\n============================= test session starts ==============================\r\nplatform darwin -- Python 3.11.3, pytest-7.4.0, pluggy-1.2.0 -- /Users/csl/opt/anaconda3/envs/delete/bin/python\r\ncachedir: .pytest_cache\r\nrootdir: /Users/csl/zzzzzzzz/random-testing\r\ncollecting ... collected 2 items\r\n\r\ntinyrepro.py::test_really_really_really_really_really_really_really_long_test_name SKIPPED [0.0001s] [ 50%]\r\ntinyrepro.py::test_really_really_really_really_really_really_really_long_test_name2 SKIPPED [0.0001s]d tempor incididunt ut labore et dolore\r\nmagna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco\r\nlaboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor\r\nin reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\r\npariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa\r\nqui officia deserunt mollit anim id est laborum.)                        [100%]\r\n\r\n============================== 2 skipped in 0.00s ==============================\r\n\r\n```\r\n\r\nWith pytest-7.3.2, terminal width 90, `pytest tinyrepro.py -vv` looks like\r\n```\r\n================================== test session starts ===================================\r\nplatform darwin -- Python 3.11.3, pytest-7.3.2, pluggy-1.2.0 -- /Users/csl/opt/anaconda3/envs/delete/bin/python\r\ncachedir: .pytest_cache\r\nrootdir: /Users/csl/zzzzzzzz/random-testing\r\ncollected 2 items                                                                        \r\n\r\ntinyrepro.py::test_really_really_really_really_really_really_really_long_test_name SKIPPED [0.0002s] (Random skip reason) [ 50%]\r\ntinyrepro.py::test_really_really_really_really_really_really_really_long_test_name2 SKIPPED [0.0001s] (Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.) [100%]\r\n\r\n=================================== 2 skipped in 0.01s ===================================\r\n\r\n```\r\n\r\nOutput of `pip list`:\r\n```\r\nsh: /opt/homebrew/bin/pip: bad interpreter: /opt/homebrew/opt/python35/bin/python3.5: no such file or directory\r\nPackage    Version\r\n---------- -------\r\niniconfig  2.0.0\r\npackaging  23.1\r\npip        23.1.2\r\npluggy     1.2.0\r\npytest     7.4.0\r\nsetuptools 67.8.0\r\nwheel      0.38.4\r\n```\r\nPytest version: 7.4.0\r\nOS: macOS Ventura 13.4",
      "state": "OPEN",
      "createdAt": "2023-06-27T21:56:39Z",
      "updatedAt": "2024-07-24T11:43:22Z",
      "closedAt": null,
      "author": {
        "login": "clee2000"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "topic: reporting"
          },
          {
            "name": "type: regression"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 6
      }
    },
    {
      "number": 11142,
      "title": "PyTest sometimes fails to find Python modules from the environment variable PYTHONPATH",
      "body": "We build and install Python modules into a stage directory w/in the FreeBSD ports framework. Then we run pytest in the \"tests\" folder of the project's working directory while PYTHONPATH points to this module installed in the stage directory.\r\n\r\nIn many cases (not always) pytest fails to find this module in PYTHONPATH.\r\n\r\nTestcase: https://github.com/moderngl/moderngl\r\n\r\nFull log:\r\n```\r\n\r\ncd /usr/ports/graphics/py-moderngl/work-py39/moderngl-5.8.2/tests && /usr/bin/env XDG_DATA_HOME=/usr/ports/graphics/py-moderngl/work-py39  XDG_CONFIG_HOME=/usr/ports/graphics/py-moderngl/work-py39  XDG_CACHE_HOME=/usr/ports/graphics/py-moderngl/work-py39/.cache  HOME=/usr/ports/graphics/py-moderngl/work-py39 PATH=/usr/local/libexec/ccache:/usr/ports/graphics/py-moderngl/work-py39/.bin:/home/yuri/bin:/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin PKG_CONFIG_LIBDIR=/usr/ports/graphics/py-moderngl/work-py39/.pkgconfig:/usr/local/libdata/pkgconfig:/usr/local/share/pkgconfig:/usr/libdata/pkgconfig MK_DEBUG_FILES=no MK_KERNEL_SYMBOLS=no SHELL=/bin/sh NO_LINT=YES PREFIX=/usr/local  LOCALBASE=/usr/local  CC=\"cc\" CFLAGS=\"-O2 -pipe  -fstack-protector-strong -fno-strict-aliasing \"  CPP=\"cpp\" CPPFLAGS=\"\"  LDFLAGS=\" -fstack-protector-strong \" LIBS=\"\"  CXX=\"c++\" CXXFLAGS=\"-O2 -pipe -fstack-protector-strong -fno-strict-aliasing  \"  MANPREFIX=\"/usr/local\" CCACHE_DIR=\"/tmp/.ccache\" BSD_INSTALL_PROGRAM=\"install  -s -m 555\"  BSD_INSTALL_LIB=\"install  -s -m 0644\"  BSD_INSTALL_SCRIPT=\"install  -m 555\"  BSD_INSTALL_DATA=\"install  -m 0644\"  BSD_INSTALL_MAN=\"install  -m 444\" PYTHONPATH=/usr/ports/graphics/py-moderngl/work-py39/stage/usr/local/lib/python3.9/site-packages /usr/local/bin/python3.9 -m pytest -k '' -rs -v -o addopts= \r\n===================================================================================== test session starts =====================================================================================\r\nplatform freebsd13 -- Python 3.9.17, pytest-7.3.1, pluggy-1.0.0 -- /usr/local/bin/python3.9\r\ncachedir: .pytest_cache\r\nhypothesis profile 'default' -> database=DirectoryBasedExampleDatabase('/usr/ports/graphics/py-moderngl/work-py39/moderngl-5.8.2/tests/.hypothesis/examples')\r\nUsing --randomly-seed=3233284715\r\nbenchmark: 4.0.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)\r\nrootdir: /usr/ports/graphics/py-moderngl/work-py39/moderngl-5.8.2\r\nplugins: forked-1.6.0, hypothesis-6.75.9, asyncio-0.21.0, trio-0.8.0, mypy-plugins-1.11.1, cov-2.9.0, randomly-3.12.0, timeout-2.1.0, time-machine-2.10.0, rerunfailures-11.1.2, flaky-3.7.0, anyio-3.7.0, xdist-2.5.0, env-0.6.2, mock-3.10.0, subprocess-1.5.0, typeguard-4.0.0, httpserver-1.0.8, flask-0.15.1, benchmark-4.0.0\r\nasyncio: mode=strict\r\ncollected 345 items / 1 error                                                                                                                                                                 \r\n\r\n=========================================================================================== ERRORS ============================================================================================\r\n________________________________________________________________________ ERROR collecting tests/test_buffer_format.py _________________________________________________________________________\r\nImportError while importing test module '/usr/ports/graphics/py-moderngl/work-py39/moderngl-5.8.2/tests/test_buffer_format.py'.\r\nHint: make sure your test modules/packages have valid Python names.\r\nTraceback:\r\n/usr/local/lib/python3.9/importlib/__init__.py:127: in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\ntest_buffer_format.py:1: in <module>\r\n    from moderngl.mgl import fmtdebug\r\nE   ModuleNotFoundError: No module named 'moderngl.mgl'\r\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n====================================================================================== 1 error in 0.89s =======================================================================================\r\n*** Error code 2\r\n```\r\n\r\nPytest failed to find moderngl.mgl. But a regular python executable invocation succeeds:\r\n```\r\n[yuri@yv /usr/ports/graphics/py-moderngl]$ PYTHONPATH=/usr/ports/graphics/py-moderngl/work-py39/stage/usr/local/lib/python3.9/site-packages  python3.9 x.py \r\n[yuri@yv /usr/ports/graphics/py-moderngl]$ cat x.py \r\nfrom moderngl.mgl import fmtdebug\r\n```\r\n\r\npytest-7.3.1\r\nPython-3.9\r\nFreeBSD 13.2",
      "state": "OPEN",
      "createdAt": "2023-06-25T17:24:34Z",
      "updatedAt": "2024-01-20T04:42:19Z",
      "closedAt": null,
      "author": {
        "login": "yurivict"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "topic: collection"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 11140,
      "title": "Rewrite fails when first expression of file is a number and mistaken as docstring ",
      "body": "<!--\r\nThanks for submitting an issue!\r\n\r\nQuick check-list while reporting bugs:\r\n-->\r\n\r\n- [x] a detailed description of the bug or problem you are having\r\n- [x] output of `pip list` from the virtual environment you are using\r\n- [x] pytest and operating system versions\r\n- [x] minimal example if possible\r\n```\r\nInstalling collected packages: zipp, six, PyYAML, python-dateutil, MarkupSafe, importlib-metadata, watchdog, tomli, soupsieve, pyyaml-env-tag, pycparser, pluggy, packaging, mergedeep, Markdown, jinja2, iniconfig, ghp-import, exceptiongroup, click, websockets, urllib3, tqdm, smmap, pytest, pyee, mkdocs, lxml, importlib-resources, idna, cssselect, charset-normalizer, cffi, certifi, beautifulsoup4, attrs, appdirs, w3lib, typing-extensions, texttable, requests, pyzstd, pytest-metadata, pyquery, pyppmd, pyppeteer, pynacl, pymdown-extensions, pycryptodomex, pybcj, pyasn1, py, psutil, parse, multivolumefile, mkdocs-autorefs, inflate64, gitdb, fake-useragent, cryptography, comtypes, bs4, brotli, bcrypt, allure-python-commons, xlwt, xlrd, rsa, requests-html, pywinauto, python-i18n, python-dotenv, pytest-rerunfailures, pytest-html, pytest-check, PySocks, py7zr, paramiko, mkdocstrings, loguru, GitPython, ftputil, crcmod, chardet, brotlicffi, allure-pytest\r\nSuccessfully installed GitPython-3.1.31 Markdown-3.3.7 MarkupSafe-2.1.3 PySocks-1.7.1 PyYAML-6.0 allure-pytest-2.13.2 allure-python-commons-2.13.2 appdirs-1.4.4 attrs-23.1.0 bcrypt-4.0.1 beautifulsoup4-4.12.2 brotli-1.0.9 brotlicffi-1.0.9.2 bs4-0.0.1 certifi-2023.5.7 cffi-1.15.1 chardet-5.1.0 charset-normalizer-3.1.0 click-8.1.3 comtypes-1.2.0 crcmod-1.7 cryptography-41.0.1 cssselect-1.2.0 exceptiongroup-1.1.1 fake-useragent-1.1.3 ftputil-5.0.4 ghp-import-2.1.0 gitdb-4.0.10 idna-3.4 importlib-metadata-6.7.0 importlib-resources-5.12.0 inflate64-0.3.1 iniconfig-2.0.0 jinja2-3.1.2 loguru-0.7.0 lxml-4.9.2 mergedeep-1.3.4 mkdocs-1.4.3 mkdocs-autorefs-0.4.1 mkdocstrings-0.22.0 multivolumefile-0.2.3 packaging-23.1 paramiko-3.2.0 parse-1.19.1 pluggy-1.2.0 psutil-5.9.5 py-1.11.0 py7zr-0.20.5 pyasn1-0.5.0 pybcj-1.0.1 pycparser-2.21 pycryptodomex-3.18.0 pyee-8.2.2 pymdown-extensions-10.0.1 pynacl-1.5.0 pyppeteer-1.0.2 pyppmd-1.0.0 pyquery-2.0.0 pytest-7.4.0 pytest-check-2.1.5 pytest-html-3.2.0 pytest-metadata-3.0.0 pytest-rerunfailures-11.1.2 python-dateutil-2.8.2 python-dotenv-1.0.0 python-i18n-0.3.9 pywinauto-0.6.6 pyyaml-env-tag-0.1 pyzstd-0.15.9 requests-2.31.0 requests-html-0.10.0 rsa-4.9 six-1.16.0 smmap-5.0.0 soupsieve-2.4.1 texttable-1.6.7 tomli-2.0.1 tqdm-4.65.0 typing-extensions-4.6.3 urllib3-1.26.16 w3lib-2.1.1 watchdog-3.0.0 websockets-10.4 xlrd-2.0.1 xlwt-1.3.0 zipp-3.15.0\r\n```\r\nuse `pytest -k xxx`\uff0c report an error\uff1a`TypeError: argument of type 'int' is not iterable`\r\n\r\nit seems a error in collecting testcase\r\n```\r\n==================================== ERRORS ====================================\r\n_ ERROR collecting testcases/\u57fa\u7ebf/\u4ee3\u7406\u7b56\u7565/SOCKS\u4e8c\u7ea7\u4ee3\u7406\u8fed\u4ee3\u4e8c/\u5728\u7ebf\u7528\u6237/\u5728\u7ebf\u7528\u6237\u66f4\u65b0/\u4e0a\u7ebf\u7528\u6237/test_socks_user_011.py _\r\n/usr/local/lib/python3.8/site-packages/_pytest/runner.py:341: in from_call\r\n    result: Optional[TResult] = func()\r\n/usr/local/lib/python3.8/site-packages/_pytest/runner.py:372: in <lambda>\r\n    call = CallInfo.from_call(lambda: list(collector.collect()), \"collect\")\r\n/usr/local/lib/python3.8/site-packages/_pytest/python.py:531: in collect\r\n    self._inject_setup_module_fixture()\r\n/usr/local/lib/python3.8/site-packages/_pytest/python.py:545: in _inject_setup_module_fixture\r\n    self.obj, (\"setUpModule\", \"setup_module\")\r\n/usr/local/lib/python3.8/site-packages/_pytest/python.py:310: in obj\r\n    self._obj = obj = self._getobj()\r\n/usr/local/lib/python3.8/site-packages/_pytest/python.py:528: in _getobj\r\n    return self._importtestmodule()\r\n/usr/local/lib/python3.8/site-packages/_pytest/python.py:617: in _importtestmodule\r\n    mod = import_path(self.path, mode=importmode, root=self.config.rootpath)\r\n/usr/local/lib/python3.8/site-packages/_pytest/pathlib.py:565: in import_path\r\n    importlib.import_module(module_name)\r\n/usr/local/lib/python3.8/importlib/__init__.py:127: in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n<frozen importlib._bootstrap>:1014: in _gcd_import\r\n    ???\r\n<frozen importlib._bootstrap>:991: in _find_and_load\r\n    ???\r\n<frozen importlib._bootstrap>:975: in _find_and_load_unlocked\r\n    ???\r\n<frozen importlib._bootstrap>:671: in _load_unlocked\r\n    ???\r\n/usr/local/lib/python3.8/site-packages/_pytest/assertion/rewrite.py:169: in exec_module\r\n    source_stat, co = _rewrite_test(fn, self.config)\r\n/usr/local/lib/python3.8/site-packages/_pytest/assertion/rewrite.py:352: in _rewrite_test\r\n    rewrite_asserts(tree, source, strfn, config)\r\n/usr/local/lib/python3.8/site-packages/_pytest/assertion/rewrite.py:413: in rewrite_asserts\r\n    AssertionRewriter(module_path, config, source).run(mod)\r\n/usr/local/lib/python3.8/site-packages/_pytest/assertion/rewrite.py:695: in run\r\n    if self.is_rewrite_disabled(doc):\r\n/usr/local/lib/python3.8/site-packages/_pytest/assertion/rewrite.py:760: in is_rewrite_disabled\r\n    return \"PYTEST_DONT_REWRITE\" in docstring\r\nE   TypeError: argument of type 'int' is not iterable\r\n```",
      "state": "CLOSED",
      "createdAt": "2023-06-25T07:20:50Z",
      "updatedAt": "2023-07-04T17:47:15Z",
      "closedAt": "2023-07-04T17:47:14Z",
      "author": {
        "login": "Mutiantian"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: bug"
          },
          {
            "name": "topic: rewrite"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 7
      }
    },
    {
      "number": 11137,
      "title": "`Package` should not be a `Module`/`File`",
      "body": "*Note: this issue is extracted verbatim from https://github.com/pytest-dev/pytest/issues/7777#issuecomment-1575652688 so I can refer to it separately*\r\n\r\n`Package` is currently a subclass of a `Module`, with `package.path` being the `__init__.py` file.\r\n\r\nWhile technically in terms of the Python data model this [is correct](https://docs.python.org/3/glossary.html#term-package), I'm pretty convinced this was the wrong decision in pytest:\r\n\r\n`Package` is a `Module` with path `__init__.py`, but it doesn't actually act as a `Module` behaviorally, it overrides everything that `Module` does and doesn't call `super()` on anything.\r\n\r\n`Module` is a `nodes.File`, which makes `Package` a `nodes.File`, but it doesn't act as a file.\r\n\r\nThe previous points can be rephrased as: `Package` breaks Liskov substitution -- any code dealing with `File` or `Module` generically probably doesn't want `Package`.\r\n\r\n`Package` is a `Module` with path `__init__.py`, but it actually collects a \"real\" (non-`Package`) `Module` for the `__init__.py` file (if permitted by `python_files` glob). This is very confusing.\r\n\r\n`Package` and `__init__.py` necessitates several special-casings because of these points:\r\n\r\n- https://github.com/pytest-dev/pytest/blob/24534cdd29d74e302e86db1a719c99e024d7903e/src/_pytest/cacheprovider.py#L275-L278\r\n- https://github.com/pytest-dev/pytest/blob/24534cdd29d74e302e86db1a719c99e024d7903e/src/_pytest/main.py#L805-L818\r\n- https://github.com/pytest-dev/pytest/blob/24534cdd29d74e302e86db1a719c99e024d7903e/src/_pytest/fixtures.py#L123\r\n- https://github.com/pytest-dev/pytest/blob/24534cdd29d74e302e86db1a719c99e024d7903e/src/_pytest/python.py#L229-L231\r\n- https://github.com/pytest-dev/pytest/blob/24534cdd29d74e302e86db1a719c99e024d7903e/src/_pytest/python.py#L750-L761\r\n\r\n### Proposed solution\r\n\r\nAs part of the breaking `Package` changes discussed previously in this issue, also make these changes\r\n\r\n- `Package` no longer inherits from `Module` (or `File` by extension), just from `FSCollector`.\r\n- `Package.path` is the package directory, not the `__init__.py` file.\r\n- Collecting `pkg/__init__.py` collects the `__init__.py` file as a module (file), doesn't collect the entire package.\r\n\r\nThis also matches the new `Directory` node, which is the non-`Package` directory collector. `Directory` will inherit just from `FSCollector` and its `path` will be the directory. It will be much better if they are as similar to each other as possible.\r\n\r\n### Complication\r\n\r\nCurrently `Package`  has a `setup()` method which imports the `__init__.py`' and runs its `setup_module` function and registers `teardown_module` finalizer (in effectively the package scope). If we want to stop having `Package` as a `Module` it becomes a bit less natural to implement.\r\n\r\nThis functionality has some issues:\r\n- It is undocumented.\r\n- It doesn't match `unittest` which doesn't have package functionality\r\n- The names `setup_module` and `teardown_module` conflict with the \"real\" `__init__.py` `Module` setup/teardown; i.e., these methods are executed twice, if the `__init__.py` is included in the glob. It would have been better to call them `setup_package`/`teardown_package` (this is how nose [calls them](https://nose.readthedocs.io/en/latest/writing_tests.html#test-packages)).\r\n\r\nIt is tempting to just remove it, but it will probably cause some breakage (particularly the `__init__.py` importing part), so for now I plan to keep it in an ad-hoc manner.\r\n\r\n### POC\r\n\r\nI have an initial implementation of this change here, with all tests passing:\r\nhttps://github.com/bluetech/pytest/commits/pkg-mod",
      "state": "CLOSED",
      "createdAt": "2023-06-24T16:23:10Z",
      "updatedAt": "2023-07-28T20:15:10Z",
      "closedAt": "2023-07-28T20:15:10Z",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": [
          {
            "login": "bluetech"
          }
        ]
      },
      "labels": {
        "nodes": [
          {
            "name": "type: proposal"
          },
          {
            "name": "topic: collection"
          },
          {
            "name": "type: backward compatibility"
          }
        ]
      },
      "milestone": {
        "title": "8.0",
        "dueOn": null
      },
      "comments": {
        "totalCount": 0
      }
    },
    {
      "number": 11135,
      "title": "Provide a hook or feature to sanitize some displayed content",
      "body": "#### What's the problem this feature will solve?\r\nI'm writing some fixtures and integration tests using live, authenticated connections to a test instance of a service.  My test infrastructure can take care not to commit authentication secrets to the repository by putting them in a configuration file outside the repo.  However, some of the tests or fixtures take this connection information (say, in a dict with keys like `username` and `password`) as an argument.  If there is an error in a fixture or a failure of a test, pytest will print the value of these arguments.  For local testing, this isn't too bad, since these credential secrets just get printed to my console.  But if I run the test suite in my CI, then this output can leak credential information into pipeline logs, posing a security risk.\r\n\r\nI'd like a way to be able to sanitize such output so username/password (or other secrets) don't get printed.\r\n\r\n#### Describe the solution you'd like\r\nI'm not sure what a solution would look like.  I did try to search both pytest's documentation and pytest plugins on PyPI, plus some general internet searches (and maybe even a ChatGPT query or two) to try to find an existing solution.  None of them worked or were simple to set up.\r\n\r\nOff the top of my head I'm thinking something like a pytest decorator that I could place on some fixture functions and/or test methods that would signal that the arguments -- or possibly even local variables -- have sensitive information.  This decorator could specify a user-supplied sanitation function that would get called on error or failure.  This sanitation function would get some mutable structure of all the variables that pytest would normally print to the console, and this function would have the opportunity to change the values before they get printed.  (Of course, pytest would have to be careful not to print this structure if the sanitation function itself has a bug!).\r\n\r\nSo in my situation, it might get access that credentials dictionary as an argument or local variable.  My sanitation function could then look for `username` and `password` keys, and replace the value with `'**suppressed**'` or some such.  Then pytest would print that sanitized variable without leaking the credentials.\r\n\r\n#### Alternative Solutions\r\n<!-- Have you tried to workaround the problem using a pytest plugin or other tools? Or a different approach to solving this issue? Please elaborate here. -->\r\nI've tried to write a custom plugin but have not had any luck in doing this.  Part of the problem I think is that there is no public, supported API for getting access to the list of variables that will be printed, and no good way of interposing just before these variables are printed.\r\n\r\n#### Additional context\r\nI'm rather surprised this hasn't come up before, but if it has and I have missed the solution, then TIA for any guidance you can provide!\r\n",
      "state": "OPEN",
      "createdAt": "2023-06-23T15:58:44Z",
      "updatedAt": "2024-08-07T01:38:22Z",
      "closedAt": null,
      "author": {
        "login": "warsaw"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: proposal"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 11134,
      "title": "Pytest 7.4.0 release broke addoption behaviour",
      "body": "Hi!\r\n\r\nIn the [AWS ParallelCluster](https://github.com/aws/aws-parallelcluster) project we are using pytest and adding some custom options to it:\r\n* https://github.com/aws/aws-parallelcluster/blob/develop/tests/integration-tests/conftest.py#L109\r\n* https://github.com/aws/aws-parallelcluster/blob/develop/tests/integration-tests/test_runner.py#L466\r\n\r\nOur tests started to fail after the automatic upgrade to 7.4.0 with an error like:\r\n```\r\n2023-06-23 12:41:56,473 - INFO - test_runner - Starting pytest in region ... with params ['-s', '-vv', '-l', '--tests-log-file=..., '--output-dir=...', '--key-name=...', '--key-path=...', ...]\r\n...\r\nERROR: usage: test_runner.py [options] [file_or_dir] [file_or_dir] [...]\r\ntest_runner.py: error: unrecognized arguments: --tests-log-file=... --output-dir=... --key-name=... --key-path=... --stackname-suffix ...\r\n```\r\n\r\nSo we had to pin the version to 7.3.2: https://github.com/aws/aws-parallelcluster/pull/5425\r\n\r\n\r\n### Pip freeze\r\n\r\n```\u00a0\r\nInstalled packages:\r\nPackage                             Version\r\n----------------------------------- -----------\r\nassertpy                            1.1\r\nattrs                               23.1.0\r\naws-cdk.assets                      1.204.0\r\naws-cdk.aws-acmpca                  1.204.0\r\naws-cdk.aws-apigateway              1.204.0\r\naws-cdk.aws-applicationautoscaling  1.204.0\r\naws-cdk.aws-autoscaling             1.204.0\r\naws-cdk.aws-autoscaling-common      1.204.0\r\naws-cdk.aws-autoscaling-hooktargets 1.204.0\r\naws-cdk.aws-batch                   1.204.0\r\naws-cdk.aws-certificatemanager      1.204.0\r\naws-cdk.aws-cloudformation          1.204.0\r\naws-cdk.aws-cloudfront              1.204.0\r\naws-cdk.aws-cloudwatch              1.204.0\r\naws-cdk.aws-codebuild               1.204.0\r\naws-cdk.aws-codecommit              1.204.0\r\naws-cdk.aws-codeguruprofiler        1.204.0\r\naws-cdk.aws-codestarnotifications   1.204.0\r\naws-cdk.aws-cognito                 1.204.0\r\naws-cdk.aws-dynamodb                1.204.0\r\naws-cdk.aws-ec2                     1.204.0\r\naws-cdk.aws-ecr                     1.204.0\r\naws-cdk.aws-ecr-assets              1.204.0\r\naws-cdk.aws-ecs                     1.204.0\r\naws-cdk.aws-efs                     1.204.0\r\naws-cdk.aws-elasticloadbalancing    1.204.0\r\naws-cdk.aws-elasticloadbalancingv2  1.204.0\r\naws-cdk.aws-events                  1.204.0\r\naws-cdk.aws-fsx                     1.204.0\r\naws-cdk.aws-globalaccelerator       1.204.0\r\naws-cdk.aws-iam                     1.204.0\r\naws-cdk.aws-imagebuilder            1.204.0\r\naws-cdk.aws-kinesis                 1.204.0\r\naws-cdk.aws-kms                     1.204.0\r\naws-cdk.aws-lambda                  1.204.0\r\naws-cdk.aws-logs                    1.204.0\r\naws-cdk.aws-route53                 1.204.0\r\naws-cdk.aws-route53-targets         1.204.0\r\naws-cdk.aws-s3                      1.204.0\r\naws-cdk.aws-s3-assets               1.204.0\r\naws-cdk.aws-sam                     1.204.0\r\naws-cdk.aws-secretsmanager          1.204.0\r\naws-cdk.aws-servicediscovery        1.204.0\r\naws-cdk.aws-signer                  1.204.0\r\naws-cdk.aws-sns                     1.204.0\r\naws-cdk.aws-sns-subscriptions       1.204.0\r\naws-cdk.aws-sqs                     1.204.0\r\naws-cdk.aws-ssm                     1.204.0\r\naws-cdk.aws-stepfunctions           1.204.0\r\naws-cdk.cloud-assembly-schema       1.204.0\r\naws-cdk.core                        1.204.0\r\naws-cdk.custom-resources            1.204.0\r\naws-cdk.cx-api                      1.204.0\r\naws-cdk.region-info                 1.204.0\r\naws-parallelcluster                 3.7.0\r\nbcrypt                              4.0.1\r\nboto3                               1.26.159\r\nbotocore                            1.29.159\r\ncattrs                              23.1.2\r\ncertifi                             2023.5.7\r\ncffi                                1.15.1\r\ncfn-flip                            1.3.0\r\ncharset-normalizer                  3.1.0\r\nclick                               8.1.3\r\nclickclick                          20.10.2\r\nconnexion                           2.13.1\r\nconstructs                          3.4.332\r\ncontourpy                           1.1.0\r\ncryptography                        41.0.1\r\ncycler                              0.11.0\r\ndefusedxml                          0.7.1\r\ndocopt                              0.6.2\r\nexceptiongroup                      1.1.1\r\nexecnet                             1.9.0\r\nfabric                              2.6.0\r\nfilelock                            3.12.2\r\nFlask                               2.2.5\r\nfonttools                           4.40.0\r\nfuture                              0.18.3\r\nidna                                3.4\r\nimportlib-metadata                  6.7.0\r\nimportlib-resources                 5.12.0\r\ninflection                          0.5.1\r\niniconfig                           2.0.0\r\ninvoke                              1.7.3\r\nitsdangerous                        2.1.2\r\nJinja2                              3.1.2\r\njmespath                            0.10.0\r\njsii                                1.84.0\r\njsonschema                          4.17.3\r\njunitparser                         3.1.0\r\nkiwisolver                          1.4.4\r\nMarkupSafe                          2.1.3\r\nmarshmallow                         3.19.0\r\nmatplotlib                          3.7.1\r\nnumpy                               1.25.0\r\npackaging                           23.1\r\nparamiko                            3.2.0\r\npathlib2                            2.3.7.post1\r\npcluster-client                     1.0.0\r\npexpect                             4.8.0\r\nPillow                              9.5.0\r\npip                                 23.1.2\r\npluggy                              1.2.0\r\npsutil                              5.9.5\r\nptyprocess                          0.7.0\r\npublication                         0.0.3\r\npy                                  1.11.0\r\npycparser                           2.21\r\npykwalify                           1.8.0\r\nPyNaCl                              1.5.0\r\npyOpenSSL                           23.2.0\r\npyparsing                           3.1.0\r\npyrsistent                          0.19.3\r\npytest                              7.4.0\r\npytest-datadir                      1.4.1\r\npytest-html                         3.2.0\r\npytest-metadata                     3.0.0\r\npytest-rerunfailures                11.1.2\r\npytest-sugar                        0.9.7\r\npytest-xdist                        3.3.1\r\npython-dateutil                     2.8.2\r\nPyYAML                              5.4.1\r\nrequests                            2.31.0\r\nretrying                            1.3.4\r\nruamel.yaml                         0.17.32\r\nruamel.yaml.clib                    0.2.7\r\ns3transfer                          0.6.1\r\nsetuptools                          58.1.0\r\nsix                                 1.16.0\r\ntabulate                            0.8.10\r\ntermcolor                           2.3.0\r\ntomli                               2.0.1\r\ntroposphere                         4.3.2\r\ntypeguard                           2.13.3\r\ntyping_extensions                   4.6.3\r\nuntangle                            1.2.1\r\nurllib3                             1.26.16\r\nWerkzeug                            2.3.6\r\nxmltodict                           0.13.0\r\nzipp                                3.15.0\r\n```",
      "state": "CLOSED",
      "createdAt": "2023-06-23T14:56:09Z",
      "updatedAt": "2023-08-07T12:20:25Z",
      "closedAt": "2023-07-23T02:00:05Z",
      "author": {
        "login": "enrico-usai"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "status: needs information"
          },
          {
            "name": "stale"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 8
      }
    },
    {
      "number": 11126,
      "title": "7.4 and 8.0 release planning",
      "body": "I have some pending breaking changes to pytest, that can't really go through a deprecation cycle. Things like:\r\n\r\n- Changing collection of `__init__.py` to collect just the module, not the entire package (#11042)\r\n- Changing `Package` to not be a `Module` (https://github.com/pytest-dev/pytest/issues/7777#issuecomment-1575652688)\r\n- Adding the `Directory`/`Dir` nodes (https://github.com/pytest-dev/pytest/issues/7777#issuecomment-1555963294)\r\n\r\nI'd like to include these changes in the next major release, 8.0.\r\n\r\nBut before that, I suggest we release 7.4 with what we have already.\r\n\r\nI can manage these releases.\r\n\r\nProposal:\r\n- [x] Release 7.4 this weekend\r\n- [x] Change main to be 8.*\r\n- [x] Work on the planned features until they're done (1-2 months hopefully)\r\n- [x] Branch 8.0.x, release 8.0.0-rc1\r\n- [x] Wait ~1 month for testing/feedback\r\n- Release 8.0.0",
      "state": "CLOSED",
      "createdAt": "2023-06-21T06:14:36Z",
      "updatedAt": "2024-01-27T22:45:13Z",
      "closedAt": "2024-01-27T22:45:13Z",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": [
          {
            "login": "bluetech"
          }
        ]
      },
      "labels": {
        "nodes": []
      },
      "milestone": {
        "title": "8.0",
        "dueOn": null
      },
      "comments": {
        "totalCount": 11
      }
    },
    {
      "number": 11122,
      "title": "Switch to new-style pluggy hook wrappers",
      "body": "This is a new feature in pluggy 1.1.0: https://pluggy.readthedocs.io/en/latest/changelog.html#pluggy-1-1-0-2023-06-19\r\n    \r\nThey are slightly cleaner, faster (if only new-style wrappers are used) and safer (better handling of exceptions thrown after the `yield`). They are fully interoperable with `hookwrapper=True` wrappers.\r\n\r\nThis will require pluggy>=1.1.0.",
      "state": "CLOSED",
      "createdAt": "2023-06-19T11:39:14Z",
      "updatedAt": "2023-07-15T07:03:37Z",
      "closedAt": "2023-07-15T07:03:36Z",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": [
          {
            "login": "bluetech"
          }
        ]
      },
      "labels": {
        "nodes": [
          {
            "name": "type: proposal"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      }
    },
    {
      "number": 11121,
      "title": "Adding scope to parametrized fixture changes test ordering, (e.g. confuses PyCharm)",
      "body": "The output of `pytest test_.py` (specifically the order of tests) changes when using a function-scoped parametrized fixture versus any other scoped fixture. \r\n\r\n<details>\r\n\r\n<summary>Click to toggle MWE</summary>\r\n\r\n```py\r\n# ./test_.py\r\nimport pytest\r\n\r\n\r\n@pytest.fixture(\r\n    scope=\"class\",\r\n    params=[\"one\", \"two\"],\r\n)\r\ndef f(request):\r\n    return request.param\r\n\r\n\r\ndef test_one(f):\r\n    assert f\r\n\r\n\r\ndef test_two(f):\r\n    assert f\r\n```\r\n\r\n</details>\r\n\r\nRunning the MWE with a function-scoped fixture produces this output:\r\n\r\n```\r\n\u276f pytest -v test_.py\r\n====================================================================== test session starts =======================================================================\r\nplatform darwin -- Python 3.9.6, pytest-7.3.2, pluggy-1.0.0\r\nrootdir: /Users/cleancoder/dev/scratch/pythonProject\r\ncollected 4 items                                                                                                                                                \r\n\r\ntest_.py::test_one[one] PASSED                                                                                                                  [ 25%]\r\ntest_.py::test_one[two] PASSED                                                                                                                  [ 50%]\r\ntest_.py::test_two[one] PASSED                                                                                                                  [ 75%]\r\ntest_.py::test_two[two] PASSED                                                                                                                  [100%]\r\n\r\n======================================================================== 4 passed in 0.01s =========================================================================\r\n```\r\n\r\nChanging the scope to `class` also changes the test ordering:\r\n\r\n```\r\n\u276f pytest -v test_.py\r\n====================================================================== test session starts =======================================================================\r\nplatform darwin -- Python 3.9.6, pytest-7.3.2, pluggy-1.0.0\r\nrootdir: /Users/cleancoder/dev/scratch/pythonProject\r\ncollected 4 items                                                                                                                                                \r\n\r\ntest_.py::test_one[one] PASSED                                                                                                                  [ 25%]\r\ntest_.py::test_two[one] PASSED                                                                                                                  [ 50%]\r\ntest_.py::test_one[two] PASSED                                                                                                                  [ 75%]\r\ntest_.py::test_two[two] PASSED                                                                                                                  [100%]\r\n\r\n======================================================================== 4 passed in 0.01s =========================================================================\r\n```\r\n\r\nThe correct (aka expected) output allows PyCharm to group the test results nicely:\r\n\r\n<img width=\"407\" alt=\"Screenshot 2023-06-19 at 10 33 52\" src=\"https://github.com/pytest-dev/pytest/assets/7534547/d125dcaf-e403-42c3-a1b1-ecd5f8b68409\">\r\n\r\nThe other output confuses PyCharm (and also me when reading the results on the CLI directly):\r\n\r\n<img width=\"406\" alt=\"Screenshot 2023-06-19 at 10 34 03\" src=\"https://github.com/pytest-dev/pytest/assets/7534547/29cb9449-704d-4192-8b18-faded670bd48\">\r\n\r\nOther details:\r\n- Python 3.9.6\r\n- macOS 13.4\r\n\r\nOutput of `pip list`:\r\n\r\n```\r\n\u276f pip list\r\nPackage        Version\r\n-------------- -------\r\nexceptiongroup 1.1.1\r\niniconfig      2.0.0\r\npackaging      23.1\r\npip            22.3.1\r\npluggy         1.0.0\r\npytest         7.3.2\r\nsetuptools     67.0.0\r\ntomli          2.0.1\r\nwheel          0.38.4\r\n```",
      "state": "OPEN",
      "createdAt": "2023-06-19T08:36:46Z",
      "updatedAt": "2023-06-20T03:04:18Z",
      "closedAt": null,
      "author": {
        "login": "chbndrhnns"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "topic: fixtures"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      }
    },
    {
      "number": 11118,
      "title": "pytest.ini pythonpath doesn't work with local early-loaded (-p) plugin",
      "body": "I am using pytest 7.2.1 on NixOS 23.05 and want to early-load a plugin, so I can do [some custom command line parsing using `pytest_load_initial_conftests`](https://stackoverflow.com/questions/74850393/pytest-customize-sys-argv-parsing). Here's my setup:\r\n```\r\n >conftest.py     echo 'pytest_plugins = [ \"my_plugin\" ]'\r\n >my_plugin.py    echo 'print(\"Plugin loaded\")'\r\n >pytest.ini      echo '[pytest]' \r\n>>pytest.ini      echo 'pythonpath = .' \r\n```\r\n\r\nNormal non-early loading of plugin works:\r\n```\r\n$ pytest -q\r\nno tests ran in 0.00s\r\nPlugin loaded\r\n```\r\n\r\nEarly-loading plugin with manual `PYTHONPATH` override also works:\r\n```\r\n$ PYTHONPATH=\"$PYTHONPATH:.\" pytest -p my_plugin -q\r\nPlugin loaded\r\n\r\nno tests ran in 0.00s\r\n```\r\n\r\nBut relying on `pytest.ini` `pythonpath` for early-loading fails:\r\n```\r\n$ pytest -p my_plugin\r\nTraceback (most recent call last):\r\n  File \"/nix/store/apjpa7zk1p61ri44n1a4mykdyqpbdvw1-python3.10-pytest-7.2.1/lib/python3.10/site-packages/_pytest/config/__init__.py\", line 774, in import_plugin\r\n    __import__(importspec)\r\nModuleNotFoundError: No module named 'my_plugin'\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/nix/store/apjpa7zk1p61ri44n1a4mykdyqpbdvw1-python3.10-pytest-7.2.1/bin/.pytest-wrapped\", line 9, in <module>\r\n    sys.exit(console_main())\r\n  File \"/nix/store/apjpa7zk1p61ri44n1a4mykdyqpbdvw1-python3.10-pytest-7.2.1/lib/python3.10/site-packages/_pytest/config/__init__.py\", line 190, in console_main\r\n    code = main()\r\n  File \"/nix/store/apjpa7zk1p61ri44n1a4mykdyqpbdvw1-python3.10-pytest-7.2.1/lib/python3.10/site-packages/_pytest/config/__init__.py\", line 148, in main\r\n    config = _prepareconfig(args, plugins)\r\n  File \"/nix/store/apjpa7zk1p61ri44n1a4mykdyqpbdvw1-python3.10-pytest-7.2.1/lib/python3.10/site-packages/_pytest/config/__init__.py\", line 329, in _prepareconfig\r\n    config = pluginmanager.hook.pytest_cmdline_parse(\r\n  File \"/nix/store/r5wq2w8xy457h1bwx3fyb8lvlaim3gkx-python3.10-pluggy-1.0.0/lib/python3.10/site-packages/pluggy/_hooks.py\", line 265, in __call__\r\n    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\r\n  File \"/nix/store/r5wq2w8xy457h1bwx3fyb8lvlaim3gkx-python3.10-pluggy-1.0.0/lib/python3.10/site-packages/pluggy/_manager.py\", line 80, in _hookexec\r\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\r\n  File \"/nix/store/r5wq2w8xy457h1bwx3fyb8lvlaim3gkx-python3.10-pluggy-1.0.0/lib/python3.10/site-packages/pluggy/_callers.py\", line 55, in _multicall\r\n    gen.send(outcome)\r\n  File \"/nix/store/apjpa7zk1p61ri44n1a4mykdyqpbdvw1-python3.10-pytest-7.2.1/lib/python3.10/site-packages/_pytest/helpconfig.py\", line 103, in pytest_cmdline_parse\r\n    config: Config = outcome.get_result()\r\n  File \"/nix/store/r5wq2w8xy457h1bwx3fyb8lvlaim3gkx-python3.10-pluggy-1.0.0/lib/python3.10/site-packages/pluggy/_result.py\", line 60, in get_result\r\n    raise ex[1].with_traceback(ex[2])\r\n  File \"/nix/store/r5wq2w8xy457h1bwx3fyb8lvlaim3gkx-python3.10-pluggy-1.0.0/lib/python3.10/site-packages/pluggy/_callers.py\", line 39, in _multicall\r\n    res = hook_impl.function(*args)\r\n  File \"/nix/store/apjpa7zk1p61ri44n1a4mykdyqpbdvw1-python3.10-pytest-7.2.1/lib/python3.10/site-packages/_pytest/config/__init__.py\", line 1058, in pytest_cmdline_parse\r\n    self.parse(args)\r\n  File \"/nix/store/apjpa7zk1p61ri44n1a4mykdyqpbdvw1-python3.10-pytest-7.2.1/lib/python3.10/site-packages/_pytest/config/__init__.py\", line 1346, in parse\r\n    self._preparse(args, addopts=addopts)\r\n  File \"/nix/store/apjpa7zk1p61ri44n1a4mykdyqpbdvw1-python3.10-pytest-7.2.1/lib/python3.10/site-packages/_pytest/config/__init__.py\", line 1225, in _preparse\r\n    self.pluginmanager.consider_preparse(args, exclude_only=False)\r\n  File \"/nix/store/apjpa7zk1p61ri44n1a4mykdyqpbdvw1-python3.10-pytest-7.2.1/lib/python3.10/site-packages/_pytest/config/__init__.py\", line 702, in consider_preparse\r\n    self.consider_pluginarg(parg)\r\n  File \"/nix/store/apjpa7zk1p61ri44n1a4mykdyqpbdvw1-python3.10-pytest-7.2.1/lib/python3.10/site-packages/_pytest/config/__init__.py\", line 728, in consider_pluginarg\r\n    self.import_plugin(arg, consider_entry_points=True)\r\n  File \"/nix/store/apjpa7zk1p61ri44n1a4mykdyqpbdvw1-python3.10-pytest-7.2.1/lib/python3.10/site-packages/_pytest/config/__init__.py\", line 776, in import_plugin\r\n    raise ImportError(\r\n  File \"/nix/store/apjpa7zk1p61ri44n1a4mykdyqpbdvw1-python3.10-pytest-7.2.1/lib/python3.10/site-packages/_pytest/config/__init__.py\", line 774, in import_plugin\r\n    __import__(importspec)\r\nImportError: Error importing plugin \"my_plugin\": No module named 'my_plugin'\r\n```\r\n\r\nI haven't seen anything in the docs to indicate that pythonpath is not applicable to `-p`. If that's intended behavior, it would be nice to amend the docs to reflect that. Also, I am curious if there's another way to get `pytest -p my_plugin` to just work? I'd like to add `-p my_plugin` to my `pytest.ini` eventually, so users just need to type in `pytest` and not have to worry about paths.",
      "state": "CLOSED",
      "createdAt": "2023-06-18T06:00:25Z",
      "updatedAt": "2023-06-22T15:12:39Z",
      "closedAt": "2023-06-22T15:12:39Z",
      "author": {
        "login": "a3f"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: question"
          },
          {
            "name": "type: docs"
          },
          {
            "name": "topic: config"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 5
      }
    },
    {
      "number": 11115,
      "title": "Pytest reevaluates walrus operations within assert statements",
      "body": "<!--\r\nThanks for submitting an issue!\r\n\r\nQuick check-list while reporting bugs:\r\n-->\r\n\r\n- [x] a detailed description of the bug or problem you are having\r\n- [x] output of `pip list` from the virtual environment you are using\r\n- [x] pytest and operating system versions\r\n- [x] minimal example if possible\r\n\r\nUbuntu 22.04, pytest 7.3.2, python 3.10.11\r\n\r\nPackage        Version\r\n-------------- -------\r\nexceptiongroup 1.1.1\r\niniconfig      2.0.0\r\npackaging      23.1\r\npip            23.1.2\r\npluggy         1.0.0\r\npytest         7.3.2\r\nsetuptools     67.8.0\r\ntomli          2.0.1\r\nwheel          0.38.4\r\n\r\nPytest 7.3.2 re-evaluates walrus operator statements if they appear in assert statements.\r\n\r\n```\r\ndef test_walrus():\r\n    assert (x := 2) == 2\r\n    x  =  3\r\n    assert x == 3, \"This test fails because (x := 2) is reevaluated by pytest\"\r\n    \r\ndef test_walrus_no_assert():\r\n    (x := 2) == 2\r\n    x = 3\r\n    assert x == 3, \"This test passes because (x := 2) is not reevaluated\"\r\n```\r\n",
      "state": "OPEN",
      "createdAt": "2023-06-15T18:35:39Z",
      "updatedAt": "2024-10-15T15:13:54Z",
      "closedAt": null,
      "author": {
        "login": "regananalytics"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: regression"
          },
          {
            "name": "topic: rewrite"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 5
      }
    },
    {
      "number": 11111,
      "title": "ModuleNotFoundError when pytest not in venv",
      "body": "<!--\r\nThanks for submitting an issue!\r\n\r\nQuick check-list while reporting bugs:\r\n-->\r\nIf pytest is installed system-wide but not in a venv, pytest will run but not find the dependencies installed in the venv. It would be nice if pytest would trigger a descriptive error if the ENV var VIRTUAL_ENV is set but pytest is not running from inside this venv.\r\n\r\npytest 7.2.1 from Debian bookworm (12)\r\n\r\nReproduce: \r\n\r\n1. Ensure pytest is installed system-wide\r\n2. Create venv\r\n3. Activate venv and install any module (e.g. foo) not present in system (but not pytest)\r\n4. Create a test file importing this module\r\n5. Run pytest, it will produce \"E   ModuleNotFoundError: No module named 'foo'\"",
      "state": "OPEN",
      "createdAt": "2023-06-15T10:02:08Z",
      "updatedAt": "2023-08-17T19:37:24Z",
      "closedAt": null,
      "author": {
        "login": "mkesper"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: enhancement"
          },
          {
            "name": "topic: collection"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 12
      }
    },
    {
      "number": 11109,
      "title": "Window And Tab Handel ",
      "body": "<!--\r\nThanks for suggesting a feature!\r\n\r\nQuick check-list while suggesting features:\r\n-->\r\nimport time\r\n\"\"\"from this code i want to say selenium consider both tab and window are same  \r\nin general tab and window is different things,\r\nTabs are contained within a single browser window,\r\nWindows are separate instances of the Chrome browser running independently\"\"\"\r\n\r\nfrom selenium import webdriver\r\nfrom selenium.webdriver.common.by import By\r\n\r\n# Create a new instance of the browser driver\r\ndriver = webdriver.Chrome()\r\ndriver.get('https://www.google.com')\r\ntime.sleep(3)\r\n\r\n# Execute JavaScript to open a new window instance\r\ndriver.execute_script(\"window.open('https://www.example.com', 'new_window', 'width=800,height=600');\")\r\ntime.sleep(3)\r\n# Execute JavaScript to open a new Tab\r\ndriver.execute_script(\"window.open();\")\r\ntime.sleep(2)\r\n\r\n\r\n# Switch to the new window\r\ndriver.switch_to.window(driver.window_handles[1])\r\ntime.sleep(3)\r\n# Perform actions on the new window if needed\r\n# For example, let's get the title of the new window\r\nnew_window_title = driver.title\r\nprint(\"New window title:\", new_window_title)\r\ntime.sleep(3)\r\nwindow_handles = driver.window_handles\r\ndriver.switch_to.window(driver.window_handles[2])\r\nprint(window_handles)\r\n# Close the window\r\n\r\ntime.sleep(3)\r\n# Switch back to the original window\r\ndriver.switch_to.window(driver.window_handles[0])\r\nprint(driver.title)\r\ntime.sleep(3)\r\n# Switch to the window\r\ndriver.switch_to.window(driver.window_handles[1])\r\nprint(driver.title)\r\ntime.sleep(3)\r\n# Switch to the window\r\ndriver.switch_to.window(driver.window_handles[2])\r\nprint(driver.title)\r\ntime.sleep(3)\r\n# here selenium fail to handel I think . it can open new window but it gives deflection\r\ndriver.execute_script(\"window.open('https://the-internet.herokuapp.com/windows', 'new_window','width=700,height=500')\")\r\ntime.sleep(3)\r\nprint(driver.title)\r\ndriver.find_element(By.XPATH, \"//a[normalize-space()='Click Here']\").click()\r\ntime.sleep(3)\r\nprint(driver.title)\r\n\r\nprint(window_handles)\r\ntime.sleep(2)\r\n# Close the driver\r\ndriver.quit()\r\n#### What's the problem this feature will solve?\r\n<!-- What are you trying to do, that you are unable to achieve with pytest as it currently stands? -->\r\n\r\n#### Describe the solution you'd like\r\n<!-- A clear and concise description of what you want to happen. -->\r\n\r\n<!-- Provide examples of real-world use cases that this would enable and how it solves the problem described above. -->\r\n\r\n#### Alternative Solutions\r\n<!-- Have you tried to workaround the problem using a pytest plugin or other tools? Or a different approach to solving this issue? Please elaborate here. -->\r\n\r\n#### Additional context\r\n<!-- Add any other context, links, etc. about the feature here. -->\r\n",
      "state": "CLOSED",
      "createdAt": "2023-06-15T09:06:39Z",
      "updatedAt": "2023-06-15T09:46:44Z",
      "closedAt": "2023-06-15T09:46:44Z",
      "author": {
        "login": "AkkiTester"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      }
    },
    {
      "number": 11108,
      "title": "Support for notebook debugging",
      "body": "Alternate title: A Notebook Debugger's Apology\r\n\r\n#### Summary\r\n\r\nWe don't expect pytest to support our use case, but wanted to share it for awareness and in case anyone else can benefit from our code.\r\n\r\n#### Context\r\n\r\nWe work in data science involving machine learning and optimization. Our sciences often require several datasets, where even the minimal amount of data to run our code is somewhat complex. While stepping through a test with a debugger is sometimes helpful, often analyzing a failing test requires studying the state of many data structures, each with a lot of data, and this can be difficult to do in a debugger. This investigative work can involve analyzing data and producing visualizations, and it isn't unheard of that the code to analyze a given scenario exceeds 50 lines. In our opinion, this type of exploratory analysis is where notebooks (e.g. Jupyter) shine. As we're working on fixing the code, we're often running the same code we did to analyze the scenario in order to see if our fix is working as expected.\r\n\r\n#### Problem\r\n\r\nTaking a pytest test and getting it to run in the notebook can be laborious. When fixtures are not used it typically is not too bad, but fixtures often require tracking down where the fixture is defined and copying the code behind the fixture. At times, fixtures depend on various functions, and all of this needs to be moved to or imported in the notebook.\r\n\r\n#### Our solution\r\n\r\nWe wrote the following hack to make it easier to debug a failing test. The code is below the usage. The test is from pandas (for demonstration purposes) and can be found [here](https://github.com/pandas-dev/pandas/blob/905fe6b0b90f5de334abb1585e15d987935a592e/pandas/tests/groupby/test_groupby.py#L261-L281). This test was chosen because it is fairly simple, uses a fixture, and uses a parametrization.\r\n\r\n```python\r\nimport pandas as pd\r\n\r\ntest_locals = run_pytest_single(pd, 'tests/groupby/test_groupby.py::test_pass_args_kwargs_duplicate_columns[True]')\r\n\r\nprint(test_locals.keys())\r\n# dict_keys(['tsframe', 'as_index', 'gb', 'warn', 'msg', 'res', 'ex_data', 'expected'])\r\n```\r\n\r\nThe `run_pytest_single` takes the package in which the test resides as well as the path to the test. The path includes any parametrizations, and is exactly that produced by pytest's summary. We are often copying it from our CI. The code uses pytest internals to setup and run the test function, and extracts any local variables from the test as a dictionary. We also (accidentally) return some locals that pytest has injected. In a notebook, we can then use this dictionary to investigate the state of the objects involved in the test.\r\n\r\nSo far the code has worked well in our tests, but we only use parametrizations and fixtures. It would not surprise us at all if there are various valid tests that would break our code.\r\n\r\n<details>\r\n<summary>Code</summary>\r\n\r\n```\r\nimport contextlib\r\nimport os\r\nimport sys\r\nimport traceback\r\nfrom typing import Any, Iterator, no_type_check\r\n\r\n\r\nclass _persistent_locals:\r\n    \"\"\"Decorator to persist local variables of a function.\r\n    \r\n    From SO: https://stackoverflow.com/q/9186395/10285434\r\n    \"\"\"\r\n    def __init__(self, func):\r\n        self._locals = {}\r\n        self.func = func\r\n        \r\n    def __call__(self, *args, **kwargs):\r\n        def tracer(frame, event, arg):\r\n            if event == 'return':\r\n                self._locals = frame.f_locals.copy()\r\n                \r\n        # tracer is activated on next call, return or exception\r\n        sys.setprofile(tracer)\r\n        try:\r\n            # trace the function call\r\n            res = self.func(*args, **kwargs)\r\n        finally:\r\n            # disable tracer and replace with old one\r\n            sys.setprofile(None)\r\n        return res\r\n    \r\n    @property\r\n    def locals(self):\r\n        return self._locals\r\n\r\n\r\n@contextlib.contextmanager\r\ndef temp_setattr(obj: Any, attr: str, value: Any) -> Iterator[None]:\r\n    \"\"\"Temporarily set attribute on an object.\r\n    \r\n    Vendored from pandas.\r\n    \r\n    Args:\r\n        obj: Object whose attribute will be modified.\r\n        attr: Attribute to modify.\r\n        value: Value to temporarily set attribute to.\r\n    \r\n    Yields:\r\n        obj with modified attribute.\r\n    \"\"\"\r\n    old_value = getattr(obj, attr)\r\n    setattr(obj, attr, value)\r\n    try:\r\n        yield obj\r\n    finally:\r\n        setattr(obj, attr, old_value)\r\n        \r\n\r\n@no_type_check\r\ndef run_pytest_single(package, test: str) -> dict[str, Any]:\r\n    \"\"\"Run a pytest test viastring and get the local variables of the test.\r\n    \r\n    Args:\r\n        path: pytest test relative to the root directory of the project.\r\n        \r\n    Returns:\r\n        Local variables from the test, regardless if the test succeeds or fails.\r\n    \"\"\"\r\n    from _pytest.config import _prepareconfig\r\n    from _pytest.main import Session\r\n    from _pytest.fixtures import FixtureRequest\r\n\r\n    # We don't understand what finalizers do, and they seem to cause issues. So far\r\n    # disabling them entirely has worked.\r\n    def disable_finalizers(*args, **kwargs):\r\n        pass\r\n\r\n    FixtureRequest._schedule_finalizers = disable_finalizers\r\n    \r\n    base_path = os.path.dirname(package.__file__)\r\n    path = os.path.join(base_path, test)\r\n    \r\n    # Sometimes repo location is read-only\r\n    with temp_setattr(sys, \"dont_write_bytecode\", True):\r\n        # n0 to disable pytest-xdist; this will raise if xdist is not installed\r\n        config = _prepareconfig([path, '-n0'])\r\n        session = Session.from_config(config)\r\n        config._do_configure()\r\n        config.hook.pytest_sessionstart(session=session)\r\n        config.hook.pytest_collection(session=session)\r\n        \r\n    # Only one test is supported\r\n    if len(session.items) == 0:\r\n        raise ValueError(f'No tests found with {test=}')\r\n    elif len(session.items) > 1:\r\n        raise ValueError(f'Multiple tests found with {test=}')\r\n    \r\n    session_test = session.items[0]\r\n    request = session_test._request\r\n    \r\n    kwargs = {}\r\n    for name in session_test.fixturenames:\r\n        # The request fixture doesn't require any setup\r\n        if name != 'request':\r\n            fixturedef = session_test._fixtureinfo.name2fixturedefs[name][0]\r\n            request._compute_fixture_value(fixturedef)\r\n        kwargs[name] = request.getfixturevalue(name)\r\n    \r\n    test_function = _persistent_locals(session_test.function)\r\n    try:\r\n        test_function(\r\n            **{arg: kwargs[arg] for arg in session_test._fixtureinfo.argnames}\r\n        )\r\n    except Exception:\r\n        traceback.print_exc()\r\n        print('Test failed')\r\n    else:\r\n        print('Test passed')\r\n    finally:\r\n        return test_function.locals\r\n```\r\n\r\n</details>\r\n\r\n#### Question\r\n\r\nAs mentioned, this code is quite the hack. I do not expect it to function across minor versions of pytest (although it hasn't broken yet!). Is it possible to better support this use case of pytest? I fully expect the answer to be that it would take quite an effort, and is not worth it. Still, thought it couldn't hurt to ask. Maybe someone can benefit from our code as well.",
      "state": "CLOSED",
      "createdAt": "2023-06-15T02:31:32Z",
      "updatedAt": "2024-02-17T20:32:07Z",
      "closedAt": "2024-02-17T20:32:07Z",
      "author": {
        "login": "rhshadrach"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: question"
          },
          {
            "name": "type: proposal"
          },
          {
            "name": "plugin: debugging"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 11107,
      "title": "Clarify rootdir relative nodeid vs cwd relative collection argument ",
      "body": "Preface: I am filing this issue as a bug report but it may well be a misunderstanding on my part. I tried searching through the issue reports but I may not have used the correct search terms so apologies if this has already been discussed.\r\n\r\nSummary: It is not clear whether a nodeid is relative to the current working directory or to the root dir.\r\n\r\nExample: Consider the following directory structure.\r\n```\r\npytest.ini\r\nham\r\n `--- tests\r\n       `--- test_spam.py\r\n```\r\nThe file `pytest.ini` is empty; it is only there to specify the rootdir. The file `ham/tests/test_spam.py` contains:\r\n```\r\ndef test_eggs():\r\n    pass\r\n\r\ndef test_cheese():\r\n    pass\r\n```\r\nWhen running `pytest -v` in the directory `ham/tests`, I obtain the following output:\r\n```\r\n=============================== test session starts ===============================\r\nplatform linux -- Python 3.10.9, pytest-7.3.2, pluggy-1.0.0 -- /home/jitse/mambaforge/envs/spytest/bin/python3.10\r\ncachedir: .pytest_cache\r\nrootdir: /home/jitse/tmp/pytestex\r\nconfigfile: pytest.ini\r\ncollected 2 items                                                                 \r\n\r\ntest_spam.py::test_eggs PASSED                                              [ 50%]\r\ntest_spam.py::test_cheese PASSED                                            [100%]\r\n\r\n================================ 2 passed in 0.00s ================================\r\n```\r\nThis suggests that the nodeid of the first test is `test_spam.py::test_eggs`. According to your doc page [Usage and Invocations](https://docs.pytest.org/en/6.2.x/usage.html), we can specify the nodeid to run a specific test, and indeed if we run `pytest test_spam.py::test_eggs` in the directory `ham/tests`, only the first test is run. This all suggests that nodeid is relative to the current working directory.\r\n\r\nOn the other hand, your doc page [Configuration](https://docs.pytest.org/en/latest/reference/customize.html#initialization-determining-rootdir-and-configfile) says \"each test is assigned a unique nodeid which is rooted at the rootdir\". If we add a file `conftest.py` containing:\r\n```\r\ndef pytest_itemcollected(item):\r\n    print(f'pytest_itemcollected: {item.nodeid=}')\r\n```\r\nand then run `pytest` in the `ham/tests` directory, we get the following output:\r\n```\r\n=============================== test session starts ===============================\r\nplatform linux -- Python 3.10.9, pytest-7.3.2, pluggy-1.0.0\r\nrootdir: /home/jitse/tmp/pytestex\r\nconfigfile: pytest.ini\r\ncollecting ... pytest_itemcollected: item.nodeid='ham/tests/test_spam.py::test_eggs'\r\npytest_itemcollected: item.nodeid='ham/tests/test_spam.py::test_cheese'\r\ncollected 2 items                                                                 \r\n\r\ntest_spam.py ..                                                             [100%]\r\n\r\n================================ 2 passed in 0.00s ================================\r\n```\r\nNote that the nodeid reported by the hook are relative to the rootdir, not the current working directory.\r\n",
      "state": "CLOSED",
      "createdAt": "2023-06-14T11:51:18Z",
      "updatedAt": "2023-07-27T06:16:20Z",
      "closedAt": "2023-07-27T06:16:20Z",
      "author": {
        "login": "jitseniesen"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: docs"
          },
          {
            "name": "topic: collection"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 4
      }
    },
    {
      "number": 11104,
      "title": "Pytest 7.3.2 changes in behaviour regarding conftest.py and `testpaths`",
      "body": "In [cibuildwheel](https://github.com/pypa/cibuildwheel), we have two test suites - the unit tests at `/unit_test` and the integration test suite at `/test`. Both `/unit_test` and `/test` are listed in testpaths-\r\n\r\n[**pyproject.toml**](https://github.com/pypa/cibuildwheel/blob/main/pyproject.toml)\r\n```toml\r\n#...\r\n[tool.pytest.ini_options]\r\ntestpaths = [\r\n    \"test\",\r\n    \"unit_test\",\r\n]\r\n#...\r\n```\r\n\r\nWe then run either `unit_test` or `test` using `pytest unit_test`/`pytest test`.\r\nEach `unit_test`/`test` dir contains a conftest.py file, which adds some options using `parser.addoption`. One option that is common to both test suites is `--run-podman`. Before 7.3.2, this setup seemed to work, we could run both unit tests and integration tests without issue. But on 7.3.2 (perhaps since #10988?) we get the following error: \r\n\r\n\r\n```console\r\n$ pytest unit_test --run-podman\r\nTraceback (most recent call last):\r\n  File \"/Users/joerick/Projects/cibuildwheel/env/bin/pytest\", line 8, in <module>\r\n    sys.exit(console_main())\r\n...snip...\r\n  File \"/Users/joerick/Projects/cibuildwheel/env/lib/python3.9/site-packages/_pytest/config/__init__.py\", line 1143, in pytest_load_initial_conftests\r\n    self.pluginmanager._set_initial_conftests(\r\n  File \"/Users/joerick/Projects/cibuildwheel/env/lib/python3.9/site-packages/_pytest/config/__init__.py\", line 566, in _set_initial_conftests\r\n    self._try_load_conftest(anchor, namespace.importmode, rootpath)\r\n  File \"/Users/joerick/Projects/cibuildwheel/env/lib/python3.9/site-packages/_pytest/config/__init__.py\", line 583, in _try_load_conftest\r\n    self._getconftestmodules(anchor, importmode, rootpath)\r\n  File \"/Users/joerick/Projects/cibuildwheel/env/lib/python3.9/site-packages/_pytest/config/__init__.py\", line 612, in _getconftestmodules\r\n    mod = self._importconftest(conftestpath, importmode, rootpath)\r\n  File \"/Users/joerick/Projects/cibuildwheel/env/lib/python3.9/site-packages/_pytest/config/__init__.py\", line 660, in _importconftest\r\n    self.consider_conftest(mod)\r\n  File \"/Users/joerick/Projects/cibuildwheel/env/lib/python3.9/site-packages/_pytest/config/__init__.py\", line 742, in consider_conftest\r\n    self.register(conftestmodule, name=conftestmodule.__file__)\r\n  File \"/Users/joerick/Projects/cibuildwheel/env/lib/python3.9/site-packages/_pytest/config/__init__.py\", line 488, in register\r\n    ret: Optional[str] = super().register(plugin, name)\r\n  File \"/Users/joerick/Projects/cibuildwheel/env/lib/python3.9/site-packages/pluggy/_manager.py\", line 115, in register\r\n    hook._maybe_apply_history(hookimpl)\r\n  File \"/Users/joerick/Projects/cibuildwheel/env/lib/python3.9/site-packages/pluggy/_hooks.py\", line 300, in _maybe_apply_history\r\n    res = self._hookexec(self.name, [method], kwargs, False)\r\n  File \"/Users/joerick/Projects/cibuildwheel/env/lib/python3.9/site-packages/pluggy/_manager.py\", line 80, in _hookexec\r\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\r\n  File \"/Users/joerick/Projects/cibuildwheel/env/lib/python3.9/site-packages/pluggy/_callers.py\", line 60, in _multicall\r\n    return outcome.get_result()\r\n  File \"/Users/joerick/Projects/cibuildwheel/env/lib/python3.9/site-packages/pluggy/_result.py\", line 60, in get_result\r\n    raise ex[1].with_traceback(ex[2])\r\n  File \"/Users/joerick/Projects/cibuildwheel/env/lib/python3.9/site-packages/pluggy/_callers.py\", line 39, in _multicall\r\n    res = hook_impl.function(*args)\r\n  File \"/Users/joerick/Projects/cibuildwheel/test/conftest.py\", line 10, in pytest_addoption\r\n    parser.addoption(\"--run-podman\", action=\"store_true\", default=False, help=\"run podman tests\")\r\n  File \"/Users/joerick/Projects/cibuildwheel/env/lib/python3.9/site-packages/_pytest/config/argparsing.py\", line 104, in addoption\r\n    self._anonymous.addoption(*opts, **attrs)\r\n  File \"/Users/joerick/Projects/cibuildwheel/env/lib/python3.9/site-packages/_pytest/config/argparsing.py\", line 385, in addoption\r\n    raise ValueError(\"option names %s already added\" % conflict)\r\nValueError: option names {'--run-podman'} already added\r\n```\r\n\r\nIs this an issue in our configuration, or a bug? Should we no longer use testpaths to list all the test suites?\r\n\r\n<details><summary>pip list output</summary>\r\n\r\n```\r\nPackage                        Version     Editable project location\r\n------------------------------ ----------- ------------------------------------\r\nargcomplete                    1.12.3\r\nattrs                          21.4.0\r\nbashlex                        0.16\r\nblack                          23.3.0\r\nbracex                         2.2.1\r\nbuild                          0.7.0\r\ncertifi                        2021.10.8\r\ncffi                           1.15.0\r\ncfgv                           3.3.1\r\ncharset-normalizer             2.0.12\r\ncibuildwheel                   2.10.0      /Users/joerick/Projects/cibuildwheel\r\nclick                          8.1.2\r\ncolorlog                       6.6.0\r\ncommonmark                     0.9.1\r\nDeprecated                     1.2.13\r\ndistlib                        0.3.4\r\nexceptiongroup                 1.1.1\r\nexecnet                        1.9.0\r\nfastcore                       1.4.1\r\nfilelock                       3.6.0\r\nflake8                         6.0.0\r\nghapi                          0.1.19\r\nghp-import                     2.1.0\r\nhtml2image                     2.0.1\r\nidentify                       2.4.12\r\nidna                           3.3\r\nimportlib-metadata             4.11.3\r\niniconfig                      1.1.1\r\nisort                          5.10.1\r\nJinja2                         3.1.2\r\nlivereload                     2.6.3\r\nMarkdown                       3.3.7\r\nMarkupSafe                     2.1.1\r\nmccabe                         0.7.0\r\nmergedeep                      1.3.4\r\nmkdocs                         1.3.1\r\nmkdocs-include-markdown-plugin 2.8.0\r\nmkdocs-macros-plugin           0.7.0\r\nmypy                           1.2.0\r\nmypy-extensions                1.0.0\r\nnodeenv                        1.6.0\r\nnox                            2022.1.7\r\npackaging                      23.1\r\npathspec                       0.9.0\r\npep517                         0.12.0\r\npip                            22.2.2\r\npip-tools                      6.12.2\r\nplatformdirs                   2.5.1\r\npluggy                         1.0.0\r\npre-commit                     2.17.0\r\npy                             1.11.0\r\npycodestyle                    2.10.0\r\npycparser                      2.21\r\npyflakes                       3.0.1\r\nPyGithub                       1.55\r\nPygments                       2.11.2\r\npyinstrument                   4.3.0\r\nPyJWT                          2.3.0\r\npymdown-extensions             9.3\r\nPyNaCl                         1.5.0\r\npyparsing                      3.0.7\r\npytest                         7.3.2\r\npytest-forked                  1.4.0\r\npytest-parallel                0.1.1\r\npytest-timeout                 2.1.0\r\npytest-xdist                   2.5.0\r\npython-dateutil                2.8.2\r\nPyYAML                         6.0\r\npyyaml_env_tag                 0.1\r\nrequests                       2.27.1\r\nrich                           12.0.1\r\nruff                           0.0.265\r\nsetuptools                     61.3.1\r\nsix                            1.16.0\r\ntblib                          1.7.0\r\ntermcolor                      1.1.0\r\ntoml                           0.10.2\r\ntomli                          2.0.1\r\ntomli_w                        1.0.0\r\ntornado                        6.1\r\ntypes-certifi                  2021.10.8.1\r\ntypes-click                    7.1.8\r\ntypes-Jinja2                   2.11.9\r\ntypes-MarkupSafe               1.1.10\r\ntypes-PyYAML                   6.0.5\r\ntypes-requests                 2.27.16\r\ntypes-toml                     0.10.4\r\ntypes-urllib3                  1.26.11\r\ntyping_extensions              4.1.1\r\nurllib3                        1.26.9\r\nvirtualenv                     20.14.0\r\nwatchdog                       2.1.9\r\nwheel                          0.37.1\r\nwrapt                          1.14.0\r\nzipp                           3.7.0\r\n```\r\n</details>\r\n\r\nXref https://github.com/pypa/cibuildwheel/pull/1518",
      "state": "CLOSED",
      "createdAt": "2023-06-13T08:31:59Z",
      "updatedAt": "2023-06-21T06:21:30Z",
      "closedAt": "2023-06-21T06:21:30Z",
      "author": {
        "login": "joerick"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: regression"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 8
      }
    },
    {
      "number": 11101,
      "title": "Support specifying filterwarnings per Python version",
      "body": "#### What's the problem this feature will solve?\r\n\r\nTL;DR: I want this to work:\r\n\r\n```toml\r\n# pyprojectl.toml\r\n[tool.pytest.ini_options]\r\nfilterwarnings = [\r\n    'ignore::EncodingWarning',  # ignore all EncodingWarnings...\r\n    'default::EncodingWarning:my_package\\b',  # ...except those from my_package\r\n]\r\n```\r\n\r\nIt *does* work when I test `my_package` under Python>=3.10, but I also need to test `my_package` under Python<3.10, and then it breaks with `AttributeError: module 'builtins' has no attribute 'EncodingWarning'`.\r\n\r\nLonger description:\r\n\r\nAFAIK, it's currently not possible to mention `EncodingWarning` (which was added in Python 3.10) in the list of warning filters in a way that is backwards compatible, and simultaneously use the feature of using regexes to match the *start* module qualified name in the filter. Pytest supports using pyproject.toml as a configuration file, but this file is Python-version-agnostic, so it should contain configuration that works simultaneously for all Python versions. (AFAIK, all other config file formats for pytest are Python-version-agnostic.) This means that since `my_package` supports Python 3.9, I can't mention `EncodingWarning` in pyproject.toml. However, AFAIK, configuring the warning filters list via a configuration file is the only way to enable the regex-matching of module qualnames; specifying the filters via `PYTHONWARNINGS` or `-W` doesn't work. I also tried manually adding filters via `warnings.filterwarnings` conditioned to `sys.version_info>=(3,10)` in `conftest.py`, but this apparently has no effects over my tests' warnings.\r\n\r\nTo summarize, the following alternatives don't work:\r\n\r\n- Don't specify filterwarnings in the config file, and pass customized `-W` flags to the pytest command-lines for each Python version \u2192 matching of module names with `-W` flags is performed by comparing the raw string in the filter to the fully qualified module name. I don't think it's reasonable to specify repeated `-W` flags for each of `my_package`'s 15 sub-modules.\r\n- Same, but use `PYTHONWARNINGS` instead of `-W` \u2192 same problem; `PYTHONWARNINGS` disables the feature of matching the start of the module qualified name.\r\n- Specify warning filters dinamically in `conftest.py` \u2192 no effect.\r\n\r\n#### Describe the solution you'd like\r\n\r\nIt would be nice to have a way of appending strings to the start and/or end of the filterwarnings list conditioned to the Python version. Something like:\r\n\r\n```toml\r\n[tool.pytest.ini_options.py310]\r\nfilterwarnings_append = ['ignore::EncodingWarning', 'default::EncodingWarning:my_package\\b']\r\n```\r\n\r\n#### Alternative Solutions\r\n\r\nI searched the Internet and asked around in IRC. My research led to the alternatives mentioned above, which are not satisfying (for the reasons mentioned above).",
      "state": "OPEN",
      "createdAt": "2023-06-11T22:44:13Z",
      "updatedAt": "2023-06-12T18:28:20Z",
      "closedAt": null,
      "author": {
        "login": "fofoni"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: proposal"
          },
          {
            "name": "topic: config"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      }
    },
    {
      "number": 11098,
      "title": "Hello",
      "body": "WPS Office-Word,Doc,PDF,Note,Slide&Sheet\n\u041f\u0435\u0440\u0441\u043e\u043d\u0430\u043b\u044c\u043d\u0430\u044f \u0432\u0435\u0440\u0441\u0438\u044f \u0441\u043e\u0432\u043c\u0435\u0441\u0442\u0438\u043c\u0430 \u0441 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u043c\u0438 \u0444\u043e\u0440\u043c\u0430\u0442\u0430\u043c\u0438 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432 \u043d\u0435\u0431\u043e\u043b\u044c\u0448\u043e\u0433\u043e \u0440\u0430\u0437\u043c\u0435\u0440\u0430 \u0438 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0431\u0435\u0441\u043f\u043b\u0430\u0442\u043d\u043e\u0439. \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u0435 \u0435\u0435 \u0437\u0434\u0435\u0441\u044c:\nhttps://www.wps.com/download/?from=AndroidCenterShare&is_from=android",
      "state": "CLOSED",
      "createdAt": "2023-06-10T23:02:56Z",
      "updatedAt": "2023-06-11T00:10:04Z",
      "closedAt": "2023-06-10T23:17:52Z",
      "author": {
        "login": "Maximus904"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 11091,
      "title": "Documentation: confusion between `--junit-xml` and `--junitxml`",
      "body": "The docs and cli help are a bit confusing around the `--junitxml`/`--junit-xml` cli option (and probably some comparable options).\r\n\r\n\r\n`pytest --help` only mentions `--junit-xml=path` (e.g. also see https://docs.pytest.org/en/7.1.x/reference/reference.html#command-line-flags):\r\n```text\r\n  --junit-xml=path      Create junit-xml style report file at given path\r\n```\r\n\r\nHowever, most examples in the docs (and mosts tests) use `--junitxml`, e.g. https://github.com/pytest-dev/pytest/blob/0ded3297a9749aabad7d3c2447dce98321741dda/doc/en/how-to/output.rst#creating-junitxml-format-files :\r\n\r\n```rst\r\nTo create result files which can be read by Jenkins_ or other Continuous\r\nintegration servers, use this invocation:\r\n\r\n.. code-block:: bash\r\n\r\n    pytest --junitxml=path\r\n\r\nto create an XML file at ``path``.\r\n```\r\n\r\nThis was quite confusing to me as it seemed there was a typo somewhere and I lost time just to figure out that they are aliases actually:\r\n\r\nhttps://github.com/pytest-dev/pytest/blob/0ded3297a9749aabad7d3c2447dce98321741dda/src/_pytest/junitxml.py#L384-L386\r\n\r\n\r\n\r\nWouldn't it be better to stick to one of the two everywhere or at least more explicitly mention that they are aliases?",
      "state": "CLOSED",
      "createdAt": "2023-06-07T15:30:36Z",
      "updatedAt": "2023-10-10T21:16:25Z",
      "closedAt": "2023-10-10T21:16:25Z",
      "author": {
        "login": "soxofaan"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "status: help wanted"
          },
          {
            "name": "type: docs"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 4
      }
    },
    {
      "number": 11088,
      "title": "macOS: OSError: [Errno 24] Too many open files ",
      "body": "<!--\r\nThanks for submitting an issue!\r\n\r\nQuick check-list while reporting bugs:\r\n\r\n- [x] a detailed description of the bug or problem you are having\r\n- [x] output of `pip list` from the virtual environment you are using\r\n- [x] pytest and operating system versions\r\n- [x] minimal example if possible\r\n-->\r\n\r\nI have 173 tests and 57 subtests, and with macOS Monterey v12.6 from `zsh`, I keep hitting this error, after ~20 of the test cases:\r\n\r\n```python\r\nOSError: [Errno 24] Too many open files: '/path/to/repo/venv/lib/python3.10/site-packages/pygments/__init__.py'\r\n```\r\n\r\nWhat's interesting is this error does not happen when using the same exact set up in:\r\n- PyCharm 2023.1.2 PE's `pytest` runner (on the same Mac)\r\n- CircleCI (Docker `cimg/python:3.10`)\r\n- Windows 10 Pro\r\n\r\nI can fix the problem on my Mac using this command:\r\n\r\n```shell\r\nulimit -n unlimited\r\n```\r\n\r\nEvery time I power cycle my computer, I need to re-run this command.\r\n\r\nI opened this issue to ask, can `pytest` do anything about this?  Why is it happening?\r\n\r\n### More Context\r\n\r\n- The tests are not open source, so I can't share a repro here\r\n- https://github.com/pytest-dev/pytest/issues/10635 seems related\r\n\r\n```shell\r\n> pytest test\r\n=============================================================================================================== test session starts ===============================================================================================================\r\nplatform darwin -- Python 3.10.9, pytest-7.3.1, pluggy-1.0.0\r\nrootdir: /path/to/repo/test\r\nconfigfile: pyproject.toml\r\nplugins: pyfakefs-5.2.2, subtests-0.11.0, mock-3.10.0\r\ncollected 72 items\r\nrepo/test/test_1.py .........................................                                                                                                                                                                          [ 56%]\r\nrepo/test/test_2.py ..........                                                                                                                                                                                               [ 70%]\r\nrepo/test/test_3.py ...........                                                                                                                                                                                                  [ 86%]\r\nrepo/test/test_4.py ....EEEEEE\r\n```\r\n\r\n<details>\r\n<summary>Traceback</summary>\r\n\r\n```python\r\nTraceback (most recent call last):\r\n  File \"/path/to/repo/venv/bin/pytest\", line 8, in <module>\r\n    sys.exit(console_main())\r\n  File \"/path/to/repo/venv/lib/python3.10/site-packages/_pytest/config/__init__.py\", line 189, in console_main\r\n    code = main()\r\n  File \"/path/to/repo/venv/lib/python3.10/site-packages/_pytest/config/__init__.py\", line 166, in main\r\n    ret: Union[ExitCode, int] = config.hook.pytest_cmdline_main(\r\n  File \"/path/to/repo/venv/lib/python3.10/site-packages/pluggy/_hooks.py\", line 265, in __call__\r\n    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\r\n  File \"/path/to/repo/venv/lib/python3.10/site-packages/pluggy/_manager.py\", line 80, in _hookexec\r\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\r\n  File \"/path/to/repo/venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 60, in _multicall\r\n    return outcome.get_result()\r\n  File \"/path/to/repo/venv/lib/python3.10/site-packages/pluggy/_result.py\", line 60, in get_result\r\n    raise ex[1].with_traceback(ex[2])\r\n  File \"/path/to/repo/venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 39, in _multicall\r\n    res = hook_impl.function(*args)\r\n  File \"/path/to/repo/venv/lib/python3.10/site-packages/_pytest/main.py\", line 316, in pytest_cmdline_main\r\n    return wrap_session(config, _main)\r\n  File \"/path/to/repo/venv/lib/python3.10/site-packages/_pytest/main.py\", line 304, in wrap_session\r\n    config.hook.pytest_sessionfinish(\r\n  File \"/path/to/repo/venv/lib/python3.10/site-packages/pluggy/_hooks.py\", line 265, in __call__\r\n    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\r\n  File \"/path/to/repo/venv/lib/python3.10/site-packages/pluggy/_manager.py\", line 80, in _hookexec\r\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\r\n  File \"/path/to/repo/venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 55, in _multicall\r\n    gen.send(outcome)\r\n  File \"/path/to/repo/venv/lib/python3.10/site-packages/_pytest/terminal.py\", line 822, in pytest_sessionfinish\r\n    self.config.hook.pytest_terminal_summary(\r\n  File \"/path/to/repo/venv/lib/python3.10/site-packages/pluggy/_hooks.py\", line 265, in __call__\r\n    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\r\n  File \"/path/to/repo/venv/lib/python3.10/site-packages/pluggy/_manager.py\", line 80, in _hookexec\r\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\r\n  File \"/path/to/repo/venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 60, in _multicall\r\n    return outcome.get_result()\r\n  File \"/path/to/repo/venv/lib/python3.10/site-packages/pluggy/_result.py\", line 60, in get_result\r\n    raise ex[1].with_traceback(ex[2])\r\n  File \"/path/to/repo/venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 34, in _multicall\r\n    next(gen)  # first yield\r\n  File \"/path/to/repo/venv/lib/python3.10/site-packages/_pytest/terminal.py\", line 836, in pytest_terminal_summary\r\n    self.summary_errors()\r\n  File \"/path/to/repo/venv/lib/python3.10/site-packages/_pytest/terminal.py\", line 1035, in summary_errors\r\n    self._outrep_summary(rep)\r\n  File \"/path/to/repo/venv/lib/python3.10/site-packages/_pytest/terminal.py\", line 1038, in _outrep_summary\r\n    rep.toterminal(self._tw)\r\n  File \"/path/to/repo/venv/lib/python3.10/site-packages/_pytest/reports.py\", line 89, in toterminal\r\n    longrepr_terminal.toterminal(out)\r\n  File \"/path/to/repo/venv/lib/python3.10/site-packages/_pytest/_code/code.py\", line 1039, in toterminal\r\n    element[0].toterminal(tw)\r\n  File \"/path/to/repo/venv/lib/python3.10/site-packages/_pytest/_code/code.py\", line 1069, in toterminal\r\n    entry.toterminal(tw)\r\n  File \"/path/to/repo/venv/lib/python3.10/site-packages/_pytest/_code/code.py\", line 1164, in toterminal\r\n    self._write_entry_lines(tw)\r\n  File \"/path/to/repo/venv/lib/python3.10/site-packages/_pytest/_code/code.py\", line 1146, in _write_entry_lines\r\n    tw._write_source(source_lines, indents)\r\n  File \"/path/to/repo/venv/lib/python3.10/site-packages/_pytest/_io/terminalwriter.py\", line 192, in _write_source\r\n    new_lines = self._highlight(source).splitlines()\r\n  File \"/path/to/repo/venv/lib/python3.10/site-packages/_pytest/_io/terminalwriter.py\", line 203, in _highlight\r\n    from pygments.formatters.terminal import TerminalFormatter\r\n  File \"<frozen importlib._bootstrap>\", line 1027, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 1006, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 688, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 879, in exec_module\r\n  File \"<frozen importlib._bootstrap_external>\", line 1016, in get_code\r\n  File \"<frozen importlib._bootstrap_external>\", line 1073, in get_data\r\nOSError: [Errno 24] Too many open files: '/path/to/repo/venv/lib/python3.10/site-packages/pygments/__init__.py'\r\n```\r\n\r\n</details>\r\n\r\n<details>\r\n<summary>pip list</summary>\r\n\r\n```shell\r\n> pip list\r\nPackage                      Version             Editable project location\r\n---------------------------- ------------------- -----------------------------------------\r\nappnope                      0.1.3\r\nastroid                      2.15.5\r\nasttokens                    2.2.1\r\nattrs                        23.1.0\r\nbackcall                     0.2.0\r\nblack                        23.3.0\r\nbleach                       6.0.0\r\ncachetools                   5.3.1\r\ncertifi                      2023.5.7\r\ncfgv                         3.3.1\r\nchardet                      5.1.0\r\ncharset-normalizer           3.1.0\r\nclick                        8.1.3\r\ncolorama                     0.4.6\r\ncoverage                     7.2.5\r\ndecorator                    5.1.1\r\ndill                         0.3.6\r\ndistlib                      0.3.6\r\ndocformatter                 1.7.0\r\ndocutils                     0.20\r\nexceptiongroup               1.1.1\r\nexecuting                    1.2.0\r\nfilelock                     3.12.0\r\nflake8                       6.0.0\r\nFlake8-pyproject             1.2.3\r\nflake8-requirements          1.7.8\r\nidentify                     2.5.24\r\nidna                         3.4\r\nimportlib-metadata           6.6.0\r\niniconfig                    2.0.0\r\nipython                      8.13.2\r\nisort                        5.12.0\r\njaraco.classes               3.2.3\r\njedi                         0.18.2\r\nkeyring                      23.13.1\r\nlazy-object-proxy            1.9.0\r\nmarkdown-it-py               2.2.0\r\nmatplotlib-inline            0.1.6\r\nmccabe                       0.7.0\r\nmdurl                        0.1.2\r\nmore-itertools               9.1.0\r\nmypy                         1.3.0\r\nmypy-extensions              1.0.0\r\nnodeenv                      1.8.0\r\nnumpy                        1.24.3\r\nOpenOPC-Python3x             1.3.1\r\npackaging                    23.1\r\npandas                       2.0.1\r\nparso                        0.8.3\r\npathspec                     0.11.1\r\npexpect                      4.8.0\r\nPhidget22                    1.14.20230331\r\npickleshare                  0.7.5\r\npip                          22.3.1\r\npkginfo                      1.9.6\r\nplatformdirs                 3.5.1\r\npluggy                       1.0.0\r\npre-commit                   3.3.1\r\nprompt-toolkit               3.0.38\r\nptyprocess                   0.7.0\r\npure-eval                    0.2.2\r\npycodestyle                  2.10.0\r\npyenchant                    3.2.2\r\npyfakefs                     5.2.2\r\npyflakes                     3.0.1\r\nPygments                     2.15.1\r\npylint                       2.17.4\r\npymodbus                     3.2.0\r\npyproject_api                1.5.1\r\nPyro4                        4.82\r\npyserial                     3.5\r\npytest                       7.3.1\r\npytest-mock                  3.10.0\r\npytest-subtests              0.11.0\r\npython-dateutil              2.8.2\r\npytz                         2023.3\r\nPyYAML                       6.0\r\nreadme-renderer              37.3\r\nrequests                     2.30.0\r\nrequests-toolbelt            1.0.0\r\nrfc3986                      2.0.0\r\nrich                         13.3.5\r\nruff                         0.0.270\r\nserpent                      1.41\r\nsetuptools                   65.5.0\r\nsetuptools-scm               7.1.0\r\nsix                          1.16.0\r\nstack-data                   0.6.2\r\nINTERNAL PACKAGES REDACTED\r\ntomli                        2.0.1\r\ntomlkit                      0.11.8\r\ntox                          4.6.0\r\ntraitlets                    5.9.0\r\ntwine                        4.0.2\r\ntypes-setuptools             67.7.0.2\r\ntyping_extensions            4.5.0\r\ntzdata                       2023.3\r\nuntokenize                   0.1.1\r\nurllib3                      2.0.2\r\nvirtualenv                   20.23.0\r\nwcwidth                      0.2.6\r\nwebencodings                 0.5.1\r\nwrapt                        1.15.0\r\nzipp                         3.15.0\r\n```\r\n\r\n</details>",
      "state": "CLOSED",
      "createdAt": "2023-06-06T19:20:06Z",
      "updatedAt": "2024-06-04T14:45:15Z",
      "closedAt": "2023-06-07T01:15:30Z",
      "author": {
        "login": "jamesbraza"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "status: needs information"
          },
          {
            "name": "platform: mac"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 5
      }
    },
    {
      "number": 11083,
      "title": "Pytest crash when executing in WSL2",
      "body": "Error:\r\n(venv) niorlys@NIORLYS:~/study/fastapi-all_the_way/items_manager/tests$ pytest test_items.py\r\n======================================================================== test session starts ========================================================================\r\nplatform linux -- Python 3.8.10, pytest-7.2.0, pluggy-1.0.0\r\nINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"/home/niorlys/study/fastapi-all_the_way/venv/lib/python3.8/site-packages/_pytest/main.py\", line 268, in wrap_session\r\nINTERNALERROR>     config.hook.pytest_sessionstart(session=session)\r\nINTERNALERROR>   File \"/home/niorlys/study/fastapi-all_the_way/venv/lib/python3.8/site-packages/pluggy/_hooks.py\", line 265, in __call__\r\nINTERNALERROR>     return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\r\nINTERNALERROR>   File \"/home/niorlys/study/fastapi-all_the_way/venv/lib/python3.8/site-packages/pluggy/_manager.py\", line 80, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\r\nINTERNALERROR>   File \"/home/niorlys/study/fastapi-all_the_way/venv/lib/python3.8/site-packages/pluggy/_callers.py\", line 60, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"/home/niorlys/study/fastapi-all_the_way/venv/lib/python3.8/site-packages/pluggy/_result.py\", line 60, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/home/niorlys/study/fastapi-all_the_way/venv/lib/python3.8/site-packages/pluggy/_callers.py\", line 39, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/home/niorlys/study/fastapi-all_the_way/venv/lib/python3.8/site-packages/_pytest/terminal.py\", line 720, in pytest_sessionstart\r\nINTERNALERROR>     lines = self.config.hook.pytest_report_header(\r\nINTERNALERROR>   File \"/home/niorlys/study/fastapi-all_the_way/venv/lib/python3.8/site-packages/_pytest/config/compat.py\", line 67, in fixed_hook\r\nINTERNALERROR>     return hook(**kw)\r\nINTERNALERROR>   File \"/home/niorlys/study/fastapi-all_the_way/venv/lib/python3.8/site-packages/pluggy/_hooks.py\", line 265, in __call__\r\nINTERNALERROR>     return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\r\nINTERNALERROR>   File \"/home/niorlys/study/fastapi-all_the_way/venv/lib/python3.8/site-packages/pluggy/_manager.py\", line 80, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\r\nINTERNALERROR>   File \"/home/niorlys/study/fastapi-all_the_way/venv/lib/python3.8/site-packages/pluggy/_callers.py\", line 60, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"/home/niorlys/study/fastapi-all_the_way/venv/lib/python3.8/site-packages/pluggy/_result.py\", line 60, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/home/niorlys/study/fastapi-all_the_way/venv/lib/python3.8/site-packages/pluggy/_callers.py\", line 39, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/home/niorlys/study/fastapi-all_the_way/venv/lib/python3.8/site-packages/pytest_asyncio/plugin.py\", line 183, in pytest_report_header\r\nINTERNALERROR>     mode = _get_asyncio_mode(config)\r\nINTERNALERROR>   File \"/home/niorlys/study/fastapi-all_the_way/venv/lib/python3.8/site-packages/pytest_asyncio/plugin.py\", line 167, in _get_asyncio_mode\r\nINTERNALERROR>     return Mode(val)\r\nINTERNALERROR>   File \"/usr/lib/python3.8/enum.py\", line 339, in __call__\r\nINTERNALERROR>     return cls.__new__(cls, value)\r\nINTERNALERROR>   File \"/usr/lib/python3.8/enum.py\", line 663, in __new__\r\nINTERNALERROR>     raise ve_exc\r\nINTERNALERROR> ValueError: 'True' is not a valid Mode\r\n\r\n- [ ] Description: Invoking pytest results in a crash INTERALERROR\r\n- [ ] pip list:\r\nPackage           Version    \r\n----------------- -----------\r\nanyio             3.6.2      \r\nasync-timeout     4.0.2      \r\nattrs             23.1.0     \r\nbcrypt            4.0.1      \r\ncertifi           2023.5.7   \r\nclick             8.1.3      \r\ndnspython         2.3.0      \r\nemail-validator   2.0.0.post2\r\nexceptiongroup    1.1.1      \r\nfastapi           0.95.1     \r\nh11               0.14.0     \r\nhttpcore          0.17.2     \r\nhttpx             0.24.1     \r\nidna              3.4        \r\niniconfig         2.0.0      \r\njose              1.0.0      \r\npackaging         23.1       \r\npasslib           1.7.4      \r\npip               20.0.2     \r\npkg-resources     0.0.0      \r\npluggy            1.0.0      \r\npydantic          1.10.7     \r\nPyJWT             2.7.0      \r\npytest            7.2.0      \r\npytest-asyncio    0.21.0     \r\npython-multipart  0.0.6      \r\nredis             4.5.5      \r\nsetuptools        44.0.0     \r\nsniffio           1.3.0      \r\nstarlette         0.26.1     \r\ntomli             2.0.1      \r\ntyping-extensions 4.5.0      \r\nujson             5.7.0      \r\nuvicorn           0.22.0   \r\n- [ ] pytest versions: 7.2.0, also fails with 7.3\r\n- [ ] Distro:Linux NIORLYS 5.10.16.3-microsoft-standard-WSL2 #1 SMP Fri Apr 2 22:23:49 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux\r\n",
      "state": "CLOSED",
      "createdAt": "2023-06-05T22:01:48Z",
      "updatedAt": "2023-06-07T09:56:14Z",
      "closedAt": "2023-06-05T22:07:08Z",
      "author": {
        "login": "Niorlys"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 11081,
      "title": "Move `norecursedir` check to the `pytest_ignore_collect` hook",
      "body": "Currently the two recursive collectors `Session` and `Package` perform the `norecursedir` check directly in the collector:\r\n\r\nhttps://github.com/pytest-dev/pytest/blob/85c5bd26b6d94dca423c2c0c54717750eac81cae/src/_pytest/main.py#L566-L568\r\n\r\nhttps://github.com/pytest-dev/pytest/blob/85c5bd26b6d94dca423c2c0c54717750eac81cae/src/_pytest/python.py#L709-L711\r\n\r\nI think it would be strictly better to move this check to `main`'s [`pytest_ignore_collect` hookimpl](https://github.com/pytest-dev/pytest/blob/85c5bd26b6d94dca423c2c0c54717750eac81cae/src/_pytest/main.py#L377):\r\n\r\n- Less duplication\r\n- Better decoupling -- only main knows about the option it defines\r\n- More control for plugins",
      "state": "CLOSED",
      "createdAt": "2023-06-05T14:19:39Z",
      "updatedAt": "2023-06-06T09:44:04Z",
      "closedAt": "2023-06-06T09:44:04Z",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": [
          {
            "login": "bluetech"
          }
        ]
      },
      "labels": {
        "nodes": [
          {
            "name": "type: proposal"
          },
          {
            "name": "topic: collection"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      }
    },
    {
      "number": 11080,
      "title": "Test",
      "body": "<!--\nThanks for submitting an issue!\n\nQuick check-list while reporting bugs:\n-->\n\n- [ ] a detailed description of the bug or problem you are having\n- [ ] output of `pip list` from the virtual environment you are using\n- [ ] pytest and operating system versions\n- [ ] minimal example if possible\n \n",
      "state": "CLOSED",
      "createdAt": "2023-06-05T07:05:48Z",
      "updatedAt": "2023-06-05T07:55:46Z",
      "closedAt": "2023-06-05T07:55:46Z",
      "author": {
        "login": "Jakubszwajkos"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 11075,
      "title": "`no parameter defined for test` error when overriding a fixture that requests a parametrized fixture",
      "body": "python 3.11 - pytest 7.3.1 - archlinux\r\nRelated issues #1953 #2043\r\n\r\nThe situation is a bit convoluted: if a fixture requests a parametrized fixture, and is overridden with different params, then it raises a `The requested fixture has no parameter defined for test` error.\r\n\r\n\r\n```python\r\nimport pytest\r\n\r\n\r\n@pytest.fixture(params=[\"foo\"])\r\ndef fixture_foo():\r\n    yield None\r\n\r\n\r\n@pytest.fixture\r\ndef fixture_bar(fixture_foo):\r\n    yield None\r\n\r\n\r\nclass TestFoobar:\r\n    @pytest.fixture\r\n    def fixture_bar(self, fixture_bar):\r\n        yield None\r\n\r\n    def test_foobar(self, fixture_bar):\r\n        assert True\r\n```\r\n\r\n```python\r\n===================================================== test session starts =====================================================\r\nplatform linux -- Python 3.11.3, pytest-7.3.1, pluggy-1.0.0\r\nrootdir: ...\r\ncollected 1 item\r\n\r\ntest_foobar.py E                                                                                                        [100%]\r\n\r\n=========================================================== ERRORS ============================================================\r\n__________________________________________ ERROR at setup of TestFoobar.test_foobar ___________________________________________\r\nThe requested fixture has no parameter defined for test:\r\n    test_foobar.py::TestFoobar::test_foobar\r\n\r\nRequested fixture 'fixture_foo' defined in:\r\ntest_foobar.py:5\r\n\r\nRequested here:\r\n.../lib/python3.11/site-packages/_pytest/fixtures.py:678\r\n=================================================== short test summary info ===================================================\r\nERROR test_foobar.py::TestFoobar::test_foobar\r\n====================================================== 1 error in 0.02s =======================================================\r\n```\r\n\r\nI encountered this in a real-life project. I simplified all that I could to make an example demonstrating this behavior. Obviously this example does not seem very relevant, but in my real usecase I do need the overriding `fixture_bar` to have a param to the main `fixture_bar`.\r\n\r\nThe error won't happen if:\r\n- `fixture_foo` is not parametrized or\r\n- the overriding `fixture_bar` also have a `fixture_foo` param\r\n\r\nIt took me a while to find how to fix the issue, but this second workaround is simple enough. However I could not find any documentation about this.\r\n\r\nI suggest to either fix this behavior, or document it.\r\n\r\nWhat do you think?",
      "state": "OPEN",
      "createdAt": "2023-06-03T21:02:02Z",
      "updatedAt": "2023-06-04T02:14:05Z",
      "closedAt": null,
      "author": {
        "login": "azmeuk"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "topic: fixtures"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      }
    },
    {
      "number": 11071,
      "title": "conftest.py discovery when running pytest --rootdir",
      "body": "My setup:\r\n```\r\n(.venv) [root@4bd7686ed675 git_root]# pwd\r\n/root/git_root\r\n(.venv) [root@4bd7686ed675 git_root]# tree\r\n.\r\n\u251c\u2500\u2500 important_folder\r\n\u251c\u2500\u2500 other_folder\r\n\u2514\u2500\u2500 package_root\r\n    \u251c\u2500\u2500 conftest.py\r\n    \u251c\u2500\u2500 src\r\n    \u2502   \u2514\u2500\u2500 my_package\r\n    \u2502       \u251c\u2500\u2500 __init__.py\r\n    \u2502       \u2514\u2500\u2500 main.py\r\n    \u2514\u2500\u2500 tests\r\n        \u251c\u2500\u2500 __init__.py\r\n        \u2514\u2500\u2500 test_main.py\r\n\r\n(.venv) [root@4bd7686ed675 git_root]# pip list\r\nPackage        Version\r\n-------------- -------\r\nexceptiongroup 1.1.1\r\niniconfig      2.0.0\r\npackaging      23.1\r\npip            21.2.3\r\npluggy         1.0.0\r\npytest         7.3.1\r\nsetuptools     53.0.0\r\ntomli          2.0.1\r\n```\r\nThe contents of `conftest.py`:\r\n```\r\n(.venv) [root@4bd7686ed675 git_root]# cat package_root/conftest.py \r\npytest_plugins = \"\"\r\n```\r\nAll other files are empty.\r\nLet's run `pytest`:\r\n```\r\n(.venv) [root@4bd7686ed675 git_root]# pytest\r\n============================================================================== test session starts ==============================================================================\r\nplatform linux -- Python 3.9.16, pytest-7.3.1, pluggy-1.0.0\r\nrootdir: /root/git_root\r\ncollected 0 items / 1 error                                                                                                                                                     \r\n\r\n==================================================================================== ERRORS =====================================================================================\r\n_________________________________________________________________________ ERROR collecting test session _________________________________________________________________________\r\nDefining 'pytest_plugins' in a non-top-level conftest is no longer supported:\r\nIt affects the entire test suite instead of just below the conftest as expected.\r\n  /root/git_root/package_root/conftest.py\r\nPlease move it to a top level conftest file at the rootdir:\r\n  None\r\nFor more information, visit:\r\n  https://docs.pytest.org/en/stable/deprecations.html#pytest-plugins-in-non-top-level-conftest-files\r\n============================================================================ short test summary info ============================================================================\r\nERROR \r\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n=============================================================================== 1 error in 0.09s ================================================================================\r\n```\r\nOk, that is an error, because `conftest.py` is not in `rootdir: /root/git_root`. Let's try to fix it:\r\n```\r\n(.venv) [root@4bd7686ed675 git_root]# pytest --rootdir=/root/git_root/package_root/\r\n============================================================================== test session starts ==============================================================================\r\nplatform linux -- Python 3.9.16, pytest-7.3.1, pluggy-1.0.0\r\nrootdir: /root/git_root/package_root\r\ncollected 0 items                                                                                                                                                               \r\nINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"/root/git_root/.venv/lib64/python3.9/site-packages/_pytest/main.py\", line 269, in wrap_session\r\nINTERNALERROR>     session.exitstatus = doit(config, session) or 0\r\nINTERNALERROR>   File \"/root/git_root/.venv/lib64/python3.9/site-packages/_pytest/main.py\", line 322, in _main\r\nINTERNALERROR>     config.hook.pytest_collection(session=session)\r\nINTERNALERROR>   File \"/root/git_root/.venv/lib64/python3.9/site-packages/pluggy/_hooks.py\", line 265, in __call__\r\nINTERNALERROR>     return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\r\nINTERNALERROR>   File \"/root/git_root/.venv/lib64/python3.9/site-packages/pluggy/_manager.py\", line 80, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\r\nINTERNALERROR>   File \"/root/git_root/.venv/lib64/python3.9/site-packages/pluggy/_callers.py\", line 60, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"/root/git_root/.venv/lib64/python3.9/site-packages/pluggy/_result.py\", line 60, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/root/git_root/.venv/lib64/python3.9/site-packages/pluggy/_callers.py\", line 39, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/root/git_root/.venv/lib64/python3.9/site-packages/_pytest/main.py\", line 333, in pytest_collection\r\nINTERNALERROR>     session.perform_collect()\r\nINTERNALERROR>   File \"/root/git_root/.venv/lib64/python3.9/site-packages/_pytest/main.py\", line 646, in perform_collect\r\nINTERNALERROR>     rep = collect_one_node(self)\r\nINTERNALERROR>   File \"/root/git_root/.venv/lib64/python3.9/site-packages/_pytest/runner.py\", line 545, in collect_one_node\r\nINTERNALERROR>     ihook = collector.ihook\r\nINTERNALERROR>   File \"/root/git_root/.venv/lib64/python3.9/site-packages/_pytest/nodes.py\", line 267, in ihook\r\nINTERNALERROR>     return self.session.gethookproxy(self.path)\r\nINTERNALERROR>   File \"/root/git_root/.venv/lib64/python3.9/site-packages/_pytest/main.py\", line 542, in gethookproxy\r\nINTERNALERROR>     my_conftestmodules = pm._getconftestmodules(\r\nINTERNALERROR>   File \"/root/git_root/.venv/lib64/python3.9/site-packages/_pytest/config/__init__.py\", line 602, in _getconftestmodules\r\nINTERNALERROR>     mod = self._importconftest(conftestpath, importmode, rootpath)\r\nINTERNALERROR>   File \"/root/git_root/.venv/lib64/python3.9/site-packages/_pytest/config/__init__.py\", line 640, in _importconftest\r\nINTERNALERROR>     self._check_non_top_pytest_plugins(mod, conftestpath)\r\nINTERNALERROR>   File \"/root/git_root/.venv/lib64/python3.9/site-packages/_pytest/config/__init__.py\", line 672, in _check_non_top_pytest_plugins\r\nINTERNALERROR>     fail(msg.format(conftestpath, self._confcutdir), pytrace=False)\r\nINTERNALERROR>   File \"/root/git_root/.venv/lib64/python3.9/site-packages/_pytest/outcomes.py\", line 198, in fail\r\nINTERNALERROR>     raise Failed(msg=reason, pytrace=pytrace)\r\nINTERNALERROR> Failed: Defining 'pytest_plugins' in a non-top-level conftest is no longer supported:\r\nINTERNALERROR> It affects the entire test suite instead of just below the conftest as expected.\r\nINTERNALERROR>   /root/git_root/package_root/conftest.py\r\nINTERNALERROR> Please move it to a top level conftest file at the rootdir:\r\nINTERNALERROR>   None\r\nINTERNALERROR> For more information, visit:\r\nINTERNALERROR>   https://docs.pytest.org/en/stable/deprecations.html#pytest-plugins-in-non-top-level-conftest-files\r\n```\r\nUnfortunately, still an error, which seems like a bug to me, because now `conftest.py` **is** in the `rootdir`.\r\nLet's change current dir and try again:\r\n```\r\n(.venv) [root@4bd7686ed675 git_root]# cd package_root/\r\n(.venv) [root@4bd7686ed675 package_root]# pytest --rootdir=/root/git_root/package_root/\r\n============================================================================== test session starts ==============================================================================\r\nplatform linux -- Python 3.9.16, pytest-7.3.1, pluggy-1.0.0\r\nrootdir: /root/git_root/package_root\r\ncollected 0 items                                                                                                                                                               \r\n\r\n============================================================================= no tests ran in 0.01s =============================================================================\r\n```\r\nI suppose that the output of `pytest --rootdir=<dir>` should not be dependent on current working directory.\r\n\r\nSome background:\r\nWhile working from `package_root/` seems like a workaround, this is not convenient enough for me. My company requires me to put some PM-related stuff inside our git repositories (`important_folder/`). We are then using VS Code to open `git_root/` as a workspace, and work from there.",
      "state": "OPEN",
      "createdAt": "2023-06-02T23:29:51Z",
      "updatedAt": "2024-09-04T19:21:45Z",
      "closedAt": null,
      "author": {
        "login": "piotr-kubiak"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: bug"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 6
      }
    },
    {
      "number": 11068,
      "title": "cacheprovider: --lf file-skipping feature doesn't work for non-python files",
      "body": "For non-python files (as in https://docs.pytest.org/en/latest/example/nonpython.html), the whole-file-skipping feature (\"skipped N files\") doesn't work. This is because the codes checks for `Module`s when it should check for `File`.",
      "state": "CLOSED",
      "createdAt": "2023-06-02T08:59:41Z",
      "updatedAt": "2023-06-03T15:50:52Z",
      "closedAt": "2023-06-03T15:50:52Z",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": [
          {
            "login": "bluetech"
          }
        ]
      },
      "labels": {
        "nodes": [
          {
            "name": "type: bug"
          },
          {
            "name": "plugin: cache"
          },
          {
            "name": "topic: collection"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      }
    },
    {
      "number": 11067,
      "title": "wasxfail result outcome attribute not consistent for XFailed tests",
      "body": "content of `conftest.py`:\n\n```python\n@pytest.hookimpl(hookwrapper=True)\ndef pytest_runtest_makereport(item, call):\n    outcome = yield\n    report = outcome.get_result()\n\n    if report.when == 'call':\n        xfail = hasattr(report, 'wasxfail')        \n        if not report.failed and not report.skipped and not xfail:\n            print(\"Passed\")\n        elif report.failed and not report.skipped:\n            print(\"Failed\")\n        elif not report.failed and not report.skipped and xfail:\n            print(\"XPassed\")\n        elif not report.failed and report.skipped:\n            print(\"XFailed\")\n            if xfail:\n                print(\"Reason: \", report.wasxfail)\n```\n\ncontent of `xfailed_test.py`:\n\n```\nimport pytest\n\n@pytest.mark.xfail(reason=\"test_1\")\ndef test_1():\n    assert False\n\ndef test_2():\n    pytest.xfail(reason=\"test_2\")\n```\n\nThe output of the test is:\n\n```\nXFailed\nReason: test_1\nXFailed\nReason:  reason: test_2\n```\nThe first test xfailed because of a marker, and the second test xfailed due to an explicit call to `pytest.fail` function.\n\nThe outputs are not coherent\n\nThe output for **test_2** should be `Reason: test_2` instead of `Reason:  reason: test_2`\n\nTested with version 7.3.1",
      "state": "CLOSED",
      "createdAt": "2023-06-01T23:03:51Z",
      "updatedAt": "2025-04-02T11:16:00Z",
      "closedAt": "2025-04-02T11:16:00Z",
      "author": {
        "login": "harmin-parra"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: enhancement"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      }
    },
    {
      "number": 11065,
      "title": "Update example in \"The new config.cache object\"",
      "body": "Hi pytest developers,\r\n\r\nin the API documentation for [config.cache](https://docs.pytest.org/en/latest/reference/reference.html#config-cache) you wrote that the access should be done with the `pytestconfig` fixture. But in the example in [The new config.cache object](https://docs.pytest.org/en/latest/how-to/cache.html#the-new-config-cache-object) you use the `request` fixture.\r\n\r\nPlease consider updating the example to be consistent with the API documentation.\r\n\r\nThank you,\r\nCarsten",
      "state": "CLOSED",
      "createdAt": "2023-06-01T12:11:37Z",
      "updatedAt": "2023-10-23T18:45:17Z",
      "closedAt": "2023-10-23T18:45:17Z",
      "author": {
        "login": "CarstenGrohmann"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: docs"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      }
    },
    {
      "number": 11063,
      "title": "Additional newline when printing inside of a test",
      "body": "<!--\r\nThanks for suggesting a feature!\r\n\r\nQuick check-list while suggesting features:\r\n-->\r\n\r\n#### What's the problem this feature will solve?\r\nI, as i'm sure many others, sometimes use printing inside of the tests for quick debugging. The pattern is something like `pytest -k <my-specific-test> -s -x` (aka _\"run a subset of tests, don't capture prints and fail fast\"_). The issue is very minor: the prints look a bit ugly when in the middle of the pytest command-line output.\r\n\r\n#### Describe the solution you'd like / Alternative Solutions\r\n\r\nI've come up with the following:\r\n\r\n```\r\nimport pytest\r\nimport builtins\r\n\r\n\r\n@pytest.fixture(autouse=True)\r\ndef add_space_before_first_print():\r\n    _print = builtins.print\r\n\r\n    def patched_print(*args, **kwargs):\r\n        # _print(\"CALLING PRINT\", end=\"\")\r\n        _print(end=\"\\n\")  # Add a newline\r\n        _print(*args, **kwargs)  # Do the print\r\n        builtins.print = _print  # Restore the original after first print\r\n\r\n    # Patch the print\r\n    builtins.print = patched_print\r\n    try:\r\n        yield\r\n    finally:\r\n        # Make sure to restore the original print\r\n        builtins.print = _print\r\n\r\n\r\ndef test_with_prints_1():\r\n    print(\"test_with_prints_1 says hello\")\r\n    assert True\r\n\r\n\r\ndef test_without_prints_1(subtests):\r\n    for _ in range(10):\r\n        with subtests.test():\r\n            assert True\r\n\r\n\r\ndef test_with_prints_2():\r\n    print(\"test_with_prints_2 says hello\")\r\n    assert True\r\n\r\n\r\ndef test_without_prints_2(subtests):\r\n    for _ in range(10):\r\n        with subtests.test():\r\n            assert True\r\n```\r\n\r\nwhich gives\r\n\r\n```\r\ntest_with_prints_1 says hello\r\n.,,,,,,,,,,.\r\ntest_with_prints_2 says hello\r\n.,,,,,,,,,,.\r\n```\r\n\r\nwith `autose=False` we get\r\n\r\n```\r\ntests/test_pytest_print_hack.py test_with_prints_1 says hello\r\n.,,,,,,,,,,.test_with_prints_2 says hello\r\n.,,,,,,,,,,.\r\n```\r\n\r\nShould purest do this by default?\r\n\r\n#### Notes\r\n\r\n1. I use subtests just to make purest print more markers to make demonstration clearer.\r\n2. Same problem happens in `-v` mode and same solution also works.\r\n3. Without `-s` the patched prints don't fire, as expected.\r\n\r\n",
      "state": "CLOSED",
      "createdAt": "2023-06-01T09:12:22Z",
      "updatedAt": "2023-06-01T09:20:30Z",
      "closedAt": "2023-06-01T09:19:14Z",
      "author": {
        "login": "MarcinKonowalczyk"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 11062,
      "title": "Rgh",
      "body": "<!--\nThanks for suggesting a feature!\n\nQuick check-list while suggesting features:\n-->\n\n#### What's the problem this feature will solve?\n<!-- What are you trying to do, that you are unable to achieve with pytest as it currently stands? -->\n\n#### Describe the solution you'd like\n<!-- A clear and concise description of what you want to happen. -->\n\n<!-- Provide examples of real-world use cases that this would enable and how it solves the problem described above. -->\n\n#### Alternative Solutions\n<!-- Have you tried to workaround the problem using a pytest plugin or other tools? Or a different approach to solving this issue? Please elaborate here. -->\n\n#### Additional context\n<!-- Add any other context, links, etc. about the feature here. -->\n",
      "state": "CLOSED",
      "createdAt": "2023-05-31T19:03:12Z",
      "updatedAt": "2023-05-31T19:20:18Z",
      "closedAt": "2023-05-31T19:20:18Z",
      "author": {
        "login": "Maximus904"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 11060,
      "title": "DeprecationWarning: onerror argument is deprecated, use onexc instead on python 3.12b1",
      "body": "when running with `filterwarnings=error` at exit pytest prints:\r\n\r\n```\r\npython3.12/site-packages/_pytest/pathlib.py:152: DeprecationWarning: onerror argument is deprecated, use onexc instead\r\n  shutil.rmtree(str(path), onerror=onerror)\r\n```",
      "state": "CLOSED",
      "createdAt": "2023-05-30T20:52:54Z",
      "updatedAt": "2023-05-30T20:54:30Z",
      "closedAt": "2023-05-30T20:53:41Z",
      "author": {
        "login": "graingert"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 11054,
      "title": "cacheprovider: `--lf` file-skipping feature doesn't work for files in packages",
      "body": "`--lf` has a feature where if a certain `Module` (python file) does not contain any failed tests, it is skipped entirely at the collector level instead of being collected and each item skipped individually. When this happens the collection summary looks like this:\r\n\r\n    run-last-failure: rerun previous 1 failure (skipped 1 file)\r\n\r\nHowever, this feature doesn't work for `Module`s inside of `Package`s, only for those directly beneath the `Session`.",
      "state": "CLOSED",
      "createdAt": "2023-05-29T19:52:07Z",
      "updatedAt": "2023-06-03T06:31:06Z",
      "closedAt": "2023-06-03T06:31:06Z",
      "author": {
        "login": "bluetech"
      },
      "assignees": {
        "nodes": [
          {
            "login": "bluetech"
          }
        ]
      },
      "labels": {
        "nodes": [
          {
            "name": "type: bug"
          },
          {
            "name": "plugin: cache"
          },
          {
            "name": "topic: collection"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 11053,
      "title": "[BUG] Cannot import Astroid with schemathesis 3.19.6.",
      "body": "\r\n**Describe the bug**\r\nWhen I start a pytest session the astroid package enters an infinite loop when it is imported. \r\n\r\n**To Reproduce**\r\nI prepared a [pipenv file](https://gist.github.com/kain88-de/be901c0962fa9b67a47dd8b5cd790ac2) that creates an environment to reproduce the issues.\r\n\r\nOnce you downloaded all files run \r\n\r\n1. `make .venv`\r\n2. `run-pipenv run python -m pytest t.py --pdb`\r\n\r\nThis will drop you in a debugger session at the place where astroid is stuck in a loop. With version 3.19.0 everything still works.\r\n\r\n**Expected behavior**\r\n\r\nAdding schemathesis as a dependency has no impact if I can import astroid in a pytest environment or not. \r\n\r\n**Environment (please complete the following information):**\r\n\r\n- OS: linux \r\n- Python version: 3.11\r\n\r\n**Additional context**\r\nI'm not sure what the root cause is so I will also open tickets for this with [schemathesis](https://github.com/schemathesis/schemathesis/issues/1745) and [astroid](https://github.com/pylint-dev/astroid/issues/2191). \r\n\r\n",
      "state": "CLOSED",
      "createdAt": "2023-05-29T13:09:10Z",
      "updatedAt": "2023-06-01T17:44:53Z",
      "closedAt": "2023-06-01T17:42:53Z",
      "author": {
        "login": "kain88-de"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      }
    },
    {
      "number": 11052,
      "title": "Pytest crashes with internal error when run with several threads on Py3.8",
      "body": "<!--\r\nThanks for submitting an issue!\r\n\r\nQuick check-list while reporting bugs:\r\n-->\r\n\r\nRunning the following command in [OpShin repository](https://github.com/OpShin/opshin) works fine\r\n```bash\r\n$ pytest\r\n```\r\n\r\nHowever as soon as I add more workers, there is an internal error\r\n```\r\n$ pytest -n 2\r\n\r\n/home/niels/git/eopsin-lang/venv/lib/python3.8/site-packages/xdist/dsession.py:73: PytestDeprecationWarning: The hookimpl DSession.pytest_sessionstart uses old-style configuration options (marks or attributes).\r\nPlease use the pytest.hookimpl(trylast=True) decorator instead\r\n to configure the hooks.\r\n See https://docs.pytest.org/en/latest/deprecations.html#configuring-hook-specs-impls-using-markers\r\n  @pytest.mark.trylast\r\n/home/niels/git/eopsin-lang/venv/lib/python3.8/site-packages/xdist/dsession.py:96: PytestDeprecationWarning: The hookimpl DSession.pytest_xdist_make_scheduler uses old-style configuration options (marks or attributes).\r\nPlease use the pytest.hookimpl(trylast=True) decorator instead\r\n to configure the hooks.\r\n See https://docs.pytest.org/en/latest/deprecations.html#configuring-hook-specs-impls-using-markers\r\n  @pytest.mark.trylast\r\n========================================================================================================= test session starts ==========================================================================================================\r\nplatform linux -- Python 3.8.16, pytest-7.3.1, pluggy-1.0.0\r\nrootdir: /home/niels/git/eopsin-lang\r\nplugins: typeguard-2.13.3, xdist-1.27.0, hypothesis-6.75.3, forked-1.6.0\r\ngw0 [172] / gw1 [172]\r\n.......................!!!!!!!!!!!!!!!!!!!! <ExceptionInfo TypeError(\"__init__() got an unexpected keyword argument 'filelocrepr'\") tblen=3>\r\nINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"/home/niels/git/eopsin-lang/venv/lib/python3.8/site-packages/xdist/workermanage.py\", line 327, in process_from_remote\r\nINTERNALERROR>     rep = unserialize_report(eventname, kwargs[\"data\"])\r\nINTERNALERROR>   File \"/home/niels/git/eopsin-lang/venv/lib/python3.8/site-packages/xdist/workermanage.py\", line 434, in unserialize_report\r\nINTERNALERROR>     return runner.TestReport(**assembled_report(reportdict))\r\nINTERNALERROR>   File \"/home/niels/git/eopsin-lang/venv/lib/python3.8/site-packages/xdist/workermanage.py\", line 409, in assembled_report\r\nINTERNALERROR>     reprentry = ReprEntry(\r\nINTERNALERROR> TypeError: __init__() got an unexpected keyword argument 'filelocrepr'\r\n[gw1] node down: <ExceptionInfo TypeError(\"__init__() got an unexpected keyword argument 'filelocrepr'\") tblen=3>\r\nFReplacing crashed worker gw1\r\n```\r\n\r\nRun with pytest 7.3.1 on Ubuntu 22\r\n```platform linux -- Python 3.8.16, pytest-7.3.1, pluggy-1.0.0```\r\n\r\npip list\r\n```\r\nPackage                  Version     Editable project location\r\n------------------------ ----------- ---------------------------\r\nappdirs                  1.4.4\r\nasn1crypto               1.5.1\r\nastunparse               1.6.3\r\natomicwrites             1.4.1\r\nattrs                    23.1.0\r\nblack                    23.3.0\r\nblockfrost-python        0.5.3\r\nbuild                    0.10.0\r\nCacheControl             0.12.11\r\ncbor2                    5.4.6\r\ncertifi                  2023.5.7\r\ncertvalidator            0.11.1\r\ncffi                     1.15.1\r\ncfgv                     3.3.1\r\ncharset-normalizer       3.1.0\r\ncleo                     2.0.1\r\nclick                    8.1.3\r\ncose                     0.9.dev8\r\ncoverage                 6.5.0\r\ncoveralls                3.3.1\r\ncrashtest                0.4.1\r\ncryptography             40.0.2\r\ndistlib                  0.3.6\r\ndocopt                   0.6.2\r\ndulwich                  0.21.5\r\necdsa                    0.18.0\r\nECPy                     1.2.5\r\nexceptiongroup           1.1.1\r\nexecnet                  1.9.0\r\nfilelock                 3.12.0\r\nfrozendict               2.3.8\r\nfrozenlist               1.3.3\r\nhtml5lib                 1.1\r\nhypothesis               6.75.3\r\nidentify                 2.5.24\r\nidna                     3.4\r\nimportlib-metadata       6.6.0\r\nimportlib-resources      5.12.0\r\niniconfig                2.0.0\r\ninstaller                0.7.0\r\njaraco.classes           3.2.3\r\njeepney                  0.8.0\r\nJPype1                   0.7.0\r\njsonschema               4.17.3\r\nkeyring                  23.13.1\r\nlockfile                 0.12.2\r\nMako                     1.2.4\r\nMarkdown                 3.4.1\r\nMarkupSafe               2.1.2\r\nmnemonic                 0.20\r\nmore-itertools           9.1.0\r\nmsgpack                  1.0.5\r\nmypy                     0.782\r\nmypy-extensions          1.0.0\r\nnagini                   0.9.0\r\nnodeenv                  1.7.0\r\nopshin                   0.13.0      /home/niels/git/eopsin-lang\r\noscrypto                 1.3.0\r\npackaging                23.1\r\nparameterized            0.9.0\r\npathspec                 0.11.1\r\npdoc3                    0.10.0\r\npexpect                  4.8.0\r\npip                      23.1.2\r\npkginfo                  1.9.6\r\npkgutil_resolve_name     1.3.10\r\nplatformdirs             2.6.2\r\npluggy                   1.0.0\r\npluthon                  0.3.7\r\npoetry                   1.4.2\r\npoetry-bumpversion       0.3.0\r\npoetry-core              1.5.2\r\npoetry-plugin-export     1.3.1\r\npprintpp                 0.4.0\r\npre-commit               3.3.2\r\nptyprocess               0.7.0\r\npy                       1.11.0\r\npyaiken                  0.4.0\r\npycardano                0.9.0\r\npycparser                2.21\r\npydantic                 1.10.7\r\nPyNaCl                   1.5.0\r\npyproject_hooks          1.0.0\r\npyrsistent               0.19.3\r\npytest                   7.3.1\r\npytest-forked            1.6.0\r\npytest-xdist             1.27.0\r\npython-secp256k1-cardano 0.2.3\r\nPyYAML                   6.0\r\nrapidfuzz                2.15.1\r\nrequests                 2.30.0\r\nrequests-toolbelt        0.10.1\r\nrply                     0.7.8\r\nSecretStorage            3.3.3\r\nsetuptools               67.7.2\r\nshellingham              1.5.0.post1\r\nsix                      1.16.0\r\nsortedcontainers         2.4.0\r\ntomli                    2.0.1\r\ntomlkit                  0.11.8\r\ntoposort                 1.5\r\ntrove-classifiers        2023.5.2\r\ntyped-ast                1.4.0\r\ntypeguard                2.13.3\r\ntyping_extensions        4.5.0\r\nuplc                     0.6.6\r\nurllib3                  1.26.15\r\nvirtualenv               20.21.1\r\nwebencodings             0.5.1\r\nwebsocket-client         1.5.1\r\nwheel                    0.40.0\r\nz3-solver                4.8.7.0\r\nzipp                     3.15.0\r\n```\r\n",
      "state": "CLOSED",
      "createdAt": "2023-05-29T07:18:37Z",
      "updatedAt": "2023-06-13T04:12:37Z",
      "closedAt": "2023-06-13T04:12:37Z",
      "author": {
        "login": "nielstron"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "status: needs information"
          },
          {
            "name": "stale"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 11040,
      "title": "[perf] Automatically prefer Windows Dev Drive for default tmp_path",
      "body": "#### What's the problem this feature will solve?\r\nWindows [Dev Drive](https://learn.microsoft.com/en-us/windows/dev-drive/) is a new OS feature that allows users to create a high performance disk that's designed for development activities. The performance improvement is based on new optimisations to the file system driver, and separating it out from the default OS drive reduces other overheads.\r\n\r\nIt's perfect for storing temporary files, however, it was decided that it's not safe for Windows to redirect all TEMP accesses to a Dev Drive by default. But our testing showed the improvements get significantly better when you do it, and we believe apps that _can_ switch ought to switch.\r\n\r\nI was part of the design team for this feature, so happy to add as much more context as you'd like and as I'm able to. Obviously these are public statements, so I have to be careful about things that might be interpreted as promises and not merely dreams, hopes and ambitions \ud83d\ude09 \r\n\r\n#### Describe the solution you'd like\r\nCurrently PyTest has ways for callers to redirect where temp files are stored, but I'd like to propose it could detect that the current project (or environment, or CWD, or _something_, I'm not so fussy about it) is on a Dev Drive, and if so, create a temp directory on that same drive.\r\n\r\n**I'm [in the process](https://github.com/python/cpython/issues/104803) of adding an `os.path.isdevdrive` function to CPython for 3.12,** so would love to hear whether this is something you'd consider using, and whether a simple test like this suits your needs.[^1]\r\n\r\nThe kind of logic I'd expect to see ([around here](https://github.com/pytest-dev/pytest/blob/main/src/_pytest/tmpdir.py#L161)):\r\n\r\n```\r\nfrom_devdrive = None\r\nif not from_env and hasattr(os.path, 'isdevdrive'):\r\n    # passing through \"tbd_project_root\" is TBD\r\n    root = ''.join(os.path.splitroot(self.tbd_project_root)[:2]) # get 'D:\\\\' or equivalent path\r\n    if os.path.isdevdrive(root):\r\n        from_devdrive = os.path.join(root, '.pytest-temp')\r\ntemproot = Path(from_devdrive or from_env or tempfile.gettempdir()).resolve()\r\n```\r\n\r\n`isdevdrive` will work on the full path, but I strip back to the drive name first because it could change which drive is actually used (e.g. the project might be in a mounted directory). There's not really an efficient way to handle this case, and on balance it makes the most sense to just ignore the optimisation anyway (access through a mounted directory is typically slow).\r\n\r\nObviously this can only light up in 3.12 and not earlier (unless you want to port the code into ctypes, which I'll understand if you don't bother). Dev Drive doesn't become widely available until the end of the year anyway, so 3.12 will also be available. Just another reason for people to upgrade! \ud83d\ude04 \r\n\r\n#### Alternative Solutions\r\nAn alternative would be to detect and suggest to users that since their code is on a Dev Drive, they should also manually provide the setting to store temporary files on it as well. I'm quite okay with this as an approach, and it might make more sense anyway (especially as a path towards changing the default in some unspecified future).\r\n\r\nAnother alternative would be to merely document it. I'd be disappointed by this, because we really want the _fact_ that a Dev Drive is being used to be the signal that dev-related files should be stored there, and we don't want to encourage users to set global environment variables for something like this. It also seems unlikely to be discovered by existing users, who probably aren't going back to read this documentation regularly.\r\n\r\nPython 3.12 already has `os.listdrives()`, so there is the possibility of searching for a Dev Drive. I don't think you'd want to go down this path though, unless there's genuinely no usable info about where the user is currently working. If they've got a Dev Drive but aren't using it, they probably have a good reason and we should leave them alone.\r\n\r\n#### Additional context\r\nIf you prefer video demonstrations: https://build.microsoft.com/en-US/sessions/7ed9bb72-b4f4-4490-9b26-911d1ac263d1?source=/home\r\n\r\nThe docs again: https://learn.microsoft.com/en-us/windows/dev-drive/\r\n\r\nRight now it's available on the Dev Channel of Windows Insider, which means it is public and people are trying it out. Python and Pytest was one of the key scenarios we were testing during development, so it'd be awesome to have it be the best it can.\r\n\r\n[^1]: Obviously we're past the first beta, but I got an allowance to add it before beta 2 (next Tuesday!) because of NDAs surrounding the feature.",
      "state": "OPEN",
      "createdAt": "2023-05-26T09:28:02Z",
      "updatedAt": "2023-06-14T10:36:44Z",
      "closedAt": null,
      "author": {
        "login": "zooba"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: proposal"
          },
          {
            "name": "platform: windows"
          },
          {
            "name": "type: performance"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 7
      }
    },
    {
      "number": 11037,
      "title": "feature request: use --show-capture to show stdout and stderr but not logs",
      "body": "<!--\r\nThanks for suggesting a feature!\r\n\r\nQuick check-list while suggesting features:\r\n-->\r\n\r\n#### What's the problem this feature will solve?\r\n<!-- What are you trying to do, that you are unable to achieve with pytest as it currently stands? -->\r\n\r\nI want to use the [show-capture](https://docs.pytest.org/en/7.1.x/reference/reference.html#command-line-flags) flag to stop showing log messages. However, I want to see both stdout and stderr, so I can't do `show-capture=stdout` or `show-capture=stderr`. It seems if I do `--show-capture=stdout --show-capture=stderr` I see stderr but not stdout.\r\n\r\n#### Describe the solution you'd like\r\nMaybe `--show-capture=stdout --show-capture=stderr` could capture both stdout and stderr.\r\n\r\n<!-- Provide examples of real-world use cases that this would enable and how it solves the problem described above. -->\r\n\r\n",
      "state": "OPEN",
      "createdAt": "2023-05-25T00:50:38Z",
      "updatedAt": "2023-05-30T21:03:24Z",
      "closedAt": null,
      "author": {
        "login": "mvashishtha"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: proposal"
          },
          {
            "name": "plugin: capture"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 11032,
      "title": "Catching both warning and error, message of warning is ignored",
      "body": "<!--\r\nThanks for submitting an issue!\r\n\r\nQuick check-list while reporting bugs:\r\n-->\r\n\r\n- [ ] a detailed description of the bug or problem you are having\r\n- [ ] output of `pip list` from the virtual environment you are using\r\n- [ ] pytest and operating system versions\r\n- [ ] minimal example if possible\r\n\r\nHere's a reproducible example:\r\n`t.py`:\r\n```python\r\nimport warnings\r\n\r\ndef foo():\r\n    warnings.warn('my warning message', FutureWarning)\r\n    raise ValueError('my error message')\r\n```\r\n`test_t.py`:\r\n```python\r\nimport pytest\r\n\r\nfrom t import foo\r\n\r\ndef test_foo():\r\n    with (\r\n        pytest.raises(ValueError, match='my error message'),\r\n        pytest.warns(FutureWarning, match='definitely not my warning message'),\r\n    ):\r\n        foo()\r\n```\r\nThen:\r\n```console\r\n(.venv) marcogorelli@DESKTOP-U8OKFP3:~/tmp$ pytest test_t.py\r\n================================================= test session starts ==================================================\r\nplatform linux -- Python 3.10.6, pytest-7.3.1, pluggy-1.0.0\r\nrootdir: /home/marcogorelli/tmp\r\nplugins: anyio-3.6.2\r\ncollected 1 item\r\n\r\ntest_t.py .                                                                                                      [100%]\r\n\r\n================================================== 1 passed in 0.00s ===================================================\r\n```\r\n\r\nI'd have expected it to error with something like\r\n```\r\nE       Failed: DID NOT WARN. No warnings of type (<class 'FutureWarning'>,) matching the regex were emitted.\r\nE        Regex: definitely not my warning message\r\nE        Emitted warnings: [FutureWarning('my warning message')]\r\n```\r\n\r\n---\r\n\r\nother info:\r\n```console\r\n(.venv) marcogorelli@DESKTOP-U8OKFP3:~/tmp$ pip list | grep pytest\r\npytest                   7.3.1\r\n(.venv) marcogorelli@DESKTOP-U8OKFP3:~/tmp$ uname -a\r\nLinux DESKTOP-U8OKFP3 5.10.102.1-microsoft-standard-WSL2 #1 SMP Wed Mar 2 00:30:59 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux\r\n(.venv) marcogorelli@DESKTOP-U8OKFP3:~/tmp$ python --version\r\nPython 3.10.6\r\n```\r\n",
      "state": "CLOSED",
      "createdAt": "2023-05-23T10:44:45Z",
      "updatedAt": "2023-06-19T00:59:57Z",
      "closedAt": "2023-06-19T00:59:49Z",
      "author": {
        "login": "MarcoGorelli"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: bug"
          },
          {
            "name": "plugin: warnings"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 11031,
      "title": "Add additional flag CLI flag to the Ini Options: `--config-file`",
      "body": "## Add additional flag CLI flag to the Ini Options: `--config-file`\r\n\r\n### What's the current situation?\r\n\r\nThe PyTest config currently has one config flag that can be used for loading config from a file: `-c`. As outlined [here][pytest_cli_flag_-c] and [here][pytest_config_from_file].\r\n\r\nThis means that if I wanted to run my `pytest` script from a `pyproject.toml` file, I'd need to run it like this:\r\n\r\n```sh\r\npytest -c pyproject.toml\r\n```\r\n\r\nWith the `pyproject.toml` file containing the following config:\r\n\r\n```toml\r\n[tool.pytest.ini_options]\r\naddopts = \"--verbose --cov=src --cov-report=term --cov-report=html:cov-report/html --cov-report=xml:cov-report/xml/cov-report.xml\"\r\ntestpaths = [\r\n    \"src\",\r\n]\r\n```\r\n\r\n### What's the problem this feature will solve?\r\n\r\nThe current solution works. However, for someone new to the team, who see this flag `-c`, they'd need to go digging through the documentation to try and find out what it means. Which may take some time.\r\n\r\n### Describe the solution you'd like\r\n\r\nTo streamline this process, I'd like to add an additional flag to the existing `-c` flag. This new flag should be a double-hyphen flag, and be either `--config` or `--config-file`.\r\n\r\nThat way, it is clear and unmistakable what this flag would be doing.\r\n\r\nTherefore, in addition to running the command like this:\r\n\r\n```sh\r\npytest -c pyproject.toml\r\n```\r\n\r\nThis command should also work just the same if the command looked like this:\r\n\r\n```sh\r\npytest --config-file pyproject.toml\r\n```\r\n\r\n### Additional context\r\n\r\nBy way of context, other Python packages that also supply config in the `pyproject.toml` file also have the longer version of the flag in their CLI config.\r\n\r\nFor example:\r\n\r\n- MyPy uses the command: `--config-file CONFIG_FILE`. See [here][mypy_cli_flag_--config-file].\r\n- Black uses the command: `--config FILE`. See [here][black_cli_flag_--config].\r\n\r\nIt would be beneficial if PyTest could also implement a flag similar to Packages like this.\r\n\r\n[pytest_cli_flag_-c]: https://docs.pytest.org/en/7.3.x/reference/reference.html#ini-options-ref:~:text=to%20%2D%2Dstrict%2Dmarkers-,%2Dc,-file%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20Load%20configuration\r\n[pytest_config_from_file]: https://docs.pytest.org/en/stable/reference/customize.html\r\n[mypy_cli_flag_--config-file]: https://mypy.readthedocs.io/en/stable/command_line.html#cmdoption-mypy-config-file\r\n[black_cli_flag_--config]: https://black.readthedocs.io/en/stable/usage_and_configuration/the_basics.html#:~:text=version%20and%20exit.-,%2D%2Dconfig,-FILE%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20Read%20configuration\r\n",
      "state": "CLOSED",
      "createdAt": "2023-05-22T23:40:30Z",
      "updatedAt": "2023-05-26T10:56:20Z",
      "closedAt": "2023-05-26T10:56:20Z",
      "author": {
        "login": "chrimaho"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: enhancement"
          },
          {
            "name": "topic: config"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      }
    },
    {
      "number": 11029,
      "title": "I have this in `conftest.py`",
      "body": "I have this in `conftest.py`\r\n\r\n```\r\ndef pytest_addoption(parser):\r\n    parser.addoption(\r\n        \"--cmdopt\", action=\"store\", default=\"value\"\r\n    )\r\n\r\n@pytest.fixture\r\ndef cmdopt(request):\r\n    return request.config.getoption(\"--cmdopt\")\r\n```\r\n\r\nWhat is the best way to read `cmdopt` value inside `pytest_runtest_makereport` function?\r\n\r\n_Originally posted by @harmin-parra in https://github.com/pytest-dev/pytest-html/discussions/680_",
      "state": "CLOSED",
      "createdAt": "2023-05-22T06:57:07Z",
      "updatedAt": "2023-05-22T13:18:25Z",
      "closedAt": "2023-05-22T13:18:25Z",
      "author": {
        "login": "BeyondEvil"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      }
    },
    {
      "number": 11028,
      "title": "UnboundLocalError: cannot access local variable 'x' where it is not associated with a value",
      "body": "There seems to be a regression in pytest version `7.3.x` when a **walrus** operator is used in an assert line.\r\nCode:\r\n\r\n```py\r\nimport json\r\nimport pytest\r\n\r\ndef test_json_encoder():\r\n  assert (object:=\"foo\") in json.dumps(object)\r\n```\r\n\r\nFails the test with error:\r\n```shell\r\nUnboundLocalError: cannot access local variable 'object' where it is not associated with a value\r\n```\r\n\r\nin pytest version `7.3.x`, whereas with pytest version `7.2.x` it passes successfully. My Python version is `3.11`.\r\n\r\nLooks like it has to do with PR #10758. ",
      "state": "CLOSED",
      "createdAt": "2023-05-21T18:06:59Z",
      "updatedAt": "2023-05-30T14:59:26Z",
      "closedAt": "2023-05-30T14:59:26Z",
      "author": {
        "login": "kristiker"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: bug"
          },
          {
            "name": "topic: rewrite"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 11025,
      "title": "pytest does not recognize pytest-asyncio",
      "body": "```sh\r\npython --version # Python 3.11.2\r\n```\r\n\r\n```sh\r\npip install pytest\r\npip install pytest-asyncio\r\n```\r\n\r\nPytest does not recognize `pytest-asyncio` marks like `@pytest.mark.asyncio`. Pytest skips running the test even when the async test is the only test.\r\n\r\n```python\r\nasync def function_under_test():\r\n    #...\r\n\r\n@pytest.mark.asyncio\r\nasync def test_async_function_under_test():\r\n    #... await function_under_test() ...\r\n    assert # ...\r\n    \r\n```\r\nleaderboard.py:5: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\r\n    @pytest.mark.asyncio\r\n\r\nPytestUnhandledCoroutineWarning: async def functions are not natively supported and have been skipped.\r\n  You need to install a suitable plugin for your async framework, for example:\r\n    - anyio\r\n    - pytest-asyncio\r\n    - pytest-tornasync\r\n    - pytest-trio\r\n    - pytest-twisted\r\n    warnings.warn(PytestUnhandledCoroutineWarning(msg.format(nodeid)))\r\n\r\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\r\n```",
      "state": "CLOSED",
      "createdAt": "2023-05-20T01:24:38Z",
      "updatedAt": "2023-05-20T17:25:10Z",
      "closedAt": "2023-05-20T17:25:10Z",
      "author": {
        "login": "1NF053C"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      }
    },
    {
      "number": 11024,
      "title": "ENH: -k with regex?",
      "body": "`pytest -k` is reasonably powerful for selecting tests to run, but there are certain selection tasks that are impossible with its current limitations (or at least, largely impractical). I think I've got one described in the `README` over at https://github.com/tylerjereddy/pytest-regex. I'm wondering if the team would be open to allowing regex pass-through in the `-k ...` option as an augmentation to the current selection language, or if i.e., the backwards compatibility concerns on allowing regexes on node ids would be prohibitive and it is best to experiment in a plugin for the foreseeable future? ",
      "state": "CLOSED",
      "createdAt": "2023-05-19T20:20:08Z",
      "updatedAt": "2024-07-06T22:55:23Z",
      "closedAt": "2024-07-06T22:55:23Z",
      "author": {
        "login": "tylerjereddy"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: proposal"
          },
          {
            "name": "topic: collection"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 6
      }
    },
    {
      "number": 11022,
      "title": "Document dangers of monkeypatching/mocking stdlib",
      "body": "We could add a warning + document recommended/possible patterns.\r\n\r\nA possible pattern is instead of patching the stdlib,  replacing the imported references with patched objects (with all the minefield style fragility that comes of it).\r\n\r\nThe other pattern would be to add testability instrumentation into libraries, and then one can pass the dependencies instead of breaking\r\n\r\n_Originally posted by @RonnyPfannschmidt in https://github.com/pytest-dev/pytest/issues/11018#issuecomment-1554050552_\r\n            ",
      "state": "OPEN",
      "createdAt": "2023-05-19T11:00:35Z",
      "updatedAt": "2023-05-19T11:00:41Z",
      "closedAt": null,
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: docs"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      }
    },
    {
      "number": 11020,
      "title": "How to Control Passive Test Functions\uff1f",
      "body": "`import pytest\r\n\r\n\r\nclass TestUser:\r\n    @pytest.mark.parametrize(\"username, password\", [(\"admin\", \"123456\"), (\"admin1\", \"123456\")])\r\n    def test_login(self, username, password):\r\n        print(\"login\")\r\n\r\n    @pytest.mark.parametrize(\"username, password\", [(\"admin\", \"123456\"), (\"admin1\", \"123456\")])\r\n    def test_logout(self, username, password):\r\n        print(\"logout\")\r\n\r\n    @pytest.mark.parametrize(\"username, password\", [(\"admin\", \"123456\"), (\"admin1\", \"123456\")])\r\n    def test_register(self, username, password):\r\n        print(\"register\")\r\n\r\n\r\nclass TestExample:\r\n    @pytest.mark.parametrize(\"username, password\", [(\"admin\", \"123456\"), (\"admin1\", \"123456\")])\r\n    def test_order(self, username, password):\r\n        TestUser().test_login(username, password)\r\n\r\n\r\nif __name__ == '__main__':\r\n    pytest.main()\r\n`\r\nHow to control that when test_order calls the TestUser test class, only the called test_login test function is executed, and not all test functions under TestUser are executed? Is it possible to use the pytest_collection_modifyitems hook provided by pytest to control the test functions that do not need to execute all test classes?\r\n\r\nNow the execution result is as follows\uff1a\r\n![image](https://github.com/pytest-dev/pytest/assets/100674970/f3635162-ab70-471e-aac5-252e7b4a6846)\r\n\r\n",
      "state": "CLOSED",
      "createdAt": "2023-05-19T08:47:24Z",
      "updatedAt": "2023-05-19T09:57:50Z",
      "closedAt": "2023-05-19T09:57:50Z",
      "author": {
        "login": "Yingqingshan"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      }
    },
    {
      "number": 11019,
      "title": "EncodingWarning in faulthandler",
      "body": "With PYTHONWARNDEFAULTENCODING, pytest emits a warning on startup:\r\n\r\n```\r\n jaraco.abode main $ env PYTHONWARNDEFAULTENCODING=1 .tox/py/bin/python -m pytest\r\n/Users/jaraco/code/jaraco/jaraco.abode/.tox/py/lib/python3.11/site-packages/_pytest/faulthandler.py:30: EncodingWarning: 'encoding' argument not specified\r\n  config.stash[fault_handler_stderr_key] = open(stderr_fd_copy, \"w\")\r\n...\r\n```",
      "state": "CLOSED",
      "createdAt": "2023-05-19T00:14:35Z",
      "updatedAt": "2023-05-19T09:57:01Z",
      "closedAt": "2023-05-19T00:18:20Z",
      "author": {
        "login": "jaraco"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      }
    },
    {
      "number": 11018,
      "title": "Pytest mocks spill into python library cache",
      "body": "Summary:\r\nOld unit test started failing on the CI with cryptic errors 100% of the time, but it was extremely hard to reproduce locally.\r\n\r\n\r\nThe following code is the minimal example to make the bug happen.\r\n```python\r\nfrom pathlib import Path\r\nimport pytest\r\nimport pytest_mock\r\n\r\n\r\n@pytest.mark.asyncio\r\nasync def test_repro(\r\n    mocker: pytest_mock.MockerFixture\r\n):\r\n    mocker.patch.object(Path, \"exists\", return_value=True, autospec=True)\r\n    mocker.patch.object(Path, \"open\", mocker.mock_open(read_data=b\"helloworld\"))\r\n    import anyio._backends\r\n```\r\n\r\nTo run the code and reproduce the problem you must use the following command\r\n`find <path_to_dependecies_folder> -name '*.pyc' -delete && pytest tests/test_example.py`\r\nIn my case it is `find ~/miniconda3/envs/unitary/ -name '*.pyc' -delete && pytest tests/test_example.py`\r\n\r\n**It is important to delete the cache because it is going to fail only once**\r\n\r\nWhat happens is that `rewrite.py` will somehow use the mocks instead of the real `pathlib.Path` to write and read the relevant `.pyc` files. I don't fully understand why rewrite.py writes dependency caches.\r\n\r\nThe error is something related to:\r\n```log\r\nplatform linux -- Python 3.10.9, pytest-7.3.1, pluggy-1.0.0\r\nrootdir: /home/ubuntu/unitarybot\r\nplugins: mock-3.10.0, anyio-3.6.2, asyncio-0.21.0\r\nasyncio: mode=strict\r\ncollected 1 item                                                                                                                        \r\n\r\ntests/test_example.py F                                                                                                           [100%]\r\n\r\n=============================================================== FAILURES ================================================================\r\n______________________________________________________________ test_repro _______________________________________________________________\r\n\r\nmocker = <pytest_mock.plugin.MockerFixture object at 0x7fc3847f2680>\r\n\r\n    @pytest.mark.asyncio\r\n    async def test_repro(\r\n        mocker: pytest_mock.MockerFixture\r\n    ):\r\n    \r\n        # file upload using file\r\n        mocker.patch.object(Path, \"exists\", return_value=True, autospec=True)\r\n        mocker.patch.object(Path, \"open\", mocker.mock_open(read_data=b\"helloworld\"))\r\n>       import anyio._backends\r\n\r\ntests/test_example.py:14: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n<frozen importlib._bootstrap>:1027: in _find_and_load\r\n    ???\r\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\r\n    ???\r\n<frozen importlib._bootstrap>:688: in _load_unlocked\r\n    ???\r\n../miniconda3/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:172: in exec_module\r\n    exec(co, module.__dict__)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\n>   ???\r\nE   NameError: name 'helloworld' is not defined\r\n\r\n../miniconda3/lib/python3.10/site-packages/anyio/_backends/__init__.py:1: NameError\r\n======================================================== short test summary info ========================================================\r\nFAILED tests/test_example.py::test_repro - NameError: name 'helloworld' is not defined\r\n=========================================================== 1 failed in 0.05s =========\r\n```\r\n \r\nThis probably makes sense right now, but you must take into account that the original error happened with another third party dependency and it was something similar to this\r\n```python\r\nfrom pathlib import Path\r\nimport pytest\r\nimport pytest_mock\r\n\r\nimport httpx\r\n\r\n@pytest.mark.asyncio\r\nasync def test_repro(\r\n    mocker: pytest_mock.MockerFixture\r\n):\r\n    \r\n    # file upload using file\r\n    mocker.patch.object(Path, \"exists\", return_value=True, autospec=True)\r\n    mocker.patch.object(Path, \"open\", mocker.mock_open(read_data=b\"helloworld\"))\r\n    \r\n   #heavely simplified version of the test\r\n    async with httpx.AsyncClient() as client:\r\n        pass\r\n```\r\n\r\nI am not using pip, but conda:\r\nConda list output:\r\n```\r\n# Name                    Version                   Build  Channel\r\n_libgcc_mutex             0.1                        main  \r\n_openmp_mutex             5.1                       1_gnu  \r\nanyio                     3.6.2                    pypi_0    pypi\r\nbrotlipy                  0.7.0           py310h7f8727e_1002  \r\nbzip2                     1.0.8                h7b6447c_0  \r\nca-certificates           2023.01.10           h06a4308_0  \r\ncertifi                   2022.12.7       py310h06a4308_0  \r\ncffi                      1.15.1          py310h5eee18b_3  \r\ncharset-normalizer        2.0.4              pyhd3eb1b0_0  \r\nconda                     23.1.0          py310h06a4308_0  \r\nconda-content-trust       0.1.3           py310h06a4308_0  \r\nconda-package-handling    2.0.2           py310h06a4308_0  \r\nconda-package-streaming   0.7.0           py310h06a4308_0  \r\ncryptography              38.0.4          py310h9ce1e76_0  \r\nexceptiongroup            1.1.1                    pypi_0    pypi\r\nidna                      3.4             py310h06a4308_0  \r\niniconfig                 2.0.0                    pypi_0    pypi\r\nld_impl_linux-64          2.38                 h1181459_1  \r\nlibffi                    3.4.2                h6a678d5_6  \r\nlibgcc-ng                 11.2.0               h1234567_1  \r\nlibgomp                   11.2.0               h1234567_1  \r\nlibstdcxx-ng              11.2.0               h1234567_1  \r\nlibuuid                   1.41.5               h5eee18b_0  \r\nncurses                   6.4                  h6a678d5_0  \r\nopenssl                   1.1.1s               h7f8727e_0  \r\npackaging                 23.1                     pypi_0    pypi\r\npip                       22.3.1          py310h06a4308_0  \r\npluggy                    1.0.0           py310h06a4308_1  \r\npycosat                   0.6.4           py310h5eee18b_0  \r\npycparser                 2.21               pyhd3eb1b0_0  \r\npyopenssl                 22.0.0             pyhd3eb1b0_0  \r\npysocks                   1.7.1           py310h06a4308_0  \r\npytest                    7.3.1                    pypi_0    pypi\r\npytest-asyncio            0.21.0                   pypi_0    pypi\r\npytest-mock               3.10.0                   pypi_0    pypi\r\npython                    3.10.9               h7a1cb2a_0  \r\nreadline                  8.2                  h5eee18b_0  \r\nrequests                  2.28.1          py310h06a4308_0  \r\nruamel.yaml               0.17.21         py310h5eee18b_0  \r\nruamel.yaml.clib          0.2.6           py310h5eee18b_1  \r\nsetuptools                65.6.3          py310h06a4308_0  \r\nsix                       1.16.0             pyhd3eb1b0_1  \r\nsniffio                   1.3.0                    pypi_0    pypi\r\nsqlite                    3.40.1               h5082296_0  \r\ntk                        8.6.12               h1ccaba5_0  \r\ntomli                     2.0.1                    pypi_0    pypi\r\ntoolz                     0.12.0          py310h06a4308_0  \r\ntqdm                      4.64.1          py310h06a4308_0  \r\ntzdata                    2022g                h04d1e81_0  \r\nurllib3                   1.26.14         py310h06a4308_0  \r\nwheel                     0.37.1             pyhd3eb1b0_0  \r\nxz                        5.2.10               h5eee18b_1  \r\nzlib                      1.2.13               h5eee18b_0  \r\nzstandard                 0.18.0          py310h5eee18b_0  \r\n```\r\n\r\nThis also spills into the pyc file, unsure if this is what is supposed to happen.\r\n![image](https://github.com/pytest-dev/pytest/assets/12250543/cbe7e750-36ce-415a-8819-5f7efcfb52fa)\r\n\r\nLet me know what other info I can get for you!",
      "state": "CLOSED",
      "createdAt": "2023-05-18T15:07:11Z",
      "updatedAt": "2023-05-19T11:04:02Z",
      "closedAt": "2023-05-19T11:04:02Z",
      "author": {
        "login": "IvanovCosmin"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 7
      }
    },
    {
      "number": 11013,
      "title": "Issue warning/error if 'testpaths' does not match any files/folders",
      "body": "We should issue a warning (or even an error?) if  `testpaths` does not match any files or folders.\r\n\r\nI think an error is reasonable, even if it might break some incorrectly-configured suite out there.\r\n\r\n----\r\n\r\n_Originally posted by @nicoddemus in https://github.com/pytest-dev/pytest/issues/11006#issuecomment-1551342447_\r\n\r\nThis is not really a bug, but an intended (albeit questionable) behavior: \r\n\r\nThe values of `testpaths` are actually globs, so globbing for `tests` in the root yields nothing. Given it finds nothing, pytest will behave as if called from the command-line without any parameters, which makes it search recursively from the current directory looking for `python_files` to collect.\r\n\r\nhttps://github.com/pytest-dev/pytest/blob/739408b958f8e5a24de81e17e4cc2d4f34d93991/src/_pytest/config/__init__.py#L1382-L1384\r\n\r\nIf you create the `tests` directory, then pytest will correctly search in that directory only.\r\n\r\nI agree those 2 facts are surprising:\r\n\r\n1. The fact that `testpaths` is a glob. This is [documented](https://docs.pytest.org/en/stable/reference/reference.html#confval-testpaths) but easy to overlook, probably we should add a glob to the example there.\r\n2. pytest silently not finding anything, and then proceeding as usual.\r\n\r\nI don't think we can do anything more for 1, but for 2 seems like we should at least emit a warning if `testpaths` is defined but does not match anything.\r\n\r\n\r\n            ",
      "state": "CLOSED",
      "createdAt": "2023-05-17T18:10:13Z",
      "updatedAt": "2023-05-30T10:06:15Z",
      "closedAt": "2023-05-30T10:06:15Z",
      "author": {
        "login": "nicoddemus"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "good first issue"
          },
          {
            "name": "topic: config"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 11012,
      "title": "@hookspec breaks Sphinx parsing",
      "body": "In [pytest_ignore_collect docs](https://docs.pytest.org/en/7.1.x/reference/reference.html#pytest.hookspec.pytest_ignore_collect), the `:param`s are not parsed correctly.\r\n\r\nThe only difference appears to be the explicit `@hookspec` so I'm suspecting it the culprit.",
      "state": "CLOSED",
      "createdAt": "2023-05-17T17:13:43Z",
      "updatedAt": "2023-06-05T01:35:58Z",
      "closedAt": "2023-06-05T01:35:58Z",
      "author": {
        "login": "ikonst"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: docs"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 11008,
      "title": "[RFC] allow major pytest releases to drop suport for soon to be eol python",
      "body": "follow up to #10981\r\n\r\nin case there is a clear benefit for maintenance and the eol is close-by,\r\ni want to allow major pytest releases to be allowed to drop support for soon to eol python versions \r\n\r\ni would consider eol < 6 months away a good cut off",
      "state": "OPEN",
      "createdAt": "2023-05-16T19:00:02Z",
      "updatedAt": "2024-07-07T07:24:28Z",
      "closedAt": null,
      "author": {
        "login": "RonnyPfannschmidt"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: proposal"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 4
      }
    },
    {
      "number": 11006,
      "title": "pytest collects files when told not to",
      "body": "I can reproduce this with a project set up as follows:\r\n\r\n*  `pyproject.toml`:\r\n\r\n   ```toml\r\n   [tool.pytest.ini_options]\r\n   python_files = \"*.py\"\r\n   testpaths = [\r\n       \"tests\",\r\n   ]\r\n   ```\r\n\r\n*  `src/playground/__init__.py` exists and is empty\r\n\r\n*  `src/playground/__main__.py`:\r\n\r\n   ```python\r\n   import sys\r\n\r\n\r\n   def main():\r\n       print(\"Hello, world!\")\r\n\r\n\r\n   sys.exit(main())\r\n   ```\r\n\r\n*  `tests` does not exist\r\n\r\nWhen I run `pytest`, I get this output:\r\n\r\n```\r\n============================= test session starts ==============================\r\nplatform linux -- Python 3.11.3, pytest-7.2.1, pluggy-1.0.0\r\nrootdir: /home/charles/science/python/playground, configfile: pyproject.toml\r\nplugins: cov-4.0.0\r\ncollected 0 items / 1 error\r\n\r\n==================================== ERRORS ====================================\r\n_________________ ERROR collecting src/playground/__main__.py __________________\r\nsrc/playground/__main__.py:11: in <module>\r\n    sys.exit(main())\r\nE   SystemExit\r\n------------------------------- Captured stdout --------------------------------\r\nHello, world!\r\n=========================== short test summary info ============================\r\nERROR src/playground/__main__.py - SystemExit\r\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\r\n=============================== 1 error in 0.03s ===============================\r\n```\r\n\r\nI would expect this to succesfully collect nothing and run no tests, but instead it fails because it runs `__main__.py`. Notably, if I remove `python_files = \"*.py\"` from `pyproject.toml`, it works. It seems like this shouldn't matter, though, because I'm already narrowing `testpaths` to `tests`.\r\n",
      "state": "CLOSED",
      "createdAt": "2023-05-15T21:41:40Z",
      "updatedAt": "2023-05-17T18:11:56Z",
      "closedAt": "2023-05-17T18:11:56Z",
      "author": {
        "login": "CobaltCause"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "topic: collection"
          },
          {
            "name": "topic: config"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 10999,
      "title": "monkeypatch.setitem type hints do not support TypedDict",
      "body": "Python 3.8 introduced the [typing.TypedDict](https://docs.python.org/3/library/typing.html#typing.TypedDict) type to properly annotate dicts with multiple types. It appears that this type is not compatible with the type annotations for `monkeypatch.setitem`.\r\n\r\nThe following code runs fine with pytest:\r\n```python\r\nfrom typing import TypedDict\r\n\r\nfrom _pytest.monkeypatch import MonkeyPatch\r\n\r\nFoo = TypedDict('Foo', {'x': int, 'y': float})\r\n\r\na: Foo = {'x': 1, 'y': 3.14}\r\nb = {'x': 1, 'y': 3.14}\r\n\r\ndef test(monkeypatch: MonkeyPatch) -> None:\r\n    monkeypatch.setitem(a, 'x', 2)\r\n    monkeypatch.setitem(b, 'x', 2)\r\n```\r\nHowever, it fails with mypy:\r\n```console\r\n$ mypy test.py\r\ntest.py:11: error: Argument 1 to \"setitem\" of \"MonkeyPatch\" has incompatible type \"Foo\"; expected \"MutableMapping[str, int]\"  [arg-type]\r\nFound 1 error in 1 file (checked 1 source file)\r\n```\r\n\r\n### Versions\r\n\r\n* Python 3.10.10\r\n* pytest 7.2.1\r\n* macOS 13.3.1 (a)",
      "state": "CLOSED",
      "createdAt": "2023-05-13T21:01:10Z",
      "updatedAt": "2023-05-14T19:17:01Z",
      "closedAt": "2023-05-14T19:17:01Z",
      "author": {
        "login": "adamjstewart"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      }
    },
    {
      "number": 10994,
      "title": "setup_method is re-using global state initialized from previous setup_methods",
      "body": "I have a `setup_method` that fills a global dictionary variable with some values. It is my understanding (perhaps incorrectly) that these setup_methods should be idempotent. Every time a test's `setup_method` is executed the global environment should look the same. \r\n\r\nI am executing a single test that is using parameterization which causes the test to be run with 12 times with different parameters. I have my environment set to run 10 test threads in parallel. Everything succeeds until I get to the 11th and 12th run, where the setup_method finds that the global dictionary is already filled, causing an error to be thrown. My assumption is that this is reusing the original environment.\r\n\r\nIs this expected, or is this a bug?\r\n\r\nHere is a reproducible example:\r\n\r\n```\r\n\r\nimport pytest\r\n\r\nfrom tests.helpers.pytest_base_test import PytestBaseTest\r\n\r\nglobal_var: list[str] = []\r\n\r\nclass TestGlobalVariable(PytestBaseTest):\r\n    def setup_method(self) -> None:\r\n        super().setup_method()\r\n        global_var.append(\"hi\")\r\n\r\n\r\n    @pytest.mark.parametrize(\r\n        \"foo\",\r\n        [\r\n            \"hi\",\r\n            \"hi\",\r\n            \"hi\",\r\n            \"hi\",\r\n            \"hi\",\r\n            \"hi\",\r\n            \"hi\",\r\n            \"hi\",\r\n            \"hi\",\r\n            \"hi\",\r\n            \"hi\",\r\n        ],\r\n    )\r\n    def test_global_variable(self, foo: str) -> None:\r\n        assert len(global_var) == 1 \r\n        assert global_var[0] == foo\r\n```\r\n\r\nI assume where it starts failing depends on your parallelization parameters, which for me is 10.\r\n\r\n```    def test_global_variable(self, foo: str) -> None:\r\n>       assert len(global_var) == 1\r\nE       AssertionError: assert 2 == 1\r\nE        +  where 2 = len(['hi', 'hi'])\r\n\r\nrepo/example/tests/test_global_variable.py:31: AssertionError\r\n======================================================================= short test summary info ========================================================================\r\nFAILED repo/example/tests/test_global_variable.py::TestGlobalVariable::test_global_variable[hi10] - AssertionError: assert 2 == 1\r\n===================================================================== 1 failed, 10 passed in 1.33s =====================================================================\r\n        2.37 real         6.31 user         1.65 sys\r\n```",
      "state": "CLOSED",
      "createdAt": "2023-05-12T13:03:05Z",
      "updatedAt": "2023-05-12T13:59:50Z",
      "closedAt": "2023-05-12T13:05:29Z",
      "author": {
        "login": "Stacey-Valon"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "invalid"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      }
    },
    {
      "number": 10993,
      "title": "Fixture with scope=package have incorrect request object",
      "body": "When using a fixuture with the `package` scope, the `request` object is not of the expected type. To be accurate, the `request.node` is of type `Session` when one could expect it to be of type `Package`.\r\n\r\nVersions:\r\n  - python 3.7.16\r\n  - pytest 7.3.1\r\n\r\nExample:\r\n\r\n```\r\nimport pytest\r\n\r\n\r\n@pytest.fixture(scope=\"package\")\r\ndef package_fixture(request):\r\n    assert False, (type(request.node), request.node)\r\n\r\ndef test_fixture(package_fixture):\r\n    pass\r\n```",
      "state": "OPEN",
      "createdAt": "2023-05-12T08:10:25Z",
      "updatedAt": "2023-05-16T00:05:57Z",
      "closedAt": null,
      "author": {
        "login": "TheoGoudout"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: enhancement"
          },
          {
            "name": "topic: fixtures"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 10992,
      "title": "Package fixtures teardown not being invoked after package scope",
      "body": "Hello, I'm currently trying to separate some package fixtures from some local conftest.py files. I know that this is not expected behaviour, but it actually works for my team setup. It look something something like this:\r\n\r\nPython version: `3.11.3`\r\nPytest version: `7.3.1`\r\n\r\nProject structure:\r\n```bash\r\ntests/__init__.py\r\ntests/test_1/conftest.py\r\ntests/test_1/__init__.py\r\ntests/test_1/foo/__init__.py\r\ntests/test_1/foo/test_foo.py\r\ntests/test_1/fixtures/__init__.py\r\ntests/test_1/fixtures/fix.py\r\ntests/test_2/conftest.py\r\ntests/test_2/fixtures/__init__.py\r\ntests/test_2/fixtures/fix.py\r\ntests/test_2/bar/__init__.py\r\ntests/test_2/bar/test_bar.py\r\n```\r\n\r\n`tests/test_1/fixtures/fix.py` and `tests/test_2/fixtures/fix.py`\r\n```python\r\n@pytest.fixture(scope='package')\r\ndef foo():\r\n    # consider 'bar' for test_2/fixtures\r\n    print('foo start')\r\n    yield\r\n    print('foo end')\r\n```\r\n\r\n`tests/test_1/conftest.py` and `tests/test_2/conftest.py`\r\n```python\r\nfrom tests.test_1.fixtures.fix import foo\r\n# consider 'bar' for test_1/conftest.py\r\n```\r\n\r\n`tests/test_1/foo/test_foo.py` and `tests/test_2/bar/test_bar.py`\r\n```python\r\ndef test_foo(foo):\r\n    # consider 'bar' for tests/test_2/bar/test_bar.py\r\n    print(foo)\r\n```\r\n\r\nWhen calling the fixtures in our tests with this modularisation, the fixture remains only available on the conftest.py level, and the startup of the fixture is also invoked by its first occurrence, but its teardown is deferred by beyond the end of the related package. Something like this:\r\n\r\n```\r\ntest_1/foo/test_foo.py foo start\r\nNone\r\n.\r\ntest_2/bar/test_bar.py bar start\r\nNone\r\n.bar end\r\nfoo end\r\n```\r\n\r\nIs there any reason why this is happening and how can I enforce the package scope? \r\n\r\n",
      "state": "CLOSED",
      "createdAt": "2023-05-12T08:09:19Z",
      "updatedAt": "2024-01-04T14:01:21Z",
      "closedAt": "2024-01-04T14:01:20Z",
      "author": {
        "login": "jvaesteves"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: question"
          },
          {
            "name": "topic: fixtures"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 10991,
      "title": "support sub-second granularity/precision in `--log-date-format` (strftime `%f`)",
      "body": "***tl;dr*** pytest processing strftime `%f` specifier from `--log-*-date-format` arguments would allow me to accurately merge log messages from disparate sub-systems\r\n\r\n### What's the problem?\r\n\r\nTests I run have pytest log messages that print at the second granularity for the datetimestamp, e.g. `2023-05-11T13:45:34`. At the same time, other log file messages not generated by pytest print sub-second datetimestamps, e.g. `2023-05-11T13:45:34.123`.\r\n\r\nWhen reviewing the various logs, there are many message from other system components that are printing many log messages per second. Because pytest log messages are lacking sub-second precision, I am unable to align pytest log messages within other system log messages.\r\n\r\n#### contrived example\r\n\r\nFor example, the system-under-test generates a log file like:\r\n```text\r\n2023-05-11T13:45:34.001 starting the frobulator\r\n2023-05-11T13:45:34.100 wiggling the waggulator\r\n2023-05-11T13:45:34.200 stopping the frobulator\r\n2023-05-11T13:45:34.301 starting the frobulator\r\n2023-05-11T13:45:34.400 poking the prokulator\r\n2023-05-11T13:45:34.450 prokulator response ERROR_NOT_ONLINE\r\n2023-05-11T13:45:34.500 stopping the frobulator\r\n2023-05-11T13:45:34.600 starting the frobulator\r\n2023-05-11T13:45:34.700 juggling some bowling pins\r\n2023-05-11T13:45:34.750 DROPPED A PIN!\r\n2023-05-11T13:45:34.800 stopping the frobulator\r\n2023-05-11T13:45:34.839 ERROR 0x0F009001 STOPPING THE frobulator\r\n```\r\nand the driver of tests, pytest, generates a log file like:\r\n```text\r\n2023-05-11T13:45:34 checking device\r\n2023-05-11T13:45:34 ping device\r\n2023-05-11T13:45:34 device error!\r\n```\r\n\r\nThe pytest log messages cannot be precisely ordered among the other log messages that occurred during the datetime second `2023-05-11T13:45:34`, there were many things that occurred in the other system components within that second.\r\n\r\n#### current confusion\r\n\r\nGiven the following pytest code\r\n\r\n```Python\r\nimport logging\r\nimport pytest\r\n\r\nlogging.basicConfig()\r\nlogger = logging.getLogger(__name__)\r\n\r\ndef test_logger():\r\n    logger.error(\"test_logger()ERROR\")\r\n    logger.warning(\"test_logger()WARNING\")\r\n```\r\n\r\nTo add sub-second granularity, it seems sensible to add `%f` within the `--log-cli-date-format`\r\n\r\n```text\r\n$ python -m pytest \\\r\n         -v -v \\\r\n         --log-cli-date-format=\"%Y%m%dT%H%M%S.%f\" \\\r\n         --capture=tee-sys \\\r\n         -k \"test_logger\"\r\n```\r\n\r\nbut then I see the confusing output of\r\n\r\n```text\r\n20230511T181007.%f: ERROR : [test_main.py:27 - test_logger()] : test_logger()ERROR\r\n20230511T181007.%f: WARNING : [test_main.py:28 - test_logger()] : test_logger()WARNING\r\n```\r\n\r\npytest logging is ignoring the strftime `%f` specifier!\r\n\r\n---\r\n\r\n### pytest feature request\r\n\r\nI want pytest log messages to print sub-second granularity, e.g. process strftime `%f` within `--log-date-format=\"...%f...\"` settings.\r\n\r\n#### Describe the solution you'd like\r\n<!-- A clear and concise description of what you want to happen. -->\r\n\r\nSupport strftime `%f` specifier in the various settings for _date-format_, e.g. `--log-date-format`, `--log-cli-date-format`, `--log-file-date-format`.\r\n\r\n<!-- Provide examples of real-world use cases that this would enable and how it solves the problem described above. -->\r\n\r\nIn my complex testing system, this means _all_ log messages would be printed to millisecond precision. This allows engineers investigating issues to more accurately merge disparate testing system logs by their natural ordering mechanism of a datetimestamp.\r\n\r\n---\r\n\r\n### Alternative Solutions\r\n\r\n<!-- Have you tried to workaround the problem using a pytest plugin or other tools? Or a different approach to solving this issue? Please elaborate here. -->\r\n\r\nI can set the `logging` format to include `%(msecs)03d`.\r\nHowever, it's a little confusing to have to manipulate log datetimestamps by two different mechanisms, `--log-cli-format` and `--log-cli-date-format`.\r\n\r\n#### example workaround\r\n\r\nOn the command-line run:\r\n```text\r\n$ python -m pytest \\\r\n         -v -v \\\r\n         --log-cli-date-format=\"%Y%m%dT%H%M%S.\" \\\r\n         --log-cli-format=\"%(asctime)s%(msecs)03d: %(levelname)s : [%(filename)s:%(lineno)s - %(funcName)s()] : %(message)s\" \\\r\n         --capture=tee-sys \\\r\n         -k \"test_logger\"\r\n```\r\nThis prints datetimestamps with millisecond precision\r\n```text\r\n20230511T180748.192: ERROR : [test_main.py:27 - test_logger()] : test_logger()ERROR\r\n20230511T180748.195: WARNING : [test_main.py:28 - test_logger()] : test_logger()WARNING\r\n```\r\n\r\n<br />\r\n\r\n### Summary\r\n\r\nIt is more intuitive for pytest to process the Python strftime `%f` specifier within all `--*-date-format` options.",
      "state": "CLOSED",
      "createdAt": "2023-05-12T00:59:31Z",
      "updatedAt": "2023-06-04T18:32:19Z",
      "closedAt": "2023-05-30T12:35:36Z",
      "author": {
        "login": "jtmoon79"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: enhancement"
          },
          {
            "name": "good first issue"
          },
          {
            "name": "topic: config"
          },
          {
            "name": "plugin: logging"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 10987,
      "title": "`pytest_sessionstart` not run in custom test directories",
      "body": "When using a custom test directory, other than `tests/` the `pytest_sessionstart` hook (or the maybe also the entire `conftest.py`) is not run. The issue appeared at `pytest` version 7.3.1 under Windows 10.\r\n\r\nI created a minimum working example that shows the problem at https://github.com/padix-key/pytest-issue. When the tests folder `some_path` is renamed to `tests` `pytest_sessionstart`()` is sucessfully run, indicated by the raised Exception. Otherwise it is not run.\r\n",
      "state": "CLOSED",
      "createdAt": "2023-05-11T11:41:58Z",
      "updatedAt": "2023-05-12T12:59:02Z",
      "closedAt": "2023-05-12T12:59:02Z",
      "author": {
        "login": "padix-key"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 1
      }
    },
    {
      "number": 10985,
      "title": "Later than 6.2.5, an error occurs when the pytest_addoption parameter is passed in multiple fields",
      "body": "![image](https://github.com/pytest-dev/pytest/assets/33712647/5d9b5936-fa00-4515-babe-c74725f31b93)\r\n",
      "state": "CLOSED",
      "createdAt": "2023-05-10T16:19:02Z",
      "updatedAt": "2023-06-01T02:16:35Z",
      "closedAt": "2023-06-01T02:16:35Z",
      "author": {
        "login": "270466585"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "status: needs information"
          },
          {
            "name": "stale"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 10984,
      "title": "Dynamic session fixtures used by multiple tests not appearing in request.fixturenames",
      "body": "\r\n\r\n- [x] a detailed description of the bug or problem you are having\r\nI've created 2 session based fixtures one of which conditionally calls the other - in the first test that is run request.fixturenames contains the dynamic fixture, but in the second test it does not. In making a minimal test case i realised it doesnt matter if the fixture is conditional or not - dynamic requesting will not show up in request.fixturenames for both tests\r\n- [x] output of `pip list` from the virtual environment you are using\r\n```\r\npip list\r\nPackage    Version\r\n---------- -------\r\niniconfig  2.0.0\r\npackaging  23.1\r\npip        23.0.1\r\npluggy     1.0.0\r\npytest     7.3.1\r\nsetuptools 67.6.1\r\n```\r\n\r\n- [x] pytest and operating system versions\r\npytest 7.3.1, macos 13.3.1 (a)  and ubuntu jammy\r\n\r\n- [x] minimal example if possible\r\n\r\n```\r\nimport pytest\r\n\r\n\r\n@pytest.fixture(scope=\"session\")\r\ndef dynamic():\r\n    pass\r\n\r\n\r\n@pytest.fixture(scope=\"session\")\r\ndef b(request):\r\n    request.getfixturevalue(\"dynamic\")\r\n    return \"\"\r\n\r\n\r\ndef test_bar(b, request):\r\n    assert set(request.fixturenames) == {\"b\", \"request\", \"dynamic\"}\r\n\r\n\r\ndef test_foo(b, request):\r\n    assert set(request.fixturenames) == {\"b\", \"request\", \"dynamic\"}\r\n```\r\n\r\n```\r\npytest\r\n=========================================================================================================================================== test session starts ============================================================================================================================================\r\nplatform darwin -- Python 3.11.3, pytest-7.3.1, pluggy-1.0.0\r\nrootdir: /Users/tmower/src/pytest_test\r\ncollected 2 items                                                                                                                                                                                                                                                                                          \r\n\r\ntests/test_foo.py .F                                                                                                                                                                                                                                                                                 [100%]\r\n\r\n================================================================================================================================================= FAILURES =================================================================================================================================================\r\n_________________________________________________________________________________________________________________________________________________ test_foo _________________________________________________________________________________________________________________________________________________\r\n\r\nb = '', request = <FixtureRequest for <Function test_foo>>\r\n\r\n    def test_foo(b, request):\r\n>       assert set(request.fixturenames) == {\"b\", \"request\", \"dynamic\"}\r\nE       AssertionError: assert {'b', 'request'} == {'b', 'dynamic', 'request'}\r\nE         Extra items in the right set:\r\nE         'dynamic'\r\nE         Use -v to get more diff\r\n\r\ntests/test_foo.py:20: AssertionError\r\n========================================================================================================================================= short test summary info ==========================================================================================================================================\r\nFAILED tests/test_foo.py::test_foo - AssertionError: assert {'b', 'request'} == {'b', 'dynamic', 'request'}\r\n======================================================================================================================================= 1 failed, 1 passed in 0.03s ========================================================================================================================================\r\n```\r\n",
      "state": "CLOSED",
      "createdAt": "2023-05-10T12:00:30Z",
      "updatedAt": "2023-05-12T13:08:07Z",
      "closedAt": "2023-05-12T13:08:06Z",
      "author": {
        "login": "timmow"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "topic: fixtures"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 2
      }
    },
    {
      "number": 10977,
      "title": "[Python 3.12] Assertion rewriting triggers DeprecationWarning",
      "body": "#### What's the problem this feature will solve?\r\nAs of pytest 7.3.1, the classes `ast.Str` and `ast.NameConstant` are used in assertion rewriting. Their use has been [deprecated in Python 3.8](https://docs.python.org/3.8/library/ast.html#node-classes). These classes will [emit a _DeprecationWarning_](https://github.com/python/cpython/pull/104199) starting with Python 3.12.\r\n\r\nWhen a user runs pytest 7.3.1 on Python 3.12and pytest collects a test with an `assert` statement, the test will show deprecation warnings.\r\n\r\n#### Describe the solution you'd like\r\nPytest does not trigger a _DeprecationWarning_ when running tests on Python 3.12.\r\n\r\n<!-- Provide examples of real-world use cases that this would enable and how it solves the problem described above. -->\r\n\r\nTested with pytest 7.3.1 on Python 3.12 (commit 0aeda29793):\r\n\r\n`test_anything.py`\r\n```\r\ndef test_a():\r\n    assert True\r\n```\r\n\r\n```\r\n$ pytest\r\n===== test session starts =====\r\nplatform linux -- Python 3.12.0a7+, pytest-7.3.1, pluggy-1.0.0\r\nrootdir: /tmp/test-cpython-next\r\ncollected 1 item                                                                                                                                                                                                                                                             \r\n\r\ntest_anything.py .                                                                                                                                                                                                                                                     [100%]\r\n\r\n===== warnings summary =====\r\n../venv-next/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:927\r\n../venv-next/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:927\r\n  /tmp/venv-next/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:927: DeprecationWarning: ast.Str is deprecated and will be removed in Python 3.14; use ast.Constant instead\r\n    assertmsg = ast.Str(\"\")\r\n\r\n../venv-next/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:929\r\n  /tmp/venv-next/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:929: DeprecationWarning: ast.Str is deprecated and will be removed in Python 3.14; use ast.Constant instead\r\n    template = ast.BinOp(assertmsg, ast.Add(), ast.Str(explanation))\r\n\r\n../venv-next/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:817\r\n  /tmp/venv-next/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:817: DeprecationWarning: ast.Str is deprecated and will be removed in Python 3.14; use ast.Constant instead\r\n    keys = [ast.Str(key) for key in current.keys()]\r\n\r\n../venv-next/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:941\r\n../venv-next/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:941\r\n  /tmp/venv-next/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:941: DeprecationWarning: ast.NameConstant is deprecated and will be removed in Python 3.14; use ast.Constant instead\r\n    clear = ast.Assign(variables, ast.NameConstant(None))\r\n\r\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\r\n===== 1 passed, 6 warnings in 0.01s ====\r\n```\r\n\r\n<!-- #### Alternative Solutions -->\r\n<!-- Have you tried to workaround the problem using a pytest plugin or other tools? Or a different approach to solving this issue? Please elaborate here. -->\r\n\r\n<!-- #### Additional context -->\r\n<!-- Add any other context, links, etc. about the feature here. -->\r\n",
      "state": "CLOSED",
      "createdAt": "2023-05-09T16:42:15Z",
      "updatedAt": "2023-06-10T17:46:08Z",
      "closedAt": "2023-06-10T17:46:08Z",
      "author": {
        "login": "seifertm"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: enhancement"
          },
          {
            "name": "topic: rewrite"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      }
    },
    {
      "number": 10973,
      "title": "Notes in doc for double quotes expression used for Windows",
      "body": "Add note in the doc to reference the double quote convention Windows shell that was mentioned in #9431",
      "state": "CLOSED",
      "createdAt": "2023-05-09T03:04:29Z",
      "updatedAt": "2023-05-11T19:12:17Z",
      "closedAt": "2023-05-11T19:07:10Z",
      "author": {
        "login": "leeyueh"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": []
      },
      "milestone": null,
      "comments": {
        "totalCount": 3
      }
    },
    {
      "number": 10965,
      "title": "Test hangs when using mp.Pool on Windows/macOS using CLI runner when --import-mode=importlib",
      "body": "This is a duplicate of #5429 (which does not appear to actually be resolved, or has regressed) but I come bearing more details, in particular a matrix that should help diagnose the source of the problem.\r\n\r\nHere's a minimal example:\r\n\r\n```python\r\nfrom multiprocessing import Pool\r\n\r\ndef times_two(x):\r\n    return x * 2\r\n\r\ndef test_foo():\r\n    with Pool(1) as pool:\r\n        assert pool.map(times_two, [1, 2, 3, 4]) == [2, 4, 6, 8]\r\n```\r\n\r\nThis is using pytest 7.3.1.\r\n\r\nTests were performed on Github Actions `ubuntu-latest`, `windows-latest`, and `macos-latest`, which correspond to Ubuntu 22.04, Windows Server 2022, and macOS 12 Monterey ([not Ventura](https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners#supported-runners-and-hardware-resources)). I also validated the macOS and Linux results on macOS 13 Ventura and Ubuntu 20.04 on my own machines. \r\n\r\nAll of the below were tested with Python 3.11 on Github Actions runners. On my own machines, I tested with both 3.10 and 3.11, same results.\r\n\r\n| Platform | Runner | Result |\r\n| ----------|---------|-------|\r\n| Windows | `pytest` | Hangs |\r\n| macOS | `pytest` | Hangs |\r\n| Linux | `pytest` | Completes |\r\n| macOS | PyCharm | Completes |\r\n\r\nThe last row in particular suggests that the issue is likely in the test runner. Running all tests via `PyCharm.app/Contents/plugins/python/helpers/pycharm/_jb_pytest_runner.py` does not hang.\r\n\r\n\u2013 Dylan",
      "state": "OPEN",
      "createdAt": "2023-05-06T01:37:36Z",
      "updatedAt": "2024-12-20T22:41:56Z",
      "closedAt": null,
      "author": {
        "login": "DylanLukes"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: bug"
          },
          {
            "name": "platform: windows"
          },
          {
            "name": "platform: mac"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 4
      }
    },
    {
      "number": 10959,
      "title": "Windows fatal exception: access violation when testing multiprocessing under Windows",
      "body": "When testing a trivial multiprocessing snippet of code like:\r\n```python\r\nimport multiprocessing as mp\r\n\r\ndef func_proc():\r\n    pass\r\n\r\n\r\ndef test_func_proc():\r\n    mp.set_start_method(\"spawn\")\r\n    proc = mp.Process(target=func_proc)\r\n    proc.start()\r\n    proc.join()\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    mp.set_start_method(\"spawn\")\r\n    proc = mp.Process(target=func_proc)\r\n    proc.start()\r\n    proc.join()\r\n```\r\n\r\n `pytest` passes the test but also dumps a `Windows fatal exception: access violation` message along with a stack trace:\r\n\r\n```\r\n(proctest-py3.10) PS W:\\temp\\proctest> pytest test_process.py\r\n======================================================================================= test session starts =======================================================================================\r\nplatform win32 -- Python 3.10.9, pytest-7.3.1, pluggy-1.0.0\r\nrootdir: W:\\temp\\proctest\r\ncollected 1 item\r\n\r\ntest_process.py Windows fatal exception: access violation\r\n\r\nCurrent thread 0x0000abd8 (most recent call first):\r\n  File \"C:\\Users\\christian.axelsson\\AppData\\Local\\Programs\\Python\\Python310\\lib\\multiprocessing\\popen_spawn_win32.py\", line 110 in wait\r\n  File \"C:\\Users\\christian.axelsson\\AppData\\Local\\Programs\\Python\\Python310\\lib\\multiprocessing\\process.py\", line 149 in join\r\n  File \"W:\\temp\\proctest\\test_process.py\", line 11 in test_func_proc\r\n  File \"C:\\Users\\christian.axelsson\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\proctest-qFOhTnEL-py3.10\\lib\\site-packages\\_pytest\\python.py\", line 194 in pytest_pyfunc_call\r\n  File \"C:\\Users\\christian.axelsson\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\proctest-qFOhTnEL-py3.10\\lib\\site-packages\\pluggy\\_callers.py\", line 39 in _multicall\r\n  File \"C:\\Users\\christian.axelsson\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\proctest-qFOhTnEL-py3.10\\lib\\site-packages\\pluggy\\_manager.py\", line 80 in _hookexec\r\n  File \"C:\\Users\\christian.axelsson\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\proctest-qFOhTnEL-py3.10\\lib\\site-packages\\pluggy\\_hooks.py\", line 265 in __call__\r\n  File \"C:\\Users\\christian.axelsson\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\proctest-qFOhTnEL-py3.10\\lib\\site-packages\\_pytest\\python.py\", line 1799 in runtest\r\n  File \"C:\\Users\\christian.axelsson\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\proctest-qFOhTnEL-py3.10\\lib\\site-packages\\_pytest\\runner.py\", line 169 in pytest_runtest_call\r\n  File \"C:\\Users\\christian.axelsson\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\proctest-qFOhTnEL-py3.10\\lib\\site-packages\\pluggy\\_callers.py\", line 39 in _multicall\r\n  File \"C:\\Users\\christian.axelsson\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\proctest-qFOhTnEL-py3.10\\lib\\site-packages\\pluggy\\_manager.py\", line 80 in _hookexec\r\n  File \"C:\\Users\\christian.axelsson\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\proctest-qFOhTnEL-py3.10\\lib\\site-packages\\pluggy\\_hooks.py\", line 265 in __call__\r\n  File \"C:\\Users\\christian.axelsson\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\proctest-qFOhTnEL-py3.10\\lib\\site-packages\\_pytest\\runner.py\", line 262 in <lambda>\r\n  File \"C:\\Users\\christian.axelsson\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\proctest-qFOhTnEL-py3.10\\lib\\site-packages\\_pytest\\runner.py\", line 341 in from_call\r\n  File \"C:\\Users\\christian.axelsson\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\proctest-qFOhTnEL-py3.10\\lib\\site-packages\\_pytest\\runner.py\", line 261 in call_runtest_hook\r\n  File \"C:\\Users\\christian.axelsson\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\proctest-qFOhTnEL-py3.10\\lib\\site-packages\\_pytest\\runner.py\", line 222 in call_and_report\r\n  File \"C:\\Users\\christian.axelsson\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\proctest-qFOhTnEL-py3.10\\lib\\site-packages\\_pytest\\runner.py\", line 133 in runtestprotocol\r\n  File \"C:\\Users\\christian.axelsson\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\proctest-qFOhTnEL-py3.10\\lib\\site-packages\\_pytest\\runner.py\", line 114 in pytest_runtest_protocol\r\n  File \"C:\\Users\\christian.axelsson\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\proctest-qFOhTnEL-py3.10\\lib\\site-packages\\pluggy\\_callers.py\", line 39 in _multicall\r\n  File \"C:\\Users\\christian.axelsson\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\proctest-qFOhTnEL-py3.10\\lib\\site-packages\\pluggy\\_manager.py\", line 80 in _hookexec\r\n  File \"C:\\Users\\christian.axelsson\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\proctest-qFOhTnEL-py3.10\\lib\\site-packages\\pluggy\\_hooks.py\", line 265 in __call__\r\n  File \"C:\\Users\\christian.axelsson\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\proctest-qFOhTnEL-py3.10\\lib\\site-packages\\_pytest\\main.py\", line 348 in pytest_runtestloop\r\n  File \"C:\\Users\\christian.axelsson\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\proctest-qFOhTnEL-py3.10\\lib\\site-packages\\pluggy\\_callers.py\", line 39 in _multicall\r\n  File \"C:\\Users\\christian.axelsson\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\proctest-qFOhTnEL-py3.10\\lib\\site-packages\\pluggy\\_manager.py\", line 80 in _hookexec\r\n  File \"C:\\Users\\christian.axelsson\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\proctest-qFOhTnEL-py3.10\\lib\\site-packages\\pluggy\\_hooks.py\", line 265 in __call__\r\n  File \"C:\\Users\\christian.axelsson\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\proctest-qFOhTnEL-py3.10\\lib\\site-packages\\_pytest\\main.py\", line 323 in _main\r\n  File \"C:\\Users\\christian.axelsson\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\proctest-qFOhTnEL-py3.10\\lib\\site-packages\\_pytest\\main.py\", line 269 in wrap_session\r\n  File \"C:\\Users\\christian.axelsson\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\proctest-qFOhTnEL-py3.10\\lib\\site-packages\\_pytest\\main.py\", line 316 in pytest_cmdline_main\r\n  File \"C:\\Users\\christian.axelsson\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\proctest-qFOhTnEL-py3.10\\lib\\site-packages\\pluggy\\_callers.py\", line 39 in _multicall\r\n  File \"C:\\Users\\christian.axelsson\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\proctest-qFOhTnEL-py3.10\\lib\\site-packages\\pluggy\\_manager.py\", line 80 in _hookexec\r\n  File \"C:\\Users\\christian.axelsson\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\proctest-qFOhTnEL-py3.10\\lib\\site-packages\\pluggy\\_hooks.py\", line 265 in __call__\r\n  File \"C:\\Users\\christian.axelsson\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\proctest-qFOhTnEL-py3.10\\lib\\site-packages\\_pytest\\config\\__init__.py\", line 166 in main\r\n  File \"C:\\Users\\christian.axelsson\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\proctest-qFOhTnEL-py3.10\\lib\\site-packages\\_pytest\\config\\__init__.py\", line 189 in console_main\r\n  File \"C:\\Users\\christian.axelsson\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\proctest-qFOhTnEL-py3.10\\Scripts\\pytest.exe\\__main__.py\", line 7 in <module>\r\n  File \"C:\\Users\\christian.axelsson\\AppData\\Local\\Programs\\Python\\Python310\\lib\\runpy.py\", line 86 in _run_code\r\n  File \"C:\\Users\\christian.axelsson\\AppData\\Local\\Programs\\Python\\Python310\\lib\\runpy.py\", line 196 in _run_module_as_main\r\n.                                                                                                                                                                            [100%]\r\n\r\n======================================================================================== 1 passed in 0.17s ========================================================================================\r\n```\r\nExecuting the script above as `python test_process.py` yields no unexpected output:\r\n```\r\n(proctest-py3.10) PS W:\\temp\\proctest> python test_process.py\r\n(proctest-py3.10) PS W:\\temp\\proctest>\r\n```\r\n\r\n\r\nOn Windows 11 22H2 using Python 3.10.9 but have also reproduced on 3.11.3\r\n`pip list` output:\r\n```\r\ncolorama       0.4.6\r\nexceptiongroup 1.1.1\r\niniconfig      2.0.0\r\npackaging      23.1\r\npip            22.2.2\r\npluggy         1.0.0\r\npytest         7.3.1\r\nsetuptools     65.3.0\r\ntomli          2.0.1\r\nwheel          0.37.1\r\n```",
      "state": "OPEN",
      "createdAt": "2023-05-02T12:45:44Z",
      "updatedAt": "2023-05-15T23:53:46Z",
      "closedAt": null,
      "author": {
        "login": "mg-christian-esser"
      },
      "assignees": {
        "nodes": []
      },
      "labels": {
        "nodes": [
          {
            "name": "type: bug"
          },
          {
            "name": "platform: windows"
          },
          {
            "name": "type: selftests"
          }
        ]
      },
      "milestone": null,
      "comments": {
        "totalCount": 0
      }
    }
  ]
}